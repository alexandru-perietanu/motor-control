

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 02 22:17:07 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 2.10
    56                           ; Generated 31/07/2019 GMT
    57                           ; 
    58                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4431 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  001440                     __pidataCOMRAM:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for _timer0ReloadValue
    95  001440  ECEC               	dw	60652
    96                           
    97                           ;initializer for _sinusValue3
    98  001442  00AA               	dw	170
    99                           
   100                           ;initializer for _sinusValue2
   101  001444  0055               	dw	85
   102                           
   103                           ;initializer for _PrevADRESH
   104  001446  41                 	db	65
   105                           
   106                           ;initializer for _d1
   107  001447  01                 	db	1
   108                           
   109                           ;initializer for _sinusIndex3
   110  001448  AA                 	db	170
   111                           
   112                           ;initializer for _sinusIndex2
   113  001449  55                 	db	85
   114                           
   115                           ;initializer for _skipValue
   116  00144A  01                 	db	1
   117                           
   118                           	psect	idataBANK0
   119  00144B                     __pidataBANK0:
   120                           	opt callstack 0
   121                           
   122                           ;initializer for _prevTimer0ReloadValue
   123  00144B  EC77               	dw	60535
   124                           
   125                           ;initializer for _timer5ReloadValue
   126  00144D  0BDB               	dw	3035
   127                           
   128                           ;initializer for _prevAdcPercent
   129  00144F  0065               	dw	101
   130                           
   131                           ;initializer for _adcPercent
   132  001451  0041               	dw	65
   133                           
   134                           ;initializer for _maxADCVal
   135  001453  00FF               	dw	255
   136                           
   137                           	psect	mediumconst
   138  003A84                     __pmediumconst:
   139                           	opt callstack 0
   140  003A84  00                 	db	0
   141  003A85                     _sinusValues:
   142                           	opt callstack 0
   143  003A85  0404               	dw	1028
   144  003A87  041C               	dw	1052
   145  003A89  0434               	dw	1076
   146  003A8B  044C               	dw	1100
   147  003A8D  0464               	dw	1124
   148  003A8F  047C               	dw	1148
   149  003A91  0494               	dw	1172
   150  003A93  04AC               	dw	1196
   151  003A95  04C4               	dw	1220
   152  003A97  04DC               	dw	1244
   153  003A99  04F4               	dw	1268
   154  003A9B  0515               	dw	1301
   155  003A9D  052D               	dw	1325
   156  003A9F  053D               	dw	1341
   157  003AA1  0555               	dw	1365
   158  003AA3  056D               	dw	1389
   159  003AA5  0585               	dw	1413
   160  003AA7  059D               	dw	1437
   161  003AA9  05B5               	dw	1461
   162  003AAB  05CD               	dw	1485
   163  003AAD  05E5               	dw	1509
   164  003AAF  05F5               	dw	1525
   165  003AB1  060E               	dw	1550
   166  003AB3  0626               	dw	1574
   167  003AB5  0636               	dw	1590
   168  003AB7  064E               	dw	1614
   169  003AB9  065E               	dw	1630
   170  003ABB  0676               	dw	1654
   171  003ABD  0686               	dw	1670
   172  003ABF  069E               	dw	1694
   173  003AC1  06AE               	dw	1710
   174  003AC3  06BE               	dw	1726
   175  003AC5  06D6               	dw	1750
   176  003AC7  06E6               	dw	1766
   177  003AC9  06F6               	dw	1782
   178  003ACB  0707               	dw	1799
   179  003ACD  0717               	dw	1815
   180  003ACF  0727               	dw	1831
   181  003AD1  0737               	dw	1847
   182  003AD3  0747               	dw	1863
   183  003AD5  074F               	dw	1871
   184  003AD7  075F               	dw	1887
   185  003AD9  076F               	dw	1903
   186  003ADB  0777               	dw	1911
   187  003ADD  0787               	dw	1927
   188  003ADF  078F               	dw	1935
   189  003AE1  079F               	dw	1951
   190  003AE3  07A7               	dw	1959
   191  003AE5  07AF               	dw	1967
   192  003AE7  07B7               	dw	1975
   193  003AE9  07BF               	dw	1983
   194  003AEB  07C7               	dw	1991
   195  003AED  07CF               	dw	1999
   196  003AEF  07D7               	dw	2007
   197  003AF1  07DF               	dw	2015
   198  003AF3  07E7               	dw	2023
   199  003AF5  07E7               	dw	2023
   200  003AF7  07EF               	dw	2031
   201  003AF9  07EF               	dw	2031
   202  003AFB  07F7               	dw	2039
   203  003AFD  07F7               	dw	2039
   204  003AFF  07F7               	dw	2039
   205  003B01  07F7               	dw	2039
   206  003B03  07F7               	dw	2039
   207  003B05  07F7               	dw	2039
   208  003B07  07F7               	dw	2039
   209  003B09  07F7               	dw	2039
   210  003B0B  07F7               	dw	2039
   211  003B0D  07F7               	dw	2039
   212  003B0F  07EF               	dw	2031
   213  003B11  07EF               	dw	2031
   214  003B13  07E7               	dw	2023
   215  003B15  07E7               	dw	2023
   216  003B17  07DF               	dw	2015
   217  003B19  07D7               	dw	2007
   218  003B1B  07D7               	dw	2007
   219  003B1D  07CF               	dw	1999
   220  003B1F  07C7               	dw	1991
   221  003B21  07BF               	dw	1983
   222  003B23  07B7               	dw	1975
   223  003B25  07A7               	dw	1959
   224  003B27  079F               	dw	1951
   225  003B29  0797               	dw	1943
   226  003B2B  0787               	dw	1927
   227  003B2D  077F               	dw	1919
   228  003B2F  076F               	dw	1903
   229  003B31  0767               	dw	1895
   230  003B33  0757               	dw	1879
   231  003B35  0747               	dw	1863
   232  003B37  073F               	dw	1855
   233  003B39  072F               	dw	1839
   234  003B3B  071F               	dw	1823
   235  003B3D  070F               	dw	1807
   236  003B3F  06FE               	dw	1790
   237  003B41  06EE               	dw	1774
   238  003B43  06DE               	dw	1758
   239  003B45  06C6               	dw	1734
   240  003B47  06B6               	dw	1718
   241  003B49  06A6               	dw	1702
   242  003B4B  0696               	dw	1686
   243  003B4D  067E               	dw	1662
   244  003B4F  066E               	dw	1646
   245  003B51  0656               	dw	1622
   246  003B53  0646               	dw	1606
   247  003B55  062E               	dw	1582
   248  003B57  0616               	dw	1558
   249  003B59  0606               	dw	1542
   250  003B5B  05ED               	dw	1517
   251  003B5D  05D5               	dw	1493
   252  003B5F  05BD               	dw	1469
   253  003B61  05AD               	dw	1453
   254  003B63  0595               	dw	1429
   255  003B65  057D               	dw	1405
   256  003B67  0565               	dw	1381
   257  003B69  054D               	dw	1357
   258  003B6B  0535               	dw	1333
   259  003B6D  051D               	dw	1309
   260  003B6F  0505               	dw	1285
   261  003B71  04EC               	dw	1260
   262  003B73  04D4               	dw	1236
   263  003B75  04BC               	dw	1212
   264  003B77  04A4               	dw	1188
   265  003B79  048C               	dw	1164
   266  003B7B  0474               	dw	1140
   267  003B7D  0454               	dw	1108
   268  003B7F  043C               	dw	1084
   269  003B81  0424               	dw	1060
   270  003B83  040C               	dw	1036
   271  003B85  03F3               	dw	1011
   272  003B87  03DB               	dw	987
   273  003B89  03C3               	dw	963
   274  003B8B  03AB               	dw	939
   275  003B8D  038B               	dw	907
   276  003B8F  0373               	dw	883
   277  003B91  035B               	dw	859
   278  003B93  0343               	dw	835
   279  003B95  032B               	dw	811
   280  003B97  0313               	dw	787
   281  003B99  02FA               	dw	762
   282  003B9B  02E2               	dw	738
   283  003B9D  02CA               	dw	714
   284  003B9F  02B2               	dw	690
   285  003BA1  029A               	dw	666
   286  003BA3  0282               	dw	642
   287  003BA5  026A               	dw	618
   288  003BA7  0252               	dw	594
   289  003BA9  0242               	dw	578
   290  003BAB  022A               	dw	554
   291  003BAD  0212               	dw	530
   292  003BAF  01F9               	dw	505
   293  003BB1  01E9               	dw	489
   294  003BB3  01D1               	dw	465
   295  003BB5  01B9               	dw	441
   296  003BB7  01A9               	dw	425
   297  003BB9  0191               	dw	401
   298  003BBB  0181               	dw	385
   299  003BBD  0169               	dw	361
   300  003BBF  0159               	dw	345
   301  003BC1  0149               	dw	329
   302  003BC3  0139               	dw	313
   303  003BC5  0121               	dw	289
   304  003BC7  0111               	dw	273
   305  003BC9  0101               	dw	257
   306  003BCB  00F0               	dw	240
   307  003BCD  00E0               	dw	224
   308  003BCF  00D0               	dw	208
   309  003BD1  00C0               	dw	192
   310  003BD3  00B8               	dw	184
   311  003BD5  00A8               	dw	168
   312  003BD7  0098               	dw	152
   313  003BD9  0090               	dw	144
   314  003BDB  0080               	dw	128
   315  003BDD  0078               	dw	120
   316  003BDF  0068               	dw	104
   317  003BE1  0060               	dw	96
   318  003BE3  0058               	dw	88
   319  003BE5  0048               	dw	72
   320  003BE7  0040               	dw	64
   321  003BE9  0038               	dw	56
   322  003BEB  0030               	dw	48
   323  003BED  0028               	dw	40
   324  003BEF  0028               	dw	40
   325  003BF1  0020               	dw	32
   326  003BF3  0018               	dw	24
   327  003BF5  0018               	dw	24
   328  003BF7  0010               	dw	16
   329  003BF9  0010               	dw	16
   330  003BFB  0008               	dw	8
   331  003BFD  0008               	dw	8
   332  003BFF  0008               	dw	8
   333  003C01  0008               	dw	8
   334  003C03  0008               	dw	8
   335  003C05  0008               	dw	8
   336  003C07  0008               	dw	8
   337  003C09  0008               	dw	8
   338  003C0B  0008               	dw	8
   339  003C0D  0008               	dw	8
   340  003C0F  0010               	dw	16
   341  003C11  0010               	dw	16
   342  003C13  0018               	dw	24
   343  003C15  0018               	dw	24
   344  003C17  0020               	dw	32
   345  003C19  0028               	dw	40
   346  003C1B  0030               	dw	48
   347  003C1D  0038               	dw	56
   348  003C1F  0040               	dw	64
   349  003C21  0048               	dw	72
   350  003C23  0050               	dw	80
   351  003C25  0058               	dw	88
   352  003C27  0060               	dw	96
   353  003C29  0070               	dw	112
   354  003C2B  0078               	dw	120
   355  003C2D  0088               	dw	136
   356  003C2F  0090               	dw	144
   357  003C31  00A0               	dw	160
   358  003C33  00B0               	dw	176
   359  003C35  00B8               	dw	184
   360  003C37  00C8               	dw	200
   361  003C39  00D8               	dw	216
   362  003C3B  00E8               	dw	232
   363  003C3D  00F8               	dw	248
   364  003C3F  0109               	dw	265
   365  003C41  0119               	dw	281
   366  003C43  0129               	dw	297
   367  003C45  0141               	dw	321
   368  003C47  0151               	dw	337
   369  003C49  0161               	dw	353
   370  003C4B  0179               	dw	377
   371  003C4D  0189               	dw	393
   372  003C4F  01A1               	dw	417
   373  003C51  01B1               	dw	433
   374  003C53  01C9               	dw	457
   375  003C55  01D9               	dw	473
   376  003C57  01F1               	dw	497
   377  003C59  020A               	dw	522
   378  003C5B  021A               	dw	538
   379  003C5D  0232               	dw	562
   380  003C5F  024A               	dw	586
   381  003C61  0262               	dw	610
   382  003C63  027A               	dw	634
   383  003C65  0292               	dw	658
   384  003C67  02AA               	dw	682
   385  003C69  02C2               	dw	706
   386  003C6B  02D2               	dw	722
   387  003C6D  02EA               	dw	746
   388  003C6F  030B               	dw	779
   389  003C71  0323               	dw	803
   390  003C73  033B               	dw	827
   391  003C75  0353               	dw	851
   392  003C77  036B               	dw	875
   393  003C79  0383               	dw	899
   394  003C7B  039B               	dw	923
   395  003C7D  03B3               	dw	947
   396  003C7F  03CB               	dw	971
   397  003C81  03E3               	dw	995
   398  003C83  03FB               	dw	1019
   399  003C85                     __end_of_sinusValues:
   400                           	opt callstack 0
   401  003C85                     _timer0PreloadValues:
   402                           	opt callstack 0
   403  003C85  D9D9               	dw	55769
   404  003C87  ECEC               	dw	60652
   405  003C89  F348               	dw	62280
   406  003C8B  F676               	dw	63094
   407  003C8D  F85E               	dw	63582
   408  003C8F  F9A3               	dw	63907
   409  003C91  FA8C               	dw	64140
   410  003C93  FB3A               	dw	64314
   411  003C95  FBC2               	dw	64450
   412  003C97  FC2E               	dw	64558
   413  003C99  FC87               	dw	64647
   414  003C9B  FCD1               	dw	64721
   415  003C9D  FD10               	dw	64784
   416  003C9F  FD45               	dw	64837
   417  003CA1  FD74               	dw	64884
   418  003CA3  FD9D               	dw	64925
   419  003CA5  FDC1               	dw	64961
   420  003CA7  FDE0               	dw	64992
   421  003CA9  FDFD               	dw	65021
   422  003CAB  FE17               	dw	65047
   423  003CAD  FE2E               	dw	65070
   424  003CAF  FE43               	dw	65091
   425  003CB1  FE56               	dw	65110
   426  003CB3  FE68               	dw	65128
   427  003CB5  FE78               	dw	65144
   428  003CB7  FE87               	dw	65159
   429  003CB9  FE95               	dw	65173
   430  003CBB  FEA2               	dw	65186
   431  003CBD  FEAE               	dw	65198
   432  003CBF  FEB9               	dw	65209
   433  003CC1  FEC4               	dw	65220
   434  003CC3  FECE               	dw	65230
   435  003CC5  FED7               	dw	65239
   436  003CC7  FEE0               	dw	65248
   437  003CC9  FEE8               	dw	65256
   438  003CCB  FEF0               	dw	65264
   439  003CCD  FEF7               	dw	65271
   440  003CCF  FEFE               	dw	65278
   441  003CD1  FF05               	dw	65285
   442  003CD3  FF0B               	dw	65291
   443  003CD5  FF11               	dw	65297
   444  003CD7  FF16               	dw	65302
   445  003CD9  FF1C               	dw	65308
   446  003CDB  FF21               	dw	65313
   447  003CDD  FF26               	dw	65318
   448  003CDF  FF2B               	dw	65323
   449  003CE1  FF2F               	dw	65327
   450  003CE3  FF34               	dw	65332
   451  003CE5  FF38               	dw	65336
   452  003CE7  FF3C               	dw	65340
   453  003CE9  FF40               	dw	65344
   454  003CEB  FF43               	dw	65347
   455  003CED  FF47               	dw	65351
   456  003CEF  FF4A               	dw	65354
   457  003CF1  FF4D               	dw	65357
   458  003CF3  FF51               	dw	65361
   459  003CF5  FF54               	dw	65364
   460  003CF7  FF57               	dw	65367
   461  003CF9  FF59               	dw	65369
   462  003CFB  FF5C               	dw	65372
   463  003CFD  FF5F               	dw	65375
   464  003CFF  FF61               	dw	65377
   465  003D01  FF64               	dw	65380
   466  003D03  FF66               	dw	65382
   467  003D05  FF69               	dw	65385
   468  003D07  FF6B               	dw	65387
   469  003D09  FF6D               	dw	65389
   470  003D0B  FF6F               	dw	65391
   471  003D0D  FF71               	dw	65393
   472  003D0F  FF73               	dw	65395
   473  003D11  FF75               	dw	65397
   474  003D13  FF77               	dw	65399
   475  003D15  FF79               	dw	65401
   476  003D17  FF7B               	dw	65403
   477  003D19  FF7D               	dw	65405
   478  003D1B  FF7F               	dw	65407
   479  003D1D  FF80               	dw	65408
   480  003D1F  FF82               	dw	65410
   481  003D21  FF83               	dw	65411
   482  003D23  FF85               	dw	65413
   483  003D25  FF86               	dw	65414
   484  003D27  FF88               	dw	65416
   485  003D29  FF89               	dw	65417
   486  003D2B  FF8B               	dw	65419
   487  003D2D  FF8C               	dw	65420
   488  003D2F  FF8D               	dw	65421
   489  003D31  FF8F               	dw	65423
   490  003D33  FF90               	dw	65424
   491  003D35  FF91               	dw	65425
   492  003D37  FF92               	dw	65426
   493  003D39  FF94               	dw	65428
   494  003D3B  FF95               	dw	65429
   495  003D3D  FF96               	dw	65430
   496  003D3F  FF97               	dw	65431
   497  003D41  FF98               	dw	65432
   498  003D43  FF9C               	dw	65436
   499  003D45  FF9D               	dw	65437
   500  003D47  FF9E               	dw	65438
   501  003D49  FF9F               	dw	65439
   502  003D4B  FFA0               	dw	65440
   503  003D4D                     __end_of_timer0PreloadValues:
   504                           	opt callstack 0
   505  003D4D                     _scaleFactor:
   506                           	opt callstack 0
   507  003D4D  0040               	dw	64
   508  003D4F  003F               	dw	63
   509  003D51  003E               	dw	62
   510  003D53  003D               	dw	61
   511  003D55  003C               	dw	60
   512  003D57  003A               	dw	58
   513  003D59  0039               	dw	57
   514  003D5B  0038               	dw	56
   515  003D5D  0037               	dw	55
   516  003D5F  0036               	dw	54
   517  003D61  0035               	dw	53
   518  003D63  0034               	dw	52
   519  003D65  0033               	dw	51
   520  003D67  0032               	dw	50
   521  003D69  0031               	dw	49
   522  003D6B  002F               	dw	47
   523  003D6D  002E               	dw	46
   524  003D6F  002D               	dw	45
   525  003D71  002C               	dw	44
   526  003D73  002B               	dw	43
   527  003D75  002A               	dw	42
   528  003D77  0029               	dw	41
   529  003D79  0028               	dw	40
   530  003D7B  0027               	dw	39
   531  003D7D  0026               	dw	38
   532  003D7F  0024               	dw	36
   533  003D81  0023               	dw	35
   534  003D83  0022               	dw	34
   535  003D85  0021               	dw	33
   536  003D87  0020               	dw	32
   537  003D89  001F               	dw	31
   538  003D8B  001E               	dw	30
   539  003D8D  001D               	dw	29
   540  003D8F  001C               	dw	28
   541  003D91  001B               	dw	27
   542  003D93  0019               	dw	25
   543  003D95  0018               	dw	24
   544  003D97  0017               	dw	23
   545  003D99  0016               	dw	22
   546  003D9B  0015               	dw	21
   547  003D9D  0014               	dw	20
   548  003D9F  0013               	dw	19
   549  003DA1  0012               	dw	18
   550  003DA3  0011               	dw	17
   551  003DA5  0010               	dw	16
   552  003DA7  000E               	dw	14
   553  003DA9  000D               	dw	13
   554  003DAB  000C               	dw	12
   555  003DAD  000B               	dw	11
   556  003DAF  000A               	dw	10
   557  003DB1                     __end_of_scaleFactor:
   558                           	opt callstack 0
   559  003DB1                     _digits:
   560                           	opt callstack 0
   561  003DB1  30                 	db	48
   562  003DB2  31                 	db	49
   563  003DB3  32                 	db	50
   564  003DB4  33                 	db	51
   565  003DB5  34                 	db	52
   566  003DB6  35                 	db	53
   567  003DB7  36                 	db	54
   568  003DB8  37                 	db	55
   569  003DB9  38                 	db	56
   570  003DBA  39                 	db	57
   571  003DBB                     __end_of_digits:
   572                           	opt callstack 0
   573  0000                     _TMR5	set	3975
   574  0000                     _PORTDbits	set	3971
   575  0000                     _PORTCbits	set	3970
   576  0000                     _TRISDbits	set	3989
   577  0000                     _TRISCbits	set	3988
   578  0000                     _PDC2L	set	3957
   579  0000                     _PDC2H	set	3956
   580  0000                     _PDC1L	set	3959
   581  0000                     _PDC1H	set	3958
   582  0000                     _PDC0L	set	3961
   583  0000                     _PDC0H	set	3960
   584  0000                     _PORTAbits	set	3968
   585  0000                     _TRISAbits	set	3986
   586  0000                     _ADCHSbits	set	3993
   587  0000                     _ADCON3bits	set	3994
   588  0000                     _DTCON	set	3949
   589  0000                     _DTCONbits	set	3949
   590  0000                     _OVDCONS	set	3946
   591  0000                     _OVDCOND	set	3947
   592  0000                     _PTPERL	set	3963
   593  0000                     _PTPERH	set	3962
   594  0000                     _PWMCON1bits	set	3950
   595  0000                     _PWMCON0bits	set	3951
   596  0000                     _PTCON1bits	set	3966
   597  0000                     _PTCON0bits	set	3967
   598  0000                     _PORTB	set	3969
   599  0000                     _TRISB	set	3987
   600  0000                     _LATB	set	3978
   601  0000                     _TMR1	set	4046
   602  0000                     _ADRESH	set	4036
   603  0000                     _PIR3bits	set	4004
   604  0000                     _PIR1bits	set	3998
   605  0000                     _TMR2	set	4044
   606  0000                     _T2CONbits	set	4042
   607  0000                     _PIE3bits	set	4003
   608  0000                     _T5CONbits	set	4023
   609  0000                     _T1CONbits	set	4045
   610  0000                     _PIE1bits	set	3997
   611  0000                     _ANSEL0bits	set	4024
   612  0000                     _ADCON2bits	set	4032
   613  0000                     _ADCON1	set	4033
   614  0000                     _ADCON0bits	set	4034
   615  0000                     _TMR0	set	4054
   616  0000                     _T0CONbits	set	4053
   617  0000                     _INTCON2bits	set	4081
   618  0000                     _INTCONbits	set	4082
   619  003DBB                     STR_1:
   620  003DBB  25                 	db	37
   621  003DBC  64                 	db	100	;'d'
   622  003DBD  00                 	db	0
   623  0000                     
   624                           ; #config settings
   625  003DBE  00                 	db	0	; dummy byte at the end
   626  0000                     
   627                           	psect	cinit
   628  000FBA                     __pcinit:
   629                           	opt callstack 0
   630  000FBA                     start_initialization:
   631                           	opt callstack 0
   632  000FBA                     __initialization:
   633                           	opt callstack 0
   634                           
   635                           ; Initialize objects allocated to BANK0 (10 bytes)
   636                           ; load TBLPTR registers with __pidataBANK0
   637  000FBA  0E4B               	movlw	low __pidataBANK0
   638  000FBC  6EF6               	movwf	tblptrl,c
   639  000FBE  0E14               	movlw	high __pidataBANK0
   640  000FC0  6EF7               	movwf	tblptrh,c
   641  000FC2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   642  000FC4  6EF8               	movwf	tblptru,c
   643  000FC6  EE00  F0D7         	lfsr	0,__pdataBANK0
   644  000FCA  EE10 F00A          	lfsr	1,10
   645  000FCE                     copy_data0:
   646  000FCE  0009               	tblrd		*+
   647  000FD0  CFF5 FFEE          	movff	tablat,postinc0
   648  000FD4  50E5               	movf	postdec1,w,c
   649  000FD6  50E1               	movf	fsr1l,w,c
   650  000FD8  E1FA               	bnz	copy_data0
   651                           
   652                           ; Initialize objects allocated to COMRAM (11 bytes)
   653                           ; load TBLPTR registers with __pidataCOMRAM
   654  000FDA  0E40               	movlw	low __pidataCOMRAM
   655  000FDC  6EF6               	movwf	tblptrl,c
   656  000FDE  0E14               	movlw	high __pidataCOMRAM
   657  000FE0  6EF7               	movwf	tblptrh,c
   658  000FE2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   659  000FE4  6EF8               	movwf	tblptru,c
   660  000FE6  EE00  F03E         	lfsr	0,__pdataCOMRAM
   661  000FEA  EE10 F00B          	lfsr	1,11
   662  000FEE                     copy_data1:
   663  000FEE  0009               	tblrd		*+
   664  000FF0  CFF5 FFEE          	movff	tablat,postinc0
   665  000FF4  50E5               	movf	postdec1,w,c
   666  000FF6  50E1               	movf	fsr1l,w,c
   667  000FF8  E1FA               	bnz	copy_data1
   668                           
   669                           ; Clear objects allocated to BANK0 (43 bytes)
   670  000FFA  EE00  F0AC         	lfsr	0,__pbssBANK0
   671  000FFE  0E2B               	movlw	43
   672  001000                     clear_0:
   673  001000  6AEE               	clrf	postinc0,c
   674  001002  06E8               	decf	wreg,f,c
   675  001004  E1FD               	bnz	clear_0
   676                           
   677                           ; Clear objects allocated to COMRAM (11 bytes)
   678  001006  EE00  F033         	lfsr	0,__pbssCOMRAM
   679  00100A  0E0B               	movlw	11
   680  00100C                     clear_1:
   681  00100C  6AEE               	clrf	postinc0,c
   682  00100E  06E8               	decf	wreg,f,c
   683  001010  E1FD               	bnz	clear_1
   684  001012                     end_of_initialization:
   685                           	opt callstack 0
   686  001012                     __end_of__initialization:
   687                           	opt callstack 0
   688  001012  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   689  001014  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   690  001016  0E00               	movlw	low (__Lmediumconst shr (0+16))
   691  001018  6EF8               	movwf	tblptru,c
   692  00101A  0100               	movlb	0
   693  00101C  EFEC  F008         	goto	_main	;jump to C main() function
   694                           
   695                           	psect	bssCOMRAM
   696  000033                     __pbssCOMRAM:
   697                           	opt callstack 0
   698  000033                     _prec:
   699                           	opt callstack 0
   700  000033                     	ds	2
   701  000035                     _flags:
   702                           	opt callstack 0
   703  000035                     	ds	2
   704  000037                     _sinusValue1:
   705                           	opt callstack 0
   706  000037                     	ds	2
   707  000039                     _counter:
   708                           	opt callstack 0
   709  000039                     	ds	1
   710  00003A                     _shouldUpdateTimer0Preload:
   711                           	opt callstack 0
   712  00003A                     	ds	1
   713  00003B                     _shouldUpdateDutyCycle:
   714                           	opt callstack 0
   715  00003B                     	ds	1
   716  00003C                     _timer5OverflowCount:
   717                           	opt callstack 0
   718  00003C                     	ds	1
   719  00003D                     _sinusIndex1:
   720                           	opt callstack 0
   721  00003D                     	ds	1
   722                           
   723                           	psect	dataCOMRAM
   724  00003E                     __pdataCOMRAM:
   725                           	opt callstack 0
   726  00003E                     _timer0ReloadValue:
   727                           	opt callstack 0
   728  00003E                     	ds	2
   729  000040                     _sinusValue3:
   730                           	opt callstack 0
   731  000040                     	ds	2
   732  000042                     _sinusValue2:
   733                           	opt callstack 0
   734  000042                     	ds	2
   735  000044                     _PrevADRESH:
   736                           	opt callstack 0
   737  000044                     	ds	1
   738  000045                     _d1:
   739                           	opt callstack 0
   740  000045                     	ds	1
   741  000046                     _sinusIndex3:
   742                           	opt callstack 0
   743  000046                     	ds	1
   744  000047                     _sinusIndex2:
   745                           	opt callstack 0
   746  000047                     	ds	1
   747  000048                     _skipValue:
   748                           	opt callstack 0
   749  000048                     	ds	1
   750                           
   751                           	psect	bssBANK0
   752  0000AC                     __pbssBANK0:
   753                           	opt callstack 0
   754  0000AC                     _dutyCycle:
   755                           	opt callstack 0
   756  0000AC                     	ds	4
   757  0000B0                     _nout:
   758                           	opt callstack 0
   759  0000B0                     	ds	2
   760  0000B2                     _width:
   761                           	opt callstack 0
   762  0000B2                     	ds	2
   763  0000B4                     _shouldDisplay:
   764                           	opt callstack 0
   765  0000B4                     	ds	1
   766  0000B5                     _currentPreloadIndex:
   767                           	opt callstack 0
   768  0000B5                     	ds	1
   769  0000B6                     _refreshTime:
   770                           	opt callstack 0
   771  0000B6                     	ds	1
   772  0000B7                     _dbuf:
   773                           	opt callstack 0
   774  0000B7                     	ds	32
   775                           
   776                           	psect	dataBANK0
   777  0000D7                     __pdataBANK0:
   778                           	opt callstack 0
   779  0000D7                     _prevTimer0ReloadValue:
   780                           	opt callstack 0
   781  0000D7                     	ds	2
   782  0000D9                     _timer5ReloadValue:
   783                           	opt callstack 0
   784  0000D9                     	ds	2
   785  0000DB                     _prevAdcPercent:
   786                           	opt callstack 0
   787  0000DB                     	ds	2
   788  0000DD                     _adcPercent:
   789                           	opt callstack 0
   790  0000DD                     	ds	2
   791  0000DF                     _maxADCVal:
   792                           	opt callstack 0
   793  0000DF                     	ds	2
   794                           
   795                           	psect	cstackBANK1
   796  000100                     __pcstackBANK1:
   797                           	opt callstack 0
   798  000100                     display@str2:
   799                           	opt callstack 0
   800                           
   801                           ; 16 bytes @ 0x0
   802  000100                     	ds	16
   803  000110                     display@str1:
   804                           	opt callstack 0
   805                           
   806                           ; 16 bytes @ 0x10
   807  000110                     	ds	16
   808  000120                     display@str3:
   809                           	opt callstack 0
   810                           
   811                           ; 16 bytes @ 0x20
   812  000120                     	ds	16
   813  000130                     display@noDigits:
   814                           	opt callstack 0
   815                           
   816                           ; 1 bytes @ 0x30
   817  000130                     	ds	1
   818  000131                     display@timer0ReloadValueCopy:
   819                           	opt callstack 0
   820                           
   821                           ; 2 bytes @ 0x31
   822  000131                     	ds	2
   823  000133                     display@i:
   824                           	opt callstack 0
   825                           
   826                           ; 2 bytes @ 0x33
   827  000133                     	ds	2
   828                           
   829                           	psect	cstackBANK0
   830  000060                     __pcstackBANK0:
   831                           	opt callstack 0
   832  000060                     ?_dtoa:
   833                           	opt callstack 0
   834  000060                     dtoa@fp:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0x0
   838  000060                     	ds	2
   839  000062                     dtoa@d:
   840                           	opt callstack 0
   841                           
   842                           ; 8 bytes @ 0x2
   843  000062                     	ds	8
   844  00006A                     ??_dtoa:
   845                           
   846                           ; 1 bytes @ 0xA
   847  00006A                     	ds	8
   848  000072                     _dtoa$1537:
   849                           	opt callstack 0
   850                           
   851                           ; 2 bytes @ 0x12
   852  000072                     	ds	2
   853  000074                     dtoa@p:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0x14
   857  000074                     	ds	2
   858  000076                     dtoa@w:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0x16
   862  000076                     	ds	2
   863  000078                     dtoa@s:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x18
   867  000078                     	ds	2
   868  00007A                     dtoa@n:
   869                           	opt callstack 0
   870                           
   871                           ; 8 bytes @ 0x1A
   872  00007A                     	ds	8
   873  000082                     dtoa@i:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0x22
   877  000082                     	ds	2
   878  000084                     ?_vfpfcnvrt:
   879                           	opt callstack 0
   880  000084                     vfpfcnvrt@fp:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x24
   884  000084                     	ds	2
   885  000086                     vfpfcnvrt@fmt:
   886                           	opt callstack 0
   887                           
   888                           ; 2 bytes @ 0x26
   889  000086                     	ds	2
   890  000088                     vfpfcnvrt@ap:
   891                           	opt callstack 0
   892                           
   893                           ; 2 bytes @ 0x28
   894  000088                     	ds	2
   895  00008A                     vfpfcnvrt@ll:
   896                           	opt callstack 0
   897                           
   898                           ; 8 bytes @ 0x2A
   899  00008A                     	ds	8
   900  000092                     ?_vfprintf:
   901                           	opt callstack 0
   902  000092                     vfprintf@fp:
   903                           	opt callstack 0
   904                           
   905                           ; 2 bytes @ 0x32
   906  000092                     	ds	2
   907  000094                     vfprintf@fmt:
   908                           	opt callstack 0
   909                           
   910                           ; 2 bytes @ 0x34
   911  000094                     	ds	2
   912  000096                     vfprintf@ap:
   913                           	opt callstack 0
   914                           
   915                           ; 2 bytes @ 0x36
   916  000096                     	ds	2
   917  000098                     vfprintf@cfmt:
   918                           	opt callstack 0
   919                           
   920                           ; 2 bytes @ 0x38
   921  000098                     	ds	2
   922  00009A                     ?_sprintf:
   923                           	opt callstack 0
   924  00009A                     sprintf@s:
   925                           	opt callstack 0
   926                           
   927                           ; 2 bytes @ 0x3A
   928  00009A                     	ds	2
   929  00009C                     sprintf@fmt:
   930                           	opt callstack 0
   931                           
   932                           ; 2 bytes @ 0x3C
   933  00009C                     	ds	6
   934  0000A2                     sprintf@ap:
   935                           	opt callstack 0
   936                           
   937                           ; 2 bytes @ 0x42
   938  0000A2                     	ds	2
   939  0000A4                     sprintf@f:
   940                           	opt callstack 0
   941                           
   942                           ; 6 bytes @ 0x44
   943  0000A4                     	ds	6
   944  0000AA                     ??_display:
   945                           
   946                           ; 1 bytes @ 0x4A
   947  0000AA                     	ds	2
   948                           
   949                           	psect	cstackCOMRAM
   950  000001                     __pcstackCOMRAM:
   951                           	opt callstack 0
   952  000001                     ?i1___lwdiv:
   953                           	opt callstack 0
   954  000001                     i1___lwdiv@dividend:
   955                           	opt callstack 0
   956                           
   957                           ; 2 bytes @ 0x0
   958  000001                     	ds	2
   959  000003                     i1___lwdiv@divisor:
   960                           	opt callstack 0
   961                           
   962                           ; 2 bytes @ 0x2
   963  000003                     	ds	2
   964  000005                     i1___lwdiv@quotient:
   965                           	opt callstack 0
   966                           
   967                           ; 2 bytes @ 0x4
   968  000005                     	ds	2
   969  000007                     i1___lwdiv@counter:
   970                           	opt callstack 0
   971                           
   972                           ; 1 bytes @ 0x6
   973  000007                     	ds	1
   974  000008                     ??_updateSinusIndexes:
   975                           
   976                           ; 1 bytes @ 0x7
   977  000008                     	ds	2
   978  00000A                     updateSinusIndexes@currentScalefactor:
   979                           	opt callstack 0
   980                           
   981                           ; 2 bytes @ 0x9
   982  00000A                     	ds	2
   983  00000C                     ??_tcInt:
   984                           
   985                           ; 1 bytes @ 0xB
   986  00000C                     	ds	9
   987  000015                     tcInt@duty:
   988                           	opt callstack 0
   989                           
   990                           ; 1 bytes @ 0x14
   991  000015                     	ds	1
   992  000016                     ??_updateTMR0PreloadValue:
   993  000016                     ?_strlen:
   994                           	opt callstack 0
   995  000016                     ?___lwdiv:
   996                           	opt callstack 0
   997  000016                     ?___lwmod:
   998                           	opt callstack 0
   999  000016                     ?___aodiv:
  1000                           	opt callstack 0
  1001  000016                     ?___aomod:
  1002                           	opt callstack 0
  1003  000016                     LCDWriteNibble@rs:
  1004                           	opt callstack 0
  1005  000016                     ___lwdiv@dividend:
  1006                           	opt callstack 0
  1007  000016                     ___lwmod@dividend:
  1008                           	opt callstack 0
  1009  000016                     fputc@c:
  1010                           	opt callstack 0
  1011  000016                     strlen@s:
  1012                           	opt callstack 0
  1013  000016                     ___aodiv@dividend:
  1014                           	opt callstack 0
  1015  000016                     ___aomod@dividend:
  1016                           	opt callstack 0
  1017                           
  1018                           ; 8 bytes @ 0x15
  1019  000016                     	ds	1
  1020  000017                     ??_LCDWriteNibble:
  1021                           
  1022                           ; 1 bytes @ 0x16
  1023  000017                     	ds	1
  1024  000018                     LCDWriteNibble@ch:
  1025                           	opt callstack 0
  1026  000018                     ___lwdiv@divisor:
  1027                           	opt callstack 0
  1028  000018                     ___lwmod@divisor:
  1029                           	opt callstack 0
  1030  000018                     fputc@fp:
  1031                           	opt callstack 0
  1032  000018                     strlen@a:
  1033                           	opt callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x17
  1036  000018                     	ds	1
  1037  000019                     ??_LCDPutCmd:
  1038  000019                     ??_LCDPutChar:
  1039                           
  1040                           ; 1 bytes @ 0x18
  1041  000019                     	ds	1
  1042  00001A                     ??_fputc:
  1043  00001A                     LCDPutChar@ch:
  1044                           	opt callstack 0
  1045  00001A                     LCDPutCmd@ch:
  1046                           	opt callstack 0
  1047  00001A                     ___lwdiv@counter:
  1048                           	opt callstack 0
  1049  00001A                     ___lwmod@counter:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 1 bytes @ 0x19
  1053  00001A                     	ds	1
  1054  00001B                     ??_LCD_Initialize:
  1055  00001B                     LCDPutStr@str:
  1056                           	opt callstack 0
  1057  00001B                     ___lwdiv@quotient:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x1A
  1061  00001B                     	ds	2
  1062  00001D                     ??_readADC:
  1063  00001D                     LCDPutStr@i:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x1C
  1067  00001D                     	ds	1
  1068  00001E                     ___aodiv@divisor:
  1069                           	opt callstack 0
  1070  00001E                     ___aomod@divisor:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 8 bytes @ 0x1D
  1074  00001E                     	ds	1
  1075  00001F                     fputs@s:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x1E
  1079  00001F                     	ds	2
  1080  000021                     fputs@fp:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x20
  1084  000021                     	ds	2
  1085  000023                     fputs@c:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 1 bytes @ 0x22
  1089  000023                     	ds	1
  1090  000024                     fputs@i:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x23
  1094  000024                     	ds	2
  1095  000026                     ?_pad:
  1096                           	opt callstack 0
  1097  000026                     ___aodiv@counter:
  1098                           	opt callstack 0
  1099  000026                     ___aomod@counter:
  1100                           	opt callstack 0
  1101  000026                     pad@fp:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x25
  1105  000026                     	ds	1
  1106  000027                     ___aodiv@sign:
  1107                           	opt callstack 0
  1108  000027                     ___aomod@sign:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 1 bytes @ 0x26
  1112  000027                     	ds	1
  1113  000028                     ?_abs:
  1114                           	opt callstack 0
  1115  000028                     pad@buf:
  1116                           	opt callstack 0
  1117  000028                     abs@a:
  1118                           	opt callstack 0
  1119  000028                     ___aodiv@quotient:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 8 bytes @ 0x27
  1123  000028                     	ds	2
  1124  00002A                     ??_abs:
  1125  00002A                     pad@p:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x29
  1129  00002A                     	ds	2
  1130  00002C                     ??_pad:
  1131                           
  1132                           ; 1 bytes @ 0x2B
  1133  00002C                     	ds	1
  1134  00002D                     pad@i:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x2C
  1138  00002D                     	ds	2
  1139  00002F                     pad@w:
  1140                           	opt callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x2E
  1143  00002F                     	ds	2
  1144  000031                     ??_vfpfcnvrt:
  1145                           
  1146                           ; 1 bytes @ 0x30
  1147  000031                     	ds	2
  1148  000033                     
  1149                           ; 1 bytes @ 0x32
  1150 ;;
  1151 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1152 ;;
  1153 ;; *************** function _main *****************
  1154 ;; Defined at:
  1155 ;;		line 313 in file "newmain.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1169 ;;      Params:         0       0       0       0
  1170 ;;      Locals:         0       0       0       0
  1171 ;;      Temps:          0       0       0       0
  1172 ;;      Totals:         0       0       0       0
  1173 ;;Total ram usage:        0 bytes
  1174 ;; Hardware stack levels required when called:   12
  1175 ;; This function calls:
  1176 ;;		_LCD_Initialize
  1177 ;;		_configureADC
  1178 ;;		_configureInputs
  1179 ;;		_configureInterrupts
  1180 ;;		_configurePWM
  1181 ;;		_configureTimer0
  1182 ;;		_configureTimer1
  1183 ;;		_configureTimer2
  1184 ;;		_configureTimer5
  1185 ;;		_display
  1186 ;;		_readADC
  1187 ;;		_startPWM
  1188 ;;		_updateTMR0PreloadValue
  1189 ;; This function is called by:
  1190 ;;		Startup code after reset
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text0
  1195  0011D8                     __ptext0:
  1196                           	opt callstack 0
  1197  0011D8                     _main:
  1198                           	opt callstack 19
  1199  0011D8                     
  1200                           ;newmain.c: 314:     LCD_Initialize();
  1201  0011D8  EC9C  F008         	call	_LCD_Initialize	;wreg free
  1202  0011DC                     
  1203                           ;newmain.c: 315:     configureInterrupts();
  1204  0011DC  EC30  F00A         	call	_configureInterrupts	;wreg free
  1205  0011E0                     
  1206                           ;newmain.c: 316:     configurePWM();
  1207  0011E0  EC11  F009         	call	_configurePWM	;wreg free
  1208  0011E4                     
  1209                           ;newmain.c: 317:     configureADC();
  1210  0011E4  ECE6  F009         	call	_configureADC	;wreg free
  1211  0011E8                     
  1212                           ;newmain.c: 318:     configureTimer0();
  1213  0011E8  ECFA  F009         	call	_configureTimer0	;wreg free
  1214                           
  1215                           ;newmain.c: 319:     configureTimer1();
  1216  0011EC  EC0F  F00A         	call	_configureTimer1	;wreg free
  1217                           
  1218                           ;newmain.c: 320:     configureTimer2();
  1219  0011F0  EC19  F00A         	call	_configureTimer2	;wreg free
  1220  0011F4                     
  1221                           ;newmain.c: 321:     configureTimer5();
  1222  0011F4  EC05  F00A         	call	_configureTimer5	;wreg free
  1223  0011F8                     
  1224                           ;newmain.c: 322:     configureInputs();
  1225  0011F8  EC2B  F00A         	call	_configureInputs	;wreg free
  1226  0011FC                     
  1227                           ;newmain.c: 323:     startPWM();
  1228  0011FC  EC33  F00A         	call	_startPWM	;wreg free
  1229  001200                     
  1230                           ;newmain.c: 325:     TRISAbits.TRISA2 = 0;
  1231  001200  9492               	bcf	146,2,c	;volatile
  1232  001202                     
  1233                           ;newmain.c: 326:     TRISAbits.RA2 = 0;
  1234  001202  9492               	bcf	146,2,c	;volatile
  1235  001204                     
  1236                           ;newmain.c: 327:     ANSEL0bits.ANS2 = 0;
  1237  001204  94B8               	bcf	184,2,c	;volatile
  1238  001206                     
  1239                           ;newmain.c: 328:     PORTAbits.RA2 = 0;
  1240  001206  9480               	bcf	128,2,c	;volatile
  1241  001208                     
  1242                           ;newmain.c: 331:     __nop();
  1243  001208  F000               	nop	
  1244  00120A                     l2791:
  1245                           
  1246                           ;newmain.c: 333:         __nop();
  1247  00120A  F000               	nop	
  1248  00120C                     
  1249                           ;newmain.c: 340:         display();
  1250  00120C  ECEB  F002         	call	_display	;wreg free
  1251  001210                     
  1252                           ;newmain.c: 341:         updateTMR0PreloadValue();
  1253  001210  EC27  F007         	call	_updateTMR0PreloadValue	;wreg free
  1254  001214                     
  1255                           ;newmain.c: 342:         readADC();
  1256  001214  ECC5  F008         	call	_readADC	;wreg free
  1257  001218                     
  1258                           ;newmain.c: 351:         if (PORTAbits.RA3 == 1) {
  1259  001218  5080               	movf	128,w,c	;volatile
  1260  00121A  EF05  F009         	goto	l2791
  1261  00121E  EF92  F000         	goto	start
  1262  001222                     __end_of_main:
  1263                           	opt callstack 0
  1264                           
  1265 ;; *************** function _updateTMR0PreloadValue *****************
  1266 ;; Defined at:
  1267 ;;		line 480 in file "newmain.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1281 ;;      Params:         0       0       0       0
  1282 ;;      Locals:         0       0       0       0
  1283 ;;      Temps:          2       0       0       0
  1284 ;;      Totals:         2       0       0       0
  1285 ;;Total ram usage:        2 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    3
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text1
  1296  000E4E                     __ptext1:
  1297                           	opt callstack 0
  1298  000E4E                     _updateTMR0PreloadValue:
  1299                           	opt callstack 27
  1300  000E4E                     
  1301                           ;newmain.c: 481:     if (shouldUpdateTimer0Preload) {
  1302  000E4E  503A               	movf	_shouldUpdateTimer0Preload^0,w,c	;volatile
  1303  000E50  B4D8               	btfsc	status,2,c
  1304  000E52  EF2D  F007         	goto	u1471
  1305  000E56  EF2F  F007         	goto	u1470
  1306  000E5A                     u1471:
  1307  000E5A  EF68  F007         	goto	l228
  1308  000E5E                     u1470:
  1309  000E5E                     
  1310                           ;newmain.c: 482:         if (timer5OverflowCount == 1) {
  1311  000E5E  043C               	decf	_timer5OverflowCount^0,w,c	;volatile
  1312  000E60  A4D8               	btfss	status,2,c
  1313  000E62  EF35  F007         	goto	u1481
  1314  000E66  EF37  F007         	goto	u1480
  1315  000E6A                     u1481:
  1316  000E6A  EF65  F007         	goto	l2207
  1317  000E6E                     u1480:
  1318  000E6E                     
  1319                           ;newmain.c: 483:             timer5OverflowCount = 0;
  1320  000E6E  0E00               	movlw	0
  1321  000E70  6E3C               	movwf	_timer5OverflowCount^0,c	;volatile
  1322  000E72                     
  1323                           ;newmain.c: 484:             if (currentPreloadIndex < adcPercent) {
  1324  000E72  0100               	movlb	0	; () banked
  1325  000E74  51B5               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  1326  000E76  6E16               	movwf	??_updateTMR0PreloadValue^0,c
  1327  000E78  6A17               	clrf	(??_updateTMR0PreloadValue+1)^0,c
  1328  000E7A  51DD               	movf	_adcPercent& (0+255),w,b	;volatile
  1329  000E7C  5C16               	subwf	??_updateTMR0PreloadValue^0,w,c
  1330  000E7E  51DE               	movf	(_adcPercent+1)& (0+255),w,b	;volatile
  1331  000E80  5817               	subwfb	(??_updateTMR0PreloadValue+1)^0,w,c
  1332  000E82  B0D8               	btfsc	status,0,c
  1333  000E84  EF46  F007         	goto	u1491
  1334  000E88  EF48  F007         	goto	u1490
  1335  000E8C                     u1491:
  1336  000E8C  EF4B  F007         	goto	l2201
  1337  000E90                     u1490:
  1338  000E90                     
  1339                           ; BSR set to: 0
  1340                           ;newmain.c: 485:                 currentPreloadIndex++;
  1341  000E90  2BB5               	incf	_currentPreloadIndex& (0+255),f,b	;volatile
  1342                           
  1343                           ;newmain.c: 486:             } else if (currentPreloadIndex > adcPercent) {
  1344  000E92  EF57  F007         	goto	l2205
  1345  000E96                     l2201:
  1346                           
  1347                           ; BSR set to: 0
  1348  000E96  51B5               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  1349  000E98  5DDD               	subwf	_adcPercent& (0+255),w,b	;volatile
  1350  000E9A  0E00               	movlw	0
  1351  000E9C  59DE               	subwfb	(_adcPercent+1)& (0+255),w,b	;volatile
  1352  000E9E  B0D8               	btfsc	status,0,c
  1353  000EA0  EF54  F007         	goto	u1501
  1354  000EA4  EF56  F007         	goto	u1500
  1355  000EA8                     u1501:
  1356  000EA8  EF57  F007         	goto	l2205
  1357  000EAC                     u1500:
  1358  000EAC                     
  1359                           ; BSR set to: 0
  1360                           ;newmain.c: 487:                 currentPreloadIndex--;
  1361  000EAC  07B5               	decf	_currentPreloadIndex& (0+255),f,b	;volatile
  1362  000EAE                     l2205:
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;newmain.c: 489:             timer0ReloadValue = timer0PreloadValues[currentPreloadIndex
      +                          ];
  1366  000EAE  51B5               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  1367  000EB0  0D02               	mullw	2
  1368  000EB2  0E85               	movlw	low _timer0PreloadValues
  1369  000EB4  24F3               	addwf	243,w,c
  1370  000EB6  6EF6               	movwf	tblptrl,c
  1371  000EB8  0E3C               	movlw	high _timer0PreloadValues
  1372  000EBA  20F4               	addwfc	244,w,c
  1373  000EBC  6EF7               	movwf	tblptrh,c
  1374  000EBE                     	if	0	;There are less than 3 active tblptr bytes
  1375  000EBE                     	endif
  1376  000EBE  0009               	tblrd		*+
  1377  000EC0  CFF5 F03E          	movff	tablat,_timer0ReloadValue	;volatile
  1378  000EC4  000A               	tblrd		*-
  1379  000EC6  CFF5 F03F          	movff	tablat,_timer0ReloadValue+1	;volatile
  1380  000ECA                     l2207:
  1381                           
  1382                           ;newmain.c: 491:         timer5OverflowCount++;
  1383  000ECA  2A3C               	incf	_timer5OverflowCount^0,f,c	;volatile
  1384  000ECC                     
  1385                           ;newmain.c: 492:         shouldUpdateTimer0Preload = 0;
  1386  000ECC  0E00               	movlw	0
  1387  000ECE  6E3A               	movwf	_shouldUpdateTimer0Preload^0,c	;volatile
  1388  000ED0                     l228:
  1389  000ED0  0012               	return		;funcret
  1390  000ED2                     __end_of_updateTMR0PreloadValue:
  1391                           	opt callstack 0
  1392                           
  1393 ;; *************** function _startPWM *****************
  1394 ;; Defined at:
  1395 ;;		line 210 in file "newmain.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;		None
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		None
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1409 ;;      Params:         0       0       0       0
  1410 ;;      Locals:         0       0       0       0
  1411 ;;      Temps:          0       0       0       0
  1412 ;;      Totals:         0       0       0       0
  1413 ;;Total ram usage:        0 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    3
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_main
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text2
  1424  001466                     __ptext2:
  1425                           	opt callstack 0
  1426  001466                     _startPWM:
  1427                           	opt callstack 27
  1428  001466                     
  1429                           ;newmain.c: 211:     PTCON1bits.PTEN = 1;
  1430  001466  8E7E               	bsf	126,7,c	;volatile
  1431  001468  0012               	return		;funcret
  1432  00146A                     __end_of_startPWM:
  1433                           	opt callstack 0
  1434                           
  1435 ;; *************** function _readADC *****************
  1436 ;; Defined at:
  1437 ;;		line 496 in file "newmain.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1451 ;;      Params:         0       0       0       0
  1452 ;;      Locals:         0       0       0       0
  1453 ;;      Temps:          1       0       0       0
  1454 ;;      Totals:         1       0       0       0
  1455 ;;Total ram usage:        1 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:    4
  1458 ;; This function calls:
  1459 ;;		___lwdiv
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text3
  1466  00118A                     __ptext3:
  1467                           	opt callstack 0
  1468  00118A                     _readADC:
  1469                           	opt callstack 26
  1470  00118A                     
  1471                           ;newmain.c: 497:     if (PIR1bits.ADIF == 1) {
  1472  00118A  AC9E               	btfss	158,6,c	;volatile
  1473  00118C  EFCA  F008         	goto	u2271
  1474  001190  EFCC  F008         	goto	u2270
  1475  001194                     u2271:
  1476  001194  EFEB  F008         	goto	l233
  1477  001198                     u2270:
  1478  001198                     
  1479                           ;newmain.c: 498:         if (PrevADRESH != ADRESH) {
  1480  001198  50C4               	movf	196,w,c	;volatile
  1481  00119A  1844               	xorwf	_PrevADRESH^0,w,c	;volatile
  1482  00119C  B4D8               	btfsc	status,2,c
  1483  00119E  EFD3  F008         	goto	u2281
  1484  0011A2  EFD5  F008         	goto	u2280
  1485  0011A6                     u2281:
  1486  0011A6  EFE8  F008         	goto	l2761
  1487  0011AA                     u2280:
  1488  0011AA                     
  1489                           ;newmain.c: 499:             adcPercent = (255 - ADRESH) * 99 / maxADCVal;
  1490  0011AA  50C4               	movf	196,w,c	;volatile
  1491  0011AC  0AFF               	xorlw	255
  1492  0011AE  6E1D               	movwf	??_readADC^0,c
  1493  0011B0  501D               	movf	??_readADC^0,w,c
  1494  0011B2  0D63               	mullw	99
  1495  0011B4  CFF3 F016          	movff	prodl,___lwdiv@dividend
  1496  0011B8  CFF4 F017          	movff	prodh,___lwdiv@dividend+1
  1497  0011BC  C0DF  F018         	movff	_maxADCVal,___lwdiv@divisor
  1498  0011C0  C0E0  F019         	movff	_maxADCVal+1,___lwdiv@divisor+1
  1499  0011C4  EC69  F007         	call	___lwdiv	;wreg free
  1500  0011C8  C016  F0DD         	movff	?___lwdiv,_adcPercent	;volatile
  1501  0011CC  C017  F0DE         	movff	?___lwdiv+1,_adcPercent+1	;volatile
  1502  0011D0                     l2761:
  1503                           
  1504                           ;newmain.c: 502:         PrevADRESH = ADRESH;
  1505  0011D0  CFC4 F044          	movff	4036,_PrevADRESH	;volatile
  1506  0011D4                     
  1507                           ;newmain.c: 503:         PIR1bits.ADIF = 0;
  1508  0011D4  9C9E               	bcf	158,6,c	;volatile
  1509  0011D6                     l233:
  1510  0011D6  0012               	return		;funcret
  1511  0011D8                     __end_of_readADC:
  1512                           	opt callstack 0
  1513                           
  1514 ;; *************** function _display *****************
  1515 ;; Defined at:
  1516 ;;		line 441 in file "newmain.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  i               2   51[BANK1 ] int 
  1521 ;;  str3           16   32[BANK1 ] unsigned char [16]
  1522 ;;  str1           16   16[BANK1 ] unsigned char [16]
  1523 ;;  str2           16    0[BANK1 ] unsigned char [16]
  1524 ;;  timer0Reload    2   49[BANK1 ] unsigned int 
  1525 ;;  noDigits        1   48[BANK1 ] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1535 ;;      Params:         0       0       0       0
  1536 ;;      Locals:         0       0      53       0
  1537 ;;      Temps:          0       2       0       0
  1538 ;;      Totals:         0       2      53       0
  1539 ;;Total ram usage:       55 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:   11
  1542 ;; This function calls:
  1543 ;;		_LCDPutChar
  1544 ;;		_LCDPutCmd
  1545 ;;		_LCDPutStr
  1546 ;;		___lwdiv
  1547 ;;		___lwmod
  1548 ;;		_sprintf
  1549 ;; This function is called by:
  1550 ;;		_main
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text4
  1555  0005D6                     __ptext4:
  1556                           	opt callstack 0
  1557  0005D6                     _display:
  1558                           	opt callstack 19
  1559  0005D6                     
  1560                           ;newmain.c: 442:     if (shouldDisplay) {
  1561  0005D6  0100               	movlb	0	; () banked
  1562  0005D8  51B4               	movf	_shouldDisplay& (0+255),w,b	;volatile
  1563  0005DA  B4D8               	btfsc	status,2,c
  1564  0005DC  EFF2  F002         	goto	u2191
  1565  0005E0  EFF4  F002         	goto	u2190
  1566  0005E4                     u2191:
  1567  0005E4  EFC6  F003         	goto	l220
  1568  0005E8                     u2190:
  1569  0005E8                     
  1570                           ; BSR set to: 0
  1571                           ;newmain.c: 443:         if (refreshTime == 10) {
  1572  0005E8  0E0A               	movlw	10
  1573  0005EA  19B6               	xorwf	_refreshTime& (0+255),w,b	;volatile
  1574  0005EC  A4D8               	btfss	status,2,c
  1575  0005EE  EFFB  F002         	goto	u2201
  1576  0005F2  EFFD  F002         	goto	u2200
  1577  0005F6                     u2201:
  1578  0005F6  EFC3  F003         	goto	l2751
  1579  0005FA                     u2200:
  1580  0005FA                     
  1581                           ; BSR set to: 0
  1582                           ;newmain.c: 444:             if (currentPreloadIndex != adcPercent || prevTimer0ReloadVa
      +                          lue != timer0ReloadValue || prevAdcPercent != adcPercent) {
  1583  0005FA  51B5               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  1584  0005FC  6FAA               	movwf	??_display& (0+255),b
  1585  0005FE  6BAB               	clrf	(??_display+1)& (0+255),b
  1586  000600  51DD               	movf	_adcPercent& (0+255),w,b	;volatile
  1587  000602  19AA               	xorwf	??_display& (0+255),w,b
  1588  000604  E107               	bnz	u2211
  1589  000606  51DE               	movf	(_adcPercent+1)& (0+255),w,b	;volatile
  1590  000608  19AB               	xorwf	(??_display+1)& (0+255),w,b
  1591  00060A  A4D8               	btfss	status,2,c
  1592  00060C  EF0A  F003         	goto	u2211
  1593  000610  EF0C  F003         	goto	u2210
  1594  000614                     u2211:
  1595  000614  EF24  F003         	goto	l2711
  1596  000618                     u2210:
  1597  000618                     
  1598                           ; BSR set to: 0
  1599  000618  503E               	movf	_timer0ReloadValue^0,w,c	;volatile
  1600  00061A  19D7               	xorwf	_prevTimer0ReloadValue& (0+255),w,b	;volatile
  1601  00061C  E107               	bnz	u2221
  1602  00061E  503F               	movf	(_timer0ReloadValue+1)^0,w,c	;volatile
  1603  000620  19D8               	xorwf	(_prevTimer0ReloadValue+1)& (0+255),w,b	;volatile
  1604  000622  A4D8               	btfss	status,2,c
  1605  000624  EF16  F003         	goto	u2221
  1606  000628  EF18  F003         	goto	u2220
  1607  00062C                     u2221:
  1608  00062C  EF24  F003         	goto	l2711
  1609  000630                     u2220:
  1610  000630                     
  1611                           ; BSR set to: 0
  1612  000630  51DD               	movf	_adcPercent& (0+255),w,b	;volatile
  1613  000632  19DB               	xorwf	_prevAdcPercent& (0+255),w,b	;volatile
  1614  000634  E109               	bnz	u2230
  1615  000636  51DE               	movf	(_adcPercent+1)& (0+255),w,b	;volatile
  1616  000638  19DC               	xorwf	(_prevAdcPercent+1)& (0+255),w,b	;volatile
  1617  00063A  B4D8               	btfsc	status,2,c
  1618  00063C  EF22  F003         	goto	u2231
  1619  000640  EF24  F003         	goto	u2230
  1620  000644                     u2231:
  1621  000644  EFB8  F003         	goto	l2745
  1622  000648                     u2230:
  1623  000648                     l2711:
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;newmain.c: 446:                 char str1[16];;newmain.c: 447:                 char str
      +                          2[16];;newmain.c: 448:                 char str3[16];;newmain.c: 450:                 LC
      +                          DPutCmd(0x01);
  1627  000648  0E01               	movlw	1
  1628  00064A  EC77  F009         	call	_LCDPutCmd
  1629  00064E                     
  1630                           ;newmain.c: 451:                 sprintf(str3, "%d", currentPreloadIndex);
  1631  00064E  0E20               	movlw	low display@str3
  1632  000650  0100               	movlb	0	; () banked
  1633  000652  6F9A               	movwf	sprintf@s& (0+255),b
  1634  000654  0E01               	movlw	high display@str3
  1635  000656  6F9B               	movwf	(sprintf@s+1)& (0+255),b
  1636  000658  0EBB               	movlw	low STR_1
  1637  00065A  6F9C               	movwf	sprintf@fmt& (0+255),b
  1638  00065C  0E3D               	movlw	high STR_1
  1639  00065E  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
  1640  000660  C0B5  F09E         	movff	_currentPreloadIndex,?_sprintf+4	;volatile
  1641  000664  6B9F               	clrf	(?_sprintf+5)& (0+255),b
  1642  000666  EC73  F008         	call	_sprintf	;wreg free
  1643  00066A                     
  1644                           ;newmain.c: 452:                 LCDPutStr(str3);
  1645  00066A  0E20               	movlw	low display@str3
  1646  00066C  6E1B               	movwf	LCDPutStr@str^0,c
  1647  00066E  0E01               	movlw	high display@str3
  1648  000670  6E1C               	movwf	(LCDPutStr@str+1)^0,c
  1649  000672  EC96  F009         	call	_LCDPutStr	;wreg free
  1650  000676                     
  1651                           ;newmain.c: 453:                 LCDPutChar(' ');
  1652  000676  0E20               	movlw	32
  1653  000678  ECCE  F009         	call	_LCDPutChar
  1654  00067C                     
  1655                           ;newmain.c: 454:                 sprintf(str1, "%d", adcPercent);
  1656  00067C  0E10               	movlw	low display@str1
  1657  00067E  0100               	movlb	0	; () banked
  1658  000680  6F9A               	movwf	sprintf@s& (0+255),b
  1659  000682  0E01               	movlw	high display@str1
  1660  000684  6F9B               	movwf	(sprintf@s+1)& (0+255),b
  1661  000686  0EBB               	movlw	low STR_1
  1662  000688  6F9C               	movwf	sprintf@fmt& (0+255),b
  1663  00068A  0E3D               	movlw	high STR_1
  1664  00068C  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
  1665  00068E  C0DD  F09E         	movff	_adcPercent,?_sprintf+4	;volatile
  1666  000692  C0DE  F09F         	movff	_adcPercent+1,?_sprintf+5	;volatile
  1667  000696  EC73  F008         	call	_sprintf	;wreg free
  1668                           
  1669                           ;newmain.c: 455:                 LCDPutStr(str1);
  1670  00069A  0E10               	movlw	low display@str1
  1671  00069C  6E1B               	movwf	LCDPutStr@str^0,c
  1672  00069E  0E01               	movlw	high display@str1
  1673  0006A0  6E1C               	movwf	(LCDPutStr@str+1)^0,c
  1674  0006A2  EC96  F009         	call	_LCDPutStr	;wreg free
  1675  0006A6                     
  1676                           ;newmain.c: 456:                 LCDPutChar(' ');
  1677  0006A6  0E20               	movlw	32
  1678  0006A8  ECCE  F009         	call	_LCDPutChar
  1679  0006AC                     
  1680                           ;newmain.c: 458:                 unsigned int timer0ReloadValueCopy = timer0ReloadValue;
  1681  0006AC  C03E  F131         	movff	_timer0ReloadValue,display@timer0ReloadValueCopy	;volatile
  1682  0006B0  C03F  F132         	movff	_timer0ReloadValue+1,display@timer0ReloadValueCopy+1	;volatile
  1683  0006B4                     
  1684                           ;newmain.c: 459:                 char noDigits = 0;
  1685  0006B4  0E00               	movlw	0
  1686  0006B6  0101               	movlb	1	; () banked
  1687  0006B8  6F30               	movwf	display@noDigits& (0+255),b
  1688                           
  1689                           ;newmain.c: 460:                 while (timer0ReloadValueCopy > 0) {
  1690  0006BA  EF81  F003         	goto	l2733
  1691  0006BE                     l2727:
  1692                           
  1693                           ; BSR set to: 1
  1694                           ;newmain.c: 461:                     str2[noDigits] = timer0ReloadValueCopy % 10;
  1695  0006BE  0E00               	movlw	low display@str2
  1696  0006C0  2530               	addwf	display@noDigits& (0+255),w,b
  1697  0006C2  6ED9               	movwf	fsr2l,c
  1698  0006C4  6ADA               	clrf	fsr2h,c
  1699  0006C6  0E01               	movlw	high display@str2
  1700  0006C8  22DA               	addwfc	fsr2h,f,c
  1701  0006CA  C131  F016         	movff	display@timer0ReloadValueCopy,___lwmod@dividend
  1702  0006CE  C132  F017         	movff	display@timer0ReloadValueCopy+1,___lwmod@dividend+1
  1703  0006D2  0E00               	movlw	0
  1704  0006D4  6E19               	movwf	(___lwmod@divisor+1)^0,c
  1705  0006D6  0E0A               	movlw	10
  1706  0006D8  6E18               	movwf	___lwmod@divisor^0,c
  1707  0006DA  EC10  F008         	call	___lwmod	;wreg free
  1708  0006DE  5016               	movf	?___lwmod^0,w,c
  1709  0006E0  6EDF               	movwf	indf2,c
  1710  0006E2                     
  1711                           ;newmain.c: 462:                     timer0ReloadValueCopy /= 10;
  1712  0006E2  C131  F016         	movff	display@timer0ReloadValueCopy,___lwdiv@dividend
  1713  0006E6  C132  F017         	movff	display@timer0ReloadValueCopy+1,___lwdiv@dividend+1
  1714  0006EA  0E00               	movlw	0
  1715  0006EC  6E19               	movwf	(___lwdiv@divisor+1)^0,c
  1716  0006EE  0E0A               	movlw	10
  1717  0006F0  6E18               	movwf	___lwdiv@divisor^0,c
  1718  0006F2  EC69  F007         	call	___lwdiv	;wreg free
  1719  0006F6  C016  F131         	movff	?___lwdiv,display@timer0ReloadValueCopy
  1720  0006FA  C017  F132         	movff	?___lwdiv+1,display@timer0ReloadValueCopy+1
  1721  0006FE                     
  1722                           ;newmain.c: 463:                     noDigits++;
  1723  0006FE  0101               	movlb	1	; () banked
  1724  000700  2B30               	incf	display@noDigits& (0+255),f,b
  1725  000702                     l2733:
  1726                           
  1727                           ; BSR set to: 1
  1728                           ;newmain.c: 460:                 while (timer0ReloadValueCopy > 0) {
  1729  000702  5131               	movf	display@timer0ReloadValueCopy& (0+255),w,b
  1730  000704  1132               	iorwf	(display@timer0ReloadValueCopy+1)& (0+255),w,b
  1731  000706  A4D8               	btfss	status,2,c
  1732  000708  EF88  F003         	goto	u2241
  1733  00070C  EF8A  F003         	goto	u2240
  1734  000710                     u2241:
  1735  000710  EF5F  F003         	goto	l2727
  1736  000714                     u2240:
  1737  000714                     
  1738                           ; BSR set to: 1
  1739                           ;newmain.c: 465:                 for (int i = noDigits - 1; i >= 0; i--) {
  1740  000714  0EFF               	movlw	255
  1741  000716  2530               	addwf	display@noDigits& (0+255),w,b
  1742  000718  6F33               	movwf	display@i& (0+255),b
  1743  00071A  6B34               	clrf	(display@i+1)& (0+255),b
  1744  00071C  0EFF               	movlw	255
  1745  00071E  2334               	addwfc	(display@i+1)& (0+255),f,b
  1746  000720  BF34               	btfsc	(display@i+1)& (0+255),7,b
  1747  000722  EF97  F003         	goto	u2250
  1748  000726  EF95  F003         	goto	u2251
  1749  00072A                     u2251:
  1750  00072A  EF99  F003         	goto	l2739
  1751  00072E                     u2250:
  1752  00072E  EFB8  F003         	goto	l2745
  1753  000732                     l2739:
  1754                           
  1755                           ; BSR set to: 1
  1756                           ;newmain.c: 466:                     LCDPutChar(digits[str2[i]]);
  1757  000732  0E00               	movlw	low display@str2
  1758  000734  2533               	addwf	display@i& (0+255),w,b
  1759  000736  6ED9               	movwf	fsr2l,c
  1760  000738  0E01               	movlw	high display@str2
  1761  00073A  2134               	addwfc	(display@i+1)& (0+255),w,b
  1762  00073C  6EDA               	movwf	fsr2h,c
  1763  00073E  50DF               	movf	indf2,w,c
  1764  000740  0100               	movlb	0	; () banked
  1765  000742  6FAA               	movwf	??_display& (0+255),b
  1766  000744  6BAB               	clrf	(??_display+1)& (0+255),b
  1767  000746  0EB1               	movlw	low _digits
  1768  000748  25AA               	addwf	??_display& (0+255),w,b
  1769  00074A  6EF6               	movwf	tblptrl,c
  1770  00074C  0E3D               	movlw	high _digits
  1771  00074E  21AB               	addwfc	(??_display+1)& (0+255),w,b
  1772  000750  6EF7               	movwf	tblptrh,c
  1773  000752                     	if	0	;There are less than 3 active tblptr bytes
  1774  000752                     	endif
  1775  000752  0008               	tblrd		*
  1776  000754  50F5               	movf	tablat,w,c
  1777  000756  ECCE  F009         	call	_LCDPutChar
  1778  00075A                     
  1779                           ;newmain.c: 467:                 }
  1780  00075A  0101               	movlb	1	; () banked
  1781  00075C  0733               	decf	display@i& (0+255),f,b
  1782  00075E  A0D8               	btfss	status,0,c
  1783  000760  0734               	decf	(display@i+1)& (0+255),f,b
  1784  000762                     
  1785                           ; BSR set to: 1
  1786  000762  BF34               	btfsc	(display@i+1)& (0+255),7,b
  1787  000764  EFB8  F003         	goto	u2260
  1788  000768  EFB6  F003         	goto	u2261
  1789  00076C                     u2261:
  1790  00076C  EF99  F003         	goto	l2739
  1791  000770                     u2260:
  1792  000770                     l2745:
  1793                           
  1794                           ;newmain.c: 470:             refreshTime = 0;
  1795  000770  0E00               	movlw	0
  1796  000772  0100               	movlb	0	; () banked
  1797  000774  6FB6               	movwf	_refreshTime& (0+255),b	;volatile
  1798  000776                     
  1799                           ; BSR set to: 0
  1800                           ;newmain.c: 471:             prevAdcPercent = adcPercent;
  1801  000776  C0DD  F0DB         	movff	_adcPercent,_prevAdcPercent	;volatile
  1802  00077A  C0DE  F0DC         	movff	_adcPercent+1,_prevAdcPercent+1	;volatile
  1803  00077E                     
  1804                           ; BSR set to: 0
  1805                           ;newmain.c: 472:             prevTimer0ReloadValue = timer0ReloadValue;
  1806  00077E  C03E  F0D7         	movff	_timer0ReloadValue,_prevTimer0ReloadValue	;volatile
  1807  000782  C03F  F0D8         	movff	_timer0ReloadValue+1,_prevTimer0ReloadValue+1	;volatile
  1808  000786                     l2751:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;newmain.c: 474:         refreshTime++;
  1812  000786  2BB6               	incf	_refreshTime& (0+255),f,b	;volatile
  1813  000788                     
  1814                           ; BSR set to: 0
  1815                           ;newmain.c: 476:         shouldDisplay = 0;
  1816  000788  0E00               	movlw	0
  1817  00078A  6FB4               	movwf	_shouldDisplay& (0+255),b	;volatile
  1818  00078C                     l220:
  1819                           
  1820                           ; BSR set to: 0
  1821  00078C  0012               	return		;funcret
  1822  00078E                     __end_of_display:
  1823                           	opt callstack 0
  1824                           
  1825 ;; *************** function _sprintf *****************
  1826 ;; Defined at:
  1827 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  s               2   58[BANK0 ] PTR unsigned char 
  1830 ;;		 -> display@str1(16), display@str3(16), 
  1831 ;;  fmt             2   60[BANK0 ] PTR const unsigned char 
  1832 ;;		 -> STR_2(3), STR_1(3), 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  f               6   68[BANK0 ] struct _IO_FILE
  1835 ;;  ap              2   66[BANK0 ] PTR void [1]
  1836 ;;		 -> ?_sprintf(2), 
  1837 ;;  ret             2    0        int 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  2   58[BANK0 ] int 
  1840 ;; Registers used:
  1841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1847 ;;      Params:         0       6       0       0
  1848 ;;      Locals:         0      10       0       0
  1849 ;;      Temps:          0       0       0       0
  1850 ;;      Totals:         0      16       0       0
  1851 ;;Total ram usage:       16 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:   10
  1854 ;; This function calls:
  1855 ;;		_vfprintf
  1856 ;; This function is called by:
  1857 ;;		_display
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text5
  1862  0010E6                     __ptext5:
  1863                           	opt callstack 0
  1864  0010E6                     _sprintf:
  1865                           	opt callstack 19
  1866  0010E6  0E9E               	movlw	low (?_sprintf+4)
  1867  0010E8  0100               	movlb	0	; () banked
  1868  0010EA  6FA2               	movwf	sprintf@ap& (0+255),b
  1869  0010EC  0E00               	movlw	high (?_sprintf+4)
  1870  0010EE  6FA3               	movwf	(sprintf@ap+1)& (0+255),b
  1871  0010F0  C09A  F0A4         	movff	sprintf@s,sprintf@f
  1872  0010F4  C09B  F0A5         	movff	sprintf@s+1,sprintf@f+1
  1873  0010F8                     
  1874                           ; BSR set to: 0
  1875  0010F8  0E00               	movlw	0
  1876  0010FA  6FA7               	movwf	(sprintf@f+3)& (0+255),b
  1877  0010FC  0E00               	movlw	0
  1878  0010FE  6FA6               	movwf	(sprintf@f+2)& (0+255),b
  1879  001100                     
  1880                           ; BSR set to: 0
  1881  001100  0E00               	movlw	0
  1882  001102  6FA9               	movwf	(sprintf@f+5)& (0+255),b
  1883  001104  0E00               	movlw	0
  1884  001106  6FA8               	movwf	(sprintf@f+4)& (0+255),b
  1885  001108                     
  1886                           ; BSR set to: 0
  1887  001108  0EA4               	movlw	low sprintf@f
  1888  00110A  6F92               	movwf	vfprintf@fp& (0+255),b
  1889  00110C  0E00               	movlw	high sprintf@f
  1890  00110E  6F93               	movwf	(vfprintf@fp+1)& (0+255),b
  1891  001110  C09C  F094         	movff	sprintf@fmt,vfprintf@fmt
  1892  001114  C09D  F095         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1893  001118  0EA2               	movlw	low sprintf@ap
  1894  00111A  6F96               	movwf	vfprintf@ap& (0+255),b
  1895  00111C  0E00               	movlw	high sprintf@ap
  1896  00111E  6F97               	movwf	(vfprintf@ap+1)& (0+255),b
  1897  001120  EC42  F008         	call	_vfprintf	;wreg free
  1898  001124  0100               	movlb	0	; () banked
  1899  001126  51A6               	movf	(sprintf@f+2)& (0+255),w,b
  1900  001128  259A               	addwf	sprintf@s& (0+255),w,b
  1901  00112A  6ED9               	movwf	fsr2l,c
  1902  00112C  51A7               	movf	(sprintf@f+3)& (0+255),w,b
  1903  00112E  219B               	addwfc	(sprintf@s+1)& (0+255),w,b
  1904  001130  6EDA               	movwf	fsr2h,c
  1905  001132  0E00               	movlw	0
  1906  001134  6EDF               	movwf	indf2,c
  1907  001136                     
  1908                           ; BSR set to: 0
  1909  001136  0012               	return		;funcret
  1910  001138                     __end_of_sprintf:
  1911                           	opt callstack 0
  1912                           
  1913 ;; *************** function _vfprintf *****************
  1914 ;; Defined at:
  1915 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
  1918 ;;		 -> sprintf@f(6), 
  1919 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  1920 ;;		 -> STR_2(3), STR_1(3), 
  1921 ;;  ap              2   54[BANK0 ] PTR PTR void 
  1922 ;;		 -> sprintf@ap(2), 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  cfmt            2   56[BANK0 ] PTR unsigned char 
  1925 ;;		 -> STR_2(3), STR_1(3), 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  2   50[BANK0 ] int 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1935 ;;      Params:         0       6       0       0
  1936 ;;      Locals:         0       2       0       0
  1937 ;;      Temps:          0       0       0       0
  1938 ;;      Totals:         0       8       0       0
  1939 ;;Total ram usage:        8 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    9
  1942 ;; This function calls:
  1943 ;;		_vfpfcnvrt
  1944 ;; This function is called by:
  1945 ;;		_sprintf
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text6
  1950  001084                     __ptext6:
  1951                           	opt callstack 0
  1952  001084                     _vfprintf:
  1953                           	opt callstack 19
  1954  001084                     
  1955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1956  001084  C094  F098         	movff	vfprintf@fmt,vfprintf@cfmt
  1957  001088  C095  F099         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1958  00108C                     
  1959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1960  00108C  0E00               	movlw	0
  1961  00108E  0100               	movlb	0	; () banked
  1962  001090  6FB1               	movwf	(_nout+1)& (0+255),b
  1963  001092  0E00               	movlw	0
  1964  001094  6FB0               	movwf	_nout& (0+255),b
  1965                           
  1966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1967  001096  EF60  F008         	goto	l2617
  1968  00109A                     l2615:
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1972  00109A  C092  F084         	movff	vfprintf@fp,vfpfcnvrt@fp
  1973  00109E  C093  F085         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1974  0010A2  0E98               	movlw	low vfprintf@cfmt
  1975  0010A4  6F86               	movwf	vfpfcnvrt@fmt& (0+255),b
  1976  0010A6  0E00               	movlw	high vfprintf@cfmt
  1977  0010A8  6F87               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1978  0010AA  C096  F088         	movff	vfprintf@ap,vfpfcnvrt@ap
  1979  0010AE  C097  F089         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1980  0010B2  ECC7  F003         	call	_vfpfcnvrt	;wreg free
  1981  0010B6  0100               	movlb	0	; () banked
  1982  0010B8  5184               	movf	?_vfpfcnvrt& (0+255),w,b
  1983  0010BA  27B0               	addwf	_nout& (0+255),f,b
  1984  0010BC  5185               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1985  0010BE  23B1               	addwfc	(_nout+1)& (0+255),f,b
  1986  0010C0                     l2617:
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1990  0010C0  C098  FFF6         	movff	vfprintf@cfmt,tblptrl
  1991  0010C4  C099  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1992  0010C8                     	if	0	;tblptru may be non-zero
  1993  0010C8                     	endif
  1994  0010C8                     	if	0	;tblptru may be non-zero
  1995  0010C8                     	endif
  1996  0010C8  0008               	tblrd		*
  1997  0010CA  50F5               	movf	tablat,w,c
  1998  0010CC  0900               	iorlw	0
  1999  0010CE  A4D8               	btfss	status,2,c
  2000  0010D0  EF6C  F008         	goto	u2111
  2001  0010D4  EF6E  F008         	goto	u2110
  2002  0010D8                     u2111:
  2003  0010D8  EF4D  F008         	goto	l2615
  2004  0010DC                     u2110:
  2005  0010DC                     
  2006                           ; BSR set to: 0
  2007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2008  0010DC  C0B0  F092         	movff	_nout,?_vfprintf
  2009  0010E0  C0B1  F093         	movff	_nout+1,?_vfprintf+1
  2010  0010E4                     
  2011                           ; BSR set to: 0
  2012  0010E4  0012               	return		;funcret
  2013  0010E6                     __end_of_vfprintf:
  2014                           	opt callstack 0
  2015                           
  2016 ;; *************** function _vfpfcnvrt *****************
  2017 ;; Defined at:
  2018 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  2021 ;;		 -> sprintf@f(6), 
  2022 ;;  fmt             2   38[BANK0 ] PTR PTR unsigned char 
  2023 ;;		 -> vfprintf@cfmt(2), 
  2024 ;;  ap              2   40[BANK0 ] PTR PTR void 
  2025 ;;		 -> sprintf@ap(2), 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  ll              8   42[BANK0 ] long long 
  2028 ;;  llu             8    0        unsigned long long 
  2029 ;;  f               4    0        unsigned long long 
  2030 ;;  vp              3    0        PTR void 
  2031 ;;  ct              3    0        unsigned char [3]
  2032 ;;  cp              3    0        PTR unsigned char 
  2033 ;;  i               2    0        int 
  2034 ;;  done            2    0        int 
  2035 ;;  c               1    0        unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2   36[BANK0 ] int 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2045 ;;      Params:         0       6       0       0
  2046 ;;      Locals:         0       8       0       0
  2047 ;;      Temps:          2       0       0       0
  2048 ;;      Totals:         2      14       0       0
  2049 ;;Total ram usage:       16 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    8
  2052 ;; This function calls:
  2053 ;;		_dtoa
  2054 ;;		_fputc
  2055 ;; This function is called by:
  2056 ;;		_vfprintf
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text7
  2061  00078E                     __ptext7:
  2062                           	opt callstack 0
  2063  00078E                     _vfpfcnvrt:
  2064                           	opt callstack 19
  2065  00078E                     
  2066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2067  00078E  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2068  000792  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2069  000796  CFDE FFF6          	movff	postinc2,tblptrl
  2070  00079A  CFDD FFF7          	movff	postdec2,tblptrh
  2071  00079E                     	if	0	;tblptru may be non-zero
  2072  00079E                     	endif
  2073  00079E                     	if	0	;tblptru may be non-zero
  2074  00079E                     	endif
  2075  00079E  0008               	tblrd		*
  2076  0007A0  50F5               	movf	tablat,w,c
  2077  0007A2  0A25               	xorlw	37
  2078  0007A4  A4D8               	btfss	status,2,c
  2079  0007A6  EFD7  F003         	goto	u2071
  2080  0007AA  EFD9  F003         	goto	u2070
  2081  0007AE                     u2071:
  2082  0007AE  EF86  F004         	goto	l2595
  2083  0007B2                     u2070:
  2084  0007B2                     
  2085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2086  0007B2  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2087  0007B6  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2088  0007BA  2ADE               	incf	postinc2,f,c
  2089  0007BC  0E00               	movlw	0
  2090  0007BE  22DD               	addwfc	postdec2,f,c
  2091  0007C0                     
  2092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2093  0007C0  0E00               	movlw	0
  2094  0007C2  0100               	movlb	0	; () banked
  2095  0007C4  6FB3               	movwf	(_width+1)& (0+255),b
  2096  0007C6  0E00               	movlw	0
  2097  0007C8  6FB2               	movwf	_width& (0+255),b
  2098  0007CA  C0B2  F035         	movff	_width,_flags
  2099  0007CE  C0B3  F036         	movff	_width+1,_flags+1
  2100  0007D2                     
  2101                           ; BSR set to: 0
  2102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2103  0007D2  6833               	setf	_prec^0,c
  2104  0007D4  6834               	setf	(_prec+1)^0,c
  2105  0007D6                     
  2106                           ; BSR set to: 0
  2107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2108  0007D6  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2109  0007DA  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2110  0007DE  CFDE FFF6          	movff	postinc2,tblptrl
  2111  0007E2  CFDD FFF7          	movff	postdec2,tblptrh
  2112  0007E6                     	if	0	;tblptru may be non-zero
  2113  0007E6                     	endif
  2114  0007E6                     	if	0	;tblptru may be non-zero
  2115  0007E6                     	endif
  2116  0007E6  0008               	tblrd		*
  2117  0007E8  50F5               	movf	tablat,w,c
  2118  0007EA  0A64               	xorlw	100
  2119  0007EC  B4D8               	btfsc	status,2,c
  2120  0007EE  EFFB  F003         	goto	u2081
  2121  0007F2  EFFD  F003         	goto	u2080
  2122  0007F6                     u2081:
  2123  0007F6  EF0F  F004         	goto	l2573
  2124  0007FA                     u2080:
  2125  0007FA                     
  2126                           ; BSR set to: 0
  2127  0007FA  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2128  0007FE  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2129  000802  CFDE FFF6          	movff	postinc2,tblptrl
  2130  000806  CFDD FFF7          	movff	postdec2,tblptrh
  2131  00080A                     	if	0	;tblptru may be non-zero
  2132  00080A                     	endif
  2133  00080A                     	if	0	;tblptru may be non-zero
  2134  00080A                     	endif
  2135  00080A  0008               	tblrd		*
  2136  00080C  50F5               	movf	tablat,w,c
  2137  00080E  0A69               	xorlw	105
  2138  000810  A4D8               	btfss	status,2,c
  2139  000812  EF0D  F004         	goto	u2091
  2140  000816  EF0F  F004         	goto	u2090
  2141  00081A                     u2091:
  2142  00081A  EF4F  F004         	goto	l2579
  2143  00081E                     u2090:
  2144  00081E                     l2573:
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2148  00081E  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2149  000822  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2150  000826  2ADE               	incf	postinc2,f,c
  2151  000828  0E00               	movlw	0
  2152  00082A  22DD               	addwfc	postdec2,f,c
  2153                           
  2154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2155  00082C  C088  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2156  000830  C089  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2157  000834  CFDF F031          	movff	indf2,??_vfpfcnvrt
  2158  000838  0E02               	movlw	2
  2159  00083A  26DE               	addwf	postinc2,f,c
  2160  00083C  CFDF F032          	movff	indf2,??_vfpfcnvrt+1
  2161  000840  0E00               	movlw	0
  2162  000842  22DD               	addwfc	postdec2,f,c
  2163  000844  C031  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2164  000848  C032  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2165  00084C  CFDE F08A          	movff	postinc2,vfpfcnvrt@ll
  2166  000850  CFDD F08B          	movff	postdec2,vfpfcnvrt@ll+1
  2167  000854  0E00               	movlw	0
  2168  000856  BF8B               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2169  000858  0EFF               	movlw	-1
  2170  00085A  6F8C               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2171  00085C  6F8D               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2172  00085E  6F8E               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2173  000860  6F8F               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2174  000862  6F90               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2175  000864  6F91               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2176  000866                     
  2177                           ; BSR set to: 0
  2178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2179  000866  C084  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  2180  00086A  C085  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2181  00086E  C08A  F062         	movff	vfpfcnvrt@ll,dtoa@d
  2182  000872  C08B  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2183  000876  C08C  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2184  00087A  C08D  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2185  00087E  C08E  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2186  000882  C08F  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2187  000886  C090  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2188  00088A  C091  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2189  00088E  EC94  F000         	call	_dtoa	;wreg free
  2190  000892  C060  F084         	movff	?_dtoa,?_vfpfcnvrt
  2191  000896  C061  F085         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2192  00089A  EFA1  F004         	goto	l355
  2193  00089E                     l2579:
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2197  00089E  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2198  0008A2  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2199  0008A6  CFDE FFF6          	movff	postinc2,tblptrl
  2200  0008AA  CFDD FFF7          	movff	postdec2,tblptrh
  2201  0008AE                     	if	0	;tblptru may be non-zero
  2202  0008AE                     	endif
  2203  0008AE                     	if	0	;tblptru may be non-zero
  2204  0008AE                     	endif
  2205  0008AE  0008               	tblrd		*
  2206  0008B0  50F5               	movf	tablat,w,c
  2207  0008B2  0A25               	xorlw	37
  2208  0008B4  A4D8               	btfss	status,2,c
  2209  0008B6  EF5F  F004         	goto	u2101
  2210  0008BA  EF61  F004         	goto	u2100
  2211  0008BE                     u2101:
  2212  0008BE  EF79  F004         	goto	l2589
  2213  0008C2                     u2100:
  2214  0008C2                     
  2215                           ; BSR set to: 0
  2216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2217  0008C2  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2218  0008C6  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2219  0008CA  2ADE               	incf	postinc2,f,c
  2220  0008CC  0E00               	movlw	0
  2221  0008CE  22DD               	addwfc	postdec2,f,c
  2222  0008D0                     
  2223                           ; BSR set to: 0
  2224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2225  0008D0  0E00               	movlw	0
  2226  0008D2  6E17               	movwf	(fputc@c+1)^0,c
  2227  0008D4  0E25               	movlw	37
  2228  0008D6  6E16               	movwf	fputc@c^0,c
  2229  0008D8  C084  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2230  0008DC  C085  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2231  0008E0  EC18  F006         	call	_fputc	;wreg free
  2232  0008E4                     l2585:
  2233                           
  2234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2235  0008E4  0E00               	movlw	0
  2236  0008E6  0100               	movlb	0	; () banked
  2237  0008E8  6F85               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2238  0008EA  0E01               	movlw	1
  2239  0008EC  6F84               	movwf	?_vfpfcnvrt& (0+255),b
  2240  0008EE  EFA1  F004         	goto	l355
  2241  0008F2                     l2589:
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2245  0008F2  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2246  0008F6  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2247  0008FA  2ADE               	incf	postinc2,f,c
  2248  0008FC  0E00               	movlw	0
  2249  0008FE  22DD               	addwfc	postdec2,f,c
  2250  000900                     
  2251                           ; BSR set to: 0
  2252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2253  000900  0E00               	movlw	0
  2254  000902  6F85               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2255  000904  0E00               	movlw	0
  2256  000906  6F84               	movwf	?_vfpfcnvrt& (0+255),b
  2257  000908  EFA1  F004         	goto	l355
  2258  00090C                     l2595:
  2259                           
  2260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2261  00090C  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2262  000910  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2263  000914  CFDE FFF6          	movff	postinc2,tblptrl
  2264  000918  CFDD FFF7          	movff	postdec2,tblptrh
  2265  00091C                     	if	0	;tblptru may be non-zero
  2266  00091C                     	endif
  2267  00091C                     	if	0	;tblptru may be non-zero
  2268  00091C                     	endif
  2269  00091C  0008               	tblrd		*
  2270  00091E  50F5               	movf	tablat,w,c
  2271  000920  6E16               	movwf	fputc@c^0,c
  2272  000922  6A17               	clrf	(fputc@c+1)^0,c
  2273  000924  C084  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2274  000928  C085  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2275  00092C  EC18  F006         	call	_fputc	;wreg free
  2276  000930                     
  2277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2278  000930  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2279  000934  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2280  000938  2ADE               	incf	postinc2,f,c
  2281  00093A  0E00               	movlw	0
  2282  00093C  22DD               	addwfc	postdec2,f,c
  2283  00093E  EF72  F004         	goto	l2585
  2284  000942                     l355:
  2285  000942  0012               	return		;funcret
  2286  000944                     __end_of_vfpfcnvrt:
  2287                           	opt callstack 0
  2288                           
  2289 ;; *************** function _dtoa *****************
  2290 ;; Defined at:
  2291 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2294 ;;		 -> sprintf@f(6), 
  2295 ;;  d               8    2[BANK0 ] long long 
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  n               8   26[BANK0 ] long long 
  2298 ;;  i               2   34[BANK0 ] int 
  2299 ;;  s               2   24[BANK0 ] int 
  2300 ;;  w               2   22[BANK0 ] int 
  2301 ;;  p               2   20[BANK0 ] int 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  2    0[BANK0 ] int 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2311 ;;      Params:         0      10       0       0
  2312 ;;      Locals:         0      18       0       0
  2313 ;;      Temps:          0       8       0       0
  2314 ;;      Totals:         0      36       0       0
  2315 ;;Total ram usage:       36 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    7
  2318 ;; This function calls:
  2319 ;;		___aodiv
  2320 ;;		___aomod
  2321 ;;		_abs
  2322 ;;		_pad
  2323 ;; This function is called by:
  2324 ;;		_vfpfcnvrt
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text8
  2329  000128                     __ptext8:
  2330                           	opt callstack 0
  2331  000128                     _dtoa:
  2332                           	opt callstack 19
  2333  000128                     
  2334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2335  000128  C062  F07A         	movff	dtoa@d,dtoa@n
  2336  00012C  C063  F07B         	movff	dtoa@d+1,dtoa@n+1
  2337  000130  C064  F07C         	movff	dtoa@d+2,dtoa@n+2
  2338  000134  C065  F07D         	movff	dtoa@d+3,dtoa@n+3
  2339  000138  C066  F07E         	movff	dtoa@d+4,dtoa@n+4
  2340  00013C  C067  F07F         	movff	dtoa@d+5,dtoa@n+5
  2341  000140  C068  F080         	movff	dtoa@d+6,dtoa@n+6
  2342  000144  C069  F081         	movff	dtoa@d+7,dtoa@n+7
  2343  000148                     
  2344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2345  000148  0100               	movlb	0	; () banked
  2346  00014A  BF81               	btfsc	(dtoa@n+7)& (0+255),7,b
  2347  00014C  EFAA  F000         	goto	u1911
  2348  000150  EFAD  F000         	goto	u1910
  2349  000154                     u1911:
  2350  000154  0E01               	movlw	1
  2351  000156  EFAE  F000         	goto	u1920
  2352  00015A                     u1910:
  2353  00015A  0E00               	movlw	0
  2354  00015C                     u1920:
  2355  00015C  6F78               	movwf	dtoa@s& (0+255),b
  2356  00015E  6B79               	clrf	(dtoa@s+1)& (0+255),b
  2357                           
  2358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2359  000160  5178               	movf	dtoa@s& (0+255),w,b
  2360  000162  1179               	iorwf	(dtoa@s+1)& (0+255),w,b
  2361  000164  B4D8               	btfsc	status,2,c
  2362  000166  EFB7  F000         	goto	u1931
  2363  00016A  EFB9  F000         	goto	u1930
  2364  00016E                     u1931:
  2365  00016E  EFC9  F000         	goto	l2495
  2366  000172                     u1930:
  2367  000172                     
  2368                           ; BSR set to: 0
  2369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2370  000172  1F81               	comf	(dtoa@n+7)& (0+255),f,b
  2371  000174  1F80               	comf	(dtoa@n+6)& (0+255),f,b
  2372  000176  1F7F               	comf	(dtoa@n+5)& (0+255),f,b
  2373  000178  1F7E               	comf	(dtoa@n+4)& (0+255),f,b
  2374  00017A  1F7D               	comf	(dtoa@n+3)& (0+255),f,b
  2375  00017C  1F7C               	comf	(dtoa@n+2)& (0+255),f,b
  2376  00017E  1F7B               	comf	(dtoa@n+1)& (0+255),f,b
  2377  000180  6D7A               	negf	dtoa@n& (0+255),b
  2378  000182  0E00               	movlw	0
  2379  000184  237B               	addwfc	(dtoa@n+1)& (0+255),f,b
  2380  000186  237C               	addwfc	(dtoa@n+2)& (0+255),f,b
  2381  000188  237D               	addwfc	(dtoa@n+3)& (0+255),f,b
  2382  00018A  237E               	addwfc	(dtoa@n+4)& (0+255),f,b
  2383  00018C  237F               	addwfc	(dtoa@n+5)& (0+255),f,b
  2384  00018E  2380               	addwfc	(dtoa@n+6)& (0+255),f,b
  2385  000190  2381               	addwfc	(dtoa@n+7)& (0+255),f,b
  2386  000192                     l2495:
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2390  000192  BE34               	btfsc	(_prec+1)^0,7,c
  2391  000194  EFCE  F000         	goto	u1941
  2392  000198  EFD0  F000         	goto	u1940
  2393  00019C                     u1941:
  2394  00019C  EFD1  F000         	goto	l2499
  2395  0001A0                     u1940:
  2396  0001A0                     
  2397                           ; BSR set to: 0
  2398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2399  0001A0  9235               	bcf	_flags^0,1,c
  2400  0001A2                     l2499:
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2404  0001A2  BE34               	btfsc	(_prec+1)^0,7,c
  2405  0001A4  EFDE  F000         	goto	u1950
  2406  0001A8  5034               	movf	(_prec+1)^0,w,c
  2407  0001AA  E106               	bnz	u1951
  2408  0001AC  0433               	decf	_prec^0,w,c
  2409  0001AE  B0D8               	btfsc	status,0,c
  2410  0001B0  EFDC  F000         	goto	u1951
  2411  0001B4  EFDE  F000         	goto	u1950
  2412  0001B8                     u1951:
  2413  0001B8  EFE4  F000         	goto	l328
  2414  0001BC                     u1950:
  2415  0001BC                     
  2416                           ; BSR set to: 0
  2417  0001BC  0E00               	movlw	0
  2418  0001BE  6F75               	movwf	(dtoa@p+1)& (0+255),b
  2419  0001C0  0E01               	movlw	1
  2420  0001C2  6F74               	movwf	dtoa@p& (0+255),b
  2421  0001C4  EFE8  F000         	goto	l330
  2422  0001C8                     l328:
  2423                           
  2424                           ; BSR set to: 0
  2425  0001C8  C033  F074         	movff	_prec,dtoa@p
  2426  0001CC  C034  F075         	movff	_prec+1,dtoa@p+1
  2427  0001D0                     l330:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2431  0001D0  C0B2  F076         	movff	_width,dtoa@w
  2432  0001D4  C0B3  F077         	movff	_width+1,dtoa@w+1
  2433  0001D8                     
  2434                           ; BSR set to: 0
  2435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2436  0001D8  5178               	movf	dtoa@s& (0+255),w,b
  2437  0001DA  1179               	iorwf	(dtoa@s+1)& (0+255),w,b
  2438  0001DC  A4D8               	btfss	status,2,c
  2439  0001DE  EFF3  F000         	goto	u1961
  2440  0001E2  EFF5  F000         	goto	u1960
  2441  0001E6                     u1961:
  2442  0001E6  EFFC  F000         	goto	l2507
  2443  0001EA                     u1960:
  2444  0001EA                     
  2445                           ; BSR set to: 0
  2446  0001EA  A435               	btfss	_flags^0,2,c
  2447  0001EC  EFFA  F000         	goto	u1971
  2448  0001F0  EFFC  F000         	goto	u1970
  2449  0001F4                     u1971:
  2450  0001F4  EFFF  F000         	goto	l2509
  2451  0001F8                     u1970:
  2452  0001F8                     l2507:
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2456  0001F8  0776               	decf	dtoa@w& (0+255),f,b
  2457  0001FA  A0D8               	btfss	status,0,c
  2458  0001FC  0777               	decf	(dtoa@w+1)& (0+255),f,b
  2459  0001FE                     l2509:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2463  0001FE  0E00               	movlw	0
  2464  000200  6F83               	movwf	(dtoa@i+1)& (0+255),b
  2465  000202  0E1F               	movlw	31
  2466  000204  6F82               	movwf	dtoa@i& (0+255),b
  2467  000206                     
  2468                           ; BSR set to: 0
  2469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2470  000206  0E00               	movlw	0
  2471  000208  6FD6               	movwf	(_dbuf+31)& (0+255),b
  2472                           
  2473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2474  00020A  EF84  F001         	goto	l2523
  2475  00020E                     l2513:
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2479  00020E  0782               	decf	dtoa@i& (0+255),f,b
  2480  000210  A0D8               	btfss	status,0,c
  2481  000212  0783               	decf	(dtoa@i+1)& (0+255),f,b
  2482  000214                     
  2483                           ; BSR set to: 0
  2484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2485  000214  0EB7               	movlw	low _dbuf
  2486  000216  2582               	addwf	dtoa@i& (0+255),w,b
  2487  000218  6ED9               	movwf	fsr2l,c
  2488  00021A  0E00               	movlw	high _dbuf
  2489  00021C  2183               	addwfc	(dtoa@i+1)& (0+255),w,b
  2490  00021E  6EDA               	movwf	fsr2h,c
  2491  000220  C07A  F016         	movff	dtoa@n,___aomod@dividend
  2492  000224  C07B  F017         	movff	dtoa@n+1,___aomod@dividend+1
  2493  000228  C07C  F018         	movff	dtoa@n+2,___aomod@dividend+2
  2494  00022C  C07D  F019         	movff	dtoa@n+3,___aomod@dividend+3
  2495  000230  C07E  F01A         	movff	dtoa@n+4,___aomod@dividend+4
  2496  000234  C07F  F01B         	movff	dtoa@n+5,___aomod@dividend+5
  2497  000238  C080  F01C         	movff	dtoa@n+6,___aomod@dividend+6
  2498  00023C  C081  F01D         	movff	dtoa@n+7,___aomod@dividend+7
  2499  000240  0E0A               	movlw	10
  2500  000242  6E1E               	movwf	___aomod@divisor^0,c
  2501  000244  0E00               	movlw	0
  2502  000246  6E1F               	movwf	(___aomod@divisor+1)^0,c
  2503  000248  0E00               	movlw	0
  2504  00024A  6E20               	movwf	(___aomod@divisor+2)^0,c
  2505  00024C  0E00               	movlw	0
  2506  00024E  6E21               	movwf	(___aomod@divisor+3)^0,c
  2507  000250  0E00               	movlw	0
  2508  000252  6E22               	movwf	(___aomod@divisor+4)^0,c
  2509  000254  0E00               	movlw	0
  2510  000256  6E23               	movwf	(___aomod@divisor+5)^0,c
  2511  000258  0E00               	movlw	0
  2512  00025A  6E24               	movwf	(___aomod@divisor+6)^0,c
  2513  00025C  0E00               	movlw	0
  2514  00025E  6E25               	movwf	(___aomod@divisor+7)^0,c
  2515  000260  EC66  F005         	call	___aomod	;wreg free
  2516  000264  C016  F06A         	movff	?___aomod,??_dtoa
  2517  000268  C017  F06B         	movff	?___aomod+1,??_dtoa+1
  2518  00026C  C018  F06C         	movff	?___aomod+2,??_dtoa+2
  2519  000270  C019  F06D         	movff	?___aomod+3,??_dtoa+3
  2520  000274  C01A  F06E         	movff	?___aomod+4,??_dtoa+4
  2521  000278  C01B  F06F         	movff	?___aomod+5,??_dtoa+5
  2522  00027C  C01C  F070         	movff	?___aomod+6,??_dtoa+6
  2523  000280  C01D  F071         	movff	?___aomod+7,??_dtoa+7
  2524  000284  C06A  F028         	movff	??_dtoa,abs@a
  2525  000288  C06C  F029         	movff	??_dtoa+2,abs@a+1
  2526  00028C  EC57  F009         	call	_abs	;wreg free
  2527  000290  5028               	movf	?_abs^0,w,c
  2528  000292  0F30               	addlw	48
  2529  000294  6EDF               	movwf	indf2,c
  2530  000296                     
  2531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2532  000296  0100               	movlb	0	; () banked
  2533  000298  0774               	decf	dtoa@p& (0+255),f,b
  2534  00029A  A0D8               	btfss	status,0,c
  2535  00029C  0775               	decf	(dtoa@p+1)& (0+255),f,b
  2536  00029E                     
  2537                           ; BSR set to: 0
  2538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2539  00029E  0776               	decf	dtoa@w& (0+255),f,b
  2540  0002A0  A0D8               	btfss	status,0,c
  2541  0002A2  0777               	decf	(dtoa@w+1)& (0+255),f,b
  2542  0002A4                     
  2543                           ; BSR set to: 0
  2544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2545  0002A4  C07A  F016         	movff	dtoa@n,___aodiv@dividend
  2546  0002A8  C07B  F017         	movff	dtoa@n+1,___aodiv@dividend+1
  2547  0002AC  C07C  F018         	movff	dtoa@n+2,___aodiv@dividend+2
  2548  0002B0  C07D  F019         	movff	dtoa@n+3,___aodiv@dividend+3
  2549  0002B4  C07E  F01A         	movff	dtoa@n+4,___aodiv@dividend+4
  2550  0002B8  C07F  F01B         	movff	dtoa@n+5,___aodiv@dividend+5
  2551  0002BC  C080  F01C         	movff	dtoa@n+6,___aodiv@dividend+6
  2552  0002C0  C081  F01D         	movff	dtoa@n+7,___aodiv@dividend+7
  2553  0002C4  0E0A               	movlw	10
  2554  0002C6  6E1E               	movwf	___aodiv@divisor^0,c
  2555  0002C8  0E00               	movlw	0
  2556  0002CA  6E1F               	movwf	(___aodiv@divisor+1)^0,c
  2557  0002CC  0E00               	movlw	0
  2558  0002CE  6E20               	movwf	(___aodiv@divisor+2)^0,c
  2559  0002D0  0E00               	movlw	0
  2560  0002D2  6E21               	movwf	(___aodiv@divisor+3)^0,c
  2561  0002D4  0E00               	movlw	0
  2562  0002D6  6E22               	movwf	(___aodiv@divisor+4)^0,c
  2563  0002D8  0E00               	movlw	0
  2564  0002DA  6E23               	movwf	(___aodiv@divisor+5)^0,c
  2565  0002DC  0E00               	movlw	0
  2566  0002DE  6E24               	movwf	(___aodiv@divisor+6)^0,c
  2567  0002E0  0E00               	movlw	0
  2568  0002E2  6E25               	movwf	(___aodiv@divisor+7)^0,c
  2569  0002E4  ECA2  F004         	call	___aodiv	;wreg free
  2570  0002E8  C016  F07A         	movff	?___aodiv,dtoa@n
  2571  0002EC  C017  F07B         	movff	?___aodiv+1,dtoa@n+1
  2572  0002F0  C018  F07C         	movff	?___aodiv+2,dtoa@n+2
  2573  0002F4  C019  F07D         	movff	?___aodiv+3,dtoa@n+3
  2574  0002F8  C01A  F07E         	movff	?___aodiv+4,dtoa@n+4
  2575  0002FC  C01B  F07F         	movff	?___aodiv+5,dtoa@n+5
  2576  000300  C01C  F080         	movff	?___aodiv+6,dtoa@n+6
  2577  000304  C01D  F081         	movff	?___aodiv+7,dtoa@n+7
  2578  000308                     l2523:
  2579                           
  2580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2581  000308  0100               	movlb	0	; () banked
  2582  00030A  BF83               	btfsc	(dtoa@i+1)& (0+255),7,b
  2583  00030C  EF90  F001         	goto	u1981
  2584  000310  5183               	movf	(dtoa@i+1)& (0+255),w,b
  2585  000312  E108               	bnz	u1980
  2586  000314  0582               	decf	dtoa@i& (0+255),w,b
  2587  000316  A0D8               	btfss	status,0,c
  2588  000318  EF90  F001         	goto	u1981
  2589  00031C  EF92  F001         	goto	u1980
  2590  000320                     u1981:
  2591  000320  EFC2  F001         	goto	l2533
  2592  000324                     u1980:
  2593  000324                     
  2594                           ; BSR set to: 0
  2595  000324  517A               	movf	dtoa@n& (0+255),w,b
  2596  000326  117B               	iorwf	(dtoa@n+1)& (0+255),w,b
  2597  000328  117C               	iorwf	(dtoa@n+2)& (0+255),w,b
  2598  00032A  117D               	iorwf	(dtoa@n+3)& (0+255),w,b
  2599  00032C  117E               	iorwf	(dtoa@n+4)& (0+255),w,b
  2600  00032E  117F               	iorwf	(dtoa@n+5)& (0+255),w,b
  2601  000330  1180               	iorwf	(dtoa@n+6)& (0+255),w,b
  2602  000332  1181               	iorwf	(dtoa@n+7)& (0+255),w,b
  2603  000334  A4D8               	btfss	status,2,c
  2604  000336  EF9F  F001         	goto	u1991
  2605  00033A  EFA1  F001         	goto	u1990
  2606  00033E                     u1991:
  2607  00033E  EF07  F001         	goto	l2513
  2608  000342                     u1990:
  2609  000342                     
  2610                           ; BSR set to: 0
  2611  000342  BF75               	btfsc	(dtoa@p+1)& (0+255),7,b
  2612  000344  EFAE  F001         	goto	u2000
  2613  000348  5175               	movf	(dtoa@p+1)& (0+255),w,b
  2614  00034A  E106               	bnz	u2001
  2615  00034C  0574               	decf	dtoa@p& (0+255),w,b
  2616  00034E  B0D8               	btfsc	status,0,c
  2617  000350  EFAC  F001         	goto	u2001
  2618  000354  EFAE  F001         	goto	u2000
  2619  000358                     u2001:
  2620  000358  EF07  F001         	goto	l2513
  2621  00035C                     u2000:
  2622  00035C                     
  2623                           ; BSR set to: 0
  2624  00035C  BF77               	btfsc	(dtoa@w+1)& (0+255),7,b
  2625  00035E  EFB9  F001         	goto	u2011
  2626  000362  5177               	movf	(dtoa@w+1)& (0+255),w,b
  2627  000364  E108               	bnz	u2010
  2628  000366  0576               	decf	dtoa@w& (0+255),w,b
  2629  000368  A0D8               	btfss	status,0,c
  2630  00036A  EFB9  F001         	goto	u2011
  2631  00036E  EFBB  F001         	goto	u2010
  2632  000372                     u2011:
  2633  000372  EFC2  F001         	goto	l2533
  2634  000376                     u2010:
  2635  000376                     
  2636                           ; BSR set to: 0
  2637  000376  B235               	btfsc	_flags^0,1,c
  2638  000378  EFC0  F001         	goto	u2021
  2639  00037C  EFC2  F001         	goto	u2020
  2640  000380                     u2021:
  2641  000380  EF07  F001         	goto	l2513
  2642  000384                     u2020:
  2643  000384                     l2533:
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2647  000384  5178               	movf	dtoa@s& (0+255),w,b
  2648  000386  1179               	iorwf	(dtoa@s+1)& (0+255),w,b
  2649  000388  A4D8               	btfss	status,2,c
  2650  00038A  EFC9  F001         	goto	u2031
  2651  00038E  EFCB  F001         	goto	u2030
  2652  000392                     u2031:
  2653  000392  EFD2  F001         	goto	l2537
  2654  000396                     u2030:
  2655  000396                     
  2656                           ; BSR set to: 0
  2657  000396  A435               	btfss	_flags^0,2,c
  2658  000398  EFD0  F001         	goto	u2041
  2659  00039C  EFD2  F001         	goto	u2040
  2660  0003A0                     u2041:
  2661  0003A0  EFF0  F001         	goto	l2547
  2662  0003A4                     u2040:
  2663  0003A4                     l2537:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2667  0003A4  0782               	decf	dtoa@i& (0+255),f,b
  2668  0003A6  A0D8               	btfss	status,0,c
  2669  0003A8  0783               	decf	(dtoa@i+1)& (0+255),f,b
  2670  0003AA                     
  2671                           ; BSR set to: 0
  2672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2673  0003AA  5178               	movf	dtoa@s& (0+255),w,b
  2674  0003AC  1179               	iorwf	(dtoa@s+1)& (0+255),w,b
  2675  0003AE  A4D8               	btfss	status,2,c
  2676  0003B0  EFDC  F001         	goto	u2051
  2677  0003B4  EFDE  F001         	goto	u2050
  2678  0003B8                     u2051:
  2679  0003B8  EFE4  F001         	goto	l2543
  2680  0003BC                     u2050:
  2681  0003BC                     
  2682                           ; BSR set to: 0
  2683  0003BC  0E00               	movlw	0
  2684  0003BE  6F73               	movwf	(_dtoa$1537+1)& (0+255),b
  2685  0003C0  0E2B               	movlw	43
  2686  0003C2  6F72               	movwf	_dtoa$1537& (0+255),b
  2687  0003C4  EFE8  F001         	goto	l2545
  2688  0003C8                     l2543:
  2689                           
  2690                           ; BSR set to: 0
  2691  0003C8  0E00               	movlw	0
  2692  0003CA  6F73               	movwf	(_dtoa$1537+1)& (0+255),b
  2693  0003CC  0E2D               	movlw	45
  2694  0003CE  6F72               	movwf	_dtoa$1537& (0+255),b
  2695  0003D0                     l2545:
  2696                           
  2697                           ; BSR set to: 0
  2698  0003D0  0EB7               	movlw	low _dbuf
  2699  0003D2  2582               	addwf	dtoa@i& (0+255),w,b
  2700  0003D4  6ED9               	movwf	fsr2l,c
  2701  0003D6  0E00               	movlw	high _dbuf
  2702  0003D8  2183               	addwfc	(dtoa@i+1)& (0+255),w,b
  2703  0003DA  6EDA               	movwf	fsr2h,c
  2704  0003DC  C072  FFDF         	movff	_dtoa$1537,indf2
  2705  0003E0                     l2547:
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2709  0003E0  C060  F026         	movff	dtoa@fp,pad@fp
  2710  0003E4  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  2711  0003E8  0EB7               	movlw	low _dbuf
  2712  0003EA  2582               	addwf	dtoa@i& (0+255),w,b
  2713  0003EC  6E28               	movwf	pad@buf^0,c
  2714  0003EE  0E00               	movlw	high _dbuf
  2715  0003F0  2183               	addwfc	(dtoa@i+1)& (0+255),w,b
  2716  0003F2  6E29               	movwf	(pad@buf+1)^0,c
  2717  0003F4  C076  F02A         	movff	dtoa@w,pad@p
  2718  0003F8  C077  F02B         	movff	dtoa@w+1,pad@p+1
  2719  0003FC  EC7D  F006         	call	_pad	;wreg free
  2720  000400  C026  F060         	movff	?_pad,?_dtoa
  2721  000404  C027  F061         	movff	?_pad+1,?_dtoa+1
  2722  000408  0012               	return		;funcret
  2723  00040A                     __end_of_dtoa:
  2724                           	opt callstack 0
  2725                           
  2726 ;; *************** function _pad *****************
  2727 ;; Defined at:
  2728 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  2731 ;;		 -> sprintf@f(6), 
  2732 ;;  buf             2   39[COMRAM] PTR unsigned char 
  2733 ;;		 -> dbuf(32), 
  2734 ;;  p               2   41[COMRAM] int 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  w               2   46[COMRAM] int 
  2737 ;;  i               2   44[COMRAM] int 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  2   37[COMRAM] int 
  2740 ;; Registers used:
  2741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2747 ;;      Params:         6       0       0       0
  2748 ;;      Locals:         4       0       0       0
  2749 ;;      Temps:          1       0       0       0
  2750 ;;      Totals:        11       0       0       0
  2751 ;;Total ram usage:       11 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    6
  2754 ;; This function calls:
  2755 ;;		_fputc
  2756 ;;		_fputs
  2757 ;;		_strlen
  2758 ;; This function is called by:
  2759 ;;		_dtoa
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text9
  2764  000CFA                     __ptext9:
  2765                           	opt callstack 0
  2766  000CFA                     _pad:
  2767                           	opt callstack 19
  2768  000CFA                     
  2769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2770  000CFA  A035               	btfss	_flags^0,0,c
  2771  000CFC  EF82  F006         	goto	u1731
  2772  000D00  EF84  F006         	goto	u1730
  2773  000D04                     u1731:
  2774  000D04  EF8E  F006         	goto	l2387
  2775  000D08                     u1730:
  2776  000D08                     
  2777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2778  000D08  C028  F01F         	movff	pad@buf,fputs@s
  2779  000D0C  C029  F020         	movff	pad@buf+1,fputs@s+1
  2780  000D10  C026  F021         	movff	pad@fp,fputs@fp
  2781  000D14  C027  F022         	movff	pad@fp+1,fputs@fp+1
  2782  000D18  EC35  F009         	call	_fputs	;wreg free
  2783  000D1C                     l2387:
  2784                           
  2785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2786  000D1C  BE2B               	btfsc	(pad@p+1)^0,7,c
  2787  000D1E  EF93  F006         	goto	u1741
  2788  000D22  EF95  F006         	goto	u1740
  2789  000D26                     u1741:
  2790  000D26  EF9B  F006         	goto	l2391
  2791  000D2A                     u1740:
  2792  000D2A  C02A  F02F         	movff	pad@p,pad@w
  2793  000D2E  C02B  F030         	movff	pad@p+1,pad@w+1
  2794  000D32  EF9F  F006         	goto	l317
  2795  000D36                     l2391:
  2796  000D36  0E00               	movlw	0
  2797  000D38  6E30               	movwf	(pad@w+1)^0,c
  2798  000D3A  0E00               	movlw	0
  2799  000D3C  6E2F               	movwf	pad@w^0,c
  2800  000D3E                     l317:
  2801                           
  2802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2803  000D3E  0E00               	movlw	0
  2804  000D40  6E2E               	movwf	(pad@i+1)^0,c
  2805  000D42  0E00               	movlw	0
  2806  000D44  6E2D               	movwf	pad@i^0,c
  2807                           
  2808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2809  000D46  EFB1  F006         	goto	l2397
  2810  000D4A                     l2393:
  2811                           
  2812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2813  000D4A  0E00               	movlw	0
  2814  000D4C  6E17               	movwf	(fputc@c+1)^0,c
  2815  000D4E  0E20               	movlw	32
  2816  000D50  6E16               	movwf	fputc@c^0,c
  2817  000D52  C026  F018         	movff	pad@fp,fputc@fp
  2818  000D56  C027  F019         	movff	pad@fp+1,fputc@fp+1
  2819  000D5A  EC18  F006         	call	_fputc	;wreg free
  2820  000D5E                     
  2821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2822  000D5E  4A2D               	infsnz	pad@i^0,f,c
  2823  000D60  2A2E               	incf	(pad@i+1)^0,f,c
  2824  000D62                     l2397:
  2825                           
  2826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2827  000D62  502F               	movf	pad@w^0,w,c
  2828  000D64  5C2D               	subwf	pad@i^0,w,c
  2829  000D66  502E               	movf	(pad@i+1)^0,w,c
  2830  000D68  0A80               	xorlw	128
  2831  000D6A  6E2C               	movwf	??_pad^0,c
  2832  000D6C  5030               	movf	(pad@w+1)^0,w,c
  2833  000D6E  0A80               	xorlw	128
  2834  000D70  582C               	subwfb	??_pad^0,w,c
  2835  000D72  A0D8               	btfss	status,0,c
  2836  000D74  EFBE  F006         	goto	u1751
  2837  000D78  EFC0  F006         	goto	u1750
  2838  000D7C                     u1751:
  2839  000D7C  EFA5  F006         	goto	l2393
  2840  000D80                     u1750:
  2841  000D80                     
  2842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2843  000D80  B035               	btfsc	_flags^0,0,c
  2844  000D82  EFC5  F006         	goto	u1761
  2845  000D86  EFC7  F006         	goto	u1760
  2846  000D8A                     u1761:
  2847  000D8A  EFD1  F006         	goto	l2401
  2848  000D8E                     u1760:
  2849  000D8E                     
  2850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2851  000D8E  C028  F01F         	movff	pad@buf,fputs@s
  2852  000D92  C029  F020         	movff	pad@buf+1,fputs@s+1
  2853  000D96  C026  F021         	movff	pad@fp,fputs@fp
  2854  000D9A  C027  F022         	movff	pad@fp+1,fputs@fp+1
  2855  000D9E  EC35  F009         	call	_fputs	;wreg free
  2856  000DA2                     l2401:
  2857                           
  2858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2859  000DA2  C028  F016         	movff	pad@buf,strlen@s
  2860  000DA6  C029  F017         	movff	pad@buf+1,strlen@s+1
  2861  000DAA  ECB3  F009         	call	_strlen	;wreg free
  2862  000DAE  502F               	movf	pad@w^0,w,c
  2863  000DB0  2416               	addwf	?_strlen^0,w,c
  2864  000DB2  6E26               	movwf	?_pad^0,c
  2865  000DB4  5030               	movf	(pad@w+1)^0,w,c
  2866  000DB6  2017               	addwfc	(?_strlen+1)^0,w,c
  2867  000DB8  6E27               	movwf	(?_pad+1)^0,c
  2868  000DBA  0012               	return		;funcret
  2869  000DBC                     __end_of_pad:
  2870                           	opt callstack 0
  2871                           
  2872 ;; *************** function _strlen *****************
  2873 ;; Defined at:
  2874 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2877 ;;		 -> dbuf(32), 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  a               2   23[COMRAM] PTR const unsigned char 
  2880 ;;		 -> dbuf(32), 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  2   21[COMRAM] unsigned int 
  2883 ;; Registers used:
  2884 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2890 ;;      Params:         2       0       0       0
  2891 ;;      Locals:         2       0       0       0
  2892 ;;      Temps:          0       0       0       0
  2893 ;;      Totals:         4       0       0       0
  2894 ;;Total ram usage:        4 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    3
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_pad
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text10
  2905  001366                     __ptext10:
  2906                           	opt callstack 0
  2907  001366                     _strlen:
  2908                           	opt callstack 21
  2909  001366  C016  F018         	movff	strlen@s,strlen@a
  2910  00136A  C017  F019         	movff	strlen@s+1,strlen@a+1
  2911  00136E  EFBB  F009         	goto	l2377
  2912  001372                     l2375:
  2913  001372  4A16               	infsnz	strlen@s^0,f,c
  2914  001374  2A17               	incf	(strlen@s+1)^0,f,c
  2915  001376                     l2377:
  2916  001376  C016  FFD9         	movff	strlen@s,fsr2l
  2917  00137A  C017  FFDA         	movff	strlen@s+1,fsr2h
  2918  00137E  50DF               	movf	indf2,w,c
  2919  001380  A4D8               	btfss	status,2,c
  2920  001382  EFC5  F009         	goto	u1721
  2921  001386  EFC7  F009         	goto	u1720
  2922  00138A                     u1721:
  2923  00138A  EFB9  F009         	goto	l2375
  2924  00138E                     u1720:
  2925  00138E  5018               	movf	strlen@a^0,w,c
  2926  001390  5C16               	subwf	strlen@s^0,w,c
  2927  001392  6E16               	movwf	?_strlen^0,c
  2928  001394  5019               	movf	(strlen@a+1)^0,w,c
  2929  001396  5817               	subwfb	(strlen@s+1)^0,w,c
  2930  001398  6E17               	movwf	(?_strlen+1)^0,c
  2931  00139A  0012               	return		;funcret
  2932  00139C                     __end_of_strlen:
  2933                           	opt callstack 0
  2934                           
  2935 ;; *************** function _fputs *****************
  2936 ;; Defined at:
  2937 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  s               2   30[COMRAM] PTR const unsigned char 
  2940 ;;		 -> dbuf(32), 
  2941 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  2942 ;;		 -> sprintf@f(6), 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  i               2   35[COMRAM] int 
  2945 ;;  c               1   34[COMRAM] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  2   30[COMRAM] int 
  2948 ;; Registers used:
  2949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2955 ;;      Params:         4       0       0       0
  2956 ;;      Locals:         3       0       0       0
  2957 ;;      Temps:          0       0       0       0
  2958 ;;      Totals:         7       0       0       0
  2959 ;;Total ram usage:        7 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    5
  2962 ;; This function calls:
  2963 ;;		_fputc
  2964 ;; This function is called by:
  2965 ;;		_pad
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text11
  2970  00126A                     __ptext11:
  2971                           	opt callstack 0
  2972  00126A                     _fputs:
  2973                           	opt callstack 19
  2974  00126A  0E00               	movlw	0
  2975  00126C  6E25               	movwf	(fputs@i+1)^0,c
  2976  00126E  0E00               	movlw	0
  2977  001270  6E24               	movwf	fputs@i^0,c
  2978  001272  EF46  F009         	goto	l2371
  2979  001276                     l2367:
  2980  001276  C023  F016         	movff	fputs@c,fputc@c
  2981  00127A  6A17               	clrf	(fputc@c+1)^0,c
  2982  00127C  C021  F018         	movff	fputs@fp,fputc@fp
  2983  001280  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  2984  001284  EC18  F006         	call	_fputc	;wreg free
  2985  001288  4A24               	infsnz	fputs@i^0,f,c
  2986  00128A  2A25               	incf	(fputs@i+1)^0,f,c
  2987  00128C                     l2371:
  2988  00128C  5024               	movf	fputs@i^0,w,c
  2989  00128E  241F               	addwf	fputs@s^0,w,c
  2990  001290  6ED9               	movwf	fsr2l,c
  2991  001292  5025               	movf	(fputs@i+1)^0,w,c
  2992  001294  2020               	addwfc	(fputs@s+1)^0,w,c
  2993  001296  6EDA               	movwf	fsr2h,c
  2994  001298  50DF               	movf	indf2,w,c
  2995  00129A  6E23               	movwf	fputs@c^0,c
  2996  00129C  5023               	movf	fputs@c^0,w,c
  2997  00129E  A4D8               	btfss	status,2,c
  2998  0012A0  EF54  F009         	goto	u1711
  2999  0012A4  EF56  F009         	goto	u1710
  3000  0012A8                     u1711:
  3001  0012A8  EF3B  F009         	goto	l2367
  3002  0012AC                     u1710:
  3003  0012AC  0012               	return		;funcret
  3004  0012AE                     __end_of_fputs:
  3005                           	opt callstack 0
  3006                           
  3007 ;; *************** function _fputc *****************
  3008 ;; Defined at:
  3009 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  c               2   21[COMRAM] int 
  3012 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  3013 ;;		 -> sprintf@f(6), 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  2   21[COMRAM] int 
  3018 ;; Registers used:
  3019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3025 ;;      Params:         4       0       0       0
  3026 ;;      Locals:         0       0       0       0
  3027 ;;      Temps:          5       0       0       0
  3028 ;;      Totals:         9       0       0       0
  3029 ;;Total ram usage:        9 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    4
  3032 ;; This function calls:
  3033 ;;		_putch
  3034 ;; This function is called by:
  3035 ;;		_pad
  3036 ;;		_vfpfcnvrt
  3037 ;;		_fputs
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text12
  3042  000C30                     __ptext12:
  3043                           	opt callstack 0
  3044  000C30                     _fputc:
  3045                           	opt callstack 22
  3046  000C30  5018               	movf	fputc@fp^0,w,c
  3047  000C32  1019               	iorwf	(fputc@fp+1)^0,w,c
  3048  000C34  B4D8               	btfsc	status,2,c
  3049  000C36  EF1F  F006         	goto	u1671
  3050  000C3A  EF21  F006         	goto	u1670
  3051  000C3E                     u1671:
  3052  000C3E  EF2A  F006         	goto	l2355
  3053  000C42                     u1670:
  3054  000C42  5018               	movf	fputc@fp^0,w,c
  3055  000C44  1019               	iorwf	(fputc@fp+1)^0,w,c
  3056  000C46  A4D8               	btfss	status,2,c
  3057  000C48  EF28  F006         	goto	u1681
  3058  000C4C  EF2A  F006         	goto	u1680
  3059  000C50                     u1681:
  3060  000C50  EF2F  F006         	goto	l2357
  3061  000C54                     u1680:
  3062  000C54                     l2355:
  3063  000C54  5016               	movf	fputc@c^0,w,c
  3064  000C56  EC35  F00A         	call	_putch
  3065  000C5A  EF7C  F006         	goto	l1055
  3066  000C5E                     l2357:
  3067  000C5E  EE20 F004          	lfsr	2,4
  3068  000C62  5018               	movf	fputc@fp^0,w,c
  3069  000C64  26D9               	addwf	fsr2l,f,c
  3070  000C66  5019               	movf	(fputc@fp+1)^0,w,c
  3071  000C68  22DA               	addwfc	fsr2h,f,c
  3072  000C6A  50DE               	movf	postinc2,w,c
  3073  000C6C  10DE               	iorwf	postinc2,w,c
  3074  000C6E  B4D8               	btfsc	status,2,c
  3075  000C70  EF3C  F006         	goto	u1691
  3076  000C74  EF3E  F006         	goto	u1690
  3077  000C78                     u1691:
  3078  000C78  EF59  F006         	goto	l2361
  3079  000C7C                     u1690:
  3080  000C7C  EE20 F004          	lfsr	2,4
  3081  000C80  5018               	movf	fputc@fp^0,w,c
  3082  000C82  26D9               	addwf	fsr2l,f,c
  3083  000C84  5019               	movf	(fputc@fp+1)^0,w,c
  3084  000C86  22DA               	addwfc	fsr2h,f,c
  3085  000C88  EE10 F002          	lfsr	1,2
  3086  000C8C  5018               	movf	fputc@fp^0,w,c
  3087  000C8E  26E1               	addwf	fsr1l,f,c
  3088  000C90  5019               	movf	(fputc@fp+1)^0,w,c
  3089  000C92  22E2               	addwfc	fsr1h,f,c
  3090  000C94  50DE               	movf	postinc2,w,c
  3091  000C96  5CE6               	subwf	postinc1,w,c
  3092  000C98  50E6               	movf	postinc1,w,c
  3093  000C9A  0A80               	xorlw	128
  3094  000C9C  6E1E               	movwf	(??_fputc+4)^0,c
  3095  000C9E  50DE               	movf	postinc2,w,c
  3096  000CA0  0A80               	xorlw	128
  3097  000CA2  581E               	subwfb	(??_fputc+4)^0,w,c
  3098  000CA4  B0D8               	btfsc	status,0,c
  3099  000CA6  EF57  F006         	goto	u1701
  3100  000CAA  EF59  F006         	goto	u1700
  3101  000CAE                     u1701:
  3102  000CAE  EF7C  F006         	goto	l1055
  3103  000CB2                     u1700:
  3104  000CB2                     l2361:
  3105  000CB2  EE20 F002          	lfsr	2,2
  3106  000CB6  5018               	movf	fputc@fp^0,w,c
  3107  000CB8  26D9               	addwf	fsr2l,f,c
  3108  000CBA  5019               	movf	(fputc@fp+1)^0,w,c
  3109  000CBC  22DA               	addwfc	fsr2h,f,c
  3110  000CBE  CFDE F01A          	movff	postinc2,??_fputc
  3111  000CC2  CFDD F01B          	movff	postdec2,??_fputc+1
  3112  000CC6  C018  FFD9         	movff	fputc@fp,fsr2l
  3113  000CCA  C019  FFDA         	movff	fputc@fp+1,fsr2h
  3114  000CCE  CFDE F01C          	movff	postinc2,??_fputc+2
  3115  000CD2  CFDD F01D          	movff	postdec2,??_fputc+3
  3116  000CD6  501A               	movf	??_fputc^0,w,c
  3117  000CD8  241C               	addwf	(??_fputc+2)^0,w,c
  3118  000CDA  6ED9               	movwf	fsr2l,c
  3119  000CDC  501B               	movf	(??_fputc+1)^0,w,c
  3120  000CDE  201D               	addwfc	(??_fputc+3)^0,w,c
  3121  000CE0  6EDA               	movwf	fsr2h,c
  3122  000CE2  C016  FFDF         	movff	fputc@c,indf2
  3123  000CE6  EE20 F002          	lfsr	2,2
  3124  000CEA  5018               	movf	fputc@fp^0,w,c
  3125  000CEC  26D9               	addwf	fsr2l,f,c
  3126  000CEE  5019               	movf	(fputc@fp+1)^0,w,c
  3127  000CF0  22DA               	addwfc	fsr2h,f,c
  3128  000CF2  2ADE               	incf	postinc2,f,c
  3129  000CF4  0E00               	movlw	0
  3130  000CF6  22DD               	addwfc	postdec2,f,c
  3131  000CF8                     l1055:
  3132  000CF8  0012               	return		;funcret
  3133  000CFA                     __end_of_fputc:
  3134                           	opt callstack 0
  3135                           
  3136 ;; *************** function _putch *****************
  3137 ;; Defined at:
  3138 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  c               1    wreg     unsigned char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  c               1    0[COMRAM] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3152 ;;      Params:         0       0       0       0
  3153 ;;      Locals:         0       0       0       0
  3154 ;;      Temps:          0       0       0       0
  3155 ;;      Totals:         0       0       0       0
  3156 ;;Total ram usage:        0 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    3
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_fputc
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text13
  3167  00146A                     __ptext13:
  3168                           	opt callstack 0
  3169  00146A                     _putch:
  3170                           	opt callstack 22
  3171  00146A  0012               	return		;funcret
  3172  00146C                     __end_of_putch:
  3173                           	opt callstack 0
  3174                           
  3175 ;; *************** function _abs *****************
  3176 ;; Defined at:
  3177 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  a               2   39[COMRAM] int 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  2   39[COMRAM] int 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3191 ;;      Params:         2       0       0       0
  3192 ;;      Locals:         0       0       0       0
  3193 ;;      Temps:          2       0       0       0
  3194 ;;      Totals:         4       0       0       0
  3195 ;;Total ram usage:        4 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    3
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_dtoa
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text14
  3206  0012AE                     __ptext14:
  3207                           	opt callstack 0
  3208  0012AE                     _abs:
  3209                           	opt callstack 22
  3210  0012AE  BE29               	btfsc	(abs@a+1)^0,7,c
  3211  0012B0  EF64  F009         	goto	u1770
  3212  0012B4  5029               	movf	(abs@a+1)^0,w,c
  3213  0012B6  E106               	bnz	u1771
  3214  0012B8  0428               	decf	abs@a^0,w,c
  3215  0012BA  B0D8               	btfsc	status,0,c
  3216  0012BC  EF62  F009         	goto	u1771
  3217  0012C0  EF64  F009         	goto	u1770
  3218  0012C4                     u1771:
  3219  0012C4  EF72  F009         	goto	l1040
  3220  0012C8                     u1770:
  3221  0012C8  C028  F02A         	movff	abs@a,??_abs
  3222  0012CC  C029  F02B         	movff	abs@a+1,??_abs+1
  3223  0012D0  1E2A               	comf	??_abs^0,f,c
  3224  0012D2  1E2B               	comf	(??_abs+1)^0,f,c
  3225  0012D4  4A2A               	infsnz	??_abs^0,f,c
  3226  0012D6  2A2B               	incf	(??_abs+1)^0,f,c
  3227  0012D8  C02A  F028         	movff	??_abs,?_abs
  3228  0012DC  C02B  F029         	movff	??_abs+1,?_abs+1
  3229  0012E0  EF76  F009         	goto	l1043
  3230  0012E4                     l1040:
  3231  0012E4  C028  F028         	movff	abs@a,?_abs
  3232  0012E8  C029  F029         	movff	abs@a+1,?_abs+1
  3233  0012EC                     l1043:
  3234  0012EC  0012               	return		;funcret
  3235  0012EE                     __end_of_abs:
  3236                           	opt callstack 0
  3237                           
  3238 ;; *************** function ___aomod *****************
  3239 ;; Defined at:
  3240 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  dividend        8   21[COMRAM] long long 
  3243 ;;  divisor         8   29[COMRAM] long long 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  sign            1   38[COMRAM] unsigned char 
  3246 ;;  counter         1   37[COMRAM] unsigned char 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  8   21[COMRAM] long long 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3256 ;;      Params:        16       0       0       0
  3257 ;;      Locals:         2       0       0       0
  3258 ;;      Temps:          0       0       0       0
  3259 ;;      Totals:        18       0       0       0
  3260 ;;Total ram usage:       18 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    3
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_dtoa
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text15
  3271  000ACC                     __ptext15:
  3272                           	opt callstack 0
  3273  000ACC                     ___aomod:
  3274                           	opt callstack 22
  3275  000ACC  0E00               	movlw	0
  3276  000ACE  6E27               	movwf	___aomod@sign^0,c
  3277  000AD0  BE1D               	btfsc	(___aomod@dividend+7)^0,7,c
  3278  000AD2  EF6F  F005         	goto	u1850
  3279  000AD6  EF6D  F005         	goto	u1851
  3280  000ADA                     u1851:
  3281  000ADA  EF81  F005         	goto	l2461
  3282  000ADE                     u1850:
  3283  000ADE  1E1D               	comf	(___aomod@dividend+7)^0,f,c
  3284  000AE0  1E1C               	comf	(___aomod@dividend+6)^0,f,c
  3285  000AE2  1E1B               	comf	(___aomod@dividend+5)^0,f,c
  3286  000AE4  1E1A               	comf	(___aomod@dividend+4)^0,f,c
  3287  000AE6  1E19               	comf	(___aomod@dividend+3)^0,f,c
  3288  000AE8  1E18               	comf	(___aomod@dividend+2)^0,f,c
  3289  000AEA  1E17               	comf	(___aomod@dividend+1)^0,f,c
  3290  000AEC  6C16               	negf	___aomod@dividend^0,c
  3291  000AEE  0E00               	movlw	0
  3292  000AF0  2217               	addwfc	(___aomod@dividend+1)^0,f,c
  3293  000AF2  2218               	addwfc	(___aomod@dividend+2)^0,f,c
  3294  000AF4  2219               	addwfc	(___aomod@dividend+3)^0,f,c
  3295  000AF6  221A               	addwfc	(___aomod@dividend+4)^0,f,c
  3296  000AF8  221B               	addwfc	(___aomod@dividend+5)^0,f,c
  3297  000AFA  221C               	addwfc	(___aomod@dividend+6)^0,f,c
  3298  000AFC  221D               	addwfc	(___aomod@dividend+7)^0,f,c
  3299  000AFE  0E01               	movlw	1
  3300  000B00  6E27               	movwf	___aomod@sign^0,c
  3301  000B02                     l2461:
  3302  000B02  BE25               	btfsc	(___aomod@divisor+7)^0,7,c
  3303  000B04  EF88  F005         	goto	u1860
  3304  000B08  EF86  F005         	goto	u1861
  3305  000B0C                     u1861:
  3306  000B0C  EF98  F005         	goto	l2465
  3307  000B10                     u1860:
  3308  000B10  1E25               	comf	(___aomod@divisor+7)^0,f,c
  3309  000B12  1E24               	comf	(___aomod@divisor+6)^0,f,c
  3310  000B14  1E23               	comf	(___aomod@divisor+5)^0,f,c
  3311  000B16  1E22               	comf	(___aomod@divisor+4)^0,f,c
  3312  000B18  1E21               	comf	(___aomod@divisor+3)^0,f,c
  3313  000B1A  1E20               	comf	(___aomod@divisor+2)^0,f,c
  3314  000B1C  1E1F               	comf	(___aomod@divisor+1)^0,f,c
  3315  000B1E  6C1E               	negf	___aomod@divisor^0,c
  3316  000B20  0E00               	movlw	0
  3317  000B22  221F               	addwfc	(___aomod@divisor+1)^0,f,c
  3318  000B24  2220               	addwfc	(___aomod@divisor+2)^0,f,c
  3319  000B26  2221               	addwfc	(___aomod@divisor+3)^0,f,c
  3320  000B28  2222               	addwfc	(___aomod@divisor+4)^0,f,c
  3321  000B2A  2223               	addwfc	(___aomod@divisor+5)^0,f,c
  3322  000B2C  2224               	addwfc	(___aomod@divisor+6)^0,f,c
  3323  000B2E  2225               	addwfc	(___aomod@divisor+7)^0,f,c
  3324  000B30                     l2465:
  3325  000B30  501E               	movf	___aomod@divisor^0,w,c
  3326  000B32  101F               	iorwf	(___aomod@divisor+1)^0,w,c
  3327  000B34  1020               	iorwf	(___aomod@divisor+2)^0,w,c
  3328  000B36  1021               	iorwf	(___aomod@divisor+3)^0,w,c
  3329  000B38  1022               	iorwf	(___aomod@divisor+4)^0,w,c
  3330  000B3A  1023               	iorwf	(___aomod@divisor+5)^0,w,c
  3331  000B3C  1024               	iorwf	(___aomod@divisor+6)^0,w,c
  3332  000B3E  1025               	iorwf	(___aomod@divisor+7)^0,w,c
  3333  000B40  B4D8               	btfsc	status,2,c
  3334  000B42  EFA5  F005         	goto	u1871
  3335  000B46  EFA7  F005         	goto	u1870
  3336  000B4A                     u1871:
  3337  000B4A  EFEF  F005         	goto	l2481
  3338  000B4E                     u1870:
  3339  000B4E  0E01               	movlw	1
  3340  000B50  6E26               	movwf	___aomod@counter^0,c
  3341  000B52  EFB5  F005         	goto	l2471
  3342  000B56                     l2469:
  3343  000B56  90D8               	bcf	status,0,c
  3344  000B58  361E               	rlcf	___aomod@divisor^0,f,c
  3345  000B5A  361F               	rlcf	(___aomod@divisor+1)^0,f,c
  3346  000B5C  3620               	rlcf	(___aomod@divisor+2)^0,f,c
  3347  000B5E  3621               	rlcf	(___aomod@divisor+3)^0,f,c
  3348  000B60  3622               	rlcf	(___aomod@divisor+4)^0,f,c
  3349  000B62  3623               	rlcf	(___aomod@divisor+5)^0,f,c
  3350  000B64  3624               	rlcf	(___aomod@divisor+6)^0,f,c
  3351  000B66  3625               	rlcf	(___aomod@divisor+7)^0,f,c
  3352  000B68  2A26               	incf	___aomod@counter^0,f,c
  3353  000B6A                     l2471:
  3354  000B6A  AE25               	btfss	(___aomod@divisor+7)^0,7,c
  3355  000B6C  EFBA  F005         	goto	u1881
  3356  000B70  EFBC  F005         	goto	u1880
  3357  000B74                     u1881:
  3358  000B74  EFAB  F005         	goto	l2469
  3359  000B78                     u1880:
  3360  000B78                     l2473:
  3361  000B78  501E               	movf	___aomod@divisor^0,w,c
  3362  000B7A  5C16               	subwf	___aomod@dividend^0,w,c
  3363  000B7C  501F               	movf	(___aomod@divisor+1)^0,w,c
  3364  000B7E  5817               	subwfb	(___aomod@dividend+1)^0,w,c
  3365  000B80  5020               	movf	(___aomod@divisor+2)^0,w,c
  3366  000B82  5818               	subwfb	(___aomod@dividend+2)^0,w,c
  3367  000B84  5021               	movf	(___aomod@divisor+3)^0,w,c
  3368  000B86  5819               	subwfb	(___aomod@dividend+3)^0,w,c
  3369  000B88  5022               	movf	(___aomod@divisor+4)^0,w,c
  3370  000B8A  581A               	subwfb	(___aomod@dividend+4)^0,w,c
  3371  000B8C  5023               	movf	(___aomod@divisor+5)^0,w,c
  3372  000B8E  581B               	subwfb	(___aomod@dividend+5)^0,w,c
  3373  000B90  5024               	movf	(___aomod@divisor+6)^0,w,c
  3374  000B92  581C               	subwfb	(___aomod@dividend+6)^0,w,c
  3375  000B94  5025               	movf	(___aomod@divisor+7)^0,w,c
  3376  000B96  581D               	subwfb	(___aomod@dividend+7)^0,w,c
  3377  000B98  A0D8               	btfss	status,0,c
  3378  000B9A  EFD1  F005         	goto	u1891
  3379  000B9E  EFD3  F005         	goto	u1890
  3380  000BA2                     u1891:
  3381  000BA2  EFE3  F005         	goto	l2477
  3382  000BA6                     u1890:
  3383  000BA6  501E               	movf	___aomod@divisor^0,w,c
  3384  000BA8  5E16               	subwf	___aomod@dividend^0,f,c
  3385  000BAA  501F               	movf	(___aomod@divisor+1)^0,w,c
  3386  000BAC  5A17               	subwfb	(___aomod@dividend+1)^0,f,c
  3387  000BAE  5020               	movf	(___aomod@divisor+2)^0,w,c
  3388  000BB0  5A18               	subwfb	(___aomod@dividend+2)^0,f,c
  3389  000BB2  5021               	movf	(___aomod@divisor+3)^0,w,c
  3390  000BB4  5A19               	subwfb	(___aomod@dividend+3)^0,f,c
  3391  000BB6  5022               	movf	(___aomod@divisor+4)^0,w,c
  3392  000BB8  5A1A               	subwfb	(___aomod@dividend+4)^0,f,c
  3393  000BBA  5023               	movf	(___aomod@divisor+5)^0,w,c
  3394  000BBC  5A1B               	subwfb	(___aomod@dividend+5)^0,f,c
  3395  000BBE  5024               	movf	(___aomod@divisor+6)^0,w,c
  3396  000BC0  5A1C               	subwfb	(___aomod@dividend+6)^0,f,c
  3397  000BC2  5025               	movf	(___aomod@divisor+7)^0,w,c
  3398  000BC4  5A1D               	subwfb	(___aomod@dividend+7)^0,f,c
  3399  000BC6                     l2477:
  3400  000BC6  90D8               	bcf	status,0,c
  3401  000BC8  3225               	rrcf	(___aomod@divisor+7)^0,f,c
  3402  000BCA  3224               	rrcf	(___aomod@divisor+6)^0,f,c
  3403  000BCC  3223               	rrcf	(___aomod@divisor+5)^0,f,c
  3404  000BCE  3222               	rrcf	(___aomod@divisor+4)^0,f,c
  3405  000BD0  3221               	rrcf	(___aomod@divisor+3)^0,f,c
  3406  000BD2  3220               	rrcf	(___aomod@divisor+2)^0,f,c
  3407  000BD4  321F               	rrcf	(___aomod@divisor+1)^0,f,c
  3408  000BD6  321E               	rrcf	___aomod@divisor^0,f,c
  3409  000BD8  2E26               	decfsz	___aomod@counter^0,f,c
  3410  000BDA  EFBC  F005         	goto	l2473
  3411  000BDE                     l2481:
  3412  000BDE  5027               	movf	___aomod@sign^0,w,c
  3413  000BE0  B4D8               	btfsc	status,2,c
  3414  000BE2  EFF5  F005         	goto	u1901
  3415  000BE6  EFF7  F005         	goto	u1900
  3416  000BEA                     u1901:
  3417  000BEA  EF07  F006         	goto	l2485
  3418  000BEE                     u1900:
  3419  000BEE  1E1D               	comf	(___aomod@dividend+7)^0,f,c
  3420  000BF0  1E1C               	comf	(___aomod@dividend+6)^0,f,c
  3421  000BF2  1E1B               	comf	(___aomod@dividend+5)^0,f,c
  3422  000BF4  1E1A               	comf	(___aomod@dividend+4)^0,f,c
  3423  000BF6  1E19               	comf	(___aomod@dividend+3)^0,f,c
  3424  000BF8  1E18               	comf	(___aomod@dividend+2)^0,f,c
  3425  000BFA  1E17               	comf	(___aomod@dividend+1)^0,f,c
  3426  000BFC  6C16               	negf	___aomod@dividend^0,c
  3427  000BFE  0E00               	movlw	0
  3428  000C00  2217               	addwfc	(___aomod@dividend+1)^0,f,c
  3429  000C02  2218               	addwfc	(___aomod@dividend+2)^0,f,c
  3430  000C04  2219               	addwfc	(___aomod@dividend+3)^0,f,c
  3431  000C06  221A               	addwfc	(___aomod@dividend+4)^0,f,c
  3432  000C08  221B               	addwfc	(___aomod@dividend+5)^0,f,c
  3433  000C0A  221C               	addwfc	(___aomod@dividend+6)^0,f,c
  3434  000C0C  221D               	addwfc	(___aomod@dividend+7)^0,f,c
  3435  000C0E                     l2485:
  3436  000C0E  C016  F016         	movff	___aomod@dividend,?___aomod
  3437  000C12  C017  F017         	movff	___aomod@dividend+1,?___aomod+1
  3438  000C16  C018  F018         	movff	___aomod@dividend+2,?___aomod+2
  3439  000C1A  C019  F019         	movff	___aomod@dividend+3,?___aomod+3
  3440  000C1E  C01A  F01A         	movff	___aomod@dividend+4,?___aomod+4
  3441  000C22  C01B  F01B         	movff	___aomod@dividend+5,?___aomod+5
  3442  000C26  C01C  F01C         	movff	___aomod@dividend+6,?___aomod+6
  3443  000C2A  C01D  F01D         	movff	___aomod@dividend+7,?___aomod+7
  3444  000C2E  0012               	return		;funcret
  3445  000C30                     __end_of___aomod:
  3446                           	opt callstack 0
  3447                           
  3448 ;; *************** function ___aodiv *****************
  3449 ;; Defined at:
  3450 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  dividend        8   21[COMRAM] long long 
  3453 ;;  divisor         8   29[COMRAM] long long 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  quotient        8   39[COMRAM] long long 
  3456 ;;  sign            1   38[COMRAM] unsigned char 
  3457 ;;  counter         1   37[COMRAM] unsigned char 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  8   21[COMRAM] long long 
  3460 ;; Registers used:
  3461 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3467 ;;      Params:        16       0       0       0
  3468 ;;      Locals:        10       0       0       0
  3469 ;;      Temps:          0       0       0       0
  3470 ;;      Totals:        26       0       0       0
  3471 ;;Total ram usage:       26 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    3
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_dtoa
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text16
  3482  000944                     __ptext16:
  3483                           	opt callstack 0
  3484  000944                     ___aodiv:
  3485                           	opt callstack 22
  3486  000944  0E00               	movlw	0
  3487  000946  6E27               	movwf	___aodiv@sign^0,c
  3488  000948  BE25               	btfsc	(___aodiv@divisor+7)^0,7,c
  3489  00094A  EFAB  F004         	goto	u1780
  3490  00094E  EFA9  F004         	goto	u1781
  3491  000952                     u1781:
  3492  000952  EFBD  F004         	goto	l2417
  3493  000956                     u1780:
  3494  000956  1E25               	comf	(___aodiv@divisor+7)^0,f,c
  3495  000958  1E24               	comf	(___aodiv@divisor+6)^0,f,c
  3496  00095A  1E23               	comf	(___aodiv@divisor+5)^0,f,c
  3497  00095C  1E22               	comf	(___aodiv@divisor+4)^0,f,c
  3498  00095E  1E21               	comf	(___aodiv@divisor+3)^0,f,c
  3499  000960  1E20               	comf	(___aodiv@divisor+2)^0,f,c
  3500  000962  1E1F               	comf	(___aodiv@divisor+1)^0,f,c
  3501  000964  6C1E               	negf	___aodiv@divisor^0,c
  3502  000966  0E00               	movlw	0
  3503  000968  221F               	addwfc	(___aodiv@divisor+1)^0,f,c
  3504  00096A  2220               	addwfc	(___aodiv@divisor+2)^0,f,c
  3505  00096C  2221               	addwfc	(___aodiv@divisor+3)^0,f,c
  3506  00096E  2222               	addwfc	(___aodiv@divisor+4)^0,f,c
  3507  000970  2223               	addwfc	(___aodiv@divisor+5)^0,f,c
  3508  000972  2224               	addwfc	(___aodiv@divisor+6)^0,f,c
  3509  000974  2225               	addwfc	(___aodiv@divisor+7)^0,f,c
  3510  000976  0E01               	movlw	1
  3511  000978  6E27               	movwf	___aodiv@sign^0,c
  3512  00097A                     l2417:
  3513  00097A  BE1D               	btfsc	(___aodiv@dividend+7)^0,7,c
  3514  00097C  EFC4  F004         	goto	u1790
  3515  000980  EFC2  F004         	goto	u1791
  3516  000984                     u1791:
  3517  000984  EFD6  F004         	goto	l2423
  3518  000988                     u1790:
  3519  000988  1E1D               	comf	(___aodiv@dividend+7)^0,f,c
  3520  00098A  1E1C               	comf	(___aodiv@dividend+6)^0,f,c
  3521  00098C  1E1B               	comf	(___aodiv@dividend+5)^0,f,c
  3522  00098E  1E1A               	comf	(___aodiv@dividend+4)^0,f,c
  3523  000990  1E19               	comf	(___aodiv@dividend+3)^0,f,c
  3524  000992  1E18               	comf	(___aodiv@dividend+2)^0,f,c
  3525  000994  1E17               	comf	(___aodiv@dividend+1)^0,f,c
  3526  000996  6C16               	negf	___aodiv@dividend^0,c
  3527  000998  0E00               	movlw	0
  3528  00099A  2217               	addwfc	(___aodiv@dividend+1)^0,f,c
  3529  00099C  2218               	addwfc	(___aodiv@dividend+2)^0,f,c
  3530  00099E  2219               	addwfc	(___aodiv@dividend+3)^0,f,c
  3531  0009A0  221A               	addwfc	(___aodiv@dividend+4)^0,f,c
  3532  0009A2  221B               	addwfc	(___aodiv@dividend+5)^0,f,c
  3533  0009A4  221C               	addwfc	(___aodiv@dividend+6)^0,f,c
  3534  0009A6  221D               	addwfc	(___aodiv@dividend+7)^0,f,c
  3535  0009A8  0E01               	movlw	1
  3536  0009AA  1A27               	xorwf	___aodiv@sign^0,f,c
  3537  0009AC                     l2423:
  3538  0009AC  EE20  F028         	lfsr	2,___aodiv@quotient
  3539  0009B0  0E07               	movlw	7
  3540  0009B2                     u1801:
  3541  0009B2  6ADE               	clrf	postinc2,c
  3542  0009B4  06E8               	decf	wreg,f,c
  3543  0009B6  E2FD               	bc	u1801
  3544  0009B8  501E               	movf	___aodiv@divisor^0,w,c
  3545  0009BA  101F               	iorwf	(___aodiv@divisor+1)^0,w,c
  3546  0009BC  1020               	iorwf	(___aodiv@divisor+2)^0,w,c
  3547  0009BE  1021               	iorwf	(___aodiv@divisor+3)^0,w,c
  3548  0009C0  1022               	iorwf	(___aodiv@divisor+4)^0,w,c
  3549  0009C2  1023               	iorwf	(___aodiv@divisor+5)^0,w,c
  3550  0009C4  1024               	iorwf	(___aodiv@divisor+6)^0,w,c
  3551  0009C6  1025               	iorwf	(___aodiv@divisor+7)^0,w,c
  3552  0009C8  B4D8               	btfsc	status,2,c
  3553  0009CA  EFE9  F004         	goto	u1811
  3554  0009CE  EFEB  F004         	goto	u1810
  3555  0009D2                     u1811:
  3556  0009D2  EF3D  F005         	goto	l2445
  3557  0009D6                     u1810:
  3558  0009D6  0E01               	movlw	1
  3559  0009D8  6E26               	movwf	___aodiv@counter^0,c
  3560  0009DA  EFF9  F004         	goto	l2431
  3561  0009DE                     l2429:
  3562  0009DE  90D8               	bcf	status,0,c
  3563  0009E0  361E               	rlcf	___aodiv@divisor^0,f,c
  3564  0009E2  361F               	rlcf	(___aodiv@divisor+1)^0,f,c
  3565  0009E4  3620               	rlcf	(___aodiv@divisor+2)^0,f,c
  3566  0009E6  3621               	rlcf	(___aodiv@divisor+3)^0,f,c
  3567  0009E8  3622               	rlcf	(___aodiv@divisor+4)^0,f,c
  3568  0009EA  3623               	rlcf	(___aodiv@divisor+5)^0,f,c
  3569  0009EC  3624               	rlcf	(___aodiv@divisor+6)^0,f,c
  3570  0009EE  3625               	rlcf	(___aodiv@divisor+7)^0,f,c
  3571  0009F0  2A26               	incf	___aodiv@counter^0,f,c
  3572  0009F2                     l2431:
  3573  0009F2  AE25               	btfss	(___aodiv@divisor+7)^0,7,c
  3574  0009F4  EFFE  F004         	goto	u1821
  3575  0009F8  EF00  F005         	goto	u1820
  3576  0009FC                     u1821:
  3577  0009FC  EFEF  F004         	goto	l2429
  3578  000A00                     u1820:
  3579  000A00                     l2433:
  3580  000A00  90D8               	bcf	status,0,c
  3581  000A02  3628               	rlcf	___aodiv@quotient^0,f,c
  3582  000A04  3629               	rlcf	(___aodiv@quotient+1)^0,f,c
  3583  000A06  362A               	rlcf	(___aodiv@quotient+2)^0,f,c
  3584  000A08  362B               	rlcf	(___aodiv@quotient+3)^0,f,c
  3585  000A0A  362C               	rlcf	(___aodiv@quotient+4)^0,f,c
  3586  000A0C  362D               	rlcf	(___aodiv@quotient+5)^0,f,c
  3587  000A0E  362E               	rlcf	(___aodiv@quotient+6)^0,f,c
  3588  000A10  362F               	rlcf	(___aodiv@quotient+7)^0,f,c
  3589  000A12  501E               	movf	___aodiv@divisor^0,w,c
  3590  000A14  5C16               	subwf	___aodiv@dividend^0,w,c
  3591  000A16  501F               	movf	(___aodiv@divisor+1)^0,w,c
  3592  000A18  5817               	subwfb	(___aodiv@dividend+1)^0,w,c
  3593  000A1A  5020               	movf	(___aodiv@divisor+2)^0,w,c
  3594  000A1C  5818               	subwfb	(___aodiv@dividend+2)^0,w,c
  3595  000A1E  5021               	movf	(___aodiv@divisor+3)^0,w,c
  3596  000A20  5819               	subwfb	(___aodiv@dividend+3)^0,w,c
  3597  000A22  5022               	movf	(___aodiv@divisor+4)^0,w,c
  3598  000A24  581A               	subwfb	(___aodiv@dividend+4)^0,w,c
  3599  000A26  5023               	movf	(___aodiv@divisor+5)^0,w,c
  3600  000A28  581B               	subwfb	(___aodiv@dividend+5)^0,w,c
  3601  000A2A  5024               	movf	(___aodiv@divisor+6)^0,w,c
  3602  000A2C  581C               	subwfb	(___aodiv@dividend+6)^0,w,c
  3603  000A2E  5025               	movf	(___aodiv@divisor+7)^0,w,c
  3604  000A30  581D               	subwfb	(___aodiv@dividend+7)^0,w,c
  3605  000A32  A0D8               	btfss	status,0,c
  3606  000A34  EF1E  F005         	goto	u1831
  3607  000A38  EF20  F005         	goto	u1830
  3608  000A3C                     u1831:
  3609  000A3C  EF31  F005         	goto	l2441
  3610  000A40                     u1830:
  3611  000A40  501E               	movf	___aodiv@divisor^0,w,c
  3612  000A42  5E16               	subwf	___aodiv@dividend^0,f,c
  3613  000A44  501F               	movf	(___aodiv@divisor+1)^0,w,c
  3614  000A46  5A17               	subwfb	(___aodiv@dividend+1)^0,f,c
  3615  000A48  5020               	movf	(___aodiv@divisor+2)^0,w,c
  3616  000A4A  5A18               	subwfb	(___aodiv@dividend+2)^0,f,c
  3617  000A4C  5021               	movf	(___aodiv@divisor+3)^0,w,c
  3618  000A4E  5A19               	subwfb	(___aodiv@dividend+3)^0,f,c
  3619  000A50  5022               	movf	(___aodiv@divisor+4)^0,w,c
  3620  000A52  5A1A               	subwfb	(___aodiv@dividend+4)^0,f,c
  3621  000A54  5023               	movf	(___aodiv@divisor+5)^0,w,c
  3622  000A56  5A1B               	subwfb	(___aodiv@dividend+5)^0,f,c
  3623  000A58  5024               	movf	(___aodiv@divisor+6)^0,w,c
  3624  000A5A  5A1C               	subwfb	(___aodiv@dividend+6)^0,f,c
  3625  000A5C  5025               	movf	(___aodiv@divisor+7)^0,w,c
  3626  000A5E  5A1D               	subwfb	(___aodiv@dividend+7)^0,f,c
  3627  000A60  8028               	bsf	___aodiv@quotient^0,0,c
  3628  000A62                     l2441:
  3629  000A62  90D8               	bcf	status,0,c
  3630  000A64  3225               	rrcf	(___aodiv@divisor+7)^0,f,c
  3631  000A66  3224               	rrcf	(___aodiv@divisor+6)^0,f,c
  3632  000A68  3223               	rrcf	(___aodiv@divisor+5)^0,f,c
  3633  000A6A  3222               	rrcf	(___aodiv@divisor+4)^0,f,c
  3634  000A6C  3221               	rrcf	(___aodiv@divisor+3)^0,f,c
  3635  000A6E  3220               	rrcf	(___aodiv@divisor+2)^0,f,c
  3636  000A70  321F               	rrcf	(___aodiv@divisor+1)^0,f,c
  3637  000A72  321E               	rrcf	___aodiv@divisor^0,f,c
  3638  000A74  2E26               	decfsz	___aodiv@counter^0,f,c
  3639  000A76  EF00  F005         	goto	l2433
  3640  000A7A                     l2445:
  3641  000A7A  5027               	movf	___aodiv@sign^0,w,c
  3642  000A7C  B4D8               	btfsc	status,2,c
  3643  000A7E  EF43  F005         	goto	u1841
  3644  000A82  EF45  F005         	goto	u1840
  3645  000A86                     u1841:
  3646  000A86  EF55  F005         	goto	l2449
  3647  000A8A                     u1840:
  3648  000A8A  1E2F               	comf	(___aodiv@quotient+7)^0,f,c
  3649  000A8C  1E2E               	comf	(___aodiv@quotient+6)^0,f,c
  3650  000A8E  1E2D               	comf	(___aodiv@quotient+5)^0,f,c
  3651  000A90  1E2C               	comf	(___aodiv@quotient+4)^0,f,c
  3652  000A92  1E2B               	comf	(___aodiv@quotient+3)^0,f,c
  3653  000A94  1E2A               	comf	(___aodiv@quotient+2)^0,f,c
  3654  000A96  1E29               	comf	(___aodiv@quotient+1)^0,f,c
  3655  000A98  6C28               	negf	___aodiv@quotient^0,c
  3656  000A9A  0E00               	movlw	0
  3657  000A9C  2229               	addwfc	(___aodiv@quotient+1)^0,f,c
  3658  000A9E  222A               	addwfc	(___aodiv@quotient+2)^0,f,c
  3659  000AA0  222B               	addwfc	(___aodiv@quotient+3)^0,f,c
  3660  000AA2  222C               	addwfc	(___aodiv@quotient+4)^0,f,c
  3661  000AA4  222D               	addwfc	(___aodiv@quotient+5)^0,f,c
  3662  000AA6  222E               	addwfc	(___aodiv@quotient+6)^0,f,c
  3663  000AA8  222F               	addwfc	(___aodiv@quotient+7)^0,f,c
  3664  000AAA                     l2449:
  3665  000AAA  C028  F016         	movff	___aodiv@quotient,?___aodiv
  3666  000AAE  C029  F017         	movff	___aodiv@quotient+1,?___aodiv+1
  3667  000AB2  C02A  F018         	movff	___aodiv@quotient+2,?___aodiv+2
  3668  000AB6  C02B  F019         	movff	___aodiv@quotient+3,?___aodiv+3
  3669  000ABA  C02C  F01A         	movff	___aodiv@quotient+4,?___aodiv+4
  3670  000ABE  C02D  F01B         	movff	___aodiv@quotient+5,?___aodiv+5
  3671  000AC2  C02E  F01C         	movff	___aodiv@quotient+6,?___aodiv+6
  3672  000AC6  C02F  F01D         	movff	___aodiv@quotient+7,?___aodiv+7
  3673  000ACA  0012               	return		;funcret
  3674  000ACC                     __end_of___aodiv:
  3675                           	opt callstack 0
  3676                           
  3677 ;; *************** function ___lwmod *****************
  3678 ;; Defined at:
  3679 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  dividend        2   21[COMRAM] unsigned int 
  3682 ;;  divisor         2   23[COMRAM] unsigned int 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  counter         1   25[COMRAM] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  2   21[COMRAM] unsigned int 
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3694 ;;      Params:         4       0       0       0
  3695 ;;      Locals:         1       0       0       0
  3696 ;;      Temps:          0       0       0       0
  3697 ;;      Totals:         5       0       0       0
  3698 ;;Total ram usage:        5 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    3
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_display
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text17
  3709  001020                     __ptext17:
  3710                           	opt callstack 0
  3711  001020                     ___lwmod:
  3712                           	opt callstack 26
  3713  001020  5018               	movf	___lwmod@divisor^0,w,c
  3714  001022  1019               	iorwf	(___lwmod@divisor+1)^0,w,c
  3715  001024  B4D8               	btfsc	status,2,c
  3716  001026  EF17  F008         	goto	u2161
  3717  00102A  EF19  F008         	goto	u2160
  3718  00102E                     u2161:
  3719  00102E  EF3D  F008         	goto	l866
  3720  001032                     u2160:
  3721  001032  0E01               	movlw	1
  3722  001034  6E1A               	movwf	___lwmod@counter^0,c
  3723  001036  EF21  F008         	goto	l2677
  3724  00103A                     l2675:
  3725  00103A  90D8               	bcf	status,0,c
  3726  00103C  3618               	rlcf	___lwmod@divisor^0,f,c
  3727  00103E  3619               	rlcf	(___lwmod@divisor+1)^0,f,c
  3728  001040  2A1A               	incf	___lwmod@counter^0,f,c
  3729  001042                     l2677:
  3730  001042  AE19               	btfss	(___lwmod@divisor+1)^0,7,c
  3731  001044  EF26  F008         	goto	u2171
  3732  001048  EF28  F008         	goto	u2170
  3733  00104C                     u2171:
  3734  00104C  EF1D  F008         	goto	l2675
  3735  001050                     u2170:
  3736  001050                     l2679:
  3737  001050  5018               	movf	___lwmod@divisor^0,w,c
  3738  001052  5C16               	subwf	___lwmod@dividend^0,w,c
  3739  001054  5019               	movf	(___lwmod@divisor+1)^0,w,c
  3740  001056  5817               	subwfb	(___lwmod@dividend+1)^0,w,c
  3741  001058  A0D8               	btfss	status,0,c
  3742  00105A  EF31  F008         	goto	u2181
  3743  00105E  EF33  F008         	goto	u2180
  3744  001062                     u2181:
  3745  001062  EF37  F008         	goto	l2683
  3746  001066                     u2180:
  3747  001066  5018               	movf	___lwmod@divisor^0,w,c
  3748  001068  5E16               	subwf	___lwmod@dividend^0,f,c
  3749  00106A  5019               	movf	(___lwmod@divisor+1)^0,w,c
  3750  00106C  5A17               	subwfb	(___lwmod@dividend+1)^0,f,c
  3751  00106E                     l2683:
  3752  00106E  90D8               	bcf	status,0,c
  3753  001070  3219               	rrcf	(___lwmod@divisor+1)^0,f,c
  3754  001072  3218               	rrcf	___lwmod@divisor^0,f,c
  3755  001074  2E1A               	decfsz	___lwmod@counter^0,f,c
  3756  001076  EF28  F008         	goto	l2679
  3757  00107A                     l866:
  3758  00107A  C016  F016         	movff	___lwmod@dividend,?___lwmod
  3759  00107E  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
  3760  001082  0012               	return		;funcret
  3761  001084                     __end_of___lwmod:
  3762                           	opt callstack 0
  3763                           
  3764 ;; *************** function ___lwdiv *****************
  3765 ;; Defined at:
  3766 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  dividend        2   21[COMRAM] unsigned int 
  3769 ;;  divisor         2   23[COMRAM] unsigned int 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  quotient        2   26[COMRAM] unsigned int 
  3772 ;;  counter         1   25[COMRAM] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  2   21[COMRAM] unsigned int 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3782 ;;      Params:         4       0       0       0
  3783 ;;      Locals:         3       0       0       0
  3784 ;;      Temps:          0       0       0       0
  3785 ;;      Totals:         7       0       0       0
  3786 ;;Total ram usage:        7 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    3
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_display
  3793 ;;		_readADC
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text18
  3798  000ED2                     __ptext18:
  3799                           	opt callstack 0
  3800  000ED2                     ___lwdiv:
  3801                           	opt callstack 26
  3802  000ED2  0E00               	movlw	0
  3803  000ED4  6E1C               	movwf	(___lwdiv@quotient+1)^0,c
  3804  000ED6  0E00               	movlw	0
  3805  000ED8  6E1B               	movwf	___lwdiv@quotient^0,c
  3806  000EDA  5018               	movf	___lwdiv@divisor^0,w,c
  3807  000EDC  1019               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3808  000EDE  B4D8               	btfsc	status,2,c
  3809  000EE0  EF74  F007         	goto	u2131
  3810  000EE4  EF76  F007         	goto	u2130
  3811  000EE8                     u2131:
  3812  000EE8  EF9E  F007         	goto	l856
  3813  000EEC                     u2130:
  3814  000EEC  0E01               	movlw	1
  3815  000EEE  6E1A               	movwf	___lwdiv@counter^0,c
  3816  000EF0  EF7E  F007         	goto	l2657
  3817  000EF4                     l2655:
  3818  000EF4  90D8               	bcf	status,0,c
  3819  000EF6  3618               	rlcf	___lwdiv@divisor^0,f,c
  3820  000EF8  3619               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3821  000EFA  2A1A               	incf	___lwdiv@counter^0,f,c
  3822  000EFC                     l2657:
  3823  000EFC  AE19               	btfss	(___lwdiv@divisor+1)^0,7,c
  3824  000EFE  EF83  F007         	goto	u2141
  3825  000F02  EF85  F007         	goto	u2140
  3826  000F06                     u2141:
  3827  000F06  EF7A  F007         	goto	l2655
  3828  000F0A                     u2140:
  3829  000F0A                     l2659:
  3830  000F0A  90D8               	bcf	status,0,c
  3831  000F0C  361B               	rlcf	___lwdiv@quotient^0,f,c
  3832  000F0E  361C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3833  000F10  5018               	movf	___lwdiv@divisor^0,w,c
  3834  000F12  5C16               	subwf	___lwdiv@dividend^0,w,c
  3835  000F14  5019               	movf	(___lwdiv@divisor+1)^0,w,c
  3836  000F16  5817               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3837  000F18  A0D8               	btfss	status,0,c
  3838  000F1A  EF91  F007         	goto	u2151
  3839  000F1E  EF93  F007         	goto	u2150
  3840  000F22                     u2151:
  3841  000F22  EF98  F007         	goto	l2667
  3842  000F26                     u2150:
  3843  000F26  5018               	movf	___lwdiv@divisor^0,w,c
  3844  000F28  5E16               	subwf	___lwdiv@dividend^0,f,c
  3845  000F2A  5019               	movf	(___lwdiv@divisor+1)^0,w,c
  3846  000F2C  5A17               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3847  000F2E  801B               	bsf	___lwdiv@quotient^0,0,c
  3848  000F30                     l2667:
  3849  000F30  90D8               	bcf	status,0,c
  3850  000F32  3219               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3851  000F34  3218               	rrcf	___lwdiv@divisor^0,f,c
  3852  000F36  2E1A               	decfsz	___lwdiv@counter^0,f,c
  3853  000F38  EF85  F007         	goto	l2659
  3854  000F3C                     l856:
  3855  000F3C  C01B  F016         	movff	___lwdiv@quotient,?___lwdiv
  3856  000F40  C01C  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3857  000F44  0012               	return		;funcret
  3858  000F46                     __end_of___lwdiv:
  3859                           	opt callstack 0
  3860                           
  3861 ;; *************** function _LCDPutStr *****************
  3862 ;; Defined at:
  3863 ;;		line 147 in file "lcd.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  str             2   26[COMRAM] PTR const unsigned char 
  3866 ;;		 -> display@str1(16), display@str3(16), 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  i               1   28[COMRAM] unsigned char 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3878 ;;      Params:         2       0       0       0
  3879 ;;      Locals:         1       0       0       0
  3880 ;;      Temps:          0       0       0       0
  3881 ;;      Totals:         3       0       0       0
  3882 ;;Total ram usage:        3 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    5
  3885 ;; This function calls:
  3886 ;;		_LCDPutChar
  3887 ;; This function is called by:
  3888 ;;		_display
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text19
  3893  00132C                     __ptext19:
  3894                           	opt callstack 0
  3895  00132C                     _LCDPutStr:
  3896                           	opt callstack 24
  3897  00132C                     
  3898                           ;lcd.c: 148:     uint8_t i = 0;
  3899  00132C  0E00               	movlw	0
  3900  00132E  6E1D               	movwf	LCDPutStr@i^0,c
  3901                           
  3902                           ;lcd.c: 151:     while (str[i]) {
  3903  001330  EFA4  F009         	goto	l2647
  3904  001334                     l2643:
  3905                           
  3906                           ;lcd.c: 153:         LCDPutChar(str[i++]);
  3907  001334  501D               	movf	LCDPutStr@i^0,w,c
  3908  001336  241B               	addwf	LCDPutStr@str^0,w,c
  3909  001338  6ED9               	movwf	fsr2l,c
  3910  00133A  0E00               	movlw	0
  3911  00133C  201C               	addwfc	(LCDPutStr@str+1)^0,w,c
  3912  00133E  6EDA               	movwf	fsr2h,c
  3913  001340  50DF               	movf	indf2,w,c
  3914  001342  ECCE  F009         	call	_LCDPutChar
  3915  001346  2A1D               	incf	LCDPutStr@i^0,f,c
  3916  001348                     l2647:
  3917                           
  3918                           ;lcd.c: 151:     while (str[i]) {
  3919  001348  501D               	movf	LCDPutStr@i^0,w,c
  3920  00134A  241B               	addwf	LCDPutStr@str^0,w,c
  3921  00134C  6ED9               	movwf	fsr2l,c
  3922  00134E  0E00               	movlw	0
  3923  001350  201C               	addwfc	(LCDPutStr@str+1)^0,w,c
  3924  001352  6EDA               	movwf	fsr2h,c
  3925  001354  50DF               	movf	indf2,w,c
  3926  001356  A4D8               	btfss	status,2,c
  3927  001358  EFB0  F009         	goto	u2121
  3928  00135C  EFB2  F009         	goto	u2120
  3929  001360                     u2121:
  3930  001360  EF9A  F009         	goto	l2643
  3931  001364                     u2120:
  3932  001364  0012               	return		;funcret
  3933  001366                     __end_of_LCDPutStr:
  3934                           	opt callstack 0
  3935                           
  3936 ;; *************** function _LCDPutChar *****************
  3937 ;; Defined at:
  3938 ;;		line 119 in file "lcd.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  ch              1    wreg     unsigned char 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  ch              1   25[COMRAM] unsigned char 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  1    wreg      void 
  3945 ;; Registers used:
  3946 ;;		wreg, status,2, status,0, cstack
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3952 ;;      Params:         0       0       0       0
  3953 ;;      Locals:         1       0       0       0
  3954 ;;      Temps:          1       0       0       0
  3955 ;;      Totals:         2       0       0       0
  3956 ;;Total ram usage:        2 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; Hardware stack levels required when called:    4
  3959 ;; This function calls:
  3960 ;;		_LCDWriteNibble
  3961 ;; This function is called by:
  3962 ;;		_display
  3963 ;;		_LCDPutStr
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text20
  3968  00139C                     __ptext20:
  3969                           	opt callstack 0
  3970  00139C                     _LCDPutChar:
  3971                           	opt callstack 24
  3972                           
  3973                           ;incstack = 0
  3974                           ;LCDPutChar@ch stored from wreg
  3975  00139C  6E1A               	movwf	LCDPutChar@ch^0,c
  3976  00139E                     
  3977                           ;lcd.c: 120:     _delay((unsigned long)((5)*(40000000/4000.0)));
  3978  00139E  0E41               	movlw	65
  3979  0013A0  6E19               	movwf	??_LCDPutChar^0,c
  3980  0013A2  0EEE               	movlw	238
  3981  0013A4                     u2327:
  3982  0013A4  2EE8               	decfsz	wreg,f,c
  3983  0013A6  D7FE               	bra	u2327
  3984  0013A8  2E19               	decfsz	??_LCDPutChar^0,f,c
  3985  0013AA  D7FC               	bra	u2327
  3986  0013AC  F000 F000          	nop2	
  3987  0013B0                     
  3988                           ;lcd.c: 123:     LCDWriteNibble(ch, 1);
  3989  0013B0  0E01               	movlw	1
  3990  0013B2  6E16               	movwf	LCDWriteNibble@rs^0,c
  3991  0013B4  501A               	movf	LCDPutChar@ch^0,w,c
  3992  0013B6  ECDE  F006         	call	_LCDWriteNibble
  3993  0013BA                     
  3994                           ;lcd.c: 126:     ch = (ch << 4);
  3995  0013BA  381A               	swapf	LCDPutChar@ch^0,w,c
  3996  0013BC  0BF0               	andlw	240
  3997  0013BE  6E1A               	movwf	LCDPutChar@ch^0,c
  3998  0013C0                     
  3999                           ;lcd.c: 129:     LCDWriteNibble(ch, 1);
  4000  0013C0  0E01               	movlw	1
  4001  0013C2  6E16               	movwf	LCDWriteNibble@rs^0,c
  4002  0013C4  501A               	movf	LCDPutChar@ch^0,w,c
  4003  0013C6  ECDE  F006         	call	_LCDWriteNibble
  4004  0013CA  0012               	return		;funcret
  4005  0013CC                     __end_of_LCDPutChar:
  4006                           	opt callstack 0
  4007                           
  4008 ;; *************** function _configureTimer5 *****************
  4009 ;; Defined at:
  4010 ;;		line 286 in file "newmain.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		None
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4024 ;;      Params:         0       0       0       0
  4025 ;;      Locals:         0       0       0       0
  4026 ;;      Temps:          0       0       0       0
  4027 ;;      Totals:         0       0       0       0
  4028 ;;Total ram usage:        0 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    3
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_main
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text21
  4039  00140A                     __ptext21:
  4040                           	opt callstack 0
  4041  00140A                     _configureTimer5:
  4042                           	opt callstack 27
  4043  00140A                     
  4044                           ;newmain.c: 287:     T5CONbits.T5PS1 = 1;
  4045  00140A  88B7               	bsf	183,4,c	;volatile
  4046                           
  4047                           ;newmain.c: 288:     T5CONbits.T5PS0 = 1;
  4048  00140C  86B7               	bsf	183,3,c	;volatile
  4049                           
  4050                           ;newmain.c: 289:     T5CONbits.T5MOD = 0;
  4051  00140E  9AB7               	bcf	183,5,c	;volatile
  4052                           
  4053                           ;newmain.c: 290:     T5CONbits.TMR5ON = 1;
  4054  001410  80B7               	bsf	183,0,c	;volatile
  4055                           
  4056                           ;newmain.c: 291:     PIE3bits.TMR5IE = 1;
  4057  001412  80A3               	bsf	163,0,c	;volatile
  4058                           
  4059                           ;newmain.c: 292:     TMR5 = timer5ReloadValue;
  4060  001414  C0D9  FF87         	movff	_timer5ReloadValue,3975	;volatile
  4061  001418  C0DA  FF88         	movff	_timer5ReloadValue+1,3976	;volatile
  4062  00141C  0012               	return		;funcret
  4063  00141E                     __end_of_configureTimer5:
  4064                           	opt callstack 0
  4065                           
  4066 ;; *************** function _configureTimer2 *****************
  4067 ;; Defined at:
  4068 ;;		line 303 in file "newmain.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;		None
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      void 
  4075 ;; Registers used:
  4076 ;;		wreg, status,2
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4082 ;;      Params:         0       0       0       0
  4083 ;;      Locals:         0       0       0       0
  4084 ;;      Temps:          0       0       0       0
  4085 ;;      Totals:         0       0       0       0
  4086 ;;Total ram usage:        0 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    3
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_main
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           	psect	text22
  4097  001432                     __ptext22:
  4098                           	opt callstack 0
  4099  001432                     _configureTimer2:
  4100                           	opt callstack 27
  4101  001432                     
  4102                           ;newmain.c: 304:     T2CONbits.T2CKPS1 = 0;
  4103  001432  92CA               	bcf	202,1,c	;volatile
  4104                           
  4105                           ;newmain.c: 305:     T2CONbits.T2CKPS1 = 1;
  4106  001434  82CA               	bsf	202,1,c	;volatile
  4107                           
  4108                           ;newmain.c: 307:     T2CONbits.TMR2ON = 1;
  4109  001436  84CA               	bsf	202,2,c	;volatile
  4110                           
  4111                           ;newmain.c: 308:     PIE1bits.TMR2IE = 1;
  4112  001438  829D               	bsf	157,1,c	;volatile
  4113  00143A                     
  4114                           ;newmain.c: 309:     TMR2 = 230;
  4115  00143A  0EE6               	movlw	230
  4116  00143C  6ECC               	movwf	204,c	;volatile
  4117  00143E  0012               	return		;funcret
  4118  001440                     __end_of_configureTimer2:
  4119                           	opt callstack 0
  4120                           
  4121 ;; *************** function _configureTimer1 *****************
  4122 ;; Defined at:
  4123 ;;		line 275 in file "newmain.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;		None
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;		None
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      void 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4137 ;;      Params:         0       0       0       0
  4138 ;;      Locals:         0       0       0       0
  4139 ;;      Temps:          0       0       0       0
  4140 ;;      Totals:         0       0       0       0
  4141 ;;Total ram usage:        0 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    3
  4144 ;; This function calls:
  4145 ;;		Nothing
  4146 ;; This function is called by:
  4147 ;;		_main
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text23
  4152  00141E                     __ptext23:
  4153                           	opt callstack 0
  4154  00141E                     _configureTimer1:
  4155                           	opt callstack 27
  4156  00141E                     
  4157                           ;newmain.c: 277:     T1CONbits.T1CKPS1 = 1;
  4158  00141E  8ACD               	bsf	205,5,c	;volatile
  4159                           
  4160                           ;newmain.c: 278:     T1CONbits.T1CKPS0 = 1;
  4161  001420  88CD               	bsf	205,4,c	;volatile
  4162                           
  4163                           ;newmain.c: 280:     T1CONbits.TMR1CS = 0;
  4164  001422  92CD               	bcf	205,1,c	;volatile
  4165                           
  4166                           ;newmain.c: 281:     T1CONbits.TMR1ON = 1;
  4167  001424  80CD               	bsf	205,0,c	;volatile
  4168                           
  4169                           ;newmain.c: 282:     PIE1bits.TMR1IE = 1;
  4170  001426  809D               	bsf	157,0,c	;volatile
  4171  001428                     
  4172                           ;newmain.c: 283:     TMR1 = 0;
  4173  001428  0E00               	movlw	0
  4174  00142A  6ECF               	movwf	207,c	;volatile
  4175  00142C  0E00               	movlw	0
  4176  00142E  6ECE               	movwf	206,c	;volatile
  4177  001430  0012               	return		;funcret
  4178  001432                     __end_of_configureTimer1:
  4179                           	opt callstack 0
  4180                           
  4181 ;; *************** function _configureTimer0 *****************
  4182 ;; Defined at:
  4183 ;;		line 257 in file "newmain.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;		None
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;		None
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      void 
  4190 ;; Registers used:
  4191 ;;		None
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4197 ;;      Params:         0       0       0       0
  4198 ;;      Locals:         0       0       0       0
  4199 ;;      Temps:          0       0       0       0
  4200 ;;      Totals:         0       0       0       0
  4201 ;;Total ram usage:        0 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; Hardware stack levels required when called:    3
  4204 ;; This function calls:
  4205 ;;		Nothing
  4206 ;; This function is called by:
  4207 ;;		_main
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text24
  4212  0013F4                     __ptext24:
  4213                           	opt callstack 0
  4214  0013F4                     _configureTimer0:
  4215                           	opt callstack 27
  4216  0013F4                     
  4217                           ;newmain.c: 261:     T0CONbits.PSA = 0;
  4218  0013F4  96D5               	bcf	213,3,c	;volatile
  4219                           
  4220                           ;newmain.c: 262:     T0CONbits.T0SE = 0;
  4221  0013F6  98D5               	bcf	213,4,c	;volatile
  4222                           
  4223                           ;newmain.c: 263:     T0CONbits.T0CS = 0;
  4224  0013F8  9AD5               	bcf	213,5,c	;volatile
  4225                           
  4226                           ;newmain.c: 264:     T0CONbits.T016BIT = 0;
  4227  0013FA  9CD5               	bcf	213,6,c	;volatile
  4228                           
  4229                           ;newmain.c: 265:     T0CONbits.TMR0ON = 1;
  4230  0013FC  8ED5               	bsf	213,7,c	;volatile
  4231                           
  4232                           ;newmain.c: 266:     T0CONbits.T0PS0 = 1;
  4233  0013FE  80D5               	bsf	213,0,c	;volatile
  4234                           
  4235                           ;newmain.c: 267:     T0CONbits.T0PS1 = 1;
  4236  001400  82D5               	bsf	213,1,c	;volatile
  4237                           
  4238                           ;newmain.c: 268:     T0CONbits.T0PS2 = 0;
  4239  001402  94D5               	bcf	213,2,c	;volatile
  4240                           
  4241                           ;newmain.c: 269:     INTCONbits.TMR0IE = 1;
  4242  001404  8AF2               	bsf	242,5,c	;volatile
  4243                           
  4244                           ;newmain.c: 270:     INTCON2bits.TMR0IP = 0;
  4245  001406  94F1               	bcf	241,2,c	;volatile
  4246  001408  0012               	return		;funcret
  4247  00140A                     __end_of_configureTimer0:
  4248                           	opt callstack 0
  4249                           
  4250 ;; *************** function _configurePWM *****************
  4251 ;; Defined at:
  4252 ;;		line 130 in file "newmain.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4266 ;;      Params:         0       0       0       0
  4267 ;;      Locals:         0       0       0       0
  4268 ;;      Temps:          0       0       0       0
  4269 ;;      Totals:         0       0       0       0
  4270 ;;Total ram usage:        0 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    3
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text25
  4281  001222                     __ptext25:
  4282                           	opt callstack 0
  4283  001222                     _configurePWM:
  4284                           	opt callstack 27
  4285  001222                     
  4286                           ;newmain.c: 131:     LATB = 0;
  4287  001222  0E00               	movlw	0
  4288  001224  6E8A               	movwf	138,c	;volatile
  4289                           
  4290                           ;newmain.c: 132:     TRISB = 0;
  4291  001226  0E00               	movlw	0
  4292  001228  6E93               	movwf	147,c	;volatile
  4293                           
  4294                           ;newmain.c: 133:     PORTB = 0;
  4295  00122A  0E00               	movlw	0
  4296  00122C  6E81               	movwf	129,c	;volatile
  4297  00122E                     
  4298                           ;newmain.c: 136:     PTCON0bits.PTMOD0 = 0;
  4299  00122E  907F               	bcf	127,0,c	;volatile
  4300  001230                     
  4301                           ;newmain.c: 137:     PTCON0bits.PTMOD1 = 0;
  4302  001230  927F               	bcf	127,1,c	;volatile
  4303  001232                     
  4304                           ;newmain.c: 138:     PTCON0bits.PTCKPS1 = 0;
  4305  001232  967F               	bcf	127,3,c	;volatile
  4306  001234                     
  4307                           ;newmain.c: 139:     PTCON0bits.PTCKPS0 = 0;
  4308  001234  947F               	bcf	127,2,c	;volatile
  4309  001236                     
  4310                           ;newmain.c: 140:     PTCON0bits.PTOPS0 = 0;
  4311  001236  987F               	bcf	127,4,c	;volatile
  4312  001238                     
  4313                           ;newmain.c: 141:     PTCON0bits.PTOPS1 = 0;
  4314  001238  9A7F               	bcf	127,5,c	;volatile
  4315  00123A                     
  4316                           ;newmain.c: 142:     PTCON0bits.PTOPS2 = 0;
  4317  00123A  9C7F               	bcf	127,6,c	;volatile
  4318  00123C                     
  4319                           ;newmain.c: 143:     PTCON0bits.PTOPS3 = 0;
  4320  00123C  9E7F               	bcf	127,7,c	;volatile
  4321  00123E                     
  4322                           ;newmain.c: 156:     PTCON1bits.PTEN = 0;
  4323  00123E  9E7E               	bcf	126,7,c	;volatile
  4324  001240                     
  4325                           ;newmain.c: 157:     PTCON1bits.PTDIR = 0;
  4326  001240  9C7E               	bcf	126,6,c	;volatile
  4327  001242                     
  4328                           ;newmain.c: 159:     PWMCON0bits.PWMEN2 = 1;
  4329  001242  8C6F               	bsf	111,6,c	;volatile
  4330  001244                     
  4331                           ;newmain.c: 160:     PWMCON0bits.PWMEN1 = 0;
  4332  001244  9A6F               	bcf	111,5,c	;volatile
  4333  001246                     
  4334                           ;newmain.c: 161:     PWMCON0bits.PWMEN0 = 0;
  4335  001246  986F               	bcf	111,4,c	;volatile
  4336  001248                     
  4337                           ;newmain.c: 163:     PWMCON0bits.PMOD0 = 0;
  4338  001248  906F               	bcf	111,0,c	;volatile
  4339  00124A                     
  4340                           ;newmain.c: 164:     PWMCON0bits.PMOD1 = 0;
  4341  00124A  926F               	bcf	111,1,c	;volatile
  4342  00124C                     
  4343                           ;newmain.c: 165:     PWMCON0bits.PMOD2 = 0;
  4344  00124C  946F               	bcf	111,2,c	;volatile
  4345  00124E                     
  4346                           ;newmain.c: 173:     PWMCON1bits.UDIS = 0;
  4347  00124E  926E               	bcf	110,1,c	;volatile
  4348  001250                     
  4349                           ;newmain.c: 174:     PWMCON1bits.OSYNC = 1;
  4350  001250  806E               	bsf	110,0,c	;volatile
  4351                           
  4352                           ;newmain.c: 179:     PTPERH = 0x01;
  4353  001252  0E01               	movlw	1
  4354  001254  6E7A               	movwf	122,c	;volatile
  4355                           
  4356                           ;newmain.c: 180:     PTPERL = 0xF3;
  4357  001256  0EF3               	movlw	243
  4358  001258  6E7B               	movwf	123,c	;volatile
  4359  00125A                     
  4360                           ;newmain.c: 191:     OVDCOND = 0xff;
  4361  00125A  686B               	setf	107,c	;volatile
  4362                           
  4363                           ;newmain.c: 201:     OVDCONS = 0;
  4364  00125C  0E00               	movlw	0
  4365  00125E  6E6A               	movwf	106,c	;volatile
  4366  001260                     
  4367                           ;newmain.c: 204:     DTCONbits.DTPS1 = 0;
  4368  001260  9E6D               	bcf	109,7,c	;volatile
  4369  001262                     
  4370                           ;newmain.c: 205:     DTCONbits.DTPS0 = 0;
  4371  001262  9C6D               	bcf	109,6,c	;volatile
  4372  001264                     
  4373                           ;newmain.c: 206:     DTCON |= 40;
  4374  001264  0E28               	movlw	40
  4375  001266  126D               	iorwf	109,f,c	;volatile
  4376  001268  0012               	return		;funcret
  4377  00126A                     __end_of_configurePWM:
  4378                           	opt callstack 0
  4379                           
  4380 ;; *************** function _configureInterrupts *****************
  4381 ;; Defined at:
  4382 ;;		line 218 in file "newmain.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		None
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4396 ;;      Params:         0       0       0       0
  4397 ;;      Locals:         0       0       0       0
  4398 ;;      Temps:          0       0       0       0
  4399 ;;      Totals:         0       0       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    3
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_main
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text26
  4411  001460                     __ptext26:
  4412                           	opt callstack 0
  4413  001460                     _configureInterrupts:
  4414                           	opt callstack 27
  4415  001460                     
  4416                           ;newmain.c: 219:     INTCONbits.GIE = 1;
  4417  001460  8EF2               	bsf	242,7,c	;volatile
  4418                           
  4419                           ;newmain.c: 220:     INTCONbits.PEIE = 1;
  4420  001462  8CF2               	bsf	242,6,c	;volatile
  4421  001464  0012               	return		;funcret
  4422  001466                     __end_of_configureInterrupts:
  4423                           	opt callstack 0
  4424                           
  4425 ;; *************** function _configureInputs *****************
  4426 ;; Defined at:
  4427 ;;		line 295 in file "newmain.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;		None
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;		None
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      void 
  4434 ;; Registers used:
  4435 ;;		None
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4441 ;;      Params:         0       0       0       0
  4442 ;;      Locals:         0       0       0       0
  4443 ;;      Temps:          0       0       0       0
  4444 ;;      Totals:         0       0       0       0
  4445 ;;Total ram usage:        0 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    3
  4448 ;; This function calls:
  4449 ;;		Nothing
  4450 ;; This function is called by:
  4451 ;;		_main
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text27
  4456  001456                     __ptext27:
  4457                           	opt callstack 0
  4458  001456                     _configureInputs:
  4459                           	opt callstack 27
  4460  001456                     
  4461                           ;newmain.c: 296:     TRISAbits.TRISA1 = 1;
  4462  001456  8292               	bsf	146,1,c	;volatile
  4463                           
  4464                           ;newmain.c: 297:     ANSEL0bits.ANS1 = 0;
  4465  001458  92B8               	bcf	184,1,c	;volatile
  4466                           
  4467                           ;newmain.c: 299:     TRISAbits.TRISA3 = 1;
  4468  00145A  8692               	bsf	146,3,c	;volatile
  4469                           
  4470                           ;newmain.c: 300:     ANSEL0bits.ANS3 = 0;
  4471  00145C  96B8               	bcf	184,3,c	;volatile
  4472  00145E  0012               	return		;funcret
  4473  001460                     __end_of_configureInputs:
  4474                           	opt callstack 0
  4475                           
  4476 ;; *************** function _configureADC *****************
  4477 ;; Defined at:
  4478 ;;		line 223 in file "newmain.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4492 ;;      Params:         0       0       0       0
  4493 ;;      Locals:         0       0       0       0
  4494 ;;      Temps:          0       0       0       0
  4495 ;;      Totals:         0       0       0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    3
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_main
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text28
  4507  0013CC                     __ptext28:
  4508                           	opt callstack 0
  4509  0013CC                     _configureADC:
  4510                           	opt callstack 27
  4511  0013CC                     
  4512                           ;newmain.c: 225:     ADCON0bits.ACONV = 1;
  4513  0013CC  8AC2               	bsf	194,5,c	;volatile
  4514                           
  4515                           ;newmain.c: 226:     ADCON0bits.ACSCH = 0;
  4516  0013CE  98C2               	bcf	194,4,c	;volatile
  4517                           
  4518                           ;newmain.c: 227:     ADCON0bits.ACMOD1 = 0;
  4519  0013D0  96C2               	bcf	194,3,c	;volatile
  4520                           
  4521                           ;newmain.c: 228:     ADCON0bits.ACMOD0 = 0;
  4522  0013D2  94C2               	bcf	194,2,c	;volatile
  4523  0013D4                     
  4524                           ;newmain.c: 230:     ADCON1 = 0;
  4525  0013D4  0E00               	movlw	0
  4526  0013D6  6EC1               	movwf	193,c	;volatile
  4527  0013D8                     
  4528                           ;newmain.c: 232:     ADCON2bits.ACQT2 = 1;
  4529  0013D8  8AC0               	bsf	192,5,c	;volatile
  4530  0013DA                     
  4531                           ;newmain.c: 233:     ADCON2bits.ACQT1 = 1;
  4532  0013DA  88C0               	bsf	192,4,c	;volatile
  4533  0013DC                     
  4534                           ;newmain.c: 236:     ADCON2bits.ADCS2 = 1;
  4535  0013DC  84C0               	bsf	192,2,c	;volatile
  4536  0013DE                     
  4537                           ;newmain.c: 237:     ADCON2bits.ADCS1 = 1;
  4538  0013DE  82C0               	bsf	192,1,c	;volatile
  4539  0013E0                     
  4540                           ;newmain.c: 238:     ADCON2bits.ADFM = 0;
  4541  0013E0  9EC0               	bcf	192,7,c	;volatile
  4542  0013E2                     
  4543                           ;newmain.c: 241:     ADCON3bits.ADRS1 = 1;
  4544  0013E2  8E9A               	bsf	154,7,c	;volatile
  4545  0013E4                     
  4546                           ;newmain.c: 243:     ADCHSbits.GASEL1 = 0;
  4547  0013E4  9299               	bcf	153,1,c	;volatile
  4548  0013E6                     
  4549                           ;newmain.c: 244:     ADCHSbits.GASEL0 = 0;
  4550  0013E6  9099               	bcf	153,0,c	;volatile
  4551  0013E8                     
  4552                           ;newmain.c: 246:     ANSEL0bits.ANS0 = 1;
  4553  0013E8  80B8               	bsf	184,0,c	;volatile
  4554  0013EA                     
  4555                           ;newmain.c: 247:     TRISAbits.TRISA0 = 1;
  4556  0013EA  8092               	bsf	146,0,c	;volatile
  4557  0013EC                     
  4558                           ;newmain.c: 250:     PIE1bits.ADIE = 0;
  4559  0013EC  9C9D               	bcf	157,6,c	;volatile
  4560  0013EE                     
  4561                           ;newmain.c: 252:     ADCON0bits.ADON = 1;
  4562  0013EE  80C2               	bsf	194,0,c	;volatile
  4563  0013F0                     
  4564                           ;newmain.c: 254:     ADCON0bits.GODONE = 1;
  4565  0013F0  82C2               	bsf	194,1,c	;volatile
  4566  0013F2  0012               	return		;funcret
  4567  0013F4                     __end_of_configureADC:
  4568                           	opt callstack 0
  4569                           
  4570 ;; *************** function _LCD_Initialize *****************
  4571 ;; Defined at:
  4572 ;;		line 48 in file "lcd.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;		None
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;		None
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      void 
  4579 ;; Registers used:
  4580 ;;		wreg, status,2, status,0, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4586 ;;      Params:         0       0       0       0
  4587 ;;      Locals:         0       0       0       0
  4588 ;;      Temps:          2       0       0       0
  4589 ;;      Totals:         2       0       0       0
  4590 ;;Total ram usage:        2 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    5
  4593 ;; This function calls:
  4594 ;;		_LCDPutCmd
  4595 ;; This function is called by:
  4596 ;;		_main
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text29
  4601  001138                     __ptext29:
  4602                           	opt callstack 0
  4603  001138                     _LCD_Initialize:
  4604                           	opt callstack 25
  4605  001138                     
  4606                           ;lcd.c: 51:     TRISCbits.RC0 = 0;
  4607  001138  9094               	bcf	148,0,c	;volatile
  4608                           
  4609                           ;lcd.c: 52:     TRISCbits.RC1 = 0;
  4610  00113A  9294               	bcf	148,1,c	;volatile
  4611                           
  4612                           ;lcd.c: 53:     TRISCbits.RC2 = 0;
  4613  00113C  9494               	bcf	148,2,c	;volatile
  4614                           
  4615                           ;lcd.c: 54:     TRISCbits.RC3 = 0;
  4616  00113E  9694               	bcf	148,3,c	;volatile
  4617                           
  4618                           ;lcd.c: 55:     TRISDbits.RD0 = 0;
  4619  001140  9095               	bcf	149,0,c	;volatile
  4620                           
  4621                           ;lcd.c: 56:     TRISDbits.RD1 = 0;
  4622  001142  9295               	bcf	149,1,c	;volatile
  4623                           
  4624                           ;lcd.c: 59:     PORTCbits.RC0 = 0;
  4625  001144  9082               	bcf	130,0,c	;volatile
  4626                           
  4627                           ;lcd.c: 60:     PORTCbits.RC1 = 0;
  4628  001146  9282               	bcf	130,1,c	;volatile
  4629                           
  4630                           ;lcd.c: 61:     PORTCbits.RC2 = 0;
  4631  001148  9482               	bcf	130,2,c	;volatile
  4632                           
  4633                           ;lcd.c: 62:     PORTCbits.RC3 = 0;
  4634  00114A  9682               	bcf	130,3,c	;volatile
  4635                           
  4636                           ;lcd.c: 63:     PORTDbits.RD0 = 0;
  4637  00114C  9083               	bcf	131,0,c	;volatile
  4638                           
  4639                           ;lcd.c: 64:     PORTDbits.RD1 = 0;
  4640  00114E  9283               	bcf	131,1,c	;volatile
  4641  001150                     
  4642                           ;lcd.c: 71:     _delay((unsigned long)((20)*(40000000/4000.0)));
  4643  001150  0E02               	movlw	2
  4644  001152  6E1C               	movwf	(??_LCD_Initialize+1)^0,c
  4645  001154  0E04               	movlw	4
  4646  001156  6E1B               	movwf	??_LCD_Initialize^0,c
  4647  001158  0EBA               	movlw	186
  4648  00115A                     u2337:
  4649  00115A  2EE8               	decfsz	wreg,f,c
  4650  00115C  D7FE               	bra	u2337
  4651  00115E  2E1B               	decfsz	??_LCD_Initialize^0,f,c
  4652  001160  D7FC               	bra	u2337
  4653  001162  2E1C               	decfsz	(??_LCD_Initialize+1)^0,f,c
  4654  001164  D7FA               	bra	u2337
  4655  001166  F000 F000          	nop2	
  4656  00116A                     
  4657                           ;lcd.c: 74:     LCDPutCmd(0x32);
  4658  00116A  0E32               	movlw	50
  4659  00116C  EC77  F009         	call	_LCDPutCmd
  4660  001170                     
  4661                           ;lcd.c: 77:     LCDPutCmd(0x28);
  4662  001170  0E28               	movlw	40
  4663  001172  EC77  F009         	call	_LCDPutCmd
  4664  001176                     
  4665                           ;lcd.c: 80:     LCDPutCmd(0x0C);
  4666  001176  0E0C               	movlw	12
  4667  001178  EC77  F009         	call	_LCDPutCmd
  4668  00117C                     
  4669                           ;lcd.c: 82:     LCDPutCmd(0x01);
  4670  00117C  0E01               	movlw	1
  4671  00117E  EC77  F009         	call	_LCDPutCmd
  4672  001182                     
  4673                           ;lcd.c: 85:     LCDPutCmd(0x06);
  4674  001182  0E06               	movlw	6
  4675  001184  EC77  F009         	call	_LCDPutCmd
  4676  001188  0012               	return		;funcret
  4677  00118A                     __end_of_LCD_Initialize:
  4678                           	opt callstack 0
  4679                           
  4680 ;; *************** function _LCDPutCmd *****************
  4681 ;; Defined at:
  4682 ;;		line 132 in file "lcd.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;  ch              1    wreg     unsigned char 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  ch              1   25[COMRAM] unsigned char 
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  1    wreg      void 
  4689 ;; Registers used:
  4690 ;;		wreg, status,2, status,0, cstack
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4696 ;;      Params:         0       0       0       0
  4697 ;;      Locals:         1       0       0       0
  4698 ;;      Temps:          1       0       0       0
  4699 ;;      Totals:         2       0       0       0
  4700 ;;Total ram usage:        2 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; Hardware stack levels required when called:    4
  4703 ;; This function calls:
  4704 ;;		_LCDWriteNibble
  4705 ;; This function is called by:
  4706 ;;		_display
  4707 ;;		_LCD_Initialize
  4708 ;;		_LCDGoto
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text30
  4713  0012EE                     __ptext30:
  4714                           	opt callstack 0
  4715  0012EE                     _LCDPutCmd:
  4716                           	opt callstack 25
  4717                           
  4718                           ;incstack = 0
  4719                           ;LCDPutCmd@ch stored from wreg
  4720  0012EE  6E1A               	movwf	LCDPutCmd@ch^0,c
  4721  0012F0                     
  4722                           ;lcd.c: 133:     _delay((unsigned long)((5)*(40000000/4000.0)));
  4723  0012F0  0E41               	movlw	65
  4724  0012F2  6E19               	movwf	??_LCDPutCmd^0,c
  4725  0012F4  0EEE               	movlw	238
  4726  0012F6                     u2347:
  4727  0012F6  2EE8               	decfsz	wreg,f,c
  4728  0012F8  D7FE               	bra	u2347
  4729  0012FA  2E19               	decfsz	??_LCDPutCmd^0,f,c
  4730  0012FC  D7FC               	bra	u2347
  4731  0012FE  F000 F000          	nop2	
  4732  001302                     
  4733                           ;lcd.c: 136:     LCDWriteNibble(ch, 0);
  4734  001302  0E00               	movlw	0
  4735  001304  6E16               	movwf	LCDWriteNibble@rs^0,c
  4736  001306  501A               	movf	LCDPutCmd@ch^0,w,c
  4737  001308  ECDE  F006         	call	_LCDWriteNibble
  4738  00130C                     
  4739                           ;lcd.c: 139:     ch = (ch << 4);
  4740  00130C  381A               	swapf	LCDPutCmd@ch^0,w,c
  4741  00130E  0BF0               	andlw	240
  4742  001310  6E1A               	movwf	LCDPutCmd@ch^0,c
  4743  001312                     
  4744                           ;lcd.c: 141:     _delay((unsigned long)((1)*(40000000/4000.0)));
  4745  001312  0E0D               	movlw	13
  4746  001314  6E19               	movwf	??_LCDPutCmd^0,c
  4747  001316  0EFC               	movlw	252
  4748  001318                     u2357:
  4749  001318  2EE8               	decfsz	wreg,f,c
  4750  00131A  D7FE               	bra	u2357
  4751  00131C  2E19               	decfsz	??_LCDPutCmd^0,f,c
  4752  00131E  D7FC               	bra	u2357
  4753  001320                     
  4754                           ;lcd.c: 144:     LCDWriteNibble(ch, 0);
  4755  001320  0E00               	movlw	0
  4756  001322  6E16               	movwf	LCDWriteNibble@rs^0,c
  4757  001324  501A               	movf	LCDPutCmd@ch^0,w,c
  4758  001326  ECDE  F006         	call	_LCDWriteNibble
  4759  00132A  0012               	return		;funcret
  4760  00132C                     __end_of_LCDPutCmd:
  4761                           	opt callstack 0
  4762                           
  4763 ;; *************** function _LCDWriteNibble *****************
  4764 ;; Defined at:
  4765 ;;		line 89 in file "lcd.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  ch              1    wreg     unsigned char 
  4768 ;;  rs              1   21[COMRAM] unsigned char 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  ch              1   23[COMRAM] unsigned char 
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      void 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2, status,0
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4780 ;;      Params:         1       0       0       0
  4781 ;;      Locals:         1       0       0       0
  4782 ;;      Temps:          1       0       0       0
  4783 ;;      Totals:         3       0       0       0
  4784 ;;Total ram usage:        3 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; Hardware stack levels required when called:    3
  4787 ;; This function calls:
  4788 ;;		Nothing
  4789 ;; This function is called by:
  4790 ;;		_LCDPutChar
  4791 ;;		_LCDPutCmd
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text31
  4796  000DBC                     __ptext31:
  4797                           	opt callstack 0
  4798  000DBC                     _LCDWriteNibble:
  4799                           	opt callstack 24
  4800                           
  4801                           ;incstack = 0
  4802                           ;LCDWriteNibble@ch stored from wreg
  4803  000DBC  6E18               	movwf	LCDWriteNibble@ch^0,c
  4804  000DBE                     
  4805                           ;lcd.c: 91:     ch = (ch >> 4);
  4806  000DBE  3818               	swapf	LCDWriteNibble@ch^0,w,c
  4807  000DC0  0B0F               	andlw	15
  4808  000DC2  6E18               	movwf	LCDWriteNibble@ch^0,c
  4809                           
  4810                           ;lcd.c: 94:     ch = (ch & 0x0F);
  4811  000DC4  5018               	movf	LCDWriteNibble@ch^0,w,c
  4812  000DC6  0B0F               	andlw	15
  4813  000DC8  6E18               	movwf	LCDWriteNibble@ch^0,c
  4814                           
  4815                           ;lcd.c: 95:     PORTCbits.RC2 = ch & 0xF1;
  4816  000DCA  C018  F017         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  4817  000DCE  0EF1               	movlw	241
  4818  000DD0  1617               	andwf	??_LCDWriteNibble^0,f,c
  4819  000DD2  4617               	rlncf	??_LCDWriteNibble^0,f,c
  4820  000DD4  4617               	rlncf	??_LCDWriteNibble^0,f,c
  4821  000DD6  5082               	movf	130,w,c	;volatile
  4822  000DD8  1817               	xorwf	??_LCDWriteNibble^0,w,c
  4823  000DDA  0BFB               	andlw	-5
  4824  000DDC  1817               	xorwf	??_LCDWriteNibble^0,w,c
  4825  000DDE  6E82               	movwf	130,c	;volatile
  4826                           
  4827                           ;lcd.c: 96:     PORTCbits.RC3 = (ch & 0xF2) >> 1;
  4828  000DE0  C018  F017         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  4829  000DE4  90D8               	bcf	status,0,c
  4830  000DE6  3217               	rrcf	??_LCDWriteNibble^0,f,c
  4831  000DE8  0E79               	movlw	121
  4832  000DEA  1617               	andwf	??_LCDWriteNibble^0,f,c
  4833  000DEC  4617               	rlncf	??_LCDWriteNibble^0,f,c
  4834  000DEE  4617               	rlncf	??_LCDWriteNibble^0,f,c
  4835  000DF0  4617               	rlncf	??_LCDWriteNibble^0,f,c
  4836  000DF2  5082               	movf	130,w,c	;volatile
  4837  000DF4  1817               	xorwf	??_LCDWriteNibble^0,w,c
  4838  000DF6  0BF7               	andlw	-9
  4839  000DF8  1817               	xorwf	??_LCDWriteNibble^0,w,c
  4840  000DFA  6E82               	movwf	130,c	;volatile
  4841                           
  4842                           ;lcd.c: 97:     PORTDbits.RD0 = (ch & 0xF4) >> 2;
  4843  000DFC  C018  F017         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  4844  000E00  90D8               	bcf	status,0,c
  4845  000E02  3217               	rrcf	??_LCDWriteNibble^0,f,c
  4846  000E04  90D8               	bcf	status,0,c
  4847  000E06  3217               	rrcf	??_LCDWriteNibble^0,f,c
  4848  000E08  0E3D               	movlw	61
  4849  000E0A  1617               	andwf	??_LCDWriteNibble^0,f,c
  4850  000E0C  5083               	movf	131,w,c	;volatile
  4851  000E0E  1817               	xorwf	??_LCDWriteNibble^0,w,c
  4852  000E10  0BFE               	andlw	-2
  4853  000E12  1817               	xorwf	??_LCDWriteNibble^0,w,c
  4854  000E14  6E83               	movwf	131,c	;volatile
  4855                           
  4856                           ;lcd.c: 98:     PORTDbits.RD1 = (ch & 0xF8) >> 3;
  4857  000E16  C018  F017         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  4858  000E1A  90D8               	bcf	status,0,c
  4859  000E1C  3217               	rrcf	??_LCDWriteNibble^0,f,c
  4860  000E1E  90D8               	bcf	status,0,c
  4861  000E20  3217               	rrcf	??_LCDWriteNibble^0,f,c
  4862  000E22  90D8               	bcf	status,0,c
  4863  000E24  3217               	rrcf	??_LCDWriteNibble^0,f,c
  4864  000E26  0E1F               	movlw	31
  4865  000E28  1617               	andwf	??_LCDWriteNibble^0,f,c
  4866  000E2A  4617               	rlncf	??_LCDWriteNibble^0,f,c
  4867  000E2C  5083               	movf	131,w,c	;volatile
  4868  000E2E  1817               	xorwf	??_LCDWriteNibble^0,w,c
  4869  000E30  0BFD               	andlw	-3
  4870  000E32  1817               	xorwf	??_LCDWriteNibble^0,w,c
  4871  000E34  6E83               	movwf	131,c	;volatile
  4872  000E36                     
  4873                           ;lcd.c: 107:     PORTCbits.RC0 = rs;
  4874  000E36  B016               	btfsc	LCDWriteNibble@rs^0,0,c
  4875  000E38  D002               	bra	u2065
  4876  000E3A  9082               	bcf	130,0,c	;volatile
  4877  000E3C  D001               	bra	u2066
  4878  000E3E                     u2065:
  4879  000E3E  8082               	bsf	130,0,c	;volatile
  4880  000E40                     u2066:
  4881  000E40                     
  4882                           ;lcd.c: 113:     PORTCbits.RC1 = 1;
  4883  000E40  8282               	bsf	130,1,c	;volatile
  4884  000E42                     
  4885                           ;lcd.c: 114:     _delay((unsigned long)((1)*(40000000/4000000.0)));
  4886  000E42  0E03               	movlw	3
  4887  000E44                     u2367:
  4888  000E44  2EE8               	decfsz	wreg,f,c
  4889  000E46  D7FE               	bra	u2367
  4890  000E48  F000               	nop	
  4891  000E4A                     
  4892                           ;lcd.c: 116:     PORTCbits.RC1 = 0;
  4893  000E4A  9282               	bcf	130,1,c	;volatile
  4894  000E4C  0012               	return		;funcret
  4895  000E4E                     __end_of_LCDWriteNibble:
  4896                           	opt callstack 0
  4897                           
  4898 ;; *************** function _tcInt *****************
  4899 ;; Defined at:
  4900 ;;		line 365 in file "newmain.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  duty            1   20[COMRAM] unsigned char 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4914 ;;      Params:         0       0       0       0
  4915 ;;      Locals:         1       0       0       0
  4916 ;;      Temps:          9       0       0       0
  4917 ;;      Totals:        10       0       0       0
  4918 ;;Total ram usage:       10 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    2
  4921 ;; This function calls:
  4922 ;;		_updateSinusIndexes
  4923 ;; This function is called by:
  4924 ;;		Interrupt level 1
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	intcodelo
  4929  000018                     __pintcodelo:
  4930                           	opt callstack 0
  4931  000018                     _tcInt:
  4932                           	opt callstack 19
  4933                           
  4934                           ;incstack = 0
  4935  000018  8049               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4936  00001A  CFD8 F00C          	movff	status,??_tcInt
  4937  00001E  CFE8 F00D          	movff	wreg,??_tcInt+1
  4938  000022  CFE0 F00E          	movff	bsr,??_tcInt+2
  4939  000026  CFF3 F00F          	movff	prodl,??_tcInt+3
  4940  00002A  CFF4 F010          	movff	prodh,??_tcInt+4
  4941  00002E  CFF6 F011          	movff	tblptrl,??_tcInt+5
  4942  000032  CFF7 F012          	movff	tblptrh,??_tcInt+6
  4943  000036  CFF8 F013          	movff	tblptru,??_tcInt+7
  4944  00003A  CFF5 F014          	movff	tablat,??_tcInt+8
  4945  00003E                     
  4946                           ;newmain.c: 372:     if (INTCONbits.TMR0IF) {
  4947  00003E  A4F2               	btfss	242,2,c	;volatile
  4948  000040  EF24  F000         	goto	i1u157_21
  4949  000044  EF26  F000         	goto	i1u157_20
  4950  000048                     i1u157_21:
  4951  000048  EF45  F000         	goto	i1l2313
  4952  00004C                     i1u157_20:
  4953  00004C                     
  4954                           ;newmain.c: 383:         INTCONbits.TMR0IF = 0;
  4955  00004C  94F2               	bcf	242,2,c	;volatile
  4956                           
  4957                           ;newmain.c: 385:         PWMCON1bits.UDIS = 1;
  4958  00004E  826E               	bsf	110,1,c	;volatile
  4959  000050                     
  4960                           ;newmain.c: 386:         unsigned char duty = (sinusValue1 >> 8);
  4961  000050  5038               	movf	(_sinusValue1+1)^0,w,c	;volatile
  4962  000052  6E15               	movwf	tcInt@duty^0,c
  4963  000054                     
  4964                           ;newmain.c: 387:         PDC0H = duty;
  4965  000054  C015  FF78         	movff	tcInt@duty,3960	;volatile
  4966  000058                     
  4967                           ;newmain.c: 388:         PDC0L = sinusValue1;
  4968  000058  C037  FF79         	movff	_sinusValue1,3961	;volatile
  4969                           
  4970                           ;newmain.c: 390:         duty = (sinusValue2 >> 8);
  4971  00005C  5043               	movf	(_sinusValue2+1)^0,w,c	;volatile
  4972  00005E  6E15               	movwf	tcInt@duty^0,c
  4973  000060                     
  4974                           ;newmain.c: 391:         PDC1H = duty;
  4975  000060  C015  FF76         	movff	tcInt@duty,3958	;volatile
  4976  000064                     
  4977                           ;newmain.c: 392:         PDC1L = sinusValue2;
  4978  000064  C042  FF77         	movff	_sinusValue2,3959	;volatile
  4979                           
  4980                           ;newmain.c: 394:         duty = (sinusValue3 >> 8);
  4981  000068  5041               	movf	(_sinusValue3+1)^0,w,c	;volatile
  4982  00006A  6E15               	movwf	tcInt@duty^0,c
  4983  00006C                     
  4984                           ;newmain.c: 395:         PDC2H = duty;
  4985  00006C  C015  FF74         	movff	tcInt@duty,3956	;volatile
  4986  000070                     
  4987                           ;newmain.c: 396:         PDC2L = sinusValue3;
  4988  000070  C040  FF75         	movff	_sinusValue3,3957	;volatile
  4989  000074                     
  4990                           ;newmain.c: 397:         PWMCON1bits.UDIS = 0;
  4991  000074  926E               	bcf	110,1,c	;volatile
  4992  000076                     
  4993                           ;newmain.c: 399:         sinusIndex1 += 4;
  4994  000076  0E04               	movlw	4
  4995  000078  263D               	addwf	_sinusIndex1^0,f,c	;volatile
  4996  00007A                     
  4997                           ;newmain.c: 400:         sinusIndex2 += 4;
  4998  00007A  0E04               	movlw	4
  4999  00007C  2647               	addwf	_sinusIndex2^0,f,c	;volatile
  5000  00007E                     
  5001                           ;newmain.c: 401:         sinusIndex3 += 4;
  5002  00007E  0E04               	movlw	4
  5003  000080  2646               	addwf	_sinusIndex3^0,f,c	;volatile
  5004  000082                     
  5005                           ;newmain.c: 403:         TMR0 = timer0ReloadValue;
  5006  000082  C03E  FFD6         	movff	_timer0ReloadValue,4054	;volatile
  5007  000086  C03F  FFD7         	movff	_timer0ReloadValue+1,4055	;volatile
  5008  00008A                     i1l2313:
  5009                           
  5010                           ;newmain.c: 408:     if (PIR1bits.TMR1IF) {
  5011  00008A  A09E               	btfss	158,0,c	;volatile
  5012  00008C  EF4A  F000         	goto	i1u158_21
  5013  000090  EF4C  F000         	goto	i1u158_20
  5014  000094                     i1u158_21:
  5015  000094  EF54  F000         	goto	i1l2319
  5016  000098                     i1u158_20:
  5017  000098                     
  5018                           ;newmain.c: 410:         PIR1bits.TMR1IF = 0;
  5019  000098  909E               	bcf	158,0,c	;volatile
  5020  00009A                     
  5021                           ;newmain.c: 411:         TMR1 = 0;
  5022  00009A  0E00               	movlw	0
  5023  00009C  6ECF               	movwf	207,c	;volatile
  5024  00009E  0E00               	movlw	0
  5025  0000A0  6ECE               	movwf	206,c	;volatile
  5026                           
  5027                           ;newmain.c: 413:         shouldDisplay = 1;
  5028  0000A2  0E01               	movlw	1
  5029  0000A4  0100               	movlb	0	; () banked
  5030  0000A6  6FB4               	movwf	_shouldDisplay& (0+255),b	;volatile
  5031  0000A8                     i1l2319:
  5032                           
  5033                           ;newmain.c: 419:     if (PIR3bits.TMR5IF) {
  5034  0000A8  A0A4               	btfss	164,0,c	;volatile
  5035  0000AA  EF59  F000         	goto	i1u159_21
  5036  0000AE  EF5B  F000         	goto	i1u159_20
  5037  0000B2                     i1u159_21:
  5038  0000B2  EF62  F000         	goto	i1l2325
  5039  0000B6                     i1u159_20:
  5040  0000B6                     
  5041                           ;newmain.c: 420:         PIR3bits.TMR5IF = 0;
  5042  0000B6  90A4               	bcf	164,0,c	;volatile
  5043                           
  5044                           ;newmain.c: 421:         TMR5 = timer5ReloadValue;
  5045  0000B8  C0D9  FF87         	movff	_timer5ReloadValue,3975	;volatile
  5046  0000BC  C0DA  FF88         	movff	_timer5ReloadValue+1,3976	;volatile
  5047  0000C0                     
  5048                           ;newmain.c: 422:         shouldUpdateTimer0Preload = 1;
  5049  0000C0  0E01               	movlw	1
  5050  0000C2  6E3A               	movwf	_shouldUpdateTimer0Preload^0,c	;volatile
  5051  0000C4                     i1l2325:
  5052                           
  5053                           ;newmain.c: 427:     if (PIR1bits.TMR2IF) {
  5054  0000C4  A29E               	btfss	158,1,c	;volatile
  5055  0000C6  EF67  F000         	goto	i1u160_21
  5056  0000CA  EF69  F000         	goto	i1u160_20
  5057  0000CE                     i1u160_21:
  5058  0000CE  EF7E  F000         	goto	i1l207
  5059  0000D2                     i1u160_20:
  5060  0000D2                     
  5061                           ;newmain.c: 428:         PORTAbits.RA2 = d1;
  5062  0000D2  B045               	btfsc	_d1^0,0,c	;volatile
  5063  0000D4  D002               	bra	i1u161_25
  5064  0000D6  9480               	bcf	128,2,c	;volatile
  5065  0000D8  D001               	bra	i1u161_26
  5066  0000DA                     i1u161_25:
  5067  0000DA  8480               	bsf	128,2,c	;volatile
  5068  0000DC                     i1u161_26:
  5069  0000DC                     
  5070                           ;newmain.c: 429:         d1 = !d1;
  5071  0000DC  5045               	movf	_d1^0,w,c	;volatile
  5072  0000DE  B4D8               	btfsc	status,2,c
  5073  0000E0  EF74  F000         	goto	i1u162_21
  5074  0000E4  EF77  F000         	goto	i1u162_20
  5075  0000E8                     i1u162_21:
  5076  0000E8  0E01               	movlw	1
  5077  0000EA  EF78  F000         	goto	i1u163_20
  5078  0000EE                     i1u162_20:
  5079  0000EE  0E00               	movlw	0
  5080  0000F0                     i1u163_20:
  5081  0000F0  6E45               	movwf	_d1^0,c	;volatile
  5082  0000F2                     
  5083                           ;newmain.c: 430:         updateSinusIndexes();
  5084  0000F2  EC05  F002         	call	_updateSinusIndexes	;wreg free
  5085  0000F6                     
  5086                           ;newmain.c: 431:         PIR1bits.TMR2IF = 0;
  5087  0000F6  929E               	bcf	158,1,c	;volatile
  5088  0000F8                     
  5089                           ;newmain.c: 432:         TMR2 = 230;
  5090  0000F8  0EE6               	movlw	230
  5091  0000FA  6ECC               	movwf	204,c	;volatile
  5092  0000FC                     i1l207:
  5093  0000FC  C014  FFF5         	movff	??_tcInt+8,tablat
  5094  000100  C013  FFF8         	movff	??_tcInt+7,tblptru
  5095  000104  C012  FFF7         	movff	??_tcInt+6,tblptrh
  5096  000108  C011  FFF6         	movff	??_tcInt+5,tblptrl
  5097  00010C  C010  FFF4         	movff	??_tcInt+4,prodh
  5098  000110  C00F  FFF3         	movff	??_tcInt+3,prodl
  5099  000114  C00E  FFE0         	movff	??_tcInt+2,bsr
  5100  000118  C00D  FFE8         	movff	??_tcInt+1,wreg
  5101  00011C  C00C  FFD8         	movff	??_tcInt,status
  5102  000120  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5103  000122  0010               	retfie	
  5104  000124                     __end_of_tcInt:
  5105                           	opt callstack 0
  5106                           
  5107 ;; *************** function _updateSinusIndexes *****************
  5108 ;; Defined at:
  5109 ;;		line 507 in file "newmain.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  currentScale    2    9[COMRAM] int 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5123 ;;      Params:         0       0       0       0
  5124 ;;      Locals:         2       0       0       0
  5125 ;;      Temps:          2       0       0       0
  5126 ;;      Totals:         4       0       0       0
  5127 ;;Total ram usage:        4 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    1
  5130 ;; This function calls:
  5131 ;;		i1___lwdiv
  5132 ;; This function is called by:
  5133 ;;		_tcInt
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text33
  5138  00040A                     __ptext33:
  5139                           	opt callstack 0
  5140  00040A                     _updateSinusIndexes:
  5141                           	opt callstack 19
  5142  00040A                     
  5143                           ;newmain.c: 508:     int currentScalefactor = scaleFactor[currentPreloadIndex];
  5144  00040A  0100               	movlb	0	; () banked
  5145  00040C  51B5               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  5146  00040E  0D02               	mullw	2
  5147  000410  0E4D               	movlw	low _scaleFactor
  5148  000412  24F3               	addwf	243,w,c
  5149  000414  6EF6               	movwf	tblptrl,c
  5150  000416  0E3D               	movlw	high _scaleFactor
  5151  000418  20F4               	addwfc	244,w,c
  5152  00041A  6EF7               	movwf	tblptrh,c
  5153  00041C                     	if	0	;There are less than 3 active tblptr bytes
  5154  00041C                     	endif
  5155  00041C  0009               	tblrd		*+
  5156  00041E  CFF5 F00A          	movff	tablat,updateSinusIndexes@currentScalefactor
  5157  000422  000A               	tblrd		*-
  5158  000424  CFF5 F00B          	movff	tablat,updateSinusIndexes@currentScalefactor+1
  5159  000428                     
  5160                           ; BSR set to: 0
  5161                           ;newmain.c: 509:     if (currentPreloadIndex < 50) {
  5162  000428  0E32               	movlw	50
  5163  00042A  61B5               	cpfslt	_currentPreloadIndex& (0+255),b	;volatile
  5164  00042C  EF1A  F002         	goto	i1u153_21
  5165  000430  EF1C  F002         	goto	i1u153_20
  5166  000434                     i1u153_21:
  5167  000434  EFC0  F002         	goto	i1l2245
  5168  000438                     i1u153_20:
  5169  000438                     
  5170                           ; BSR set to: 0
  5171                           ;newmain.c: 510:         sinusValue1 = (sinusValues[sinusIndex1] << 3) / currentScalefac
      +                          tor;
  5172  000438  503D               	movf	_sinusIndex1^0,w,c	;volatile
  5173  00043A  0D02               	mullw	2
  5174  00043C  0E85               	movlw	low _sinusValues
  5175  00043E  24F3               	addwf	243,w,c
  5176  000440  6EF6               	movwf	tblptrl,c
  5177  000442  0E3A               	movlw	high _sinusValues
  5178  000444  20F4               	addwfc	244,w,c
  5179  000446  6EF7               	movwf	tblptrh,c
  5180  000448                     	if	0	;There are less than 3 active tblptr bytes
  5181  000448                     	endif
  5182  000448  0009               	tblrd		*+
  5183  00044A  CFF5 F008          	movff	tablat,??_updateSinusIndexes
  5184  00044E  0009               	tblrd		*+
  5185  000450  CFF5 F009          	movff	tablat,??_updateSinusIndexes+1
  5186  000454  90D8               	bcf	status,0,c
  5187  000456  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5188  000458  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5189  00045A  90D8               	bcf	status,0,c
  5190  00045C  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5191  00045E  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5192  000460  90D8               	bcf	status,0,c
  5193  000462  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5194  000464  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5195  000466  C008  F001         	movff	??_updateSinusIndexes,i1___lwdiv@dividend
  5196  00046A  C009  F002         	movff	??_updateSinusIndexes+1,i1___lwdiv@dividend+1
  5197  00046E  C00A  F003         	movff	updateSinusIndexes@currentScalefactor,i1___lwdiv@divisor
  5198  000472  C00B  F004         	movff	updateSinusIndexes@currentScalefactor+1,i1___lwdiv@divisor+1
  5199  000476  ECA3  F007         	call	i1___lwdiv	;wreg free
  5200  00047A  C001  F037         	movff	?i1___lwdiv,_sinusValue1	;volatile
  5201  00047E  C002  F038         	movff	?i1___lwdiv+1,_sinusValue1+1	;volatile
  5202                           
  5203                           ;newmain.c: 511:         sinusValue2 = (sinusValues[sinusIndex2] << 3) / currentScalefac
      +                          tor;
  5204  000482  5047               	movf	_sinusIndex2^0,w,c	;volatile
  5205  000484  0D02               	mullw	2
  5206  000486  0E85               	movlw	low _sinusValues
  5207  000488  24F3               	addwf	243,w,c
  5208  00048A  6EF6               	movwf	tblptrl,c
  5209  00048C  0E3A               	movlw	high _sinusValues
  5210  00048E  20F4               	addwfc	244,w,c
  5211  000490  6EF7               	movwf	tblptrh,c
  5212  000492                     	if	0	;There are less than 3 active tblptr bytes
  5213  000492                     	endif
  5214  000492  0009               	tblrd		*+
  5215  000494  CFF5 F008          	movff	tablat,??_updateSinusIndexes
  5216  000498  0009               	tblrd		*+
  5217  00049A  CFF5 F009          	movff	tablat,??_updateSinusIndexes+1
  5218  00049E  90D8               	bcf	status,0,c
  5219  0004A0  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5220  0004A2  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5221  0004A4  90D8               	bcf	status,0,c
  5222  0004A6  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5223  0004A8  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5224  0004AA  90D8               	bcf	status,0,c
  5225  0004AC  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5226  0004AE  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5227  0004B0  C008  F001         	movff	??_updateSinusIndexes,i1___lwdiv@dividend
  5228  0004B4  C009  F002         	movff	??_updateSinusIndexes+1,i1___lwdiv@dividend+1
  5229  0004B8  C00A  F003         	movff	updateSinusIndexes@currentScalefactor,i1___lwdiv@divisor
  5230  0004BC  C00B  F004         	movff	updateSinusIndexes@currentScalefactor+1,i1___lwdiv@divisor+1
  5231  0004C0  ECA3  F007         	call	i1___lwdiv	;wreg free
  5232  0004C4  C001  F042         	movff	?i1___lwdiv,_sinusValue2	;volatile
  5233  0004C8  C002  F043         	movff	?i1___lwdiv+1,_sinusValue2+1	;volatile
  5234                           
  5235                           ;newmain.c: 512:         sinusValue3 = (sinusValues[sinusIndex3] << 3) / currentScalefac
      +                          tor;
  5236  0004CC  5046               	movf	_sinusIndex3^0,w,c	;volatile
  5237  0004CE  0D02               	mullw	2
  5238  0004D0  0E85               	movlw	low _sinusValues
  5239  0004D2  24F3               	addwf	243,w,c
  5240  0004D4  6EF6               	movwf	tblptrl,c
  5241  0004D6  0E3A               	movlw	high _sinusValues
  5242  0004D8  20F4               	addwfc	244,w,c
  5243  0004DA  6EF7               	movwf	tblptrh,c
  5244  0004DC                     	if	0	;There are less than 3 active tblptr bytes
  5245  0004DC                     	endif
  5246  0004DC  0009               	tblrd		*+
  5247  0004DE  CFF5 F008          	movff	tablat,??_updateSinusIndexes
  5248  0004E2  0009               	tblrd		*+
  5249  0004E4  CFF5 F009          	movff	tablat,??_updateSinusIndexes+1
  5250  0004E8  90D8               	bcf	status,0,c
  5251  0004EA  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5252  0004EC  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5253  0004EE  90D8               	bcf	status,0,c
  5254  0004F0  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5255  0004F2  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5256  0004F4  90D8               	bcf	status,0,c
  5257  0004F6  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5258  0004F8  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5259  0004FA  C008  F001         	movff	??_updateSinusIndexes,i1___lwdiv@dividend
  5260  0004FE  C009  F002         	movff	??_updateSinusIndexes+1,i1___lwdiv@dividend+1
  5261  000502  C00A  F003         	movff	updateSinusIndexes@currentScalefactor,i1___lwdiv@divisor
  5262  000506  C00B  F004         	movff	updateSinusIndexes@currentScalefactor+1,i1___lwdiv@divisor+1
  5263  00050A  ECA3  F007         	call	i1___lwdiv	;wreg free
  5264  00050E  C001  F040         	movff	?i1___lwdiv,_sinusValue3	;volatile
  5265  000512  C002  F041         	movff	?i1___lwdiv+1,_sinusValue3+1	;volatile
  5266  000516                     
  5267                           ;newmain.c: 513:         sinusValue1 = sinusValue1 < 8 ? 8 : sinusValue1;
  5268  000516  5038               	movf	(_sinusValue1+1)^0,w,c	;volatile
  5269  000518  E109               	bnz	i1u154_20
  5270  00051A  0E08               	movlw	8
  5271  00051C  5C37               	subwf	_sinusValue1^0,w,c	;volatile
  5272  00051E  A0D8               	btfss	status,0,c
  5273  000520  EF94  F002         	goto	i1u154_21
  5274  000524  EF96  F002         	goto	i1u154_20
  5275  000528                     i1u154_21:
  5276  000528  EF98  F002         	goto	i1l2231
  5277  00052C                     i1u154_20:
  5278  00052C  EF9C  F002         	goto	i1l2233
  5279  000530                     i1l2231:
  5280  000530  0E00               	movlw	0
  5281  000532  6E38               	movwf	(_sinusValue1+1)^0,c	;volatile
  5282  000534  0E08               	movlw	8
  5283  000536  6E37               	movwf	_sinusValue1^0,c	;volatile
  5284  000538                     i1l2233:
  5285                           
  5286                           ;newmain.c: 514:         sinusValue2 = sinusValue2 < 8 ? 8 : sinusValue2;
  5287  000538  5043               	movf	(_sinusValue2+1)^0,w,c	;volatile
  5288  00053A  E109               	bnz	i1u155_20
  5289  00053C  0E08               	movlw	8
  5290  00053E  5C42               	subwf	_sinusValue2^0,w,c	;volatile
  5291  000540  A0D8               	btfss	status,0,c
  5292  000542  EFA5  F002         	goto	i1u155_21
  5293  000546  EFA7  F002         	goto	i1u155_20
  5294  00054A                     i1u155_21:
  5295  00054A  EFA9  F002         	goto	i1l2237
  5296  00054E                     i1u155_20:
  5297  00054E  EFAD  F002         	goto	i1l2239
  5298  000552                     i1l2237:
  5299  000552  0E00               	movlw	0
  5300  000554  6E43               	movwf	(_sinusValue2+1)^0,c	;volatile
  5301  000556  0E08               	movlw	8
  5302  000558  6E42               	movwf	_sinusValue2^0,c	;volatile
  5303  00055A                     i1l2239:
  5304                           
  5305                           ;newmain.c: 515:         sinusValue3 = sinusValue3 < 8 ? 8 : sinusValue3;
  5306  00055A  5041               	movf	(_sinusValue3+1)^0,w,c	;volatile
  5307  00055C  E109               	bnz	i1u156_20
  5308  00055E  0E08               	movlw	8
  5309  000560  5C40               	subwf	_sinusValue3^0,w,c	;volatile
  5310  000562  A0D8               	btfss	status,0,c
  5311  000564  EFB6  F002         	goto	i1u156_21
  5312  000568  EFB8  F002         	goto	i1u156_20
  5313  00056C                     i1u156_21:
  5314  00056C  EFBA  F002         	goto	i1l2243
  5315  000570                     i1u156_20:
  5316  000570  EFEA  F002         	goto	i1l250
  5317  000574                     i1l2243:
  5318  000574  0E00               	movlw	0
  5319  000576  6E41               	movwf	(_sinusValue3+1)^0,c	;volatile
  5320  000578  0E08               	movlw	8
  5321  00057A  6E40               	movwf	_sinusValue3^0,c	;volatile
  5322  00057C  EFEA  F002         	goto	i1l250
  5323  000580                     i1l2245:
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;newmain.c: 517:         sinusValue1 = sinusValues[sinusIndex1];
  5327  000580  503D               	movf	_sinusIndex1^0,w,c	;volatile
  5328  000582  0D02               	mullw	2
  5329  000584  0E85               	movlw	low _sinusValues
  5330  000586  24F3               	addwf	243,w,c
  5331  000588  6EF6               	movwf	tblptrl,c
  5332  00058A  0E3A               	movlw	high _sinusValues
  5333  00058C  20F4               	addwfc	244,w,c
  5334  00058E  6EF7               	movwf	tblptrh,c
  5335  000590                     	if	0	;There are less than 3 active tblptr bytes
  5336  000590                     	endif
  5337  000590  0009               	tblrd		*+
  5338  000592  CFF5 F037          	movff	tablat,_sinusValue1	;volatile
  5339  000596  000A               	tblrd		*-
  5340  000598  CFF5 F038          	movff	tablat,_sinusValue1+1	;volatile
  5341                           
  5342                           ;newmain.c: 518:         sinusValue2 = sinusValues[sinusIndex2];
  5343  00059C  5047               	movf	_sinusIndex2^0,w,c	;volatile
  5344  00059E  0D02               	mullw	2
  5345  0005A0  0E85               	movlw	low _sinusValues
  5346  0005A2  24F3               	addwf	243,w,c
  5347  0005A4  6EF6               	movwf	tblptrl,c
  5348  0005A6  0E3A               	movlw	high _sinusValues
  5349  0005A8  20F4               	addwfc	244,w,c
  5350  0005AA  6EF7               	movwf	tblptrh,c
  5351  0005AC                     	if	0	;There are less than 3 active tblptr bytes
  5352  0005AC                     	endif
  5353  0005AC  0009               	tblrd		*+
  5354  0005AE  CFF5 F042          	movff	tablat,_sinusValue2	;volatile
  5355  0005B2  000A               	tblrd		*-
  5356  0005B4  CFF5 F043          	movff	tablat,_sinusValue2+1	;volatile
  5357                           
  5358                           ;newmain.c: 519:         sinusValue3 = sinusValues[sinusIndex3];
  5359  0005B8  5046               	movf	_sinusIndex3^0,w,c	;volatile
  5360  0005BA  0D02               	mullw	2
  5361  0005BC  0E85               	movlw	low _sinusValues
  5362  0005BE  24F3               	addwf	243,w,c
  5363  0005C0  6EF6               	movwf	tblptrl,c
  5364  0005C2  0E3A               	movlw	high _sinusValues
  5365  0005C4  20F4               	addwfc	244,w,c
  5366  0005C6  6EF7               	movwf	tblptrh,c
  5367  0005C8                     	if	0	;There are less than 3 active tblptr bytes
  5368  0005C8                     	endif
  5369  0005C8  0009               	tblrd		*+
  5370  0005CA  CFF5 F040          	movff	tablat,_sinusValue3	;volatile
  5371  0005CE  000A               	tblrd		*-
  5372  0005D0  CFF5 F041          	movff	tablat,_sinusValue3+1	;volatile
  5373  0005D4                     i1l250:
  5374  0005D4  0012               	return		;funcret
  5375  0005D6                     __end_of_updateSinusIndexes:
  5376                           	opt callstack 0
  5377                           
  5378 ;; *************** function i1___lwdiv *****************
  5379 ;; Defined at:
  5380 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;  dividend        2    0[COMRAM] unsigned int 
  5383 ;;  divisor         2    2[COMRAM] unsigned int 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  5386 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  2    0[COMRAM] unsigned int 
  5389 ;; Registers used:
  5390 ;;		wreg, status,2, status,0
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5396 ;;      Params:         4       0       0       0
  5397 ;;      Locals:         3       0       0       0
  5398 ;;      Temps:          0       0       0       0
  5399 ;;      Totals:         7       0       0       0
  5400 ;;Total ram usage:        7 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		_updateSinusIndexes
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text34
  5410  000F46                     __ptext34:
  5411                           	opt callstack 0
  5412  000F46                     i1___lwdiv:
  5413                           	opt callstack 19
  5414  000F46  0E00               	movlw	0
  5415  000F48  6E06               	movwf	(i1___lwdiv@quotient+1)^0,c
  5416  000F4A  0E00               	movlw	0
  5417  000F4C  6E05               	movwf	i1___lwdiv@quotient^0,c
  5418  000F4E  5003               	movf	i1___lwdiv@divisor^0,w,c
  5419  000F50  1004               	iorwf	(i1___lwdiv@divisor+1)^0,w,c
  5420  000F52  B4D8               	btfsc	status,2,c
  5421  000F54  EFAE  F007         	goto	i1u136_21
  5422  000F58  EFB0  F007         	goto	i1u136_20
  5423  000F5C                     i1u136_21:
  5424  000F5C  EFD8  F007         	goto	i1l856
  5425  000F60                     i1u136_20:
  5426  000F60  0E01               	movlw	1
  5427  000F62  6E07               	movwf	i1___lwdiv@counter^0,c
  5428  000F64  EFB8  F007         	goto	i1l2107
  5429  000F68                     i1l2105:
  5430  000F68  90D8               	bcf	status,0,c
  5431  000F6A  3603               	rlcf	i1___lwdiv@divisor^0,f,c
  5432  000F6C  3604               	rlcf	(i1___lwdiv@divisor+1)^0,f,c
  5433  000F6E  2A07               	incf	i1___lwdiv@counter^0,f,c
  5434  000F70                     i1l2107:
  5435  000F70  AE04               	btfss	(i1___lwdiv@divisor+1)^0,7,c
  5436  000F72  EFBD  F007         	goto	i1u137_21
  5437  000F76  EFBF  F007         	goto	i1u137_20
  5438  000F7A                     i1u137_21:
  5439  000F7A  EFB4  F007         	goto	i1l2105
  5440  000F7E                     i1u137_20:
  5441  000F7E                     i1l2109:
  5442  000F7E  90D8               	bcf	status,0,c
  5443  000F80  3605               	rlcf	i1___lwdiv@quotient^0,f,c
  5444  000F82  3606               	rlcf	(i1___lwdiv@quotient+1)^0,f,c
  5445  000F84  5003               	movf	i1___lwdiv@divisor^0,w,c
  5446  000F86  5C01               	subwf	i1___lwdiv@dividend^0,w,c
  5447  000F88  5004               	movf	(i1___lwdiv@divisor+1)^0,w,c
  5448  000F8A  5802               	subwfb	(i1___lwdiv@dividend+1)^0,w,c
  5449  000F8C  A0D8               	btfss	status,0,c
  5450  000F8E  EFCB  F007         	goto	i1u138_21
  5451  000F92  EFCD  F007         	goto	i1u138_20
  5452  000F96                     i1u138_21:
  5453  000F96  EFD2  F007         	goto	i1l2117
  5454  000F9A                     i1u138_20:
  5455  000F9A  5003               	movf	i1___lwdiv@divisor^0,w,c
  5456  000F9C  5E01               	subwf	i1___lwdiv@dividend^0,f,c
  5457  000F9E  5004               	movf	(i1___lwdiv@divisor+1)^0,w,c
  5458  000FA0  5A02               	subwfb	(i1___lwdiv@dividend+1)^0,f,c
  5459  000FA2  8005               	bsf	i1___lwdiv@quotient^0,0,c
  5460  000FA4                     i1l2117:
  5461  000FA4  90D8               	bcf	status,0,c
  5462  000FA6  3204               	rrcf	(i1___lwdiv@divisor+1)^0,f,c
  5463  000FA8  3203               	rrcf	i1___lwdiv@divisor^0,f,c
  5464  000FAA  2E07               	decfsz	i1___lwdiv@counter^0,f,c
  5465  000FAC  EFBF  F007         	goto	i1l2109
  5466  000FB0                     i1l856:
  5467  000FB0  C005  F001         	movff	i1___lwdiv@quotient,?i1___lwdiv
  5468  000FB4  C006  F002         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
  5469  000FB8  0012               	return		;funcret
  5470  000FBA                     __end_ofi1___lwdiv:
  5471                           	opt callstack 0
  5472                           
  5473                           	psect	rparam
  5474  0000                     
  5475                           	psect	temp
  5476  000049                     btemp:
  5477                           	opt callstack 0
  5478  000049                     	ds	1
  5479  0000                     int$flags	set	btemp
  5480  0000                     wtemp8	set	btemp+1
  5481  0000                     ttemp5	set	btemp+1
  5482  0000                     ttemp6	set	btemp+4
  5483  0000                     ttemp7	set	btemp+8
  5484                           tosu	equ	0xFFF
  5485                           tosh	equ	0xFFE
  5486                           tosl	equ	0xFFD
  5487                           stkptr	equ	0xFFC
  5488                           pclatu	equ	0xFFB
  5489                           pclath	equ	0xFFA
  5490                           pcl	equ	0xFF9
  5491                           tblptru	equ	0xFF8
  5492                           tblptrh	equ	0xFF7
  5493                           tblptrl	equ	0xFF6
  5494                           tablat	equ	0xFF5
  5495                           prodh	equ	0xFF4
  5496                           prodl	equ	0xFF3
  5497                           indf0	equ	0xFEF
  5498                           postinc0	equ	0xFEE
  5499                           postdec0	equ	0xFED
  5500                           preinc0	equ	0xFEC
  5501                           plusw0	equ	0xFEB
  5502                           fsr0h	equ	0xFEA
  5503                           fsr0l	equ	0xFE9
  5504                           wreg	equ	0xFE8
  5505                           indf1	equ	0xFE7
  5506                           postinc1	equ	0xFE6
  5507                           postdec1	equ	0xFE5
  5508                           preinc1	equ	0xFE4
  5509                           plusw1	equ	0xFE3
  5510                           fsr1h	equ	0xFE2
  5511                           fsr1l	equ	0xFE1
  5512                           bsr	equ	0xFE0
  5513                           indf2	equ	0xFDF
  5514                           postinc2	equ	0xFDE
  5515                           postdec2	equ	0xFDD
  5516                           preinc2	equ	0xFDC
  5517                           plusw2	equ	0xFDB
  5518                           fsr2h	equ	0xFDA
  5519                           fsr2l	equ	0xFD9
  5520                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    822
    Data        21
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      72
    BANK0           160     76     129
    BANK1           256     53      53
    BANK2           244      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK1[16]), display@str3(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK1[16]), display@str3(BANK1[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1998_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK1[16]), display@str3(BANK1[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK1[16]), display@str3(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK1[16]), display@str3(BANK1[16]), 


Critical Paths under _main in COMRAM

    _readADC->___lwdiv
    _vfprintf->_vfpfcnvrt
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCD_Initialize->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _tcInt in COMRAM

    _tcInt->_updateSinusIndexes
    _updateSinusIndexes->i1___lwdiv

Critical Paths under _main in BANK0

    _main->_display
    _display->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _tcInt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_display

Critical Paths under _tcInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tcInt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14394
                     _LCD_Initialize
                       _configureADC
                    _configureInputs
                _configureInterrupts
                       _configurePWM
                    _configureTimer0
                    _configureTimer1
                    _configureTimer2
                    _configureTimer5
                            _display
                            _readADC
                           _startPWM
             _updateTMR0PreloadValue
 ---------------------------------------------------------------------------------
 (1) _updateTMR0PreloadValue                               2     2      0       0
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _startPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              1     1      0     931
                                             28 COMRAM     1     1      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _display                                             55    55      0   12784
                                             74 BANK0      2     2      0
                                              0 BANK1     53    53      0
                         _LCDPutChar
                          _LCDPutCmd
                          _LCDPutStr
                            ___lwdiv
                            ___lwmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    8597
                                             58 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7931
                                             50 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7458
                                             48 COMRAM     2     2      0
                                             36 BANK0     14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                              0 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             39 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             21 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             21 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             21 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     931
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            3     1      2     989
                                             26 COMRAM     3     1      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           2     2      0     679
                                             24 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _configureTimer5                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer2                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer1                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurePWM                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureInputs                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       2     2      0     679
                                             26 COMRAM     2     2      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            2     2      0     679
                                             24 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (4) _LCDWriteNibble                                       3     2      1     583
                                             21 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _tcInt                                              10    10      0     454
                                             11 COMRAM    10    10      0
                 _updateSinusIndexes
 ---------------------------------------------------------------------------------
 (11) _updateSinusIndexes                                  4     4      0     385
                                              7 COMRAM     4     4      0
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (12) i1___lwdiv                                           7     3      4     318
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Initialize
     _LCDPutCmd
       _LCDWriteNibble
   _configureADC
   _configureInputs
   _configureInterrupts
   _configurePWM
   _configureTimer0
   _configureTimer1
   _configureTimer2
   _configureTimer5
   _display
     _LCDPutChar
       _LCDWriteNibble
     _LCDPutCmd
       _LCDWriteNibble
     _LCDPutStr
       _LCDPutChar
         _LCDWriteNibble
     ___lwdiv
     ___lwmod
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _readADC
     ___lwdiv
   _startPWM
   _updateTMR0PreloadValue

 _tcInt (ROOT)
   _updateSinusIndexes
     i1___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F3      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     35      35       7       20.7%
BITBANK2            F4      0       0       8        0.0%
BANK2               F4      0       0       9        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     4C      81       4       80.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      48       1       76.6%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FE       5        0.0%
DATA                 0      0      FE      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 02 22:17:07 2020

                       ?_configureADC 0001                         ?_configurePWM 0001  
                ??_updateSinusIndexes 0008                        _LCD_Initialize 1138  
                         ?_LCDPutChar 0001                                    _d1 0045  
                                  bsr 000FE0                          __CFG_CP0$OFF 000000  
                        __CFG_CP1$OFF 000000                          __CFG_CP2$OFF 000000  
                        __CFG_CP3$OFF 000000                                   l220 078C  
                                 l320 0D80                                   l161 1268  
                                 l233 11D6                                   l170 1464  
                                 l322 0DBA                                   l330 01D0  
                                 l164 1468                                   l228 0ED0  
                                 l173 13F2                                   l317 0D3E  
                                 l182 141C                                   l271 13CA  
                                 l176 1408                                   l280 1364  
                                 l328 01C8                                   l265 1188  
                                 l185 145E                                   l361 10DC  
                                 l274 132A                                   l362 10E4  
                                 l179 1430                                   l355 0942  
                                 l268 0E4C                                   l188 143E  
                                 l348 0408                                   l492 0C2E  
                                 l479 0ACA                                   l863 0F44  
                                 l856 0F3C                                   l873 1082  
                                 l866 107A                          __CFG_CPB$OFF 000000  
                        __CFG_CPD$OFF 000000                                   _abs 12AE  
                                 _pad 0CFA                                   wreg 000FE8  
            ??_updateTMR0PreloadValue 0016                          __CFG_LVP$OFF 000000  
                                l1040 12E4                                  l1043 12EC  
                                ?_abs 0028                                  l1070 1136  
                                l1055 0CF8                                  l1063 12AC  
                                l2121 140A                                  l1073 146A  
                                l2201 0E96                                  l2203 0EAC  
                                l1501 13E0                                  l2205 0EAE  
                                l1511 13EA                                  l1503 13E2  
                                l1079 139A                                  l2207 0ECA  
                                l1513 13EC                                  l1505 13E4  
                                l1441 122E                                  l1521 141E  
                                l2401 0DA2                                  l2209 0ECC  
                                l1515 13EE                                  l1507 13E6  
                                l1451 1238                                  l1443 1230  
                                l1523 1428                                  l1531 143A  
                                l2411 0948                                  l1517 13F0  
                                l1509 13E8                                  l1461 1242  
                                l1453 123A                                  l1445 1232  
                                l2421 09A8                                  l2413 0956  
                                l2405 12AE                                  l2501 01BC  
                                l1527 1456                                  l1471 124C  
                                l1463 1244                                  l1455 123C  
                                l1447 1234                                  l1439 1222  
                                l1519 13F4                                  l2431 09F2  
                                l2423 09AC                                  l2415 0976  
                                l2407 12C8                                  l2351 0C30  
                                l2511 0206                                  l2503 01D8  
                                l2191 0E4E                                  l1481 1262  
                                l1473 124E                                  l1465 1246  
                                l1457 123E                                  l1449 1236  
                                l1529 1432                                  l2441 0A62  
                                l2433 0A00                                  l2425 09B8  
                                l2417 097A                                  l2409 0944  
                                l2361 0CB2                                  l2353 0C42  
                                l2521 02A4                                  l2513 020E  
                                l2505 01EA                                  l2193 0E5E  
                                l1491 13D4                                  l1483 1264  
                                l1475 1250                                  l1467 1248  
                                l1459 1240                                  l2603 139E  
                                l2443 0A74                                  l2435 0A12  
                                l2427 09D6                                  l2419 0988  
                                l2355 0C54                                  l2371 128C  
                                l2531 0376                                  l2515 0214  
                                l2523 0308                                  l2507 01F8  
                                l2611 1084                                  l2195 0E6E  
                                l2621 1302                                  l1493 13D8  
                                l1477 125A                                  l1469 124A  
                                l2605 13B0                                  l2437 0A40  
                                l2429 09DE                                  l2445 0A7A  
                                l2461 0B02                                  l2453 0ACC  
                                l2357 0C5E                                  l2365 126A  
                                l2373 1366                                  l2541 03BC  
                                l2525 0324                                  l2533 0384  
                                l2517 0296                                  l2509 01FE  
                                l2613 108C                                  l2701 05D6  
                                l1485 1466                                  l2197 0E72  
                                l2551 0DBE                                  l2623 130C  
                                l1495 13DA                                  l1487 1460  
                                l1479 1260                                  l2607 13BA  
                                l2447 0A8A                                  l2439 0A60  
                                l2471 0B6A                                  l2463 0B10  
                                l2455 0AD0                                  l2359 0C7C  
                                l2367 1276                                  l2375 1372  
                                l2391 0D36                                  l2383 0CFA  
                                l2543 03C8                                  l2535 0396  
                                l2527 0342                                  l2519 029E  
                                l2615 109A                                  l2631 10F8  
                                l2711 0648                                  l2703 05E8  
                                l2199 0E90                                  l2553 0E36  
                                l2625 1312                                  l1497 13DC  
                                l1489 13CC                                  l2609 13C0  
                                l2641 132C                                  l2449 0AAA  
                                l2473 0B78                                  l2481 0BDE  
                                l2465 0B30                                  l2457 0ADE  
                                l2369 1288                                  l2377 1376  
                                l2393 0D4A                                  l2385 0D08  
                                l2545 03D0                                  l2537 03A4  
                                l2529 035C                                  l2561 078E  
                                l2617 10C0                                  l2633 1100  
                                l2721 06A6                                  l2713 064E  
                                l2705 05FA                                  l2555 0E40  
                                l2627 1320                                  l2619 12F0  
                                l1499 13DE                                  l2643 1334  
                                l2651 0EDA                                  l2483 0BEE  
                                l2475 0BA6                                  l2467 0B4E  
                                l2459 0AFE                                  l2379 138E  
                                l2395 0D5E                                  l2387 0D1C  
                                l2539 03AA                                  l2547 03E0  
                                l2491 0148                                  l2571 07FA  
                                l2563 07B2                                  l2635 1108  
                                l2731 06FE                                  l2723 06AC  
                                l2715 066A                                  l2707 0618  
                                l2557 0E42                                  l2645 1346  
                                l2661 0F10                                  l2653 0EEC  
                                l2485 0C0E                                  l2477 0BC6  
                                l2469 0B56                                  l2397 0D62  
                                l2389 0D2A                                  l2493 0172  
                                l2581 08C2                                  l2573 081E  
                                l2565 07C0                                  l2637 1124  
                                l2629 10E6                                  l2741 075A  
                                l2733 0702                                  l2725 06B4  
                                l2717 0676                                  l2709 0630  
                                l2559 0E4A                                  l2647 1348  
                                l2663 0F26                                  l2655 0EF4  
                                l2671 1020                                  l2479 0BD8  
                                l2399 0D8E                                  l2495 0192  
                                l2591 0900                                  l2583 08D0  
                                l2575 0866                                  l2567 07D2  
                                l2743 0762                                  l2735 0714  
                                l2727 06BE                                  l2719 067C  
                                l2751 0786                                  l2665 0F2E  
                                l2657 0EFC                                  l2649 0ED2  
                                l2681 1066                                  l2673 1032  
                                l2497 01A0                                  l2489 0128  
                                l2585 08E4                                  l2569 07D6  
                                l2753 0788                                  l2729 06E2  
                                l2745 0770                                  l2761 11D0  
                                l2691 116A                                  l2667 0F30  
                                l2659 0F0A                                  l2683 106E  
                                l2675 103A                                  l2499 01A2  
                                l2579 089E                                  l2595 090C  
                                l2747 0776                                  l2739 0732  
                                l2763 11D4                                  l2755 118A  
                                l2771 11E4                                  l2693 1170  
                                l2669 0F36                                  l2685 1074  
                                l2677 1042                                  l2597 0930  
                                l2589 08F2                                  l2749 077E  
                                l2757 1198                                  l2781 1200  
                                l2773 11E8                                  l2765 11D8  
                                ?_pad 0026                                  l2695 1176  
                                l2687 1138                                  l2679 1050  
                                l2759 11AA                                  l2791 120A  
                                l2783 1202                                  l2775 11F4  
                                l2767 11DC                                  l2697 117C  
                                l2689 1150                                  l2793 120C  
                                l2785 1204                                  l2777 11F8  
                                l2769 11E0                                  l2699 1182  
                                l2795 1210                                  l2787 1206  
                                l2779 11FC                                  l2797 1214  
                                l2789 1208                                  l2799 1218  
                                STR_1 3DBB                                  STR_2 3DBB  
                                u2000 035C                                  u2001 0358  
                                u2010 0376                                  u2011 0372  
                                u2020 0384                                  u2100 08C2  
                                u2021 0380                                  u2101 08BE  
                                u2030 0396                                  u2110 10DC  
                                u2031 0392                                  u2111 10D8  
                                u2120 1364                                  u2040 03A4  
                                u2200 05FA                                  u2121 1360  
                                u2041 03A0                                  u2201 05F6  
                                u2130 0EEC                                  u2050 03BC  
                                u2210 0618                                  u2131 0EE8  
                                u2051 03B8                                  u2211 0614  
                                u2140 0F0A                                  u2220 0630  
                                u1500 0EAC                                  u2141 0F06  
                                u2221 062C                                  u1501 0EA8  
                                u2150 0F26                                  u2070 07B2  
                                u2230 0648                                  _LATB 000F8A  
                                u2151 0F22                                  u2071 07AE  
                                u2231 0644                                  u2160 1032  
                                u2080 07FA                                  u2240 0714  
                                u2065 0E3E                                  u2161 102E  
                                u2081 07F6                                  u2241 0710  
                                u2066 0E40                                  u2170 1050  
                                u2090 081E                                  u2250 072E  
                                u2171 104C                                  u2091 081A  
                                u2251 072A                                  u2180 1066  
                                u1700 0CB2                                  u2260 0770  
                                u2181 1062                                  u1701 0CAE  
                                u2261 076C                                  u1710 12AC  
                                u2190 05E8                                  u2270 1198  
                                u1470 0E5E                                  u2327 13A4  
                                u1711 12A8                                  u2191 05E4  
                                u2271 1194                                  u1471 0E5A  
                                u1720 138E                                  u2280 11AA  
                                u1480 0E6E                                  u2337 115A  
                                u1801 09B2                                  u1721 138A  
                                u2281 11A6                                  u1481 0E6A  
                                u1810 09D6                                  u1730 0D08  
                                u1490 0E90                                  u2347 12F6  
                                u1811 09D2                                  u1731 0D04  
                                u1491 0E8C                                  u1820 0A00  
                                u1900 0BEE                                  u1740 0D2A  
                                u2357 1318                                  u1821 09FC  
                                u1901 0BEA                                  u1741 0D26  
                                u1830 0A40                                  u1670 0C42  
                                u1750 0D80                                  u1910 015A  
                                u2367 0E44                                  u1831 0A3C  
                                u1671 0C3E                                  u1751 0D7C  
                                u1911 0154                                  u1840 0A8A  
                                u1680 0C54                                  u1760 0D8E  
                                u1920 015C                                  u1841 0A86  
                                u1681 0C50                                  u1761 0D8A  
                                u1850 0ADE                                  u1770 12C8  
                                u1690 0C7C                                  u1930 0172  
                                u1851 0ADA                                  u1771 12C4  
                                u1691 0C78                                  u1931 016E  
                                u1780 0956                                  u1860 0B10  
                                u1940 01A0                                  u1781 0952  
                                u1861 0B0C                                  u1941 019C  
                                u1790 0988                                  u1870 0B4E  
                                u1950 01BC                                  u1791 0984  
                                u1871 0B4A                                  u1951 01B8  
                                u1880 0B78                                  u1960 01EA  
                                u1881 0B74                                  u1961 01E6  
                                u1890 0BA6                                  u1970 01F8  
                                u1891 0BA2                                  u1971 01F4  
                                u1980 0324                                  u1981 0320  
                                u1990 0342                                  u1991 033E  
                                _TMR0 000FD6                                  _TMR1 000FCE  
                                _TMR2 000FCC                                  _TMR5 000F87  
                    ?_configureInputs 0001                      ?_configureTimer0 0001  
                    ?_configureTimer1 0001                      ?_configureTimer2 0001  
                    ?_configureTimer5 0001                           display@str1 0110  
                         display@str2 0100                           display@str3 0120  
                                abs@a 0028                                  _dbuf 00B7  
                                _main 11D8                                  _dtoa 0128  
                                _prec 0033                                  _nout 00B0  
                                pad@i 002D                                  pad@p 002A  
                                fsr1h 000FE2                                  fsr2h 000FDA  
                                indf2 000FDF                                  fsr1l 000FE1  
                                pad@w 002F                                  fsr2l 000FD9  
                                btemp 0049                    __size_of_LCDPutCmd 003E  
                                prodh 000FF4                                  prodl 000FF3  
                                start 0124                    __size_of_LCDPutStr 003A  
                       __CFG_IESO$OFF 000000                __end_of_LCD_Initialize 118A  
                      ??_configureADC 0016                        ??_configurePWM 0016  
                        ___param_bank 000000                     _timer0ReloadValue 003E  
                               ??_abs 002A                                 ??_pad 002C  
                         LCDPutCmd@ch 001A                       __end_of___aodiv 0ACC  
                               ?_main 0001                                 ?_dtoa 0060  
                     __end_of___aomod 0C30                                 _PDC0H 000F78  
                               _PDC1H 000F76                                 _DTCON 000F6D  
                               _PDC0L 000F79                                 _PDC2H 000F74  
                               _PDC1L 000F77                                 _PDC2L 000F75  
                     __end_of___lwdiv 0F46                                 i1l207 00FC  
                               i1l250 05D4                       __end_of___lwmod 1084  
                               i1l863 0FB8                                 i1l856 0FB0  
                        vfpfcnvrt@fmt 0086                                 _PORTB 000F81  
                               _TRISB 000F93                         __CFG_WRT0$OFF 000000  
                       __CFG_WRT1$OFF 000000                         __CFG_WRT2$OFF 000000  
                       __CFG_WRT3$OFF 000000                        __CFG_EBTR0$OFF 000000  
                      __CFG_FCMEN$OFF 000000                        __CFG_EBTR1$OFF 000000  
                      __CFG_EBTR2$OFF 000000                        __CFG_EBTR3$OFF 000000  
                       __CFG_WRTB$OFF 000000                       __end_of_display 078E  
                       __CFG_WRTC$OFF 000000                         __CFG_WRTD$OFF 000000  
                     __end_of_readADC 11D8                        __CFG_EBTRB$OFF 000000  
                               _flags 0035                                 _tcInt 0018  
                               _fputc 0C30                                 _fputs 126A  
                               pad@fp 0026                                 _width 00B2  
                               _putch 146A                                 dtoa@d 0062  
                               dtoa@i 0082                                 dtoa@n 007A  
                               dtoa@p 0074                                 dtoa@s 0078  
                               dtoa@w 0076                        __CFG_BOREN$OFF 000000  
                               tablat 000FF5                   __size_of_LCDPutChar 0030  
                               ttemp5 004A                                 ttemp6 004D  
                               ttemp7 0051                                 status 000FD8  
                               wtemp8 004A                       __end_of_sprintf 1138  
                  __size_ofi1___lwdiv 0074                        __CFG_MCLRE$OFF 000000  
                     ?_LCD_Initialize 0001                       __initialization 0FBA  
                      __CFG_HPOL$HIGH 000000                          __end_of_main 1222  
                        __end_of_dtoa 040A           __end_of_configureInterrupts 1466  
                      __CFG_OSC$HSPLL 000000                        __CFG_LPOL$HIGH 000000  
                              ??_main 0033                                ??_dtoa 006A  
                       __activetblptr 000002                     __end_of_LCDPutCmd 132C  
                        LCDPutChar@ch 001A                     __end_of_LCDPutStr 1366  
     __size_of_updateTMR0PreloadValue 0084                                _ADCON1 000FC1  
                              ?_tcInt 0001                                ?_fputc 0016  
                              ?_fputs 001F                                _ADRESH 000FC4  
                              ?_putch 0001                                i1l2101 0F4E  
                              i1l2111 0F84                                i1l2103 0F60  
                              i1l2113 0F9A                                i1l2105 0F68  
                              i1l2115 0FA2                                i1l2107 0F70  
                          _PrevADRESH 0044                                i1l2117 0FA4  
                              i1l2109 0F7E                                i1l2221 040A  
                              i1l2301 0070                                i1l2119 0FAA  
                              i1l2231 0530                                i1l2223 0428  
                              i1l2311 0082                                i1l2303 0074  
                              i1l2233 0538                                i1l2225 0438  
                              i1l2321 00B6                                i1l2305 0076  
                              i1l2313 008A                                i1l2243 0574  
                              i1l2227 0516                                i1l2331 00F2  
                              i1l2323 00C0                                i1l2315 0098  
                              i1l2307 007A                                i1l2237 0552  
                              i1l2245 0580                                i1l2333 00F6  
                              i1l2325 00C4                                i1l2317 009A  
                              i1l2309 007E                                i1l2239 055A  
                              i1l2335 00F8                                i1l2327 00D2  
                              i1l2319 00A8                                i1l2329 00DC  
                              i1l2099 0F46                                i1l2291 0054  
                              i1l2293 0058                                i1l2285 003E  
                              i1l2295 0060                                i1l2287 004C  
                              i1l2297 0064                                i1l2289 0050  
                              i1l2299 006C                        __CFG_WDTEN$OFF 000000  
                      __CFG_WINEN$OFF 000000                                _PTPERH 000F7A  
                        LCDPutStr@str 001B                                _PTPERL 000F7B  
                      _LCDWriteNibble 0DBC                        __CFG_PWMPIN$ON 000000  
                      __CFG_SSPMX$RC7 000000                          vfprintf@cfmt 0098  
                           ??___aodiv 0026                             ??___aomod 0026  
                              _digits 3DB1                             ??___lwdiv 001A  
                           ??___lwmod 001A                                clear_0 1000  
                              clear_1 100C                                pad@buf 0028  
                              dtoa@fp 0060                                _strlen 1366  
                           ??_display 00AA                             ??_readADC 001D  
                              fputc@c 0016                     __end_ofi1___lwdiv 0FBA  
                              fputs@c 0023                                fputs@i 0024  
                        __pdataCOMRAM 003E                                fputs@s 001F  
                        __mediumconst 3A84                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                __end_of_configureADC 13F4                      __end_of_startPWM 146A  
                              putch@c 0001                      __end_of_vfprintf 10E6  
                __end_of_configurePWM 126A                     _timer5ReloadValue 00D9  
                           ??_sprintf 0033                __end_of_LCDWriteNibble 0E4E  
                          __accesstop 0060               __end_of__initialization 1012  
                     __CFG_FLTAMX$RC1 000000                            _adcPercent 00DD  
                       ___rparam_used 000001                       __CFG_T1OSCMX$ON 000000  
              _updateTMR0PreloadValue 0E4E                        __pcstackCOMRAM 0001  
                        __pidataBANK0 144B          display@timer0ReloadValueCopy 0131  
                       __end_of_tcInt 0124                         __end_of_fputc 0CFA  
                        ??_LCDPutChar 0019                         __end_of_fputs 12AE  
                       __end_of_putch 146C             _shouldUpdateTimer0Preload 003A  
                 _timer5OverflowCount 003C                               ??_tcInt 000C  
                             ??_fputc 001A                               ??_fputs 0023  
                             ??_putch 0016                            __pbssBANK0 00AC  
                     ?_LCDWriteNibble 0016                    __end_of_LCDPutChar 13CC  
         __size_of_updateSinusIndexes 01CC                       __CFG_WDPS$32768 000000  
                             ?_strlen 0016                       __CFG_PWM4MX$RB5 000000  
                  __size_of_vfpfcnvrt 01B6                               _OVDCOND 000F6B  
                             _OVDCONS 000F6A                             _ADCHSbits 000F99  
                    ??_LCD_Initialize 001B                       __CFG_PWRTEN$OFF 000000  
                             __Hparam 0000                               __Lparam 0000  
            __size_of_configureInputs 000A              __size_of_configureTimer0 0016  
            __size_of_configureTimer1 0014              __size_of_configureTimer2 000E  
            __size_of_configureTimer5 0014                               ___aodiv 0944  
                             ___aomod 0ACC                             ?_startPWM 0001  
                             ___lwdiv 0ED2                               ___lwmod 1020  
                           ?_vfprintf 0092                        _prevAdcPercent 00DB  
                     __CFG_STVREN$OFF 000000                               __pcinit 0FBA  
                             __ramtop 0300                               __ptext0 11D8  
                             __ptext1 0E4E                               __ptext2 1466  
                             __ptext3 118A                               __ptext4 05D6  
                             __ptext5 10E6                               __ptext6 1084  
                             __ptext7 078E                               __ptext8 0128  
                             __ptext9 0CFA                               _display 05D6  
                           _T0CONbits 000FD5                 __size_of_configureADC 0028  
                             _readADC 118A                       __size_of_strlen 0036  
                           _T1CONbits 000FCD                 __size_of_configurePWM 0048  
                             _counter 0039                     i1___lwdiv@divisor 0003  
                           _T2CONbits 000FCA                          __size_of_abs 0040  
                        __size_of_pad 00C2                     i1___lwdiv@counter 0007  
                           _DTCONbits 000F6D                             _T5CONbits 000FB7  
                           _LCDPutCmd 12EE                               _sprintf 10E6  
                           _LCDPutStr 132C                  end_of_initialization 1012  
                             fputc@fp 0018                         __Lmediumconst 3A84  
                             fputs@fp 0021                     __end_of_vfpfcnvrt 0944  
                             postdec1 000FE5                               postdec2 000FDD  
                        _configureADC 13CC                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
                        _configurePWM 1222                            ??_startPWM 0016  
                          ??_vfprintf 0033                               strlen@a 0018  
                             strlen@s 0016                             _PORTAbits 000F80  
                           _PORTCbits 000F82                             _PORTDbits 000F83  
                           _TRISAbits 000F92                   _timer0PreloadValues 3C85  
                           _TRISCbits 000F94                             _TRISDbits 000F95  
        __size_of_configureInterrupts 0006                            ?_LCDPutCmd 0001  
                           i1___lwdiv 0F46                            ?_LCDPutStr 001B  
             ?_updateTMR0PreloadValue 0001                      __CFG_EXCLKMX$RC3 000000  
                         vfpfcnvrt@ap 0088                           vfpfcnvrt@fp 0084  
                          LCDPutStr@i 001D                           vfpfcnvrt@ll 008A  
                       __pidataCOMRAM 1440                        __end_of_digits 3DBB  
                   ??_configureInputs 0016                     ??_configureTimer0 0016  
                   ??_configureTimer1 0016                     ??_configureTimer2 0016  
                   ??_configureTimer5 0016                        __end_of_strlen 139C  
                 start_initialization 0FBA                      ??_LCDWriteNibble 0017  
                         __end_of_abs 12EE                           __end_of_pad 0DBC  
                          ?i1___lwdiv 0001        __end_of_updateTMR0PreloadValue 0ED2  
                         vfprintf@fmt 0094                           __pdataBANK0 00D7  
                            ??_strlen 0018                   _currentPreloadIndex 00B5  
                         __pbssCOMRAM 0033                         __pcstackBANK0 0060  
                       __pcstackBANK1 0100                      ___aodiv@dividend 0016  
                         ??_LCDPutCmd 0019                           ??_LCDPutStr 001D  
          __end_of_updateSinusIndexes 05D6                      ___lwdiv@dividend 0016  
                           _dtoa$1537 0072                             _maxADCVal 00DF  
                       __pmediumconst 3A84                              ?___aodiv 0016  
                            ?___aomod 0016                      ___aodiv@quotient 0028  
                            ?___lwdiv 0016                              ?___lwmod 0016  
                    LCDWriteNibble@ch 0018                      LCDWriteNibble@rs 0016  
                         __pintcodelo 0018                     __size_of_startPWM 0004  
                   __size_of_vfprintf 0062                              ?_display 0001  
                            ?_readADC 0001                      ___lwdiv@quotient 001B  
                         ??i1___lwdiv 0005                 _shouldUpdateDutyCycle 003B  
                            ?_sprintf 009A                        __size_of_tcInt 010C  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                           _dutyCycle 00AC                        __size_of_putch 0002  
                 __end_of_scaleFactor 3DB1                              _PIE1bits 000F9D  
                            _PIE3bits 000FA3                              i1u136_20 0F60  
                            i1u160_20 00D2                              i1u136_21 0F5C  
                            i1u160_21 00CE                              i1u137_20 0F7E  
                            i1u153_20 0438                              i1u137_21 0F7A  
                            i1u153_21 0434                              i1u161_25 00DA  
                            i1u161_26 00DC                              i1u138_20 0F9A  
                            i1u154_20 052C                              i1u162_20 00EE  
                            i1u138_21 0F96                              i1u154_21 0528  
                            i1u162_21 00E8                              i1u155_20 054E  
                            i1u163_20 00F0                              i1u155_21 054A  
                            i1u156_20 0570                              i1u156_21 056C  
                            i1u157_20 004C                              i1u157_21 0048  
                            i1u158_20 0098                              i1u158_21 0094  
                            i1u159_20 00B6                              i1u159_21 00B2  
                            _PIR1bits 000F9E                              _PIR3bits 000FA4  
                 _configureInterrupts 1460                             _skipValue 0048  
                           _vfpfcnvrt 078E                            _ADCON0bits 000FC2  
                          _ADCON2bits 000FC0                            _ADCON3bits 000F9A  
                ?_configureInterrupts 0001                 _prevTimer0ReloadValue 00D7  
                         _INTCON2bits 000FF1                             copy_data0 0FCE  
                           copy_data1 0FEE                             tcInt@duty 0015  
                            __Hrparam 0000                       _configureInputs 1456  
                     _configureTimer0 13F4                       _configureTimer1 141E  
                     _configureTimer2 1432                       _configureTimer5 140A  
                     display@noDigits 0130                            vfprintf@ap 0096  
                            __Lrparam 0000                            vfprintf@fp 0092  
             __size_of_LCD_Initialize 0052                      __size_of___aodiv 0188  
                    __size_of___aomod 0164                            ?_vfpfcnvrt 0084  
                    __size_of___lwdiv 0074                      __size_of___lwmod 0064  
                          _ANSEL0bits 000FB8                       ___aodiv@divisor 001E  
                     ___aodiv@counter 0026                      __size_of_display 01B8  
                          sprintf@fmt 009C                      __size_of_readADC 004E  
               ??_configureInterrupts 0016                       ___lwdiv@divisor 0018  
                     ___lwdiv@counter 001A                              __ptext10 1366  
                            __ptext11 126A                              __ptext20 139C  
                            __ptext12 0C30                              __ptext21 140A  
                            __ptext13 146A                              __ptext30 12EE  
                            __ptext22 1432                              __ptext14 12AE  
                            __ptext31 0DBC                              __ptext23 141E  
                            __ptext15 0ACC                              __ptext24 13F4  
                            __ptext16 0944                              __ptext33 040A  
                            __ptext25 1222                              __ptext17 1020  
                            __ptext34 0F46                              __ptext26 1460  
                            __ptext18 0ED2                           _scaleFactor 3D4D  
                            __ptext27 1456                              __ptext19 132C  
                            __ptext28 13CC                              __ptext29 1138  
                    __size_of_sprintf 0052                    i1___lwdiv@dividend 0001  
                       __size_of_main 004A                         __size_of_dtoa 02E2  
                 __end_of_sinusValues 3C85                              int$flags 0049  
                            _startPWM 1466                              _vfprintf 1084  
                          _LCDPutChar 139C                              display@i 0133  
                    ___aomod@dividend 0016                    i1___lwdiv@quotient 0005  
                         _refreshTime 00B6                            _INTCONbits 000FF2  
                       _shouldDisplay 00B4  updateSinusIndexes@currentScalefactor 000A  
                            intlevel1 0000                             sprintf@ap 00A2  
             __end_of_configureInputs 1460           __end_of_timer0PreloadValues 3D4D  
             __end_of_configureTimer0 140A               __end_of_configureTimer1 1432  
             __end_of_configureTimer2 1440               __end_of_configureTimer5 141E  
                    ___lwmod@dividend 0016                           _PWMCON0bits 000F6F  
                         _PWMCON1bits 000F6E                       ___aomod@divisor 001E  
                         ??_vfpfcnvrt 0031                       ___aomod@counter 0026  
                          _PTCON0bits 000F7F                            _PTCON1bits 000F7E  
                            sprintf@f 00A4                              sprintf@s 009A  
                  _updateSinusIndexes 040A                       ___lwmod@divisor 0018  
                     ___lwmod@counter 001A                   ?_updateSinusIndexes 0001  
                        ___aodiv@sign 0027                           _sinusIndex1 003D  
                         _sinusIndex2 0047                           _sinusIndex3 0046  
                         _sinusValue1 0037                           _sinusValue2 0042  
                         _sinusValue3 0040                           _sinusValues 3A85  
             __size_of_LCDWriteNibble 0092                          ___aomod@sign 0027  
