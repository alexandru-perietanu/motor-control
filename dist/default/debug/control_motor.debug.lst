

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jan 04 02:20:30 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           ; Version 2.10
    51                           ; Generated 31/07/2019 GMT
    52                           ; 
    53                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4431 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	idataCOMRAM
    86  001334                     __pidataCOMRAM:
    87                           	opt callstack 0
    88                           
    89                           ;initializer for _d1
    90  001334  01                 	db	1
    91                           
    92                           	psect	idataBANK0
    93  00131A                     __pidataBANK0:
    94                           	opt callstack 0
    95                           
    96                           ;initializer for _prevTimer0ReloadValue
    97  00131A  EC77               	dw	60535
    98                           
    99                           ;initializer for _timer0ReloadValue
   100  00131C  EC77               	dw	60535
   101                           
   102                           ;initializer for _timer5ReloadValue
   103  00131E  0BDB               	dw	3035
   104                           
   105                           ;initializer for _prevAdcPercent
   106  001320  0065               	dw	101
   107                           
   108                           ;initializer for _PrevADRESH
   109  001322  41                 	db	65
   110                           
   111                           ;initializer for _sinusIndex3
   112  001323  AA                 	db	170
   113                           
   114                           ;initializer for _sinusIndex2
   115  001324  55                 	db	85
   116                           
   117                           ;initializer for _maxADCVal
   118  001325  00FF               	dw	255
   119                           
   120                           	psect	mediumconst
   121  003AE8                     __pmediumconst:
   122                           	opt callstack 0
   123  003AE8  00                 	db	0
   124  003AE9                     _sinusValues:
   125                           	opt callstack 0
   126  003AE9  03C0               	dw	960
   127  003AEB  03D6               	dw	982
   128  003AED  03EC               	dw	1004
   129  003AEF  0402               	dw	1026
   130  003AF1  0419               	dw	1049
   131  003AF3  042F               	dw	1071
   132  003AF5  0445               	dw	1093
   133  003AF7  045B               	dw	1115
   134  003AF9  0471               	dw	1137
   135  003AFB  0488               	dw	1160
   136  003AFD  049E               	dw	1182
   137  003AFF  04BB               	dw	1211
   138  003B01  04D2               	dw	1234
   139  003B03  04E0               	dw	1248
   140  003B05  04F7               	dw	1271
   141  003B07  050D               	dw	1293
   142  003B09  0523               	dw	1315
   143  003B0B  0539               	dw	1337
   144  003B0D  054F               	dw	1359
   145  003B0F  0566               	dw	1382
   146  003B11  057C               	dw	1404
   147  003B13  058B               	dw	1419
   148  003B15  05A1               	dw	1441
   149  003B17  05B7               	dw	1463
   150  003B19  05C6               	dw	1478
   151  003B1B  05DC               	dw	1500
   152  003B1D  05EB               	dw	1515
   153  003B1F  0601               	dw	1537
   154  003B21  0610               	dw	1552
   155  003B23  0626               	dw	1574
   156  003B25  0635               	dw	1589
   157  003B27  0644               	dw	1604
   158  003B29  065A               	dw	1626
   159  003B2B  0669               	dw	1641
   160  003B2D  0677               	dw	1655
   161  003B2F  0686               	dw	1670
   162  003B31  0695               	dw	1685
   163  003B33  06A4               	dw	1700
   164  003B35  06B3               	dw	1715
   165  003B37  06C1               	dw	1729
   166  003B39  06C9               	dw	1737
   167  003B3B  06D8               	dw	1752
   168  003B3D  06E6               	dw	1766
   169  003B3F  06EE               	dw	1774
   170  003B41  06FD               	dw	1789
   171  003B43  0704               	dw	1796
   172  003B45  0713               	dw	1811
   173  003B47  071A               	dw	1818
   174  003B49  0722               	dw	1826
   175  003B4B  0729               	dw	1833
   176  003B4D  0730               	dw	1840
   177  003B4F  0738               	dw	1848
   178  003B51  073F               	dw	1855
   179  003B53  0747               	dw	1863
   180  003B55  074E               	dw	1870
   181  003B57  0755               	dw	1877
   182  003B59  0755               	dw	1877
   183  003B5B  075D               	dw	1885
   184  003B5D  075D               	dw	1885
   185  003B5F  0764               	dw	1892
   186  003B61  0764               	dw	1892
   187  003B63  0764               	dw	1892
   188  003B65  0764               	dw	1892
   189  003B67  0764               	dw	1892
   190  003B69  0764               	dw	1892
   191  003B6B  0764               	dw	1892
   192  003B6D  0764               	dw	1892
   193  003B6F  0764               	dw	1892
   194  003B71  0764               	dw	1892
   195  003B73  075D               	dw	1885
   196  003B75  075D               	dw	1885
   197  003B77  0755               	dw	1877
   198  003B79  0755               	dw	1877
   199  003B7B  074E               	dw	1870
   200  003B7D  0747               	dw	1863
   201  003B7F  0747               	dw	1863
   202  003B81  073F               	dw	1855
   203  003B83  0738               	dw	1848
   204  003B85  0730               	dw	1840
   205  003B87  0729               	dw	1833
   206  003B89  071A               	dw	1818
   207  003B8B  0713               	dw	1811
   208  003B8D  070B               	dw	1803
   209  003B8F  06FD               	dw	1789
   210  003B91  06F5               	dw	1781
   211  003B93  06E6               	dw	1766
   212  003B95  06DF               	dw	1759
   213  003B97  06D0               	dw	1744
   214  003B99  06C1               	dw	1729
   215  003B9B  06BA               	dw	1722
   216  003B9D  06AB               	dw	1707
   217  003B9F  069C               	dw	1692
   218  003BA1  068E               	dw	1678
   219  003BA3  067F               	dw	1663
   220  003BA5  0670               	dw	1648
   221  003BA7  0661               	dw	1633
   222  003BA9  064B               	dw	1611
   223  003BAB  063C               	dw	1596
   224  003BAD  062D               	dw	1581
   225  003BAF  061F               	dw	1567
   226  003BB1  0608               	dw	1544
   227  003BB3  05FA               	dw	1530
   228  003BB5  05E3               	dw	1507
   229  003BB7  05D5               	dw	1493
   230  003BB9  05BE               	dw	1470
   231  003BBB  05A8               	dw	1448
   232  003BBD  0599               	dw	1433
   233  003BBF  0583               	dw	1411
   234  003BC1  056D               	dw	1389
   235  003BC3  0557               	dw	1367
   236  003BC5  0548               	dw	1352
   237  003BC7  0532               	dw	1330
   238  003BC9  051C               	dw	1308
   239  003BCB  0505               	dw	1285
   240  003BCD  04EF               	dw	1263
   241  003BCF  04D9               	dw	1241
   242  003BD1  04C3               	dw	1219
   243  003BD3  04AD               	dw	1197
   244  003BD5  0496               	dw	1174
   245  003BD7  0480               	dw	1152
   246  003BD9  046A               	dw	1130
   247  003BDB  0454               	dw	1108
   248  003BDD  043E               	dw	1086
   249  003BDF  0427               	dw	1063
   250  003BE1  040A               	dw	1034
   251  003BE3  03F4               	dw	1012
   252  003BE5  03DD               	dw	989
   253  003BE7  03C7               	dw	967
   254  003BE9  03B1               	dw	945
   255  003BEB  039B               	dw	923
   256  003BED  0385               	dw	901
   257  003BEF  036E               	dw	878
   258  003BF1  0351               	dw	849
   259  003BF3  033B               	dw	827
   260  003BF5  0324               	dw	804
   261  003BF7  030E               	dw	782
   262  003BF9  02F8               	dw	760
   263  003BFB  02E2               	dw	738
   264  003BFD  02CC               	dw	716
   265  003BFF  02B5               	dw	693
   266  003C01  029F               	dw	671
   267  003C03  0289               	dw	649
   268  003C05  0273               	dw	627
   269  003C07  025D               	dw	605
   270  003C09  0246               	dw	582
   271  003C0B  0230               	dw	560
   272  003C0D  0221               	dw	545
   273  003C0F  020B               	dw	523
   274  003C11  01F5               	dw	501
   275  003C13  01DF               	dw	479
   276  003C15  01D0               	dw	464
   277  003C17  01BA               	dw	442
   278  003C19  01A4               	dw	420
   279  003C1B  0195               	dw	405
   280  003C1D  017F               	dw	383
   281  003C1F  0170               	dw	368
   282  003C21  015A               	dw	346
   283  003C23  014B               	dw	331
   284  003C25  013C               	dw	316
   285  003C27  012D               	dw	301
   286  003C29  0117               	dw	279
   287  003C2B  0108               	dw	264
   288  003C2D  00F9               	dw	249
   289  003C2F  00EB               	dw	235
   290  003C31  00DC               	dw	220
   291  003C33  00CD               	dw	205
   292  003C35  00BE               	dw	190
   293  003C37  00B7               	dw	183
   294  003C39  00A8               	dw	168
   295  003C3B  0099               	dw	153
   296  003C3D  0092               	dw	146
   297  003C3F  0083               	dw	131
   298  003C41  007C               	dw	124
   299  003C43  006D               	dw	109
   300  003C45  0065               	dw	101
   301  003C47  005E               	dw	94
   302  003C49  004F               	dw	79
   303  003C4B  0048               	dw	72
   304  003C4D  0040               	dw	64
   305  003C4F  0039               	dw	57
   306  003C51  0032               	dw	50
   307  003C53  0032               	dw	50
   308  003C55  002A               	dw	42
   309  003C57  0023               	dw	35
   310  003C59  0023               	dw	35
   311  003C5B  001B               	dw	27
   312  003C5D  001B               	dw	27
   313  003C5F  0014               	dw	20
   314  003C61  0014               	dw	20
   315  003C63  0014               	dw	20
   316  003C65  0014               	dw	20
   317  003C67  0014               	dw	20
   318  003C69  0014               	dw	20
   319  003C6B  0014               	dw	20
   320  003C6D  0014               	dw	20
   321  003C6F  0014               	dw	20
   322  003C71  0014               	dw	20
   323  003C73  001B               	dw	27
   324  003C75  001B               	dw	27
   325  003C77  0023               	dw	35
   326  003C79  0023               	dw	35
   327  003C7B  002A               	dw	42
   328  003C7D  0032               	dw	50
   329  003C7F  0039               	dw	57
   330  003C81  0040               	dw	64
   331  003C83  0048               	dw	72
   332  003C85  004F               	dw	79
   333  003C87  0057               	dw	87
   334  003C89  005E               	dw	94
   335  003C8B  0065               	dw	101
   336  003C8D  0074               	dw	116
   337  003C8F  007C               	dw	124
   338  003C91  008A               	dw	138
   339  003C93  0092               	dw	146
   340  003C95  00A1               	dw	161
   341  003C97  00AF               	dw	175
   342  003C99  00B7               	dw	183
   343  003C9B  00C6               	dw	198
   344  003C9D  00D4               	dw	212
   345  003C9F  00E3               	dw	227
   346  003CA1  00F2               	dw	242
   347  003CA3  0101               	dw	257
   348  003CA5  0110               	dw	272
   349  003CA7  011E               	dw	286
   350  003CA9  0135               	dw	309
   351  003CAB  0143               	dw	323
   352  003CAD  0152               	dw	338
   353  003CAF  0168               	dw	360
   354  003CB1  0177               	dw	375
   355  003CB3  018D               	dw	397
   356  003CB5  019C               	dw	412
   357  003CB7  01B2               	dw	434
   358  003CB9  01C1               	dw	449
   359  003CBB  01D7               	dw	471
   360  003CBD  01EE               	dw	494
   361  003CBF  01FC               	dw	508
   362  003CC1  0213               	dw	531
   363  003CC3  0229               	dw	553
   364  003CC5  023F               	dw	575
   365  003CC7  0255               	dw	597
   366  003CC9  026B               	dw	619
   367  003CCB  0282               	dw	642
   368  003CCD  0298               	dw	664
   369  003CCF  02A7               	dw	679
   370  003CD1  02BD               	dw	701
   371  003CD3  02DA               	dw	730
   372  003CD5  02F1               	dw	753
   373  003CD7  0307               	dw	775
   374  003CD9  031D               	dw	797
   375  003CDB  0333               	dw	819
   376  003CDD  0349               	dw	841
   377  003CDF  0360               	dw	864
   378  003CE1  0376               	dw	886
   379  003CE3  038C               	dw	908
   380  003CE5  03A2               	dw	930
   381  003CE7  03B8               	dw	952
   382  003CE9                     __end_of_sinusValues:
   383                           	opt callstack 0
   384  003CE9                     _timer0PreloadValues:
   385                           	opt callstack 0
   386  003CE9  EC77               	dw	60535
   387  003CEB  F63B               	dw	63035
   388  003CED  F97C               	dw	63868
   389  003CEF  FB1D               	dw	64285
   390  003CF1  FC17               	dw	64535
   391  003CF3  FCBD               	dw	64701
   392  003CF5  FD34               	dw	64820
   393  003CF7  FD8E               	dw	64910
   394  003CF9  FDD3               	dw	64979
   395  003CFB  FE0B               	dw	65035
   396  003CFD  FE38               	dw	65080
   397  003CFF  FE5E               	dw	65118
   398  003D01  FE7E               	dw	65150
   399  003D03  FE99               	dw	65177
   400  003D05  FEB1               	dw	65201
   401  003D07  FEC6               	dw	65222
   402  003D09  FED8               	dw	65240
   403  003D0B  FEE9               	dw	65257
   404  003D0D  FEF7               	dw	65271
   405  003D0F  FF05               	dw	65285
   406  003D11  FF10               	dw	65296
   407  003D13  FF1B               	dw	65307
   408  003D15  FF25               	dw	65317
   409  003D17  FF2E               	dw	65326
   410  003D19  FF37               	dw	65335
   411  003D1B  FF3E               	dw	65342
   412  003D1D  FF45               	dw	65349
   413  003D1F  FF4C               	dw	65356
   414  003D21  FF52               	dw	65362
   415  003D23  FF58               	dw	65368
   416  003D25  FF5D               	dw	65373
   417  003D27  FF62               	dw	65378
   418  003D29  FF67               	dw	65383
   419  003D2B  FF6B               	dw	65387
   420  003D2D  FF70               	dw	65392
   421  003D2F  FF74               	dw	65396
   422  003D31  FF77               	dw	65399
   423  003D33  FF7B               	dw	65403
   424  003D35  FF7E               	dw	65406
   425  003D37  FF82               	dw	65410
   426  003D39  FF85               	dw	65413
   427  003D3B  FF87               	dw	65415
   428  003D3D  FF8A               	dw	65418
   429  003D3F  FF8D               	dw	65421
   430  003D41  FF8F               	dw	65423
   431  003D43  FF92               	dw	65426
   432  003D45  FF94               	dw	65428
   433  003D47  FF96               	dw	65430
   434  003D49  FF98               	dw	65432
   435  003D4B  FF9B               	dw	65435
   436  003D4D  FF9C               	dw	65436
   437  003D4F  FF9E               	dw	65438
   438  003D51  FFA0               	dw	65440
   439  003D53  FFA2               	dw	65442
   440  003D55  FFA4               	dw	65444
   441  003D57  FFA5               	dw	65445
   442  003D59  FFA7               	dw	65447
   443  003D5B  FFA8               	dw	65448
   444  003D5D  FFAA               	dw	65450
   445  003D5F  FFAB               	dw	65451
   446  003D61  FFAD               	dw	65453
   447  003D63  FFAE               	dw	65454
   448  003D65  FFAF               	dw	65455
   449  003D67  FFB0               	dw	65456
   450  003D69  FFB2               	dw	65458
   451  003D6B  FFB3               	dw	65459
   452  003D6D  FFB4               	dw	65460
   453  003D6F  FFB5               	dw	65461
   454  003D71  FFB6               	dw	65462
   455  003D73  FFB7               	dw	65463
   456  003D75  FFB8               	dw	65464
   457  003D77  FFB9               	dw	65465
   458  003D79  FFBA               	dw	65466
   459  003D7B  FFBB               	dw	65467
   460  003D7D  FFBC               	dw	65468
   461  003D7F  FFBD               	dw	65469
   462  003D81  FFBE               	dw	65470
   463  003D83  FFBE               	dw	65470
   464  003D85  FFBF               	dw	65471
   465  003D87  FFC0               	dw	65472
   466  003D89  FFC1               	dw	65473
   467  003D8B  FFC2               	dw	65474
   468  003D8D  FFC2               	dw	65474
   469  003D8F  FFC3               	dw	65475
   470  003D91  FFC4               	dw	65476
   471  003D93  FFC4               	dw	65476
   472  003D95  FFC5               	dw	65477
   473  003D97  FFC6               	dw	65478
   474  003D99  FFC6               	dw	65478
   475  003D9B  FFC7               	dw	65479
   476  003D9D  FFC8               	dw	65480
   477  003D9F  FFC8               	dw	65480
   478  003DA1  FFC9               	dw	65481
   479  003DA3  FFC9               	dw	65481
   480  003DA5  FFCA               	dw	65482
   481  003DA7  FFCA               	dw	65482
   482  003DA9  FFCB               	dw	65483
   483  003DAB  FFCB               	dw	65483
   484  003DAD  FFCC               	dw	65484
   485  003DAF  FFCD               	dw	65485
   486  003DB1                     __end_of_timer0PreloadValues:
   487                           	opt callstack 0
   488  003DB1                     _digits:
   489                           	opt callstack 0
   490  003DB1  30                 	db	48
   491  003DB2  31                 	db	49
   492  003DB3  32                 	db	50
   493  003DB4  33                 	db	51
   494  003DB5  34                 	db	52
   495  003DB6  35                 	db	53
   496  003DB7  36                 	db	54
   497  003DB8  37                 	db	55
   498  003DB9  38                 	db	56
   499  003DBA  39                 	db	57
   500  003DBB                     __end_of_digits:
   501                           	opt callstack 0
   502  0000                     _TMR5	set	3975
   503  0000                     _PORTDbits	set	3971
   504  0000                     _PORTCbits	set	3970
   505  0000                     _TRISDbits	set	3989
   506  0000                     _TRISCbits	set	3988
   507  0000                     _PDC2L	set	3957
   508  0000                     _PDC2H	set	3956
   509  0000                     _PDC1L	set	3959
   510  0000                     _PDC1H	set	3958
   511  0000                     _PORTAbits	set	3968
   512  0000                     _TRISAbits	set	3986
   513  0000                     _ADCHSbits	set	3993
   514  0000                     _ADCON3bits	set	3994
   515  0000                     _OVDCONS	set	3946
   516  0000                     _OVDCOND	set	3947
   517  0000                     _PDC0L	set	3961
   518  0000                     _PDC0H	set	3960
   519  0000                     _PTPERL	set	3963
   520  0000                     _PTPERH	set	3962
   521  0000                     _PWMCON1bits	set	3950
   522  0000                     _PWMCON0bits	set	3951
   523  0000                     _PTCON1bits	set	3966
   524  0000                     _PTCON0bits	set	3967
   525  0000                     _PORTB	set	3969
   526  0000                     _TRISB	set	3987
   527  0000                     _LATB	set	3978
   528  0000                     _TMR1	set	4046
   529  0000                     _PIR3bits	set	4004
   530  0000                     _ADRESH	set	4036
   531  0000                     _T5CONbits	set	4023
   532  0000                     _T1CONbits	set	4045
   533  0000                     _PIR1bits	set	3998
   534  0000                     _PIE1bits	set	3997
   535  0000                     _ANSEL0bits	set	4024
   536  0000                     _ADCON2bits	set	4032
   537  0000                     _ADCON1	set	4033
   538  0000                     _ADCON0bits	set	4034
   539  0000                     _PIE3bits	set	4003
   540  0000                     _TMR0	set	4054
   541  0000                     _T0CONbits	set	4053
   542  0000                     _INTCONbits	set	4082
   543  003DBB                     STR_1:
   544  003DBB  25                 	db	37
   545  003DBC  64                 	db	100	;'d'
   546  003DBD  00                 	db	0
   547                           
   548                           ; #config settings
   549  003DBE  00                 	db	0	; dummy byte at the end
   550  0000                     
   551                           	psect	cinit
   552  00100A                     __pcinit:
   553                           	opt callstack 0
   554  00100A                     start_initialization:
   555                           	opt callstack 0
   556  00100A                     __initialization:
   557                           	opt callstack 0
   558                           
   559                           ; Initialize objects allocated to BANK0 (13 bytes)
   560                           ; load TBLPTR registers with __pidataBANK0
   561  00100A  0E1A               	movlw	low __pidataBANK0
   562  00100C  6EF6               	movwf	tblptrl,c
   563  00100E  0E13               	movlw	high __pidataBANK0
   564  001010  6EF7               	movwf	tblptrh,c
   565  001012  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   566  001014  6EF8               	movwf	tblptru,c
   567  001016  EE00  F0D1         	lfsr	0,__pdataBANK0
   568  00101A  EE10 F00D          	lfsr	1,13
   569  00101E                     copy_data0:
   570  00101E  0009               	tblrd		*+
   571  001020  CFF5 FFEE          	movff	tablat,postinc0
   572  001024  50E5               	movf	postdec1,w,c
   573  001026  50E1               	movf	fsr1l,w,c
   574  001028  E1FA               	bnz	copy_data0
   575                           
   576                           ; Initialize objects allocated to COMRAM (1 bytes)
   577                           ; load TBLPTR registers with __pidataCOMRAM
   578  00102A  0E34               	movlw	low __pidataCOMRAM
   579  00102C  6EF6               	movwf	tblptrl,c
   580  00102E  0E13               	movlw	high __pidataCOMRAM
   581  001030  6EF7               	movwf	tblptrh,c
   582  001032  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   583  001034  6EF8               	movwf	tblptru,c
   584  001036  0009               	tblrd		*+	;fetch initializer
   585  001038  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   586                           
   587                           ; Clear objects allocated to BANK0 (50 bytes)
   588  00103C  EE00  F09F         	lfsr	0,__pbssBANK0
   589  001040  0E32               	movlw	50
   590  001042                     clear_0:
   591  001042  6AEE               	clrf	postinc0,c
   592  001044  06E8               	decf	wreg,f,c
   593  001046  E1FD               	bnz	clear_0
   594  001048                     end_of_initialization:
   595                           	opt callstack 0
   596  001048                     __end_of__initialization:
   597                           	opt callstack 0
   598  001048  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   599  00104A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   600  00104C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   601  00104E  6EF8               	movwf	tblptru,c
   602  001050  0100               	movlb	0
   603  001052  EFEE  F008         	goto	_main	;jump to C main() function
   604                           
   605                           	psect	dataCOMRAM
   606  00005E                     __pdataCOMRAM:
   607                           	opt callstack 0
   608  00005E                     _d1:
   609                           	opt callstack 0
   610  00005E                     	ds	1
   611                           
   612                           	psect	bssBANK0
   613  00009F                     __pbssBANK0:
   614                           	opt callstack 0
   615  00009F                     _dutyCycle:
   616                           	opt callstack 0
   617  00009F                     	ds	4
   618  0000A3                     _nout:
   619                           	opt callstack 0
   620  0000A3                     	ds	2
   621  0000A5                     _width:
   622                           	opt callstack 0
   623  0000A5                     	ds	2
   624  0000A7                     _prec:
   625                           	opt callstack 0
   626  0000A7                     	ds	2
   627  0000A9                     _flags:
   628                           	opt callstack 0
   629  0000A9                     	ds	2
   630  0000AB                     _adcPercent:
   631                           	opt callstack 0
   632  0000AB                     	ds	2
   633  0000AD                     _currentPreloadIndex:
   634                           	opt callstack 0
   635  0000AD                     	ds	1
   636  0000AE                     _refreshTime:
   637                           	opt callstack 0
   638  0000AE                     	ds	1
   639  0000AF                     _timer5OverflowCount:
   640                           	opt callstack 0
   641  0000AF                     	ds	1
   642  0000B0                     _sinusIndex1:
   643                           	opt callstack 0
   644  0000B0                     	ds	1
   645  0000B1                     _dbuf:
   646                           	opt callstack 0
   647  0000B1                     	ds	32
   648                           
   649                           	psect	dataBANK0
   650  0000D1                     __pdataBANK0:
   651                           	opt callstack 0
   652  0000D1                     _prevTimer0ReloadValue:
   653                           	opt callstack 0
   654  0000D1                     	ds	2
   655  0000D3                     _timer0ReloadValue:
   656                           	opt callstack 0
   657  0000D3                     	ds	2
   658  0000D5                     _timer5ReloadValue:
   659                           	opt callstack 0
   660  0000D5                     	ds	2
   661  0000D7                     _prevAdcPercent:
   662                           	opt callstack 0
   663  0000D7                     	ds	2
   664  0000D9                     _PrevADRESH:
   665                           	opt callstack 0
   666  0000D9                     	ds	1
   667  0000DA                     _sinusIndex3:
   668                           	opt callstack 0
   669  0000DA                     	ds	1
   670  0000DB                     _sinusIndex2:
   671                           	opt callstack 0
   672  0000DB                     	ds	1
   673  0000DC                     _maxADCVal:
   674                           	opt callstack 0
   675  0000DC                     	ds	2
   676                           
   677                           	psect	cstackBANK1
   678  000100                     __pcstackBANK1:
   679                           	opt callstack 0
   680  000100                     LCDWriteNibble@rs:
   681                           	opt callstack 0
   682                           
   683                           ; 1 bytes @ 0x0
   684  000100                     	ds	1
   685  000101                     ??_LCDWriteNibble:
   686                           
   687                           ; 1 bytes @ 0x1
   688  000101                     	ds	1
   689  000102                     LCDWriteNibble@ch:
   690                           	opt callstack 0
   691                           
   692                           ; 1 bytes @ 0x2
   693  000102                     	ds	1
   694  000103                     ??_LCDPutChar:
   695  000103                     ??_LCDPutCmd:
   696                           
   697                           ; 1 bytes @ 0x3
   698  000103                     	ds	1
   699  000104                     LCDPutChar@ch:
   700                           	opt callstack 0
   701  000104                     LCDPutCmd@ch:
   702                           	opt callstack 0
   703                           
   704                           ; 1 bytes @ 0x4
   705  000104                     	ds	1
   706  000105                     ??_LCD_Initialize:
   707                           
   708                           ; 1 bytes @ 0x5
   709  000105                     	ds	2
   710  000107                     
   711                           ; 1 bytes @ 0x7
   712                           
   713                           	psect	cstackBANK0
   714  000060                     __pcstackBANK0:
   715                           	opt callstack 0
   716  000060                     	ds	2
   717  000062                     sprintf@ap:
   718                           	opt callstack 0
   719                           
   720                           ; 2 bytes @ 0x2
   721  000062                     	ds	2
   722  000064                     sprintf@f:
   723                           	opt callstack 0
   724                           
   725                           ; 6 bytes @ 0x4
   726  000064                     	ds	6
   727  00006A                     ??_tcInt:
   728                           
   729                           ; 1 bytes @ 0xA
   730  00006A                     	ds	15
   731  000079                     tcInt@str2:
   732                           	opt callstack 0
   733                           
   734                           ; 16 bytes @ 0x19
   735  000079                     	ds	16
   736  000089                     tcInt@str1:
   737                           	opt callstack 0
   738                           
   739                           ; 16 bytes @ 0x29
   740  000089                     	ds	16
   741  000099                     tcInt@noDigits:
   742                           	opt callstack 0
   743                           
   744                           ; 1 bytes @ 0x39
   745  000099                     	ds	1
   746  00009A                     tcInt@timer0ReloadValueCopy:
   747                           	opt callstack 0
   748                           
   749                           ; 2 bytes @ 0x3A
   750  00009A                     	ds	2
   751  00009C                     tcInt@i:
   752                           	opt callstack 0
   753                           
   754                           ; 2 bytes @ 0x3C
   755  00009C                     	ds	2
   756  00009E                     tcInt@duty:
   757                           	opt callstack 0
   758                           
   759                           ; 1 bytes @ 0x3E
   760  00009E                     	ds	1
   761                           
   762                           	psect	cstackCOMRAM
   763  000001                     __pcstackCOMRAM:
   764                           	opt callstack 0
   765  000001                     ?_strlen:
   766                           	opt callstack 0
   767  000001                     ?___lwdiv:
   768                           	opt callstack 0
   769  000001                     ?___lwmod:
   770                           	opt callstack 0
   771  000001                     ?___aodiv:
   772                           	opt callstack 0
   773  000001                     ?___aomod:
   774                           	opt callstack 0
   775  000001                     i1LCDWriteNibble@rs:
   776                           	opt callstack 0
   777  000001                     ___lwdiv@dividend:
   778                           	opt callstack 0
   779  000001                     ___lwmod@dividend:
   780                           	opt callstack 0
   781  000001                     fputc@c:
   782                           	opt callstack 0
   783  000001                     strlen@s:
   784                           	opt callstack 0
   785  000001                     ___aodiv@dividend:
   786                           	opt callstack 0
   787  000001                     ___aomod@dividend:
   788                           	opt callstack 0
   789                           
   790                           ; 8 bytes @ 0x0
   791  000001                     	ds	1
   792  000002                     ??i1_LCDWriteNibble:
   793                           
   794                           ; 1 bytes @ 0x1
   795  000002                     	ds	1
   796  000003                     i1LCDWriteNibble@ch:
   797                           	opt callstack 0
   798  000003                     ___lwdiv@divisor:
   799                           	opt callstack 0
   800  000003                     ___lwmod@divisor:
   801                           	opt callstack 0
   802  000003                     fputc@fp:
   803                           	opt callstack 0
   804  000003                     strlen@a:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0x2
   808  000003                     	ds	1
   809  000004                     ??i1_LCDPutChar:
   810  000004                     ??i1_LCDPutCmd:
   811                           
   812                           ; 1 bytes @ 0x3
   813  000004                     	ds	1
   814  000005                     ??_fputc:
   815  000005                     ___lwmod@counter:
   816                           	opt callstack 0
   817  000005                     i1LCDPutChar@ch:
   818                           	opt callstack 0
   819  000005                     i1LCDPutCmd@ch:
   820                           	opt callstack 0
   821  000005                     ___lwdiv@quotient:
   822                           	opt callstack 0
   823                           
   824                           ; 2 bytes @ 0x4
   825  000005                     	ds	1
   826  000006                     LCDPutStr@str:
   827                           	opt callstack 0
   828                           
   829                           ; 2 bytes @ 0x5
   830  000006                     	ds	1
   831  000007                     ___lwdiv@counter:
   832                           	opt callstack 0
   833                           
   834                           ; 1 bytes @ 0x6
   835  000007                     	ds	1
   836  000008                     LCDPutStr@i:
   837                           	opt callstack 0
   838                           
   839                           ; 1 bytes @ 0x7
   840  000008                     	ds	1
   841  000009                     ___aodiv@divisor:
   842                           	opt callstack 0
   843  000009                     ___aomod@divisor:
   844                           	opt callstack 0
   845                           
   846                           ; 8 bytes @ 0x8
   847  000009                     	ds	1
   848  00000A                     fputs@s:
   849                           	opt callstack 0
   850                           
   851                           ; 2 bytes @ 0x9
   852  00000A                     	ds	2
   853  00000C                     fputs@fp:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0xB
   857  00000C                     	ds	2
   858  00000E                     fputs@c:
   859                           	opt callstack 0
   860                           
   861                           ; 1 bytes @ 0xD
   862  00000E                     	ds	1
   863  00000F                     fputs@i:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0xE
   867  00000F                     	ds	2
   868  000011                     ?_pad:
   869                           	opt callstack 0
   870  000011                     ___aodiv@counter:
   871                           	opt callstack 0
   872  000011                     ___aomod@counter:
   873                           	opt callstack 0
   874  000011                     pad@fp:
   875                           	opt callstack 0
   876                           
   877                           ; 2 bytes @ 0x10
   878  000011                     	ds	1
   879  000012                     ___aodiv@sign:
   880                           	opt callstack 0
   881  000012                     ___aomod@sign:
   882                           	opt callstack 0
   883                           
   884                           ; 1 bytes @ 0x11
   885  000012                     	ds	1
   886  000013                     ?_abs:
   887                           	opt callstack 0
   888  000013                     pad@buf:
   889                           	opt callstack 0
   890  000013                     abs@a:
   891                           	opt callstack 0
   892  000013                     ___aodiv@quotient:
   893                           	opt callstack 0
   894                           
   895                           ; 8 bytes @ 0x12
   896  000013                     	ds	2
   897  000015                     ??_abs:
   898  000015                     pad@p:
   899                           	opt callstack 0
   900                           
   901                           ; 2 bytes @ 0x14
   902  000015                     	ds	2
   903  000017                     ??_pad:
   904                           
   905                           ; 1 bytes @ 0x16
   906  000017                     	ds	1
   907  000018                     pad@i:
   908                           	opt callstack 0
   909                           
   910                           ; 2 bytes @ 0x17
   911  000018                     	ds	2
   912  00001A                     pad@w:
   913                           	opt callstack 0
   914                           
   915                           ; 2 bytes @ 0x19
   916  00001A                     	ds	2
   917  00001C                     ?_dtoa:
   918                           	opt callstack 0
   919  00001C                     dtoa@fp:
   920                           	opt callstack 0
   921                           
   922                           ; 2 bytes @ 0x1B
   923  00001C                     	ds	2
   924  00001E                     dtoa@d:
   925                           	opt callstack 0
   926                           
   927                           ; 8 bytes @ 0x1D
   928  00001E                     	ds	8
   929  000026                     ??_dtoa:
   930                           
   931                           ; 1 bytes @ 0x25
   932  000026                     	ds	8
   933  00002E                     _dtoa$1347:
   934                           	opt callstack 0
   935                           
   936                           ; 2 bytes @ 0x2D
   937  00002E                     	ds	2
   938  000030                     dtoa@p:
   939                           	opt callstack 0
   940                           
   941                           ; 2 bytes @ 0x2F
   942  000030                     	ds	2
   943  000032                     dtoa@w:
   944                           	opt callstack 0
   945                           
   946                           ; 2 bytes @ 0x31
   947  000032                     	ds	2
   948  000034                     dtoa@s:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0x33
   952  000034                     	ds	2
   953  000036                     dtoa@n:
   954                           	opt callstack 0
   955                           
   956                           ; 8 bytes @ 0x35
   957  000036                     	ds	8
   958  00003E                     dtoa@i:
   959                           	opt callstack 0
   960                           
   961                           ; 2 bytes @ 0x3D
   962  00003E                     	ds	2
   963  000040                     ?_vfpfcnvrt:
   964                           	opt callstack 0
   965  000040                     vfpfcnvrt@fp:
   966                           	opt callstack 0
   967                           
   968                           ; 2 bytes @ 0x3F
   969  000040                     	ds	2
   970  000042                     vfpfcnvrt@fmt:
   971                           	opt callstack 0
   972                           
   973                           ; 2 bytes @ 0x41
   974  000042                     	ds	2
   975  000044                     vfpfcnvrt@ap:
   976                           	opt callstack 0
   977                           
   978                           ; 2 bytes @ 0x43
   979  000044                     	ds	2
   980  000046                     ??_vfpfcnvrt:
   981                           
   982                           ; 1 bytes @ 0x45
   983  000046                     	ds	2
   984  000048                     vfpfcnvrt@ll:
   985                           	opt callstack 0
   986                           
   987                           ; 8 bytes @ 0x47
   988  000048                     	ds	8
   989  000050                     ?_vfprintf:
   990                           	opt callstack 0
   991  000050                     vfprintf@fp:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x4F
   995  000050                     	ds	2
   996  000052                     vfprintf@fmt:
   997                           	opt callstack 0
   998                           
   999                           ; 2 bytes @ 0x51
  1000  000052                     	ds	2
  1001  000054                     vfprintf@ap:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x53
  1005  000054                     	ds	2
  1006  000056                     vfprintf@cfmt:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x55
  1010  000056                     	ds	2
  1011  000058                     ?_sprintf:
  1012                           	opt callstack 0
  1013  000058                     sprintf@s:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x57
  1017  000058                     	ds	2
  1018  00005A                     sprintf@fmt:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x59
  1022  00005A                     	ds	4
  1023  00005E                     
  1024                           ; 1 bytes @ 0x5D
  1025 ;;
  1026 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1027 ;;
  1028 ;; *************** function _main *****************
  1029 ;; Defined at:
  1030 ;;		line 363 in file "newmain.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;		None
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, status,2, status,0, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1044 ;;      Params:         0       0       0       0
  1045 ;;      Locals:         0       0       0       0
  1046 ;;      Temps:          0       0       0       0
  1047 ;;      Totals:         0       0       0       0
  1048 ;;Total ram usage:        0 bytes
  1049 ;; Hardware stack levels required when called:   12
  1050 ;; This function calls:
  1051 ;;		_LCDPutChar
  1052 ;;		_LCD_Initialize
  1053 ;;		_configureADC
  1054 ;;		_configureInterrupts
  1055 ;;		_configurePWM
  1056 ;;		_configureTimer0
  1057 ;;		_configureTimer1
  1058 ;;		_configureTimer5
  1059 ;;		_startPWM
  1060 ;; This function is called by:
  1061 ;;		Startup code after reset
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text0
  1066  0011DC                     __ptext0:
  1067                           	opt callstack 0
  1068  0011DC                     _main:
  1069                           	opt callstack 19
  1070  0011DC                     
  1071                           ;newmain.c: 364:     LCD_Initialize();
  1072  0011DC  ECB3  F007         	call	_LCD_Initialize	;wreg free
  1073  0011E0                     
  1074                           ;newmain.c: 365:     configureInterrupts();
  1075  0011E0  EC94  F009         	call	_configureInterrupts	;wreg free
  1076  0011E4                     
  1077                           ;newmain.c: 366:     configurePWM();
  1078  0011E4  EC93  F008         	call	_configurePWM	;wreg free
  1079  0011E8                     
  1080                           ;newmain.c: 367:     configureADC();
  1081  0011E8  EC57  F009         	call	_configureADC	;wreg free
  1082  0011EC                     
  1083                           ;newmain.c: 368:     configureTimer0();
  1084  0011EC  EC6B  F009         	call	_configureTimer0	;wreg free
  1085  0011F0                     
  1086                           ;newmain.c: 369:     configureTimer1();
  1087  0011F0  EC83  F009         	call	_configureTimer1	;wreg free
  1088  0011F4                     
  1089                           ;newmain.c: 370:     configureTimer5();
  1090  0011F4  EC79  F009         	call	_configureTimer5	;wreg free
  1091  0011F8                     
  1092                           ;newmain.c: 371:     startPWM();
  1093  0011F8  EC97  F009         	call	_startPWM	;wreg free
  1094  0011FC                     
  1095                           ;newmain.c: 378:     TRISAbits.TRISA2 = 0;
  1096  0011FC  9492               	bcf	146,2,c	;volatile
  1097  0011FE                     
  1098                           ;newmain.c: 379:     TRISAbits.RA2 = 0;
  1099  0011FE  9492               	bcf	146,2,c	;volatile
  1100  001200                     
  1101                           ;newmain.c: 380:     ANSEL0bits.ANS2 = 0;
  1102  001200  94B8               	bcf	184,2,c	;volatile
  1103  001202                     
  1104                           ;newmain.c: 381:     PORTAbits.RA2 = 1;
  1105  001202  8480               	bsf	128,2,c	;volatile
  1106  001204                     
  1107                           ;newmain.c: 385:     LCDPutChar('a');
  1108  001204  0E61               	movlw	97
  1109  001206  EC09  F009         	call	_LCDPutChar
  1110  00120A                     l151:
  1111  00120A  EF05  F009         	goto	l151
  1112  00120E  EFF7  F001         	goto	start
  1113  001212                     __end_of_main:
  1114                           	opt callstack 0
  1115                           
  1116 ;; *************** function _startPWM *****************
  1117 ;; Defined at:
  1118 ;;		line 250 in file "newmain.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		None
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1132 ;;      Params:         0       0       0       0
  1133 ;;      Locals:         0       0       0       0
  1134 ;;      Temps:          0       0       0       0
  1135 ;;      Totals:         0       0       0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    9
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text1
  1147  00132E                     __ptext1:
  1148                           	opt callstack 0
  1149  00132E                     _startPWM:
  1150                           	opt callstack 21
  1151  00132E                     
  1152                           ;newmain.c: 251:     PTCON1bits.PTEN = 1;
  1153  00132E  8E7E               	bsf	126,7,c	;volatile
  1154  001330  0012               	return		;funcret
  1155  001332                     __end_of_startPWM:
  1156                           	opt callstack 0
  1157                           
  1158 ;; *************** function _configureTimer5 *****************
  1159 ;; Defined at:
  1160 ;;		line 354 in file "newmain.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		None
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1174 ;;      Params:         0       0       0       0
  1175 ;;      Locals:         0       0       0       0
  1176 ;;      Temps:          0       0       0       0
  1177 ;;      Totals:         0       0       0       0
  1178 ;;Total ram usage:        0 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    9
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text2
  1189  0012F2                     __ptext2:
  1190                           	opt callstack 0
  1191  0012F2                     _configureTimer5:
  1192                           	opt callstack 21
  1193  0012F2                     
  1194                           ;newmain.c: 355:     T5CONbits.T5PS1 = 1;
  1195  0012F2  88B7               	bsf	183,4,c	;volatile
  1196                           
  1197                           ;newmain.c: 356:     T5CONbits.T5PS0 = 1;
  1198  0012F4  86B7               	bsf	183,3,c	;volatile
  1199                           
  1200                           ;newmain.c: 357:     T5CONbits.T5MOD = 0;
  1201  0012F6  9AB7               	bcf	183,5,c	;volatile
  1202                           
  1203                           ;newmain.c: 358:     T5CONbits.TMR5ON = 1;
  1204  0012F8  80B7               	bsf	183,0,c	;volatile
  1205                           
  1206                           ;newmain.c: 359:     PIE3bits.TMR5IE = 1;
  1207  0012FA  80A3               	bsf	163,0,c	;volatile
  1208                           
  1209                           ;newmain.c: 360:     TMR5 = timer5ReloadValue;
  1210  0012FC  C0D5  FF87         	movff	_timer5ReloadValue,3975	;volatile
  1211  001300  C0D6  FF88         	movff	_timer5ReloadValue+1,3976	;volatile
  1212  001304  0012               	return		;funcret
  1213  001306                     __end_of_configureTimer5:
  1214                           	opt callstack 0
  1215                           
  1216 ;; *************** function _configureTimer1 *****************
  1217 ;; Defined at:
  1218 ;;		line 343 in file "newmain.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1232 ;;      Params:         0       0       0       0
  1233 ;;      Locals:         0       0       0       0
  1234 ;;      Temps:          0       0       0       0
  1235 ;;      Totals:         0       0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels used:    1
  1238 ;; Hardware stack levels required when called:    9
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text3
  1247  001306                     __ptext3:
  1248                           	opt callstack 0
  1249  001306                     _configureTimer1:
  1250                           	opt callstack 21
  1251  001306                     
  1252                           ;newmain.c: 345:     T1CONbits.T1CKPS1 = 1;
  1253  001306  8ACD               	bsf	205,5,c	;volatile
  1254                           
  1255                           ;newmain.c: 346:     T1CONbits.T1CKPS0 = 1;
  1256  001308  88CD               	bsf	205,4,c	;volatile
  1257                           
  1258                           ;newmain.c: 348:     T1CONbits.TMR1CS = 0;
  1259  00130A  92CD               	bcf	205,1,c	;volatile
  1260                           
  1261                           ;newmain.c: 349:     T1CONbits.TMR1ON = 1;
  1262  00130C  80CD               	bsf	205,0,c	;volatile
  1263                           
  1264                           ;newmain.c: 350:     PIE1bits.TMR1IE = 1;
  1265  00130E  809D               	bsf	157,0,c	;volatile
  1266  001310                     
  1267                           ;newmain.c: 351:     TMR1 = 0;
  1268  001310  0E00               	movlw	0
  1269  001312  6ECF               	movwf	207,c	;volatile
  1270  001314  0E00               	movlw	0
  1271  001316  6ECE               	movwf	206,c	;volatile
  1272  001318  0012               	return		;funcret
  1273  00131A                     __end_of_configureTimer1:
  1274                           	opt callstack 0
  1275                           
  1276 ;; *************** function _configureTimer0 *****************
  1277 ;; Defined at:
  1278 ;;		line 326 in file "newmain.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		None
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1292 ;;      Params:         0       0       0       0
  1293 ;;      Locals:         0       0       0       0
  1294 ;;      Temps:          0       0       0       0
  1295 ;;      Totals:         0       0       0       0
  1296 ;;Total ram usage:        0 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    9
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_main
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text4
  1307  0012D6                     __ptext4:
  1308                           	opt callstack 0
  1309  0012D6                     _configureTimer0:
  1310                           	opt callstack 21
  1311  0012D6                     
  1312                           ;newmain.c: 330:     T0CONbits.PSA = 0;
  1313  0012D6  96D5               	bcf	213,3,c	;volatile
  1314                           
  1315                           ;newmain.c: 331:     T0CONbits.T0SE = 0;
  1316  0012D8  98D5               	bcf	213,4,c	;volatile
  1317                           
  1318                           ;newmain.c: 332:     T0CONbits.T0CS = 0;
  1319  0012DA  9AD5               	bcf	213,5,c	;volatile
  1320                           
  1321                           ;newmain.c: 333:     T0CONbits.T016BIT = 0;
  1322  0012DC  9CD5               	bcf	213,6,c	;volatile
  1323                           
  1324                           ;newmain.c: 334:     INTCONbits.TMR0IE = 1;
  1325  0012DE  8AF2               	bsf	242,5,c	;volatile
  1326                           
  1327                           ;newmain.c: 335:     T0CONbits.TMR0ON = 1;
  1328  0012E0  8ED5               	bsf	213,7,c	;volatile
  1329                           
  1330                           ;newmain.c: 336:     T0CONbits.T0PS0 = 0;
  1331  0012E2  90D5               	bcf	213,0,c	;volatile
  1332                           
  1333                           ;newmain.c: 337:     T0CONbits.T0PS1 = 1;
  1334  0012E4  82D5               	bsf	213,1,c	;volatile
  1335                           
  1336                           ;newmain.c: 338:     T0CONbits.T0PS2 = 0;
  1337  0012E6  94D5               	bcf	213,2,c	;volatile
  1338                           
  1339                           ;newmain.c: 339:     TMR0 = timer0ReloadValue;
  1340  0012E8  C0D3  FFD6         	movff	_timer0ReloadValue,4054	;volatile
  1341  0012EC  C0D4  FFD7         	movff	_timer0ReloadValue+1,4055	;volatile
  1342  0012F0  0012               	return		;funcret
  1343  0012F2                     __end_of_configureTimer0:
  1344                           	opt callstack 0
  1345                           
  1346 ;; *************** function _configurePWM *****************
  1347 ;; Defined at:
  1348 ;;		line 144 in file "newmain.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, status,2
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1362 ;;      Params:         0       0       0       0
  1363 ;;      Locals:         0       0       0       0
  1364 ;;      Temps:          0       0       0       0
  1365 ;;      Totals:         0       0       0       0
  1366 ;;Total ram usage:        0 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; Hardware stack levels required when called:    9
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text5
  1377  001126                     __ptext5:
  1378                           	opt callstack 0
  1379  001126                     _configurePWM:
  1380                           	opt callstack 21
  1381  001126                     
  1382                           ;newmain.c: 145:     LATB = 0;
  1383  001126  0E00               	movlw	0
  1384  001128  6E8A               	movwf	138,c	;volatile
  1385                           
  1386                           ;newmain.c: 146:     TRISB = 0;
  1387  00112A  0E00               	movlw	0
  1388  00112C  6E93               	movwf	147,c	;volatile
  1389                           
  1390                           ;newmain.c: 147:     PORTB = 0;
  1391  00112E  0E00               	movlw	0
  1392  001130  6E81               	movwf	129,c	;volatile
  1393  001132                     
  1394                           ;newmain.c: 157:     PTCON0bits.PTMOD0 = 0;
  1395  001132  907F               	bcf	127,0,c	;volatile
  1396  001134                     
  1397                           ;newmain.c: 158:     PTCON0bits.PTMOD1 = 0;
  1398  001134  927F               	bcf	127,1,c	;volatile
  1399  001136                     
  1400                           ;newmain.c: 171:     PTCON1bits.PTEN = 0;
  1401  001136  9E7E               	bcf	126,7,c	;volatile
  1402  001138                     
  1403                           ;newmain.c: 172:     PTCON1bits.PTDIR = 0;
  1404  001138  9C7E               	bcf	126,6,c	;volatile
  1405  00113A                     
  1406                           ;newmain.c: 199:     PWMCON0bits.PWMEN2 = 1;
  1407  00113A  8C6F               	bsf	111,6,c	;volatile
  1408  00113C                     
  1409                           ;newmain.c: 200:     PWMCON0bits.PWMEN1 = 0;
  1410  00113C  9A6F               	bcf	111,5,c	;volatile
  1411  00113E                     
  1412                           ;newmain.c: 201:     PWMCON0bits.PWMEN0 = 0;
  1413  00113E  986F               	bcf	111,4,c	;volatile
  1414  001140                     
  1415                           ;newmain.c: 203:     PWMCON0bits.PMOD0 = 0;
  1416  001140  906F               	bcf	111,0,c	;volatile
  1417  001142                     
  1418                           ;newmain.c: 204:     PWMCON0bits.PMOD1 = 0;
  1419  001142  926F               	bcf	111,1,c	;volatile
  1420  001144                     
  1421                           ;newmain.c: 205:     PWMCON0bits.PMOD2 = 0;
  1422  001144  946F               	bcf	111,2,c	;volatile
  1423  001146                     
  1424                           ;newmain.c: 213:     PWMCON1bits.UDIS = 0;
  1425  001146  926E               	bcf	110,1,c	;volatile
  1426  001148                     
  1427                           ;newmain.c: 214:     PWMCON1bits.OSYNC = 1;
  1428  001148  806E               	bsf	110,0,c	;volatile
  1429                           
  1430                           ;newmain.c: 219:     PTPERH = 0x01;
  1431  00114A  0E01               	movlw	1
  1432  00114C  6E7A               	movwf	122,c	;volatile
  1433                           
  1434                           ;newmain.c: 220:     PTPERL = 0xF3;
  1435  00114E  0EF3               	movlw	243
  1436  001150  6E7B               	movwf	123,c	;volatile
  1437                           
  1438                           ;newmain.c: 226:     PDC0H = 0x00;
  1439  001152  0E00               	movlw	0
  1440  001154  6E78               	movwf	120,c	;volatile
  1441                           
  1442                           ;newmain.c: 227:     PDC0L = 0x13;
  1443  001156  0E13               	movlw	19
  1444  001158  6E79               	movwf	121,c	;volatile
  1445  00115A                     
  1446                           ;newmain.c: 228:     PIE3bits.PTIE = 1;
  1447  00115A  88A3               	bsf	163,4,c	;volatile
  1448  00115C                     
  1449                           ;newmain.c: 237:     OVDCOND = 0xff;
  1450  00115C  686B               	setf	107,c	;volatile
  1451                           
  1452                           ;newmain.c: 247:     OVDCONS = 0;
  1453  00115E  0E00               	movlw	0
  1454  001160  6E6A               	movwf	106,c	;volatile
  1455  001162  0012               	return		;funcret
  1456  001164                     __end_of_configurePWM:
  1457                           	opt callstack 0
  1458                           
  1459 ;; *************** function _configureInterrupts *****************
  1460 ;; Defined at:
  1461 ;;		line 262 in file "newmain.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		None
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1475 ;;      Params:         0       0       0       0
  1476 ;;      Locals:         0       0       0       0
  1477 ;;      Temps:          0       0       0       0
  1478 ;;      Totals:         0       0       0       0
  1479 ;;Total ram usage:        0 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    9
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text6
  1490  001328                     __ptext6:
  1491                           	opt callstack 0
  1492  001328                     _configureInterrupts:
  1493                           	opt callstack 21
  1494  001328                     
  1495                           ;newmain.c: 282:     INTCONbits.GIE = 1;
  1496  001328  8EF2               	bsf	242,7,c	;volatile
  1497                           
  1498                           ;newmain.c: 283:     INTCONbits.PEIE = 1;
  1499  00132A  8CF2               	bsf	242,6,c	;volatile
  1500  00132C  0012               	return		;funcret
  1501  00132E                     __end_of_configureInterrupts:
  1502                           	opt callstack 0
  1503                           
  1504 ;; *************** function _configureADC *****************
  1505 ;; Defined at:
  1506 ;;		line 293 in file "newmain.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1520 ;;      Params:         0       0       0       0
  1521 ;;      Locals:         0       0       0       0
  1522 ;;      Temps:          0       0       0       0
  1523 ;;      Totals:         0       0       0       0
  1524 ;;Total ram usage:        0 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    9
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text7
  1535  0012AE                     __ptext7:
  1536                           	opt callstack 0
  1537  0012AE                     _configureADC:
  1538                           	opt callstack 21
  1539  0012AE                     
  1540                           ;newmain.c: 295:     ADCON0bits.ACONV = 1;
  1541  0012AE  8AC2               	bsf	194,5,c	;volatile
  1542                           
  1543                           ;newmain.c: 296:     ADCON0bits.ACSCH = 0;
  1544  0012B0  98C2               	bcf	194,4,c	;volatile
  1545                           
  1546                           ;newmain.c: 297:     ADCON0bits.ACMOD1 = 0;
  1547  0012B2  96C2               	bcf	194,3,c	;volatile
  1548                           
  1549                           ;newmain.c: 298:     ADCON0bits.ACMOD0 = 0;
  1550  0012B4  94C2               	bcf	194,2,c	;volatile
  1551  0012B6                     
  1552                           ;newmain.c: 300:     ADCON1 = 0;
  1553  0012B6  0E00               	movlw	0
  1554  0012B8  6EC1               	movwf	193,c	;volatile
  1555  0012BA                     
  1556                           ;newmain.c: 302:     ADCON2bits.ACQT2 = 1;
  1557  0012BA  8AC0               	bsf	192,5,c	;volatile
  1558  0012BC                     
  1559                           ;newmain.c: 303:     ADCON2bits.ACQT1 = 1;
  1560  0012BC  88C0               	bsf	192,4,c	;volatile
  1561  0012BE                     
  1562                           ;newmain.c: 306:     ADCON2bits.ADCS2 = 1;
  1563  0012BE  84C0               	bsf	192,2,c	;volatile
  1564  0012C0                     
  1565                           ;newmain.c: 307:     ADCON2bits.ADCS1 = 1;
  1566  0012C0  82C0               	bsf	192,1,c	;volatile
  1567  0012C2                     
  1568                           ;newmain.c: 310:     ADCON3bits.ADRS1 = 1;
  1569  0012C2  8E9A               	bsf	154,7,c	;volatile
  1570  0012C4                     
  1571                           ;newmain.c: 312:     ADCHSbits.GASEL1 = 0;
  1572  0012C4  9299               	bcf	153,1,c	;volatile
  1573  0012C6                     
  1574                           ;newmain.c: 313:     ADCHSbits.GASEL0 = 0;
  1575  0012C6  9099               	bcf	153,0,c	;volatile
  1576  0012C8                     
  1577                           ;newmain.c: 315:     ANSEL0bits.ANS0 = 1;
  1578  0012C8  80B8               	bsf	184,0,c	;volatile
  1579  0012CA                     
  1580                           ;newmain.c: 316:     TRISAbits.TRISA0 = 1;
  1581  0012CA  8092               	bsf	146,0,c	;volatile
  1582  0012CC                     
  1583                           ;newmain.c: 319:     PIE1bits.ADIE = 1;
  1584  0012CC  8C9D               	bsf	157,6,c	;volatile
  1585  0012CE                     
  1586                           ;newmain.c: 321:     ADCON0bits.ADON = 1;
  1587  0012CE  80C2               	bsf	194,0,c	;volatile
  1588  0012D0                     
  1589                           ;newmain.c: 322:     PIR1bits.ADIF = 0;
  1590  0012D0  9C9E               	bcf	158,6,c	;volatile
  1591  0012D2                     
  1592                           ;newmain.c: 323:     ADCON0bits.GODONE = 1;
  1593  0012D2  82C2               	bsf	194,1,c	;volatile
  1594  0012D4  0012               	return		;funcret
  1595  0012D6                     __end_of_configureADC:
  1596                           	opt callstack 0
  1597                           
  1598 ;; *************** function _LCD_Initialize *****************
  1599 ;; Defined at:
  1600 ;;		line 48 in file "lcd.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1614 ;;      Params:         0       0       0       0
  1615 ;;      Locals:         0       0       0       0
  1616 ;;      Temps:          0       0       2       0
  1617 ;;      Totals:         0       0       2       0
  1618 ;;Total ram usage:        2 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:   11
  1621 ;; This function calls:
  1622 ;;		_LCDPutCmd
  1623 ;; This function is called by:
  1624 ;;		_main
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text8
  1629  000F66                     __ptext8:
  1630                           	opt callstack 0
  1631  000F66                     _LCD_Initialize:
  1632                           	opt callstack 19
  1633  000F66                     
  1634                           ;lcd.c: 51:     TRISCbits.RC0 = 0;
  1635  000F66  9094               	bcf	148,0,c	;volatile
  1636                           
  1637                           ;lcd.c: 52:     TRISCbits.RC1 = 0;
  1638  000F68  9294               	bcf	148,1,c	;volatile
  1639                           
  1640                           ;lcd.c: 53:     TRISCbits.RC2 = 0;
  1641  000F6A  9494               	bcf	148,2,c	;volatile
  1642                           
  1643                           ;lcd.c: 54:     TRISCbits.RC3 = 0;
  1644  000F6C  9694               	bcf	148,3,c	;volatile
  1645                           
  1646                           ;lcd.c: 55:     TRISDbits.RD0 = 0;
  1647  000F6E  9095               	bcf	149,0,c	;volatile
  1648                           
  1649                           ;lcd.c: 56:     TRISDbits.RD1 = 0;
  1650  000F70  9295               	bcf	149,1,c	;volatile
  1651                           
  1652                           ;lcd.c: 59:     PORTCbits.RC0 = 0;
  1653  000F72  9082               	bcf	130,0,c	;volatile
  1654                           
  1655                           ;lcd.c: 60:     PORTCbits.RC1 = 0;
  1656  000F74  9282               	bcf	130,1,c	;volatile
  1657                           
  1658                           ;lcd.c: 61:     PORTCbits.RC2 = 0;
  1659  000F76  9482               	bcf	130,2,c	;volatile
  1660                           
  1661                           ;lcd.c: 62:     PORTCbits.RC3 = 0;
  1662  000F78  9682               	bcf	130,3,c	;volatile
  1663                           
  1664                           ;lcd.c: 63:     PORTDbits.RD0 = 0;
  1665  000F7A  9083               	bcf	131,0,c	;volatile
  1666                           
  1667                           ;lcd.c: 64:     PORTDbits.RD1 = 0;
  1668  000F7C  9283               	bcf	131,1,c	;volatile
  1669  000F7E                     
  1670                           ;lcd.c: 71:     _delay((unsigned long)((20)*(40000000/4000.0)));
  1671  000F7E  0E02               	movlw	2
  1672  000F80  0101               	movlb	1	; () banked
  1673  000F82  6F06               	movwf	(??_LCD_Initialize+1)& (0+255),b
  1674  000F84  0E04               	movlw	4
  1675  000F86  6F05               	movwf	??_LCD_Initialize& (0+255),b
  1676  000F88  0EBA               	movlw	186
  1677  000F8A                     u1517:
  1678  000F8A  2EE8               	decfsz	wreg,f,c
  1679  000F8C  D7FE               	bra	u1517
  1680  000F8E  2F05               	decfsz	??_LCD_Initialize& (0+255),f,b
  1681  000F90  D7FC               	bra	u1517
  1682  000F92  2F06               	decfsz	(??_LCD_Initialize+1)& (0+255),f,b
  1683  000F94  D7FA               	bra	u1517
  1684  000F96  F000               	nop	
  1685  000F98                     
  1686                           ;lcd.c: 74:     LCDPutCmd(0x32);
  1687  000F98  0E32               	movlw	50
  1688  000F9A  EC2B  F008         	call	_LCDPutCmd
  1689  000F9E                     
  1690                           ;lcd.c: 77:     LCDPutCmd(0x28);
  1691  000F9E  0E28               	movlw	40
  1692  000FA0  EC2B  F008         	call	_LCDPutCmd
  1693  000FA4                     
  1694                           ;lcd.c: 80:     LCDPutCmd(0x0C);
  1695  000FA4  0E0C               	movlw	12
  1696  000FA6  EC2B  F008         	call	_LCDPutCmd
  1697  000FAA                     
  1698                           ;lcd.c: 82:     LCDPutCmd(0x01);
  1699  000FAA  0E01               	movlw	1
  1700  000FAC  EC2B  F008         	call	_LCDPutCmd
  1701  000FB0                     
  1702                           ;lcd.c: 85:     LCDPutCmd(0x06);
  1703  000FB0  0E06               	movlw	6
  1704  000FB2  EC2B  F008         	call	_LCDPutCmd
  1705  000FB6  0012               	return		;funcret
  1706  000FB8                     __end_of_LCD_Initialize:
  1707                           	opt callstack 0
  1708                           
  1709 ;; *************** function _LCDPutCmd *****************
  1710 ;; Defined at:
  1711 ;;		line 132 in file "lcd.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  ch              1    wreg     unsigned char 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  ch              1    4[BANK1 ] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1725 ;;      Params:         0       0       0       0
  1726 ;;      Locals:         0       0       1       0
  1727 ;;      Temps:          0       0       1       0
  1728 ;;      Totals:         0       0       2       0
  1729 ;;Total ram usage:        2 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:   10
  1732 ;; This function calls:
  1733 ;;		_LCDWriteNibble
  1734 ;; This function is called by:
  1735 ;;		_LCD_Initialize
  1736 ;;		_LCDGoto
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text9
  1741  001056                     __ptext9:
  1742                           	opt callstack 0
  1743  001056                     _LCDPutCmd:
  1744                           	opt callstack 19
  1745                           
  1746                           ;incstack = 0
  1747                           ;LCDPutCmd@ch stored from wreg
  1748  001056  0101               	movlb	1	; () banked
  1749  001058  6F04               	movwf	LCDPutCmd@ch& (0+255),b
  1750  00105A                     
  1751                           ;lcd.c: 133:     _delay((unsigned long)((5)*(40000000/4000.0)));
  1752  00105A  0E41               	movlw	65
  1753  00105C  0101               	movlb	1	; () banked
  1754  00105E  6F03               	movwf	??_LCDPutCmd& (0+255),b
  1755  001060  0EEE               	movlw	238
  1756  001062                     u1527:
  1757  001062  2EE8               	decfsz	wreg,f,c
  1758  001064  D7FE               	bra	u1527
  1759  001066  2F03               	decfsz	??_LCDPutCmd& (0+255),f,b
  1760  001068  D7FC               	bra	u1527
  1761  00106A  F000               	nop	
  1762  00106C                     
  1763                           ;lcd.c: 136:     LCDWriteNibble(ch, 0);
  1764  00106C  0E00               	movlw	0
  1765  00106E  0101               	movlb	1	; () banked
  1766  001070  6F00               	movwf	LCDWriteNibble@rs& (0+255),b
  1767  001072  5104               	movf	LCDPutCmd@ch& (0+255),w,b
  1768  001074  EC82  F006         	call	_LCDWriteNibble
  1769  001078                     
  1770                           ;lcd.c: 139:     ch = (ch << 4);
  1771  001078  0101               	movlb	1	; () banked
  1772  00107A  3904               	swapf	LCDPutCmd@ch& (0+255),w,b
  1773  00107C  0BF0               	andlw	240
  1774  00107E  6F04               	movwf	LCDPutCmd@ch& (0+255),b
  1775  001080                     
  1776                           ; BSR set to: 1
  1777                           ;lcd.c: 141:     _delay((unsigned long)((1)*(40000000/4000.0)));
  1778  001080  0E0D               	movlw	13
  1779  001082  0101               	movlb	1	; () banked
  1780  001084  6F03               	movwf	??_LCDPutCmd& (0+255),b
  1781  001086  0EFB               	movlw	251
  1782  001088                     u1537:
  1783  001088  2EE8               	decfsz	wreg,f,c
  1784  00108A  D7FE               	bra	u1537
  1785  00108C  2F03               	decfsz	??_LCDPutCmd& (0+255),f,b
  1786  00108E  D7FC               	bra	u1537
  1787  001090  F000 F000          	nop2	
  1788  001094                     
  1789                           ;lcd.c: 144:     LCDWriteNibble(ch, 0);
  1790  001094  0E00               	movlw	0
  1791  001096  0101               	movlb	1	; () banked
  1792  001098  6F00               	movwf	LCDWriteNibble@rs& (0+255),b
  1793  00109A  5104               	movf	LCDPutCmd@ch& (0+255),w,b
  1794  00109C  EC82  F006         	call	_LCDWriteNibble
  1795  0010A0  0012               	return		;funcret
  1796  0010A2                     __end_of_LCDPutCmd:
  1797                           	opt callstack 0
  1798                           
  1799 ;; *************** function _LCDPutChar *****************
  1800 ;; Defined at:
  1801 ;;		line 119 in file "lcd.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  ch              1    wreg     unsigned char 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  ch              1    4[BANK1 ] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1815 ;;      Params:         0       0       0       0
  1816 ;;      Locals:         0       0       1       0
  1817 ;;      Temps:          0       0       1       0
  1818 ;;      Totals:         0       0       2       0
  1819 ;;Total ram usage:        2 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:   10
  1822 ;; This function calls:
  1823 ;;		_LCDWriteNibble
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text10
  1830  001212                     __ptext10:
  1831                           	opt callstack 0
  1832  001212                     _LCDPutChar:
  1833                           	opt callstack 20
  1834                           
  1835                           ;incstack = 0
  1836                           ;LCDPutChar@ch stored from wreg
  1837  001212  0101               	movlb	1	; () banked
  1838  001214  6F04               	movwf	LCDPutChar@ch& (0+255),b
  1839  001216                     
  1840                           ;lcd.c: 120:     _delay((unsigned long)((5)*(40000000/4000.0)));
  1841  001216  0E41               	movlw	65
  1842  001218  0101               	movlb	1	; () banked
  1843  00121A  6F03               	movwf	??_LCDPutChar& (0+255),b
  1844  00121C  0EEE               	movlw	238
  1845  00121E                     u1547:
  1846  00121E  2EE8               	decfsz	wreg,f,c
  1847  001220  D7FE               	bra	u1547
  1848  001222  2F03               	decfsz	??_LCDPutChar& (0+255),f,b
  1849  001224  D7FC               	bra	u1547
  1850  001226  F000               	nop	
  1851  001228                     
  1852                           ;lcd.c: 123:     LCDWriteNibble(ch, 1);
  1853  001228  0E01               	movlw	1
  1854  00122A  0101               	movlb	1	; () banked
  1855  00122C  6F00               	movwf	LCDWriteNibble@rs& (0+255),b
  1856  00122E  5104               	movf	LCDPutChar@ch& (0+255),w,b
  1857  001230  EC82  F006         	call	_LCDWriteNibble
  1858  001234                     
  1859                           ;lcd.c: 126:     ch = (ch << 4);
  1860  001234  0101               	movlb	1	; () banked
  1861  001236  3904               	swapf	LCDPutChar@ch& (0+255),w,b
  1862  001238  0BF0               	andlw	240
  1863  00123A  6F04               	movwf	LCDPutChar@ch& (0+255),b
  1864  00123C                     
  1865                           ; BSR set to: 1
  1866                           ;lcd.c: 129:     LCDWriteNibble(ch, 1);
  1867  00123C  0E01               	movlw	1
  1868  00123E  6F00               	movwf	LCDWriteNibble@rs& (0+255),b
  1869  001240  5104               	movf	LCDPutChar@ch& (0+255),w,b
  1870  001242  EC82  F006         	call	_LCDWriteNibble
  1871  001246  0012               	return		;funcret
  1872  001248                     __end_of_LCDPutChar:
  1873                           	opt callstack 0
  1874                           
  1875 ;; *************** function _LCDWriteNibble *****************
  1876 ;; Defined at:
  1877 ;;		line 89 in file "lcd.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  ch              1    wreg     unsigned char 
  1880 ;;  rs              1    0[BANK1 ] unsigned char 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  ch              1    2[BANK1 ] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1892 ;;      Params:         0       0       1       0
  1893 ;;      Locals:         0       0       1       0
  1894 ;;      Temps:          0       0       1       0
  1895 ;;      Totals:         0       0       3       0
  1896 ;;Total ram usage:        3 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    9
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_LCDPutChar
  1903 ;;		_LCDPutCmd
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text11
  1908  000D04                     __ptext11:
  1909                           	opt callstack 0
  1910  000D04                     _LCDWriteNibble:
  1911                           	opt callstack 19
  1912                           
  1913                           ;incstack = 0
  1914                           ;LCDWriteNibble@ch stored from wreg
  1915  000D04  0101               	movlb	1	; () banked
  1916  000D06  6F02               	movwf	LCDWriteNibble@ch& (0+255),b
  1917  000D08                     
  1918                           ;lcd.c: 91:     ch = (ch >> 4);
  1919  000D08  0101               	movlb	1	; () banked
  1920  000D0A  3902               	swapf	LCDWriteNibble@ch& (0+255),w,b
  1921  000D0C  0B0F               	andlw	15
  1922  000D0E  6F02               	movwf	LCDWriteNibble@ch& (0+255),b
  1923                           
  1924                           ;lcd.c: 94:     ch = (ch & 0x0F);
  1925  000D10  5102               	movf	LCDWriteNibble@ch& (0+255),w,b
  1926  000D12  0B0F               	andlw	15
  1927  000D14  6F02               	movwf	LCDWriteNibble@ch& (0+255),b
  1928                           
  1929                           ;lcd.c: 95:     PORTCbits.RC2 = ch & 0xF1;
  1930  000D16  C102  F101         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  1931  000D1A  0EF1               	movlw	241
  1932  000D1C  1701               	andwf	??_LCDWriteNibble& (0+255),f,b
  1933  000D1E  4701               	rlncf	??_LCDWriteNibble& (0+255),f,b
  1934  000D20  4701               	rlncf	??_LCDWriteNibble& (0+255),f,b
  1935  000D22  5082               	movf	130,w,c	;volatile
  1936  000D24  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1937  000D26  0BFB               	andlw	-5
  1938  000D28  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1939  000D2A  6E82               	movwf	130,c	;volatile
  1940                           
  1941                           ;lcd.c: 96:     PORTCbits.RC3 = (ch & 0xF2) >> 1;
  1942  000D2C  C102  F101         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  1943  000D30  90D8               	bcf	status,0,c
  1944  000D32  3301               	rrcf	??_LCDWriteNibble& (0+255),f,b
  1945  000D34  0E79               	movlw	121
  1946  000D36  1701               	andwf	??_LCDWriteNibble& (0+255),f,b
  1947  000D38  4701               	rlncf	??_LCDWriteNibble& (0+255),f,b
  1948  000D3A  4701               	rlncf	??_LCDWriteNibble& (0+255),f,b
  1949  000D3C  4701               	rlncf	??_LCDWriteNibble& (0+255),f,b
  1950  000D3E  5082               	movf	130,w,c	;volatile
  1951  000D40  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1952  000D42  0BF7               	andlw	-9
  1953  000D44  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1954  000D46  6E82               	movwf	130,c	;volatile
  1955                           
  1956                           ;lcd.c: 97:     PORTDbits.RD0 = (ch & 0xF4) >> 2;
  1957  000D48  C102  F101         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  1958  000D4C  90D8               	bcf	status,0,c
  1959  000D4E  3301               	rrcf	??_LCDWriteNibble& (0+255),f,b
  1960  000D50  90D8               	bcf	status,0,c
  1961  000D52  3301               	rrcf	??_LCDWriteNibble& (0+255),f,b
  1962  000D54  0E3D               	movlw	61
  1963  000D56  1701               	andwf	??_LCDWriteNibble& (0+255),f,b
  1964  000D58  5083               	movf	131,w,c	;volatile
  1965  000D5A  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1966  000D5C  0BFE               	andlw	-2
  1967  000D5E  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1968  000D60  6E83               	movwf	131,c	;volatile
  1969                           
  1970                           ;lcd.c: 98:     PORTDbits.RD1 = (ch & 0xF8) >> 3;
  1971  000D62  C102  F101         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  1972  000D66  90D8               	bcf	status,0,c
  1973  000D68  3301               	rrcf	??_LCDWriteNibble& (0+255),f,b
  1974  000D6A  90D8               	bcf	status,0,c
  1975  000D6C  3301               	rrcf	??_LCDWriteNibble& (0+255),f,b
  1976  000D6E  90D8               	bcf	status,0,c
  1977  000D70  3301               	rrcf	??_LCDWriteNibble& (0+255),f,b
  1978  000D72  0E1F               	movlw	31
  1979  000D74  1701               	andwf	??_LCDWriteNibble& (0+255),f,b
  1980  000D76  4701               	rlncf	??_LCDWriteNibble& (0+255),f,b
  1981  000D78  5083               	movf	131,w,c	;volatile
  1982  000D7A  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1983  000D7C  0BFD               	andlw	-3
  1984  000D7E  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1985  000D80  6E83               	movwf	131,c	;volatile
  1986  000D82                     
  1987                           ; BSR set to: 1
  1988                           ;lcd.c: 107:     PORTCbits.RC0 = rs;
  1989  000D82  B100               	btfsc	LCDWriteNibble@rs& (0+255),0,b
  1990  000D84  D002               	bra	u1475
  1991  000D86  9082               	bcf	130,0,c	;volatile
  1992  000D88  D001               	bra	u1476
  1993  000D8A                     u1475:
  1994  000D8A  8082               	bsf	130,0,c	;volatile
  1995  000D8C                     u1476:
  1996  000D8C                     
  1997                           ;lcd.c: 113:     PORTCbits.RC1 = 1;
  1998  000D8C  8282               	bsf	130,1,c	;volatile
  1999  000D8E                     
  2000                           ;lcd.c: 114:     _delay((unsigned long)((1)*(40000000/4000000.0)));
  2001  000D8E  0E03               	movlw	3
  2002  000D90                     u1557:
  2003  000D90  2EE8               	decfsz	wreg,f,c
  2004  000D92  D7FE               	bra	u1557
  2005  000D94  F000               	nop	
  2006  000D96                     
  2007                           ;lcd.c: 116:     PORTCbits.RC1 = 0;
  2008  000D96  9282               	bcf	130,1,c	;volatile
  2009  000D98  0012               	return		;funcret
  2010  000D9A                     __end_of_LCDWriteNibble:
  2011                           	opt callstack 0
  2012                           
  2013 ;; *************** function _tcInt *****************
  2014 ;; Defined at:
  2015 ;;		line 395 in file "newmain.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  i               2   60[BANK0 ] int 
  2020 ;;  str1           16   41[BANK0 ] unsigned char [16]
  2021 ;;  str2           16   25[BANK0 ] unsigned char [16]
  2022 ;;  timer0Reload    2   58[BANK0 ] unsigned int 
  2023 ;;  noDigits        1   57[BANK0 ] unsigned char 
  2024 ;;  duty            1   62[BANK0 ] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2034 ;;      Params:         0       0       0       0
  2035 ;;      Locals:         0      38       0       0
  2036 ;;      Temps:          0      15       0       0
  2037 ;;      Totals:         0      53       0       0
  2038 ;;Total ram usage:       53 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    8
  2041 ;; This function calls:
  2042 ;;		_LCDPutStr
  2043 ;;		___lwdiv
  2044 ;;		___lwmod
  2045 ;;		_sprintf
  2046 ;;		i1_LCDPutChar
  2047 ;;		i1_LCDPutCmd
  2048 ;; This function is called by:
  2049 ;;		Interrupt level 1
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	intcodelo
  2054  000018                     __pintcodelo:
  2055                           	opt callstack 0
  2056  000018                     _tcInt:
  2057                           	opt callstack 19
  2058                           
  2059                           ;incstack = 0
  2060  000018  805F               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2061  00001A  CFD8 F06C          	movff	status,??_tcInt+2
  2062  00001E  CFE8 F06D          	movff	wreg,??_tcInt+3
  2063  000022  CFE0 F06E          	movff	bsr,??_tcInt+4
  2064  000026  CFE1 F06F          	movff	fsr1l,??_tcInt+5
  2065  00002A  CFE2 F070          	movff	fsr1h,??_tcInt+6
  2066  00002E  CFD9 F071          	movff	fsr2l,??_tcInt+7
  2067  000032  CFDA F072          	movff	fsr2h,??_tcInt+8
  2068  000036  CFF3 F073          	movff	prodl,??_tcInt+9
  2069  00003A  CFF4 F074          	movff	prodh,??_tcInt+10
  2070  00003E  CFF6 F075          	movff	tblptrl,??_tcInt+11
  2071  000042  CFF7 F076          	movff	tblptrh,??_tcInt+12
  2072  000046  CFF8 F077          	movff	tblptru,??_tcInt+13
  2073  00004A  CFF5 F078          	movff	tablat,??_tcInt+14
  2074  00004E                     
  2075                           ;newmain.c: 399:     if (PIR1bits.ADIF) {
  2076  00004E  AC9E               	btfss	158,6,c	;volatile
  2077  000050  EF2C  F000         	goto	i1u127_21
  2078  000054  EF2E  F000         	goto	i1u127_20
  2079  000058                     i1u127_21:
  2080  000058  EF4F  F000         	goto	i1l2121
  2081  00005C                     i1u127_20:
  2082  00005C                     
  2083                           ;newmain.c: 400:         PIR1bits.ADIF = 0;
  2084  00005C  9C9E               	bcf	158,6,c	;volatile
  2085  00005E                     
  2086                           ;newmain.c: 405:         if (PrevADRESH != ADRESH) {
  2087  00005E  50C4               	movf	196,w,c	;volatile
  2088  000060  0100               	movlb	0	; () banked
  2089  000062  19D9               	xorwf	_PrevADRESH& (0+255),w,b	;volatile
  2090  000064  B4D8               	btfsc	status,2,c
  2091  000066  EF37  F000         	goto	i1u128_21
  2092  00006A  EF39  F000         	goto	i1u128_20
  2093  00006E                     i1u128_21:
  2094  00006E  EF4C  F000         	goto	i1l2117
  2095  000072                     i1u128_20:
  2096  000072                     
  2097                           ; BSR set to: 0
  2098                           ;newmain.c: 406:             adcPercent = (255 - ADRESH) * 99 / maxADCVal;
  2099  000072  50C4               	movf	196,w,c	;volatile
  2100  000074  0AFF               	xorlw	255
  2101  000076  6F6A               	movwf	??_tcInt& (0+255),b
  2102  000078  516A               	movf	??_tcInt& (0+255),w,b
  2103  00007A  0D63               	mullw	99
  2104  00007C  CFF3 F001          	movff	prodl,___lwdiv@dividend
  2105  000080  CFF4 F002          	movff	prodh,___lwdiv@dividend+1
  2106  000084  C0DC  F003         	movff	_maxADCVal,___lwdiv@divisor
  2107  000088  C0DD  F004         	movff	_maxADCVal+1,___lwdiv@divisor+1
  2108  00008C  EC16  F007         	call	___lwdiv	;wreg free
  2109  000090  C001  F0AB         	movff	?___lwdiv,_adcPercent	;volatile
  2110  000094  C002  F0AC         	movff	?___lwdiv+1,_adcPercent+1	;volatile
  2111  000098                     i1l2117:
  2112                           
  2113                           ;newmain.c: 409:         PrevADRESH = ADRESH;
  2114  000098  CFC4 F0D9          	movff	4036,_PrevADRESH	;volatile
  2115  00009C                     
  2116                           ;newmain.c: 415:         __nop();
  2117  00009C  F000               	nop	
  2118  00009E                     i1l2121:
  2119                           
  2120                           ;newmain.c: 418:     if (INTCONbits.T0IF) {
  2121  00009E  A4F2               	btfss	242,2,c	;volatile
  2122  0000A0  EF54  F000         	goto	i1u129_21
  2123  0000A4  EF56  F000         	goto	i1u129_20
  2124  0000A8                     i1u129_21:
  2125  0000A8  EFE3  F000         	goto	i1l2163
  2126  0000AC                     i1u129_20:
  2127  0000AC                     
  2128                           ;newmain.c: 419:         INTCONbits.T0IF = 0;
  2129  0000AC  94F2               	bcf	242,2,c	;volatile
  2130  0000AE                     
  2131                           ;newmain.c: 420:         if (sinusIndex1 == 255) {
  2132  0000AE  0100               	movlb	0	; () banked
  2133  0000B0  29B0               	incf	_sinusIndex1& (0+255),w,b	;volatile
  2134  0000B2  A4D8               	btfss	status,2,c
  2135  0000B4  EF5E  F000         	goto	i1u130_21
  2136  0000B8  EF60  F000         	goto	i1u130_20
  2137  0000BC                     i1u130_21:
  2138  0000BC  EF62  F000         	goto	i1l2129
  2139  0000C0                     i1u130_20:
  2140  0000C0                     
  2141                           ; BSR set to: 0
  2142                           ;newmain.c: 421:             sinusIndex1 = 0;
  2143  0000C0  0E00               	movlw	0
  2144  0000C2  6FB0               	movwf	_sinusIndex1& (0+255),b	;volatile
  2145  0000C4                     i1l2129:
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;newmain.c: 423:         if (sinusIndex2 == 255) {
  2149  0000C4  29DB               	incf	_sinusIndex2& (0+255),w,b	;volatile
  2150  0000C6  A4D8               	btfss	status,2,c
  2151  0000C8  EF68  F000         	goto	i1u131_21
  2152  0000CC  EF6A  F000         	goto	i1u131_20
  2153  0000D0                     i1u131_21:
  2154  0000D0  EF6C  F000         	goto	i1l2133
  2155  0000D4                     i1u131_20:
  2156  0000D4                     
  2157                           ; BSR set to: 0
  2158                           ;newmain.c: 424:             sinusIndex2 = 0;
  2159  0000D4  0E00               	movlw	0
  2160  0000D6  6FDB               	movwf	_sinusIndex2& (0+255),b	;volatile
  2161  0000D8                     i1l2133:
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;newmain.c: 426:         if (sinusIndex3 == 255) {
  2165  0000D8  29DA               	incf	_sinusIndex3& (0+255),w,b	;volatile
  2166  0000DA  A4D8               	btfss	status,2,c
  2167  0000DC  EF72  F000         	goto	i1u132_21
  2168  0000E0  EF74  F000         	goto	i1u132_20
  2169  0000E4                     i1u132_21:
  2170  0000E4  EF76  F000         	goto	i1l2137
  2171  0000E8                     i1u132_20:
  2172  0000E8                     
  2173                           ; BSR set to: 0
  2174                           ;newmain.c: 427:             sinusIndex3 = 0;
  2175  0000E8  0E00               	movlw	0
  2176  0000EA  6FDA               	movwf	_sinusIndex3& (0+255),b	;volatile
  2177  0000EC                     i1l2137:
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;newmain.c: 431:         unsigned char duty = (sinusValues[sinusIndex1] >> 8);
  2181  0000EC  51B0               	movf	_sinusIndex1& (0+255),w,b	;volatile
  2182  0000EE  0D02               	mullw	2
  2183  0000F0  0EE9               	movlw	low _sinusValues
  2184  0000F2  24F3               	addwf	243,w,c
  2185  0000F4  6EF6               	movwf	tblptrl,c
  2186  0000F6  0E3A               	movlw	high _sinusValues
  2187  0000F8  20F4               	addwfc	244,w,c
  2188  0000FA  6EF7               	movwf	tblptrh,c
  2189  0000FC                     	if	0	;There are less than 3 active tblptr bytes
  2190  0000FC                     	endif
  2191  0000FC  0009               	tblrd		*+
  2192  0000FE  CFF5 F06A          	movff	tablat,??_tcInt
  2193  000102  0009               	tblrd		*+
  2194  000104  CFF5 F06B          	movff	tablat,??_tcInt+1
  2195  000108  C06B  F06A         	movff	??_tcInt+1,??_tcInt
  2196  00010C  6B6B               	clrf	(??_tcInt+1)& (0+255),b
  2197  00010E  BF6A               	btfsc	??_tcInt& (0+255),7,b
  2198  000110  696B               	setf	(??_tcInt+1)& (0+255),b
  2199  000112  516A               	movf	??_tcInt& (0+255),w,b
  2200  000114  6F9E               	movwf	tcInt@duty& (0+255),b
  2201  000116                     
  2202                           ; BSR set to: 0
  2203                           ;newmain.c: 432:         PDC0H = duty;
  2204  000116  C09E  FF78         	movff	tcInt@duty,3960	;volatile
  2205  00011A                     
  2206                           ; BSR set to: 0
  2207                           ;newmain.c: 433:         PDC0L = sinusValues[sinusIndex1];
  2208  00011A  51B0               	movf	_sinusIndex1& (0+255),w,b	;volatile
  2209  00011C  0D02               	mullw	2
  2210  00011E  0EE9               	movlw	low _sinusValues
  2211  000120  24F3               	addwf	243,w,c
  2212  000122  6EF6               	movwf	tblptrl,c
  2213  000124  0E3A               	movlw	high _sinusValues
  2214  000126  20F4               	addwfc	244,w,c
  2215  000128  6EF7               	movwf	tblptrh,c
  2216  00012A                     	if	0	;There are less than 3 active tblptr bytes
  2217  00012A                     	endif
  2218  00012A  0008               	tblrd		*
  2219  00012C  CFF5 FF79          	movff	tablat,3961	;volatile
  2220  000130                     
  2221                           ; BSR set to: 0
  2222                           ;newmain.c: 435:         duty = (sinusValues[sinusIndex2] >> 8);
  2223  000130  51DB               	movf	_sinusIndex2& (0+255),w,b	;volatile
  2224  000132  0D02               	mullw	2
  2225  000134  0EE9               	movlw	low _sinusValues
  2226  000136  24F3               	addwf	243,w,c
  2227  000138  6EF6               	movwf	tblptrl,c
  2228  00013A  0E3A               	movlw	high _sinusValues
  2229  00013C  20F4               	addwfc	244,w,c
  2230  00013E  6EF7               	movwf	tblptrh,c
  2231  000140                     	if	0	;There are less than 3 active tblptr bytes
  2232  000140                     	endif
  2233  000140  0009               	tblrd		*+
  2234  000142  CFF5 F06A          	movff	tablat,??_tcInt
  2235  000146  0009               	tblrd		*+
  2236  000148  CFF5 F06B          	movff	tablat,??_tcInt+1
  2237  00014C  C06B  F06A         	movff	??_tcInt+1,??_tcInt
  2238  000150  6B6B               	clrf	(??_tcInt+1)& (0+255),b
  2239  000152  BF6A               	btfsc	??_tcInt& (0+255),7,b
  2240  000154  696B               	setf	(??_tcInt+1)& (0+255),b
  2241  000156  516A               	movf	??_tcInt& (0+255),w,b
  2242  000158  6F9E               	movwf	tcInt@duty& (0+255),b
  2243  00015A                     
  2244                           ; BSR set to: 0
  2245                           ;newmain.c: 436:         PDC1H = duty;
  2246  00015A  C09E  FF76         	movff	tcInt@duty,3958	;volatile
  2247  00015E                     
  2248                           ; BSR set to: 0
  2249                           ;newmain.c: 437:         PDC1L = sinusValues[sinusIndex2];
  2250  00015E  51DB               	movf	_sinusIndex2& (0+255),w,b	;volatile
  2251  000160  0D02               	mullw	2
  2252  000162  0EE9               	movlw	low _sinusValues
  2253  000164  24F3               	addwf	243,w,c
  2254  000166  6EF6               	movwf	tblptrl,c
  2255  000168  0E3A               	movlw	high _sinusValues
  2256  00016A  20F4               	addwfc	244,w,c
  2257  00016C  6EF7               	movwf	tblptrh,c
  2258  00016E                     	if	0	;There are less than 3 active tblptr bytes
  2259  00016E                     	endif
  2260  00016E  0008               	tblrd		*
  2261  000170  CFF5 FF77          	movff	tablat,3959	;volatile
  2262  000174                     
  2263                           ; BSR set to: 0
  2264                           ;newmain.c: 439:         duty = (sinusValues[sinusIndex3] >> 8);
  2265  000174  51DA               	movf	_sinusIndex3& (0+255),w,b	;volatile
  2266  000176  0D02               	mullw	2
  2267  000178  0EE9               	movlw	low _sinusValues
  2268  00017A  24F3               	addwf	243,w,c
  2269  00017C  6EF6               	movwf	tblptrl,c
  2270  00017E  0E3A               	movlw	high _sinusValues
  2271  000180  20F4               	addwfc	244,w,c
  2272  000182  6EF7               	movwf	tblptrh,c
  2273  000184                     	if	0	;There are less than 3 active tblptr bytes
  2274  000184                     	endif
  2275  000184  0009               	tblrd		*+
  2276  000186  CFF5 F06A          	movff	tablat,??_tcInt
  2277  00018A  0009               	tblrd		*+
  2278  00018C  CFF5 F06B          	movff	tablat,??_tcInt+1
  2279  000190  C06B  F06A         	movff	??_tcInt+1,??_tcInt
  2280  000194  6B6B               	clrf	(??_tcInt+1)& (0+255),b
  2281  000196  BF6A               	btfsc	??_tcInt& (0+255),7,b
  2282  000198  696B               	setf	(??_tcInt+1)& (0+255),b
  2283  00019A  516A               	movf	??_tcInt& (0+255),w,b
  2284  00019C  6F9E               	movwf	tcInt@duty& (0+255),b
  2285  00019E                     
  2286                           ; BSR set to: 0
  2287                           ;newmain.c: 440:         PDC2H = duty;
  2288  00019E  C09E  FF74         	movff	tcInt@duty,3956	;volatile
  2289  0001A2                     
  2290                           ; BSR set to: 0
  2291                           ;newmain.c: 441:         PDC2L = sinusValues[sinusIndex3];
  2292  0001A2  51DA               	movf	_sinusIndex3& (0+255),w,b	;volatile
  2293  0001A4  0D02               	mullw	2
  2294  0001A6  0EE9               	movlw	low _sinusValues
  2295  0001A8  24F3               	addwf	243,w,c
  2296  0001AA  6EF6               	movwf	tblptrl,c
  2297  0001AC  0E3A               	movlw	high _sinusValues
  2298  0001AE  20F4               	addwfc	244,w,c
  2299  0001B0  6EF7               	movwf	tblptrh,c
  2300  0001B2                     	if	0	;There are less than 3 active tblptr bytes
  2301  0001B2                     	endif
  2302  0001B2  0008               	tblrd		*
  2303  0001B4  CFF5 FF75          	movff	tablat,3957	;volatile
  2304  0001B8                     
  2305                           ; BSR set to: 0
  2306                           ;newmain.c: 444:         TMR0 = timer0ReloadValue;
  2307  0001B8  C0D3  FFD6         	movff	_timer0ReloadValue,4054	;volatile
  2308  0001BC  C0D4  FFD7         	movff	_timer0ReloadValue+1,4055	;volatile
  2309  0001C0                     
  2310                           ; BSR set to: 0
  2311                           ;newmain.c: 449:         sinusIndex1++;
  2312  0001C0  2BB0               	incf	_sinusIndex1& (0+255),f,b	;volatile
  2313  0001C2                     
  2314                           ; BSR set to: 0
  2315                           ;newmain.c: 450:         sinusIndex2++;
  2316  0001C2  2BDB               	incf	_sinusIndex2& (0+255),f,b	;volatile
  2317  0001C4                     
  2318                           ; BSR set to: 0
  2319                           ;newmain.c: 451:         sinusIndex3++;
  2320  0001C4  2BDA               	incf	_sinusIndex3& (0+255),f,b	;volatile
  2321  0001C6                     i1l2163:
  2322                           
  2323                           ;newmain.c: 454:     if (PIR1bits.TMR1IF) {
  2324  0001C6  A09E               	btfss	158,0,c	;volatile
  2325  0001C8  EFE8  F000         	goto	i1u133_21
  2326  0001CC  EFEA  F000         	goto	i1u133_20
  2327  0001D0                     i1u133_21:
  2328  0001D0  EF97  F001         	goto	i1l165
  2329  0001D4                     i1u133_20:
  2330  0001D4                     
  2331                           ;newmain.c: 455:         PIR1bits.TMR1IF = 0;
  2332  0001D4  909E               	bcf	158,0,c	;volatile
  2333  0001D6                     
  2334                           ;newmain.c: 456:         TMR1 = 0;
  2335  0001D6  0E00               	movlw	0
  2336  0001D8  6ECF               	movwf	207,c	;volatile
  2337  0001DA  0E00               	movlw	0
  2338  0001DC  6ECE               	movwf	206,c	;volatile
  2339  0001DE                     
  2340                           ;newmain.c: 457:         refreshTime++;
  2341  0001DE  0100               	movlb	0	; () banked
  2342  0001E0  2BAE               	incf	_refreshTime& (0+255),f,b	;volatile
  2343  0001E2                     
  2344                           ; BSR set to: 0
  2345                           ;newmain.c: 458:         if (refreshTime == 5) {
  2346  0001E2  0E05               	movlw	5
  2347  0001E4  19AE               	xorwf	_refreshTime& (0+255),w,b	;volatile
  2348  0001E6  A4D8               	btfss	status,2,c
  2349  0001E8  EFF8  F000         	goto	i1u134_21
  2350  0001EC  EFFA  F000         	goto	i1u134_20
  2351  0001F0                     i1u134_21:
  2352  0001F0  EF97  F001         	goto	i1l165
  2353  0001F4                     i1u134_20:
  2354  0001F4                     
  2355                           ; BSR set to: 0
  2356                           ;newmain.c: 459:             refreshTime = 0;
  2357  0001F4  0E00               	movlw	0
  2358  0001F6  6FAE               	movwf	_refreshTime& (0+255),b	;volatile
  2359  0001F8                     
  2360                           ; BSR set to: 0
  2361                           ;newmain.c: 460:             if (prevAdcPercent != adcPercent || prevTimer0ReloadValue !
      +                          = timer0ReloadValue) {
  2362  0001F8  51AB               	movf	_adcPercent& (0+255),w,b	;volatile
  2363  0001FA  19D7               	xorwf	_prevAdcPercent& (0+255),w,b	;volatile
  2364  0001FC  E107               	bnz	i1u135_21
  2365  0001FE  51AC               	movf	(_adcPercent+1)& (0+255),w,b	;volatile
  2366  000200  19D8               	xorwf	(_prevAdcPercent+1)& (0+255),w,b	;volatile
  2367  000202  A4D8               	btfss	status,2,c
  2368  000204  EF06  F001         	goto	i1u135_21
  2369  000208  EF08  F001         	goto	i1u135_20
  2370  00020C                     i1u135_21:
  2371  00020C  EF14  F001         	goto	i1l2179
  2372  000210                     i1u135_20:
  2373  000210                     
  2374                           ; BSR set to: 0
  2375  000210  51D3               	movf	_timer0ReloadValue& (0+255),w,b	;volatile
  2376  000212  19D1               	xorwf	_prevTimer0ReloadValue& (0+255),w,b	;volatile
  2377  000214  E109               	bnz	i1u136_20
  2378  000216  51D4               	movf	(_timer0ReloadValue+1)& (0+255),w,b	;volatile
  2379  000218  19D2               	xorwf	(_prevTimer0ReloadValue+1)& (0+255),w,b	;volatile
  2380  00021A  B4D8               	btfsc	status,2,c
  2381  00021C  EF12  F001         	goto	i1u136_21
  2382  000220  EF14  F001         	goto	i1u136_20
  2383  000224                     i1u136_21:
  2384  000224  EF8F  F001         	goto	i1l167
  2385  000228                     i1u136_20:
  2386  000228                     i1l2179:
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;newmain.c: 462:                 char str1[16];;newmain.c: 463:                 char str
      +                          2[16];;newmain.c: 465:                 LCDPutCmd(0x01);
  2390  000228  0E01               	movlw	1
  2391  00022A  ECB2  F008         	call	i1_LCDPutCmd
  2392  00022E                     
  2393                           ;newmain.c: 466:                 sprintf(str1, "%d", adcPercent);
  2394  00022E  0E89               	movlw	low tcInt@str1
  2395  000230  6E58               	movwf	sprintf@s^0,c
  2396  000232  0E00               	movlw	high tcInt@str1
  2397  000234  6E59               	movwf	(sprintf@s+1)^0,c
  2398  000236  0EBB               	movlw	low STR_1
  2399  000238  6E5A               	movwf	sprintf@fmt^0,c
  2400  00023A  0E3D               	movlw	high STR_1
  2401  00023C  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2402  00023E  C0AB  F05C         	movff	_adcPercent,?_sprintf+4	;volatile
  2403  000242  C0AC  F05D         	movff	_adcPercent+1,?_sprintf+5	;volatile
  2404  000246  ECDC  F007         	call	_sprintf	;wreg free
  2405  00024A                     
  2406                           ;newmain.c: 467:                 LCDPutStr(str1);
  2407  00024A  0E89               	movlw	low tcInt@str1
  2408  00024C  6E06               	movwf	LCDPutStr@str^0,c
  2409  00024E  0E00               	movlw	high tcInt@str1
  2410  000250  6E07               	movwf	(LCDPutStr@str+1)^0,c
  2411  000252  ECD1  F008         	call	_LCDPutStr	;wreg free
  2412  000256                     
  2413                           ;newmain.c: 468:                 LCDPutChar(' ');
  2414  000256  0E20               	movlw	32
  2415  000258  EC3F  F009         	call	i1_LCDPutChar
  2416  00025C                     
  2417                           ;newmain.c: 470:                 unsigned int timer0ReloadValueCopy = timer0ReloadValue;
  2418  00025C  C0D3  F09A         	movff	_timer0ReloadValue,tcInt@timer0ReloadValueCopy	;volatile
  2419  000260  C0D4  F09B         	movff	_timer0ReloadValue+1,tcInt@timer0ReloadValueCopy+1	;volatile
  2420  000264                     
  2421                           ;newmain.c: 471:                 char noDigits = 0;
  2422  000264  0E00               	movlw	0
  2423  000266  0100               	movlb	0	; () banked
  2424  000268  6F99               	movwf	tcInt@noDigits& (0+255),b
  2425                           
  2426                           ;newmain.c: 472:                 while (timer0ReloadValueCopy > 0) {
  2427  00026A  EF59  F001         	goto	i1l2197
  2428  00026E                     i1l2191:
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;newmain.c: 473:                     str2[noDigits] = timer0ReloadValueCopy % 10;
  2432  00026E  0E79               	movlw	low tcInt@str2
  2433  000270  2599               	addwf	tcInt@noDigits& (0+255),w,b
  2434  000272  6ED9               	movwf	fsr2l,c
  2435  000274  6ADA               	clrf	fsr2h,c
  2436  000276  0E00               	movlw	high tcInt@str2
  2437  000278  22DA               	addwfc	fsr2h,f,c
  2438  00027A  C09A  F001         	movff	tcInt@timer0ReloadValueCopy,___lwmod@dividend
  2439  00027E  C09B  F002         	movff	tcInt@timer0ReloadValueCopy+1,___lwmod@dividend+1
  2440  000282  0E00               	movlw	0
  2441  000284  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2442  000286  0E0A               	movlw	10
  2443  000288  6E03               	movwf	___lwmod@divisor^0,c
  2444  00028A  EC50  F007         	call	___lwmod	;wreg free
  2445  00028E  5001               	movf	?___lwmod^0,w,c
  2446  000290  6EDF               	movwf	indf2,c
  2447  000292                     
  2448                           ;newmain.c: 474:                     timer0ReloadValueCopy /= 10;
  2449  000292  C09A  F001         	movff	tcInt@timer0ReloadValueCopy,___lwdiv@dividend
  2450  000296  C09B  F002         	movff	tcInt@timer0ReloadValueCopy+1,___lwdiv@dividend+1
  2451  00029A  0E00               	movlw	0
  2452  00029C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2453  00029E  0E0A               	movlw	10
  2454  0002A0  6E03               	movwf	___lwdiv@divisor^0,c
  2455  0002A2  EC16  F007         	call	___lwdiv	;wreg free
  2456  0002A6  C001  F09A         	movff	?___lwdiv,tcInt@timer0ReloadValueCopy
  2457  0002AA  C002  F09B         	movff	?___lwdiv+1,tcInt@timer0ReloadValueCopy+1
  2458  0002AE                     
  2459                           ;newmain.c: 475:                     noDigits++;
  2460  0002AE  0100               	movlb	0	; () banked
  2461  0002B0  2B99               	incf	tcInt@noDigits& (0+255),f,b
  2462  0002B2                     i1l2197:
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;newmain.c: 472:                 while (timer0ReloadValueCopy > 0) {
  2466  0002B2  519A               	movf	tcInt@timer0ReloadValueCopy& (0+255),w,b
  2467  0002B4  119B               	iorwf	(tcInt@timer0ReloadValueCopy+1)& (0+255),w,b
  2468  0002B6  A4D8               	btfss	status,2,c
  2469  0002B8  EF60  F001         	goto	i1u137_21
  2470  0002BC  EF62  F001         	goto	i1u137_20
  2471  0002C0                     i1u137_21:
  2472  0002C0  EF37  F001         	goto	i1l2191
  2473  0002C4                     i1u137_20:
  2474  0002C4                     
  2475                           ; BSR set to: 0
  2476                           ;newmain.c: 477:                 for (int i = noDigits - 1; i >= 0; i--) {
  2477  0002C4  0EFF               	movlw	255
  2478  0002C6  2599               	addwf	tcInt@noDigits& (0+255),w,b
  2479  0002C8  6F9C               	movwf	tcInt@i& (0+255),b
  2480  0002CA  6B9D               	clrf	(tcInt@i+1)& (0+255),b
  2481  0002CC  0EFF               	movlw	255
  2482  0002CE  239D               	addwfc	(tcInt@i+1)& (0+255),f,b
  2483  0002D0  BF9D               	btfsc	(tcInt@i+1)& (0+255),7,b
  2484  0002D2  EF6F  F001         	goto	i1u138_20
  2485  0002D6  EF6D  F001         	goto	i1u138_21
  2486  0002DA                     i1u138_21:
  2487  0002DA  EF71  F001         	goto	i1l2203
  2488  0002DE                     i1u138_20:
  2489  0002DE  EF8F  F001         	goto	i1l167
  2490  0002E2                     i1l2203:
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;newmain.c: 478:                     LCDPutChar(digits[str2[i]]);
  2494  0002E2  0E79               	movlw	low tcInt@str2
  2495  0002E4  259C               	addwf	tcInt@i& (0+255),w,b
  2496  0002E6  6ED9               	movwf	fsr2l,c
  2497  0002E8  0E00               	movlw	high tcInt@str2
  2498  0002EA  219D               	addwfc	(tcInt@i+1)& (0+255),w,b
  2499  0002EC  6EDA               	movwf	fsr2h,c
  2500  0002EE  50DF               	movf	indf2,w,c
  2501  0002F0  6F6A               	movwf	??_tcInt& (0+255),b
  2502  0002F2  6B6B               	clrf	(??_tcInt+1)& (0+255),b
  2503  0002F4  0EB1               	movlw	low _digits
  2504  0002F6  256A               	addwf	??_tcInt& (0+255),w,b
  2505  0002F8  6EF6               	movwf	tblptrl,c
  2506  0002FA  0E3D               	movlw	high _digits
  2507  0002FC  216B               	addwfc	(??_tcInt+1)& (0+255),w,b
  2508  0002FE  6EF7               	movwf	tblptrh,c
  2509  000300                     	if	0	;There are less than 3 active tblptr bytes
  2510  000300                     	endif
  2511  000300  0008               	tblrd		*
  2512  000302  50F5               	movf	tablat,w,c
  2513  000304  EC3F  F009         	call	i1_LCDPutChar
  2514  000308                     
  2515                           ;newmain.c: 479:                 }
  2516  000308  0100               	movlb	0	; () banked
  2517  00030A  079C               	decf	tcInt@i& (0+255),f,b
  2518  00030C  A0D8               	btfss	status,0,c
  2519  00030E  079D               	decf	(tcInt@i+1)& (0+255),f,b
  2520  000310                     
  2521                           ; BSR set to: 0
  2522  000310  BF9D               	btfsc	(tcInt@i+1)& (0+255),7,b
  2523  000312  EF8F  F001         	goto	i1u139_20
  2524  000316  EF8D  F001         	goto	i1u139_21
  2525  00031A                     i1u139_21:
  2526  00031A  EF71  F001         	goto	i1l2203
  2527  00031E                     i1u139_20:
  2528  00031E                     i1l167:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;newmain.c: 483:             prevAdcPercent = adcPercent;
  2532  00031E  C0AB  F0D7         	movff	_adcPercent,_prevAdcPercent	;volatile
  2533  000322  C0AC  F0D8         	movff	_adcPercent+1,_prevAdcPercent+1	;volatile
  2534                           
  2535                           ;newmain.c: 484:             prevTimer0ReloadValue = timer0ReloadValue;
  2536  000326  C0D3  F0D1         	movff	_timer0ReloadValue,_prevTimer0ReloadValue	;volatile
  2537  00032A  C0D4  F0D2         	movff	_timer0ReloadValue+1,_prevTimer0ReloadValue+1	;volatile
  2538  00032E                     i1l165:
  2539                           
  2540                           ;newmain.c: 488:     if (PIR3bits.TMR5IF) {
  2541  00032E  A0A4               	btfss	164,0,c	;volatile
  2542  000330  EF9C  F001         	goto	i1u140_21
  2543  000334  EF9E  F001         	goto	i1u140_20
  2544  000338                     i1u140_21:
  2545  000338  EFDB  F001         	goto	i1l180
  2546  00033C                     i1u140_20:
  2547  00033C                     
  2548                           ;newmain.c: 489:         PIR3bits.TMR5IF = 0;
  2549  00033C  90A4               	bcf	164,0,c	;volatile
  2550                           
  2551                           ;newmain.c: 490:         TMR5 = timer5ReloadValue;
  2552  00033E  C0D5  FF87         	movff	_timer5ReloadValue,3975	;volatile
  2553  000342  C0D6  FF88         	movff	_timer5ReloadValue+1,3976	;volatile
  2554  000346                     
  2555                           ;newmain.c: 492:         if (timer5OverflowCount == 2) {
  2556  000346  0E02               	movlw	2
  2557  000348  0100               	movlb	0	; () banked
  2558  00034A  19AF               	xorwf	_timer5OverflowCount& (0+255),w,b	;volatile
  2559  00034C  A4D8               	btfss	status,2,c
  2560  00034E  EFAB  F001         	goto	i1u141_21
  2561  000352  EFAD  F001         	goto	i1u141_20
  2562  000356                     i1u141_21:
  2563  000356  EFDA  F001         	goto	i1l2225
  2564  00035A                     i1u141_20:
  2565  00035A                     
  2566                           ; BSR set to: 0
  2567                           ;newmain.c: 493:             timer5OverflowCount = 0;
  2568  00035A  0E00               	movlw	0
  2569  00035C  6FAF               	movwf	_timer5OverflowCount& (0+255),b	;volatile
  2570  00035E                     
  2571                           ; BSR set to: 0
  2572                           ;newmain.c: 498:             if (currentPreloadIndex < adcPercent) {
  2573  00035E  51AD               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  2574  000360  6F6A               	movwf	??_tcInt& (0+255),b
  2575  000362  6B6B               	clrf	(??_tcInt+1)& (0+255),b
  2576  000364  51AB               	movf	_adcPercent& (0+255),w,b	;volatile
  2577  000366  5D6A               	subwf	??_tcInt& (0+255),w,b
  2578  000368  51AC               	movf	(_adcPercent+1)& (0+255),w,b	;volatile
  2579  00036A  596B               	subwfb	(??_tcInt+1)& (0+255),w,b
  2580  00036C  B0D8               	btfsc	status,0,c
  2581  00036E  EFBB  F001         	goto	i1u142_21
  2582  000372  EFBD  F001         	goto	i1u142_20
  2583  000376                     i1u142_21:
  2584  000376  EFC0  F001         	goto	i1l2219
  2585  00037A                     i1u142_20:
  2586  00037A                     
  2587                           ; BSR set to: 0
  2588                           ;newmain.c: 499:                 currentPreloadIndex++;
  2589  00037A  2BAD               	incf	_currentPreloadIndex& (0+255),f,b	;volatile
  2590                           
  2591                           ;newmain.c: 500:             } else if (currentPreloadIndex > adcPercent) {
  2592  00037C  EFCC  F001         	goto	i1l2223
  2593  000380                     i1l2219:
  2594                           
  2595                           ; BSR set to: 0
  2596  000380  51AD               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  2597  000382  5DAB               	subwf	_adcPercent& (0+255),w,b	;volatile
  2598  000384  0E00               	movlw	0
  2599  000386  59AC               	subwfb	(_adcPercent+1)& (0+255),w,b	;volatile
  2600  000388  B0D8               	btfsc	status,0,c
  2601  00038A  EFC9  F001         	goto	i1u143_21
  2602  00038E  EFCB  F001         	goto	i1u143_20
  2603  000392                     i1u143_21:
  2604  000392  EFCC  F001         	goto	i1l2223
  2605  000396                     i1u143_20:
  2606  000396                     
  2607                           ; BSR set to: 0
  2608                           ;newmain.c: 501:                 currentPreloadIndex--;
  2609  000396  07AD               	decf	_currentPreloadIndex& (0+255),f,b	;volatile
  2610  000398                     i1l2223:
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;newmain.c: 503:             timer0ReloadValue = timer0PreloadValues[currentPreloadIndex
      +                          ];
  2614  000398  51AD               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  2615  00039A  0D02               	mullw	2
  2616  00039C  0EE9               	movlw	low _timer0PreloadValues
  2617  00039E  24F3               	addwf	243,w,c
  2618  0003A0  6EF6               	movwf	tblptrl,c
  2619  0003A2  0E3C               	movlw	high _timer0PreloadValues
  2620  0003A4  20F4               	addwfc	244,w,c
  2621  0003A6  6EF7               	movwf	tblptrh,c
  2622  0003A8                     	if	0	;There are less than 3 active tblptr bytes
  2623  0003A8                     	endif
  2624  0003A8  0009               	tblrd		*+
  2625  0003AA  CFF5 F0D3          	movff	tablat,_timer0ReloadValue	;volatile
  2626  0003AE  000A               	tblrd		*-
  2627  0003B0  CFF5 F0D4          	movff	tablat,_timer0ReloadValue+1	;volatile
  2628  0003B4                     i1l2225:
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;newmain.c: 505:         timer5OverflowCount++;
  2632  0003B4  2BAF               	incf	_timer5OverflowCount& (0+255),f,b	;volatile
  2633  0003B6                     i1l180:
  2634  0003B6  C078  FFF5         	movff	??_tcInt+14,tablat
  2635  0003BA  C077  FFF8         	movff	??_tcInt+13,tblptru
  2636  0003BE  C076  FFF7         	movff	??_tcInt+12,tblptrh
  2637  0003C2  C075  FFF6         	movff	??_tcInt+11,tblptrl
  2638  0003C6  C074  FFF4         	movff	??_tcInt+10,prodh
  2639  0003CA  C073  FFF3         	movff	??_tcInt+9,prodl
  2640  0003CE  C072  FFDA         	movff	??_tcInt+8,fsr2h
  2641  0003D2  C071  FFD9         	movff	??_tcInt+7,fsr2l
  2642  0003D6  C070  FFE2         	movff	??_tcInt+6,fsr1h
  2643  0003DA  C06F  FFE1         	movff	??_tcInt+5,fsr1l
  2644  0003DE  C06E  FFE0         	movff	??_tcInt+4,bsr
  2645  0003E2  C06D  FFE8         	movff	??_tcInt+3,wreg
  2646  0003E6  C06C  FFD8         	movff	??_tcInt+2,status
  2647  0003EA  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2648  0003EC  0010               	retfie	
  2649  0003EE                     __end_of_tcInt:
  2650                           	opt callstack 0
  2651                           
  2652 ;; *************** function i1_LCDPutCmd *****************
  2653 ;; Defined at:
  2654 ;;		line 132 in file "lcd.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  ch              1    wreg     unsigned char 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  ch              1    4[COMRAM] unsigned char 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      void 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2668 ;;      Params:         0       0       0       0
  2669 ;;      Locals:         1       0       0       0
  2670 ;;      Temps:          1       0       0       0
  2671 ;;      Totals:         2       0       0       0
  2672 ;;Total ram usage:        2 bytes
  2673 ;; Hardware stack levels used:    1
  2674 ;; Hardware stack levels required when called:    1
  2675 ;; This function calls:
  2676 ;;		i1_LCDWriteNibble
  2677 ;; This function is called by:
  2678 ;;		_tcInt
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text13
  2683  001164                     __ptext13:
  2684                           	opt callstack 0
  2685  001164                     i1_LCDPutCmd:
  2686                           	opt callstack 25
  2687                           
  2688                           ;incstack = 0
  2689                           ;i1LCDPutCmd@ch stored from wreg
  2690  001164  6E05               	movwf	i1LCDPutCmd@ch^0,c
  2691  001166                     
  2692                           ;lcd.c: 133:     _delay((unsigned long)((5)*(40000000/4000.0)));
  2693  001166  0E41               	movlw	65
  2694  001168  6E04               	movwf	??i1_LCDPutCmd^0,c
  2695  00116A  0EEE               	movlw	238
  2696  00116C                     i1u156_27:
  2697  00116C  2EE8               	decfsz	wreg,f,c
  2698  00116E  D7FE               	bra	i1u156_27
  2699  001170  2E04               	decfsz	??i1_LCDPutCmd^0,f,c
  2700  001172  D7FC               	bra	i1u156_27
  2701  001174  F000 F000          	nop2	
  2702  001178                     
  2703                           ;lcd.c: 136:     LCDWriteNibble(ch, 0);
  2704  001178  0E00               	movlw	0
  2705  00117A  6E01               	movwf	i1LCDWriteNibble@rs^0,c
  2706  00117C  5005               	movf	i1LCDPutCmd@ch^0,w,c
  2707  00117E  ECCD  F006         	call	i1_LCDWriteNibble
  2708  001182                     
  2709                           ;lcd.c: 139:     ch = (ch << 4);
  2710  001182  3805               	swapf	i1LCDPutCmd@ch^0,w,c
  2711  001184  0BF0               	andlw	240
  2712  001186  6E05               	movwf	i1LCDPutCmd@ch^0,c
  2713  001188                     
  2714                           ;lcd.c: 141:     _delay((unsigned long)((1)*(40000000/4000.0)));
  2715  001188  0E0D               	movlw	13
  2716  00118A  6E04               	movwf	??i1_LCDPutCmd^0,c
  2717  00118C  0EFC               	movlw	252
  2718  00118E                     i1u157_27:
  2719  00118E  2EE8               	decfsz	wreg,f,c
  2720  001190  D7FE               	bra	i1u157_27
  2721  001192  2E04               	decfsz	??i1_LCDPutCmd^0,f,c
  2722  001194  D7FC               	bra	i1u157_27
  2723  001196                     
  2724                           ;lcd.c: 144:     LCDWriteNibble(ch, 0);
  2725  001196  0E00               	movlw	0
  2726  001198  6E01               	movwf	i1LCDWriteNibble@rs^0,c
  2727  00119A  5005               	movf	i1LCDPutCmd@ch^0,w,c
  2728  00119C  ECCD  F006         	call	i1_LCDWriteNibble
  2729  0011A0  0012               	return		;funcret
  2730  0011A2                     __end_ofi1_LCDPutCmd:
  2731                           	opt callstack 0
  2732                           
  2733 ;; *************** function _sprintf *****************
  2734 ;; Defined at:
  2735 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  s               2   87[COMRAM] PTR unsigned char 
  2738 ;;		 -> tcInt@str1(16), 
  2739 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  2740 ;;		 -> STR_1(3), 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  f               6    4[BANK0 ] struct _IO_FILE
  2743 ;;  ap              2    2[BANK0 ] PTR void [1]
  2744 ;;		 -> ?_sprintf(2), 
  2745 ;;  ret             2    0        int 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  2   87[COMRAM] int 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2755 ;;      Params:         6       0       0       0
  2756 ;;      Locals:         0      10       0       0
  2757 ;;      Temps:          0       0       0       0
  2758 ;;      Totals:         6      10       0       0
  2759 ;;Total ram usage:       16 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    7
  2762 ;; This function calls:
  2763 ;;		_vfprintf
  2764 ;; This function is called by:
  2765 ;;		_tcInt
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text14
  2770  000FB8                     __ptext14:
  2771                           	opt callstack 0
  2772  000FB8                     _sprintf:
  2773                           	opt callstack 19
  2774  000FB8  0E5C               	movlw	low (?_sprintf+4)
  2775  000FBA  0100               	movlb	0	; () banked
  2776  000FBC  6F62               	movwf	sprintf@ap& (0+255),b
  2777  000FBE  0E00               	movlw	high (?_sprintf+4)
  2778  000FC0  6F63               	movwf	(sprintf@ap+1)& (0+255),b
  2779  000FC2  C058  F064         	movff	sprintf@s,sprintf@f
  2780  000FC6  C059  F065         	movff	sprintf@s+1,sprintf@f+1
  2781  000FCA                     
  2782                           ; BSR set to: 0
  2783  000FCA  0E00               	movlw	0
  2784  000FCC  6F67               	movwf	(sprintf@f+3)& (0+255),b
  2785  000FCE  0E00               	movlw	0
  2786  000FD0  6F66               	movwf	(sprintf@f+2)& (0+255),b
  2787  000FD2                     
  2788                           ; BSR set to: 0
  2789  000FD2  0E00               	movlw	0
  2790  000FD4  6F69               	movwf	(sprintf@f+5)& (0+255),b
  2791  000FD6  0E00               	movlw	0
  2792  000FD8  6F68               	movwf	(sprintf@f+4)& (0+255),b
  2793  000FDA                     
  2794                           ; BSR set to: 0
  2795  000FDA  0E64               	movlw	low sprintf@f
  2796  000FDC  6E50               	movwf	vfprintf@fp^0,c
  2797  000FDE  0E00               	movlw	high sprintf@f
  2798  000FE0  6E51               	movwf	(vfprintf@fp+1)^0,c
  2799  000FE2  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  2800  000FE6  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2801  000FEA  0E62               	movlw	low sprintf@ap
  2802  000FEC  6E54               	movwf	vfprintf@ap^0,c
  2803  000FEE  0E00               	movlw	high sprintf@ap
  2804  000FF0  6E55               	movwf	(vfprintf@ap+1)^0,c
  2805  000FF2  EC82  F007         	call	_vfprintf	;wreg free
  2806  000FF6  0100               	movlb	0	; () banked
  2807  000FF8  5166               	movf	(sprintf@f+2)& (0+255),w,b
  2808  000FFA  2458               	addwf	sprintf@s^0,w,c
  2809  000FFC  6ED9               	movwf	fsr2l,c
  2810  000FFE  5167               	movf	(sprintf@f+3)& (0+255),w,b
  2811  001000  2059               	addwfc	(sprintf@s+1)^0,w,c
  2812  001002  6EDA               	movwf	fsr2h,c
  2813  001004  0E00               	movlw	0
  2814  001006  6EDF               	movwf	indf2,c
  2815  001008                     
  2816                           ; BSR set to: 0
  2817  001008  0012               	return		;funcret
  2818  00100A                     __end_of_sprintf:
  2819                           	opt callstack 0
  2820                           
  2821 ;; *************** function _vfprintf *****************
  2822 ;; Defined at:
  2823 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  2826 ;;		 -> sprintf@f(6), 
  2827 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  2828 ;;		 -> STR_1(3), 
  2829 ;;  ap              2   83[COMRAM] PTR PTR void 
  2830 ;;		 -> sprintf@ap(2), 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  2833 ;;		 -> STR_1(3), 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  2   79[COMRAM] int 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2843 ;;      Params:         6       0       0       0
  2844 ;;      Locals:         2       0       0       0
  2845 ;;      Temps:          0       0       0       0
  2846 ;;      Totals:         8       0       0       0
  2847 ;;Total ram usage:        8 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    6
  2850 ;; This function calls:
  2851 ;;		_vfpfcnvrt
  2852 ;; This function is called by:
  2853 ;;		_sprintf
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text15
  2858  000F04                     __ptext15:
  2859                           	opt callstack 0
  2860  000F04                     _vfprintf:
  2861                           	opt callstack 19
  2862  000F04                     
  2863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2864  000F04  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  2865  000F08  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2866  000F0C                     
  2867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2868  000F0C  0E00               	movlw	0
  2869  000F0E  0100               	movlb	0	; () banked
  2870  000F10  6FA4               	movwf	(_nout+1)& (0+255),b
  2871  000F12  0E00               	movlw	0
  2872  000F14  6FA3               	movwf	_nout& (0+255),b
  2873                           
  2874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2875  000F16  EFA0  F007         	goto	i1l1911
  2876  000F1A                     i1l1909:
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2880  000F1A  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2881  000F1E  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2882  000F22  0E56               	movlw	low vfprintf@cfmt
  2883  000F24  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2884  000F26  0E00               	movlw	high vfprintf@cfmt
  2885  000F28  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2886  000F2A  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2887  000F2E  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2888  000F32  EC6A  F003         	call	_vfpfcnvrt	;wreg free
  2889  000F36  5040               	movf	?_vfpfcnvrt^0,w,c
  2890  000F38  0100               	movlb	0	; () banked
  2891  000F3A  27A3               	addwf	_nout& (0+255),f,b
  2892  000F3C  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  2893  000F3E  23A4               	addwfc	(_nout+1)& (0+255),f,b
  2894  000F40                     i1l1911:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2898  000F40  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  2899  000F44  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2900  000F48                     	if	0	;tblptru may be non-zero
  2901  000F48                     	endif
  2902  000F48                     	if	0	;tblptru may be non-zero
  2903  000F48                     	endif
  2904  000F48  0008               	tblrd		*
  2905  000F4A  50F5               	movf	tablat,w,c
  2906  000F4C  0900               	iorlw	0
  2907  000F4E  A4D8               	btfss	status,2,c
  2908  000F50  EFAC  F007         	goto	i1u119_21
  2909  000F54  EFAE  F007         	goto	i1u119_20
  2910  000F58                     i1u119_21:
  2911  000F58  EF8D  F007         	goto	i1l1909
  2912  000F5C                     i1u119_20:
  2913  000F5C                     
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2916  000F5C  C0A3  F050         	movff	_nout,?_vfprintf
  2917  000F60  C0A4  F051         	movff	_nout+1,?_vfprintf+1
  2918  000F64                     
  2919                           ; BSR set to: 0
  2920  000F64  0012               	return		;funcret
  2921  000F66                     __end_of_vfprintf:
  2922                           	opt callstack 0
  2923                           
  2924 ;; *************** function _vfpfcnvrt *****************
  2925 ;; Defined at:
  2926 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2929 ;;		 -> sprintf@f(6), 
  2930 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2931 ;;		 -> vfprintf@cfmt(2), 
  2932 ;;  ap              2   67[COMRAM] PTR PTR void 
  2933 ;;		 -> sprintf@ap(2), 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  ll              8   71[COMRAM] long long 
  2936 ;;  llu             8    0        unsigned long long 
  2937 ;;  f               4    0        unsigned long long 
  2938 ;;  vp              3    0        PTR void 
  2939 ;;  ct              3    0        unsigned char [3]
  2940 ;;  cp              3    0        PTR unsigned char 
  2941 ;;  i               2    0        int 
  2942 ;;  done            2    0        int 
  2943 ;;  c               1    0        unsigned char 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  2   63[COMRAM] int 
  2946 ;; Registers used:
  2947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2953 ;;      Params:         6       0       0       0
  2954 ;;      Locals:         8       0       0       0
  2955 ;;      Temps:          2       0       0       0
  2956 ;;      Totals:        16       0       0       0
  2957 ;;Total ram usage:       16 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    5
  2960 ;; This function calls:
  2961 ;;		_dtoa
  2962 ;;		_fputc
  2963 ;; This function is called by:
  2964 ;;		_vfprintf
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text16
  2969  0006D4                     __ptext16:
  2970                           	opt callstack 0
  2971  0006D4                     _vfpfcnvrt:
  2972                           	opt callstack 19
  2973  0006D4                     
  2974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2975  0006D4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2976  0006D8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2977  0006DC  CFDE FFF6          	movff	postinc2,tblptrl
  2978  0006E0  CFDD FFF7          	movff	postdec2,tblptrh
  2979  0006E4                     	if	0	;tblptru may be non-zero
  2980  0006E4                     	endif
  2981  0006E4                     	if	0	;tblptru may be non-zero
  2982  0006E4                     	endif
  2983  0006E4  0008               	tblrd		*
  2984  0006E6  50F5               	movf	tablat,w,c
  2985  0006E8  0A25               	xorlw	37
  2986  0006EA  A4D8               	btfss	status,2,c
  2987  0006EC  EF7A  F003         	goto	i1u114_21
  2988  0006F0  EF7C  F003         	goto	i1u114_20
  2989  0006F4                     i1u114_21:
  2990  0006F4  EF28  F004         	goto	i1l1877
  2991  0006F8                     i1u114_20:
  2992  0006F8                     
  2993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2994  0006F8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2995  0006FC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2996  000700  2ADE               	incf	postinc2,f,c
  2997  000702  0E00               	movlw	0
  2998  000704  22DD               	addwfc	postdec2,f,c
  2999  000706                     
  3000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3001  000706  0E00               	movlw	0
  3002  000708  0100               	movlb	0	; () banked
  3003  00070A  6FA6               	movwf	(_width+1)& (0+255),b
  3004  00070C  0E00               	movlw	0
  3005  00070E  6FA5               	movwf	_width& (0+255),b
  3006  000710  C0A5  F0A9         	movff	_width,_flags
  3007  000714  C0A6  F0AA         	movff	_width+1,_flags+1
  3008  000718                     
  3009                           ; BSR set to: 0
  3010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3011  000718  69A7               	setf	_prec& (0+255),b
  3012  00071A  69A8               	setf	(_prec+1)& (0+255),b
  3013  00071C                     
  3014                           ; BSR set to: 0
  3015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3016  00071C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3017  000720  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3018  000724  CFDE FFF6          	movff	postinc2,tblptrl
  3019  000728  CFDD FFF7          	movff	postdec2,tblptrh
  3020  00072C                     	if	0	;tblptru may be non-zero
  3021  00072C                     	endif
  3022  00072C                     	if	0	;tblptru may be non-zero
  3023  00072C                     	endif
  3024  00072C  0008               	tblrd		*
  3025  00072E  50F5               	movf	tablat,w,c
  3026  000730  0A64               	xorlw	100
  3027  000732  B4D8               	btfsc	status,2,c
  3028  000734  EF9E  F003         	goto	i1u115_21
  3029  000738  EFA0  F003         	goto	i1u115_20
  3030  00073C                     i1u115_21:
  3031  00073C  EFB2  F003         	goto	i1l1855
  3032  000740                     i1u115_20:
  3033  000740                     
  3034                           ; BSR set to: 0
  3035  000740  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3036  000744  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3037  000748  CFDE FFF6          	movff	postinc2,tblptrl
  3038  00074C  CFDD FFF7          	movff	postdec2,tblptrh
  3039  000750                     	if	0	;tblptru may be non-zero
  3040  000750                     	endif
  3041  000750                     	if	0	;tblptru may be non-zero
  3042  000750                     	endif
  3043  000750  0008               	tblrd		*
  3044  000752  50F5               	movf	tablat,w,c
  3045  000754  0A69               	xorlw	105
  3046  000756  A4D8               	btfss	status,2,c
  3047  000758  EFB0  F003         	goto	i1u116_21
  3048  00075C  EFB2  F003         	goto	i1u116_20
  3049  000760                     i1u116_21:
  3050  000760  EFF2  F003         	goto	i1l1861
  3051  000764                     i1u116_20:
  3052  000764                     i1l1855:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3056  000764  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3057  000768  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3058  00076C  2ADE               	incf	postinc2,f,c
  3059  00076E  0E00               	movlw	0
  3060  000770  22DD               	addwfc	postdec2,f,c
  3061                           
  3062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3063  000772  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3064  000776  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3065  00077A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3066  00077E  0E02               	movlw	2
  3067  000780  26DE               	addwf	postinc2,f,c
  3068  000782  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3069  000786  0E00               	movlw	0
  3070  000788  22DD               	addwfc	postdec2,f,c
  3071  00078A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3072  00078E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3073  000792  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  3074  000796  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  3075  00079A  0E00               	movlw	0
  3076  00079C  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3077  00079E  0EFF               	movlw	-1
  3078  0007A0  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  3079  0007A2  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  3080  0007A4  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  3081  0007A6  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  3082  0007A8  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  3083  0007AA  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  3084  0007AC                     
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3087  0007AC  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3088  0007B0  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3089  0007B4  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3090  0007B8  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3091  0007BC  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3092  0007C0  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3093  0007C4  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3094  0007C8  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3095  0007CC  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3096  0007D0  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3097  0007D4  ECF9  F001         	call	_dtoa	;wreg free
  3098  0007D8  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  3099  0007DC  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3100  0007E0  EF43  F004         	goto	i1l297
  3101  0007E4                     i1l1861:
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3105  0007E4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3106  0007E8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3107  0007EC  CFDE FFF6          	movff	postinc2,tblptrl
  3108  0007F0  CFDD FFF7          	movff	postdec2,tblptrh
  3109  0007F4                     	if	0	;tblptru may be non-zero
  3110  0007F4                     	endif
  3111  0007F4                     	if	0	;tblptru may be non-zero
  3112  0007F4                     	endif
  3113  0007F4  0008               	tblrd		*
  3114  0007F6  50F5               	movf	tablat,w,c
  3115  0007F8  0A25               	xorlw	37
  3116  0007FA  A4D8               	btfss	status,2,c
  3117  0007FC  EF02  F004         	goto	i1u117_21
  3118  000800  EF04  F004         	goto	i1u117_20
  3119  000804                     i1u117_21:
  3120  000804  EF1B  F004         	goto	i1l1871
  3121  000808                     i1u117_20:
  3122  000808                     
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3125  000808  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3126  00080C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3127  000810  2ADE               	incf	postinc2,f,c
  3128  000812  0E00               	movlw	0
  3129  000814  22DD               	addwfc	postdec2,f,c
  3130  000816                     
  3131                           ; BSR set to: 0
  3132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3133  000816  0E00               	movlw	0
  3134  000818  6E02               	movwf	(fputc@c+1)^0,c
  3135  00081A  0E25               	movlw	37
  3136  00081C  6E01               	movwf	fputc@c^0,c
  3137  00081E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3138  000822  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3139  000826  ECBA  F005         	call	_fputc	;wreg free
  3140  00082A                     i1l1867:
  3141                           
  3142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3143  00082A  0E00               	movlw	0
  3144  00082C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3145  00082E  0E01               	movlw	1
  3146  000830  6E40               	movwf	?_vfpfcnvrt^0,c
  3147  000832  EF43  F004         	goto	i1l297
  3148  000836                     i1l1871:
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3152  000836  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3153  00083A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3154  00083E  2ADE               	incf	postinc2,f,c
  3155  000840  0E00               	movlw	0
  3156  000842  22DD               	addwfc	postdec2,f,c
  3157  000844                     
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3160  000844  0E00               	movlw	0
  3161  000846  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3162  000848  0E00               	movlw	0
  3163  00084A  6E40               	movwf	?_vfpfcnvrt^0,c
  3164  00084C  EF43  F004         	goto	i1l297
  3165  000850                     i1l1877:
  3166                           
  3167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3168  000850  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3169  000854  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3170  000858  CFDE FFF6          	movff	postinc2,tblptrl
  3171  00085C  CFDD FFF7          	movff	postdec2,tblptrh
  3172  000860                     	if	0	;tblptru may be non-zero
  3173  000860                     	endif
  3174  000860                     	if	0	;tblptru may be non-zero
  3175  000860                     	endif
  3176  000860  0008               	tblrd		*
  3177  000862  50F5               	movf	tablat,w,c
  3178  000864  6E01               	movwf	fputc@c^0,c
  3179  000866  6A02               	clrf	(fputc@c+1)^0,c
  3180  000868  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3181  00086C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3182  000870  ECBA  F005         	call	_fputc	;wreg free
  3183  000874                     
  3184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3185  000874  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3186  000878  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3187  00087C  2ADE               	incf	postinc2,f,c
  3188  00087E  0E00               	movlw	0
  3189  000880  22DD               	addwfc	postdec2,f,c
  3190  000882  EF15  F004         	goto	i1l1867
  3191  000886                     i1l297:
  3192  000886  0012               	return		;funcret
  3193  000888                     __end_of_vfpfcnvrt:
  3194                           	opt callstack 0
  3195                           
  3196 ;; *************** function _dtoa *****************
  3197 ;; Defined at:
  3198 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3201 ;;		 -> sprintf@f(6), 
  3202 ;;  d               8   29[COMRAM] long long 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  n               8   53[COMRAM] long long 
  3205 ;;  i               2   61[COMRAM] int 
  3206 ;;  s               2   51[COMRAM] int 
  3207 ;;  w               2   49[COMRAM] int 
  3208 ;;  p               2   47[COMRAM] int 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  2   27[COMRAM] int 
  3211 ;; Registers used:
  3212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3218 ;;      Params:        10       0       0       0
  3219 ;;      Locals:        18       0       0       0
  3220 ;;      Temps:          8       0       0       0
  3221 ;;      Totals:        36       0       0       0
  3222 ;;Total ram usage:       36 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    4
  3225 ;; This function calls:
  3226 ;;		___aodiv
  3227 ;;		___aomod
  3228 ;;		_abs
  3229 ;;		_pad
  3230 ;; This function is called by:
  3231 ;;		_vfpfcnvrt
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text17
  3236  0003F2                     __ptext17:
  3237                           	opt callstack 0
  3238  0003F2                     _dtoa:
  3239                           	opt callstack 19
  3240  0003F2                     
  3241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  3242  0003F2  C01E  F036         	movff	dtoa@d,dtoa@n
  3243  0003F6  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  3244  0003FA  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  3245  0003FE  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  3246  000402  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  3247  000406  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  3248  00040A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  3249  00040E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  3250  000412                     
  3251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  3252  000412  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  3253  000414  EF0E  F002         	goto	i1u98_21
  3254  000418  EF11  F002         	goto	i1u98_20
  3255  00041C                     i1u98_21:
  3256  00041C  0E01               	movlw	1
  3257  00041E  EF12  F002         	goto	i1u99_20
  3258  000422                     i1u98_20:
  3259  000422  0E00               	movlw	0
  3260  000424                     i1u99_20:
  3261  000424  6E34               	movwf	dtoa@s^0,c
  3262  000426  6A35               	clrf	(dtoa@s+1)^0,c
  3263                           
  3264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  3265  000428  5034               	movf	dtoa@s^0,w,c
  3266  00042A  1035               	iorwf	(dtoa@s+1)^0,w,c
  3267  00042C  B4D8               	btfsc	status,2,c
  3268  00042E  EF1B  F002         	goto	i1u100_21
  3269  000432  EF1D  F002         	goto	i1u100_20
  3270  000436                     i1u100_21:
  3271  000436  EF2D  F002         	goto	i1l1777
  3272  00043A                     i1u100_20:
  3273  00043A                     
  3274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  3275  00043A  1E3D               	comf	(dtoa@n+7)^0,f,c
  3276  00043C  1E3C               	comf	(dtoa@n+6)^0,f,c
  3277  00043E  1E3B               	comf	(dtoa@n+5)^0,f,c
  3278  000440  1E3A               	comf	(dtoa@n+4)^0,f,c
  3279  000442  1E39               	comf	(dtoa@n+3)^0,f,c
  3280  000444  1E38               	comf	(dtoa@n+2)^0,f,c
  3281  000446  1E37               	comf	(dtoa@n+1)^0,f,c
  3282  000448  6C36               	negf	dtoa@n^0,c
  3283  00044A  0E00               	movlw	0
  3284  00044C  2237               	addwfc	(dtoa@n+1)^0,f,c
  3285  00044E  2238               	addwfc	(dtoa@n+2)^0,f,c
  3286  000450  2239               	addwfc	(dtoa@n+3)^0,f,c
  3287  000452  223A               	addwfc	(dtoa@n+4)^0,f,c
  3288  000454  223B               	addwfc	(dtoa@n+5)^0,f,c
  3289  000456  223C               	addwfc	(dtoa@n+6)^0,f,c
  3290  000458  223D               	addwfc	(dtoa@n+7)^0,f,c
  3291  00045A                     i1l1777:
  3292                           
  3293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  3294  00045A  0100               	movlb	0	; () banked
  3295  00045C  BFA8               	btfsc	(_prec+1)& (0+255),7,b
  3296  00045E  EF33  F002         	goto	i1u101_21
  3297  000462  EF35  F002         	goto	i1u101_20
  3298  000466                     i1u101_21:
  3299  000466  EF36  F002         	goto	i1l1781
  3300  00046A                     i1u101_20:
  3301  00046A                     
  3302                           ; BSR set to: 0
  3303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  3304  00046A  93A9               	bcf	_flags& (0+255),1,b
  3305  00046C                     i1l1781:
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  3309  00046C  BFA8               	btfsc	(_prec+1)& (0+255),7,b
  3310  00046E  EF43  F002         	goto	i1u102_20
  3311  000472  51A8               	movf	(_prec+1)& (0+255),w,b
  3312  000474  E106               	bnz	i1u102_21
  3313  000476  05A7               	decf	_prec& (0+255),w,b
  3314  000478  B0D8               	btfsc	status,0,c
  3315  00047A  EF41  F002         	goto	i1u102_21
  3316  00047E  EF43  F002         	goto	i1u102_20
  3317  000482                     i1u102_21:
  3318  000482  EF49  F002         	goto	i1l270
  3319  000486                     i1u102_20:
  3320  000486                     
  3321                           ; BSR set to: 0
  3322  000486  0E00               	movlw	0
  3323  000488  6E31               	movwf	(dtoa@p+1)^0,c
  3324  00048A  0E01               	movlw	1
  3325  00048C  6E30               	movwf	dtoa@p^0,c
  3326  00048E  EF4D  F002         	goto	i1l272
  3327  000492                     i1l270:
  3328                           
  3329                           ; BSR set to: 0
  3330  000492  C0A7  F030         	movff	_prec,dtoa@p
  3331  000496  C0A8  F031         	movff	_prec+1,dtoa@p+1
  3332  00049A                     i1l272:
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  3336  00049A  C0A5  F032         	movff	_width,dtoa@w
  3337  00049E  C0A6  F033         	movff	_width+1,dtoa@w+1
  3338  0004A2                     
  3339                           ; BSR set to: 0
  3340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  3341  0004A2  5034               	movf	dtoa@s^0,w,c
  3342  0004A4  1035               	iorwf	(dtoa@s+1)^0,w,c
  3343  0004A6  A4D8               	btfss	status,2,c
  3344  0004A8  EF58  F002         	goto	i1u103_21
  3345  0004AC  EF5A  F002         	goto	i1u103_20
  3346  0004B0                     i1u103_21:
  3347  0004B0  EF61  F002         	goto	i1l1789
  3348  0004B4                     i1u103_20:
  3349  0004B4                     
  3350                           ; BSR set to: 0
  3351  0004B4  A5A9               	btfss	_flags& (0+255),2,b
  3352  0004B6  EF5F  F002         	goto	i1u104_21
  3353  0004BA  EF61  F002         	goto	i1u104_20
  3354  0004BE                     i1u104_21:
  3355  0004BE  EF64  F002         	goto	i1l1791
  3356  0004C2                     i1u104_20:
  3357  0004C2                     i1l1789:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  3361  0004C2  0632               	decf	dtoa@w^0,f,c
  3362  0004C4  A0D8               	btfss	status,0,c
  3363  0004C6  0633               	decf	(dtoa@w+1)^0,f,c
  3364  0004C8                     i1l1791:
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  3368  0004C8  0E00               	movlw	0
  3369  0004CA  6E3F               	movwf	(dtoa@i+1)^0,c
  3370  0004CC  0E1F               	movlw	31
  3371  0004CE  6E3E               	movwf	dtoa@i^0,c
  3372  0004D0                     
  3373                           ; BSR set to: 0
  3374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  3375  0004D0  0E00               	movlw	0
  3376  0004D2  6FD0               	movwf	(_dbuf+31)& (0+255),b
  3377                           
  3378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3379  0004D4  EFE8  F002         	goto	i1l1805
  3380  0004D8                     i1l1795:
  3381                           
  3382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  3383  0004D8  063E               	decf	dtoa@i^0,f,c
  3384  0004DA  A0D8               	btfss	status,0,c
  3385  0004DC  063F               	decf	(dtoa@i+1)^0,f,c
  3386  0004DE                     
  3387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  3388  0004DE  0EB1               	movlw	low _dbuf
  3389  0004E0  243E               	addwf	dtoa@i^0,w,c
  3390  0004E2  6ED9               	movwf	fsr2l,c
  3391  0004E4  0E00               	movlw	high _dbuf
  3392  0004E6  203F               	addwfc	(dtoa@i+1)^0,w,c
  3393  0004E8  6EDA               	movwf	fsr2h,c
  3394  0004EA  C036  F001         	movff	dtoa@n,___aomod@dividend
  3395  0004EE  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3396  0004F2  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3397  0004F6  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3398  0004FA  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3399  0004FE  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3400  000502  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3401  000506  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3402  00050A  0E0A               	movlw	10
  3403  00050C  6E09               	movwf	___aomod@divisor^0,c
  3404  00050E  0E00               	movlw	0
  3405  000510  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3406  000512  0E00               	movlw	0
  3407  000514  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3408  000516  0E00               	movlw	0
  3409  000518  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3410  00051A  0E00               	movlw	0
  3411  00051C  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3412  00051E  0E00               	movlw	0
  3413  000520  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3414  000522  0E00               	movlw	0
  3415  000524  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3416  000526  0E00               	movlw	0
  3417  000528  6E10               	movwf	(___aomod@divisor+7)^0,c
  3418  00052A  EC08  F005         	call	___aomod	;wreg free
  3419  00052E  C001  F026         	movff	?___aomod,??_dtoa
  3420  000532  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3421  000536  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3422  00053A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3423  00053E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3424  000542  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3425  000546  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3426  00054A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3427  00054E  C026  F013         	movff	??_dtoa,abs@a
  3428  000552  C028  F014         	movff	??_dtoa+2,abs@a+1
  3429  000556  EC73  F008         	call	_abs	;wreg free
  3430  00055A  5013               	movf	?_abs^0,w,c
  3431  00055C  0F30               	addlw	48
  3432  00055E  6EDF               	movwf	indf2,c
  3433  000560                     
  3434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  3435  000560  0630               	decf	dtoa@p^0,f,c
  3436  000562  A0D8               	btfss	status,0,c
  3437  000564  0631               	decf	(dtoa@p+1)^0,f,c
  3438  000566                     
  3439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  3440  000566  0632               	decf	dtoa@w^0,f,c
  3441  000568  A0D8               	btfss	status,0,c
  3442  00056A  0633               	decf	(dtoa@w+1)^0,f,c
  3443  00056C                     
  3444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  3445  00056C  C036  F001         	movff	dtoa@n,___aodiv@dividend
  3446  000570  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3447  000574  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3448  000578  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3449  00057C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3450  000580  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3451  000584  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3452  000588  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3453  00058C  0E0A               	movlw	10
  3454  00058E  6E09               	movwf	___aodiv@divisor^0,c
  3455  000590  0E00               	movlw	0
  3456  000592  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3457  000594  0E00               	movlw	0
  3458  000596  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3459  000598  0E00               	movlw	0
  3460  00059A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3461  00059C  0E00               	movlw	0
  3462  00059E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3463  0005A0  0E00               	movlw	0
  3464  0005A2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3465  0005A4  0E00               	movlw	0
  3466  0005A6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3467  0005A8  0E00               	movlw	0
  3468  0005AA  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3469  0005AC  EC44  F004         	call	___aodiv	;wreg free
  3470  0005B0  C001  F036         	movff	?___aodiv,dtoa@n
  3471  0005B4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  3472  0005B8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  3473  0005BC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  3474  0005C0  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  3475  0005C4  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  3476  0005C8  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  3477  0005CC  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  3478  0005D0                     i1l1805:
  3479                           
  3480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3481  0005D0  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  3482  0005D2  EFF3  F002         	goto	i1u105_21
  3483  0005D6  503F               	movf	(dtoa@i+1)^0,w,c
  3484  0005D8  E108               	bnz	i1u105_20
  3485  0005DA  043E               	decf	dtoa@i^0,w,c
  3486  0005DC  A0D8               	btfss	status,0,c
  3487  0005DE  EFF3  F002         	goto	i1u105_21
  3488  0005E2  EFF5  F002         	goto	i1u105_20
  3489  0005E6                     i1u105_21:
  3490  0005E6  EF26  F003         	goto	i1l1815
  3491  0005EA                     i1u105_20:
  3492  0005EA  5036               	movf	dtoa@n^0,w,c
  3493  0005EC  1037               	iorwf	(dtoa@n+1)^0,w,c
  3494  0005EE  1038               	iorwf	(dtoa@n+2)^0,w,c
  3495  0005F0  1039               	iorwf	(dtoa@n+3)^0,w,c
  3496  0005F2  103A               	iorwf	(dtoa@n+4)^0,w,c
  3497  0005F4  103B               	iorwf	(dtoa@n+5)^0,w,c
  3498  0005F6  103C               	iorwf	(dtoa@n+6)^0,w,c
  3499  0005F8  103D               	iorwf	(dtoa@n+7)^0,w,c
  3500  0005FA  A4D8               	btfss	status,2,c
  3501  0005FC  EF02  F003         	goto	i1u106_21
  3502  000600  EF04  F003         	goto	i1u106_20
  3503  000604                     i1u106_21:
  3504  000604  EF6C  F002         	goto	i1l1795
  3505  000608                     i1u106_20:
  3506  000608  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3507  00060A  EF11  F003         	goto	i1u107_20
  3508  00060E  5031               	movf	(dtoa@p+1)^0,w,c
  3509  000610  E106               	bnz	i1u107_21
  3510  000612  0430               	decf	dtoa@p^0,w,c
  3511  000614  B0D8               	btfsc	status,0,c
  3512  000616  EF0F  F003         	goto	i1u107_21
  3513  00061A  EF11  F003         	goto	i1u107_20
  3514  00061E                     i1u107_21:
  3515  00061E  EF6C  F002         	goto	i1l1795
  3516  000622                     i1u107_20:
  3517  000622  BE33               	btfsc	(dtoa@w+1)^0,7,c
  3518  000624  EF1C  F003         	goto	i1u108_21
  3519  000628  5033               	movf	(dtoa@w+1)^0,w,c
  3520  00062A  E108               	bnz	i1u108_20
  3521  00062C  0432               	decf	dtoa@w^0,w,c
  3522  00062E  A0D8               	btfss	status,0,c
  3523  000630  EF1C  F003         	goto	i1u108_21
  3524  000634  EF1E  F003         	goto	i1u108_20
  3525  000638                     i1u108_21:
  3526  000638  EF26  F003         	goto	i1l1815
  3527  00063C                     i1u108_20:
  3528  00063C  0100               	movlb	0	; () banked
  3529  00063E  B3A9               	btfsc	_flags& (0+255),1,b
  3530  000640  EF24  F003         	goto	i1u109_21
  3531  000644  EF26  F003         	goto	i1u109_20
  3532  000648                     i1u109_21:
  3533  000648  EF6C  F002         	goto	i1l1795
  3534  00064C                     i1u109_20:
  3535  00064C                     i1l1815:
  3536                           
  3537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  3538  00064C  5034               	movf	dtoa@s^0,w,c
  3539  00064E  1035               	iorwf	(dtoa@s+1)^0,w,c
  3540  000650  A4D8               	btfss	status,2,c
  3541  000652  EF2D  F003         	goto	i1u110_21
  3542  000656  EF2F  F003         	goto	i1u110_20
  3543  00065A                     i1u110_21:
  3544  00065A  EF37  F003         	goto	i1l1819
  3545  00065E                     i1u110_20:
  3546  00065E  0100               	movlb	0	; () banked
  3547  000660  A5A9               	btfss	_flags& (0+255),2,b
  3548  000662  EF35  F003         	goto	i1u111_21
  3549  000666  EF37  F003         	goto	i1u111_20
  3550  00066A                     i1u111_21:
  3551  00066A  EF55  F003         	goto	i1l1829
  3552  00066E                     i1u111_20:
  3553  00066E                     i1l1819:
  3554                           
  3555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  3556  00066E  063E               	decf	dtoa@i^0,f,c
  3557  000670  A0D8               	btfss	status,0,c
  3558  000672  063F               	decf	(dtoa@i+1)^0,f,c
  3559  000674                     
  3560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  3561  000674  5034               	movf	dtoa@s^0,w,c
  3562  000676  1035               	iorwf	(dtoa@s+1)^0,w,c
  3563  000678  A4D8               	btfss	status,2,c
  3564  00067A  EF41  F003         	goto	i1u112_21
  3565  00067E  EF43  F003         	goto	i1u112_20
  3566  000682                     i1u112_21:
  3567  000682  EF49  F003         	goto	i1l1825
  3568  000686                     i1u112_20:
  3569  000686  0E00               	movlw	0
  3570  000688  6E2F               	movwf	(_dtoa$1347+1)^0,c
  3571  00068A  0E2B               	movlw	43
  3572  00068C  6E2E               	movwf	_dtoa$1347^0,c
  3573  00068E  EF4D  F003         	goto	i1l1827
  3574  000692                     i1l1825:
  3575  000692  0E00               	movlw	0
  3576  000694  6E2F               	movwf	(_dtoa$1347+1)^0,c
  3577  000696  0E2D               	movlw	45
  3578  000698  6E2E               	movwf	_dtoa$1347^0,c
  3579  00069A                     i1l1827:
  3580  00069A  0EB1               	movlw	low _dbuf
  3581  00069C  243E               	addwf	dtoa@i^0,w,c
  3582  00069E  6ED9               	movwf	fsr2l,c
  3583  0006A0  0E00               	movlw	high _dbuf
  3584  0006A2  203F               	addwfc	(dtoa@i+1)^0,w,c
  3585  0006A4  6EDA               	movwf	fsr2h,c
  3586  0006A6  C02E  FFDF         	movff	_dtoa$1347,indf2
  3587  0006AA                     i1l1829:
  3588                           
  3589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  3590  0006AA  C01C  F011         	movff	dtoa@fp,pad@fp
  3591  0006AE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3592  0006B2  0EB1               	movlw	low _dbuf
  3593  0006B4  243E               	addwf	dtoa@i^0,w,c
  3594  0006B6  6E13               	movwf	pad@buf^0,c
  3595  0006B8  0E00               	movlw	high _dbuf
  3596  0006BA  203F               	addwfc	(dtoa@i+1)^0,w,c
  3597  0006BC  6E14               	movwf	(pad@buf+1)^0,c
  3598  0006BE  C032  F015         	movff	dtoa@w,pad@p
  3599  0006C2  C033  F016         	movff	dtoa@w+1,pad@p+1
  3600  0006C6  EC1F  F006         	call	_pad	;wreg free
  3601  0006CA  C011  F01C         	movff	?_pad,?_dtoa
  3602  0006CE  C012  F01D         	movff	?_pad+1,?_dtoa+1
  3603  0006D2  0012               	return		;funcret
  3604  0006D4                     __end_of_dtoa:
  3605                           	opt callstack 0
  3606                           
  3607 ;; *************** function _pad *****************
  3608 ;; Defined at:
  3609 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3612 ;;		 -> sprintf@f(6), 
  3613 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3614 ;;		 -> dbuf(32), 
  3615 ;;  p               2   20[COMRAM] int 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  w               2   25[COMRAM] int 
  3618 ;;  i               2   23[COMRAM] int 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  2   16[COMRAM] int 
  3621 ;; Registers used:
  3622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3628 ;;      Params:         6       0       0       0
  3629 ;;      Locals:         4       0       0       0
  3630 ;;      Temps:          1       0       0       0
  3631 ;;      Totals:        11       0       0       0
  3632 ;;Total ram usage:       11 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; Hardware stack levels required when called:    3
  3635 ;; This function calls:
  3636 ;;		_fputc
  3637 ;;		_fputs
  3638 ;;		_strlen
  3639 ;; This function is called by:
  3640 ;;		_dtoa
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text18
  3645  000C3E                     __ptext18:
  3646                           	opt callstack 0
  3647  000C3E                     _pad:
  3648                           	opt callstack 19
  3649  000C3E                     
  3650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3651  000C3E  0100               	movlb	0	; () banked
  3652  000C40  A1A9               	btfss	_flags& (0+255),0,b
  3653  000C42  EF25  F006         	goto	i1u80_21
  3654  000C46  EF27  F006         	goto	i1u80_20
  3655  000C4A                     i1u80_21:
  3656  000C4A  EF31  F006         	goto	i1l1669
  3657  000C4E                     i1u80_20:
  3658  000C4E                     
  3659                           ; BSR set to: 0
  3660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3661  000C4E  C013  F00A         	movff	pad@buf,fputs@s
  3662  000C52  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3663  000C56  C011  F00C         	movff	pad@fp,fputs@fp
  3664  000C5A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3665  000C5E  EC51  F008         	call	_fputs	;wreg free
  3666  000C62                     i1l1669:
  3667                           
  3668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3669  000C62  BE16               	btfsc	(pad@p+1)^0,7,c
  3670  000C64  EF36  F006         	goto	i1u81_21
  3671  000C68  EF38  F006         	goto	i1u81_20
  3672  000C6C                     i1u81_21:
  3673  000C6C  EF3E  F006         	goto	i1l1673
  3674  000C70                     i1u81_20:
  3675  000C70  C015  F01A         	movff	pad@p,pad@w
  3676  000C74  C016  F01B         	movff	pad@p+1,pad@w+1
  3677  000C78  EF42  F006         	goto	i1l259
  3678  000C7C                     i1l1673:
  3679  000C7C  0E00               	movlw	0
  3680  000C7E  6E1B               	movwf	(pad@w+1)^0,c
  3681  000C80  0E00               	movlw	0
  3682  000C82  6E1A               	movwf	pad@w^0,c
  3683  000C84                     i1l259:
  3684                           
  3685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3686  000C84  0E00               	movlw	0
  3687  000C86  6E19               	movwf	(pad@i+1)^0,c
  3688  000C88  0E00               	movlw	0
  3689  000C8A  6E18               	movwf	pad@i^0,c
  3690                           
  3691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3692  000C8C  EF54  F006         	goto	i1l1679
  3693  000C90                     i1l1675:
  3694                           
  3695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3696  000C90  0E00               	movlw	0
  3697  000C92  6E02               	movwf	(fputc@c+1)^0,c
  3698  000C94  0E20               	movlw	32
  3699  000C96  6E01               	movwf	fputc@c^0,c
  3700  000C98  C011  F003         	movff	pad@fp,fputc@fp
  3701  000C9C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3702  000CA0  ECBA  F005         	call	_fputc	;wreg free
  3703  000CA4                     
  3704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3705  000CA4  4A18               	infsnz	pad@i^0,f,c
  3706  000CA6  2A19               	incf	(pad@i+1)^0,f,c
  3707  000CA8                     i1l1679:
  3708                           
  3709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3710  000CA8  501A               	movf	pad@w^0,w,c
  3711  000CAA  5C18               	subwf	pad@i^0,w,c
  3712  000CAC  5019               	movf	(pad@i+1)^0,w,c
  3713  000CAE  0A80               	xorlw	128
  3714  000CB0  6E17               	movwf	??_pad^0,c
  3715  000CB2  501B               	movf	(pad@w+1)^0,w,c
  3716  000CB4  0A80               	xorlw	128
  3717  000CB6  5817               	subwfb	??_pad^0,w,c
  3718  000CB8  A0D8               	btfss	status,0,c
  3719  000CBA  EF61  F006         	goto	i1u82_21
  3720  000CBE  EF63  F006         	goto	i1u82_20
  3721  000CC2                     i1u82_21:
  3722  000CC2  EF48  F006         	goto	i1l1675
  3723  000CC6                     i1u82_20:
  3724  000CC6                     
  3725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3726  000CC6  0100               	movlb	0	; () banked
  3727  000CC8  B1A9               	btfsc	_flags& (0+255),0,b
  3728  000CCA  EF69  F006         	goto	i1u83_21
  3729  000CCE  EF6B  F006         	goto	i1u83_20
  3730  000CD2                     i1u83_21:
  3731  000CD2  EF75  F006         	goto	i1l1683
  3732  000CD6                     i1u83_20:
  3733  000CD6                     
  3734                           ; BSR set to: 0
  3735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3736  000CD6  C013  F00A         	movff	pad@buf,fputs@s
  3737  000CDA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3738  000CDE  C011  F00C         	movff	pad@fp,fputs@fp
  3739  000CE2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3740  000CE6  EC51  F008         	call	_fputs	;wreg free
  3741  000CEA                     i1l1683:
  3742                           
  3743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3744  000CEA  C013  F001         	movff	pad@buf,strlen@s
  3745  000CEE  C014  F002         	movff	pad@buf+1,strlen@s+1
  3746  000CF2  EC24  F009         	call	_strlen	;wreg free
  3747  000CF6  501A               	movf	pad@w^0,w,c
  3748  000CF8  2401               	addwf	?_strlen^0,w,c
  3749  000CFA  6E11               	movwf	?_pad^0,c
  3750  000CFC  501B               	movf	(pad@w+1)^0,w,c
  3751  000CFE  2002               	addwfc	(?_strlen+1)^0,w,c
  3752  000D00  6E12               	movwf	(?_pad+1)^0,c
  3753  000D02  0012               	return		;funcret
  3754  000D04                     __end_of_pad:
  3755                           	opt callstack 0
  3756                           
  3757 ;; *************** function _strlen *****************
  3758 ;; Defined at:
  3759 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3762 ;;		 -> dbuf(32), 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3765 ;;		 -> dbuf(32), 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  2    0[COMRAM] unsigned int 
  3768 ;; Registers used:
  3769 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3775 ;;      Params:         2       0       0       0
  3776 ;;      Locals:         2       0       0       0
  3777 ;;      Temps:          0       0       0       0
  3778 ;;      Totals:         4       0       0       0
  3779 ;;Total ram usage:        4 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_pad
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text19
  3789  001248                     __ptext19:
  3790                           	opt callstack 0
  3791  001248                     _strlen:
  3792                           	opt callstack 21
  3793  001248  C001  F003         	movff	strlen@s,strlen@a
  3794  00124C  C002  F004         	movff	strlen@s+1,strlen@a+1
  3795  001250  EF2C  F009         	goto	i1l1659
  3796  001254                     i1l1657:
  3797  001254  4A01               	infsnz	strlen@s^0,f,c
  3798  001256  2A02               	incf	(strlen@s+1)^0,f,c
  3799  001258                     i1l1659:
  3800  001258  C001  FFD9         	movff	strlen@s,fsr2l
  3801  00125C  C002  FFDA         	movff	strlen@s+1,fsr2h
  3802  001260  50DF               	movf	indf2,w,c
  3803  001262  A4D8               	btfss	status,2,c
  3804  001264  EF36  F009         	goto	i1u79_21
  3805  001268  EF38  F009         	goto	i1u79_20
  3806  00126C                     i1u79_21:
  3807  00126C  EF2A  F009         	goto	i1l1657
  3808  001270                     i1u79_20:
  3809  001270  5003               	movf	strlen@a^0,w,c
  3810  001272  5C01               	subwf	strlen@s^0,w,c
  3811  001274  6E01               	movwf	?_strlen^0,c
  3812  001276  5004               	movf	(strlen@a+1)^0,w,c
  3813  001278  5802               	subwfb	(strlen@s+1)^0,w,c
  3814  00127A  6E02               	movwf	(?_strlen+1)^0,c
  3815  00127C  0012               	return		;funcret
  3816  00127E                     __end_of_strlen:
  3817                           	opt callstack 0
  3818                           
  3819 ;; *************** function _fputs *****************
  3820 ;; Defined at:
  3821 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3824 ;;		 -> dbuf(32), 
  3825 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3826 ;;		 -> sprintf@f(6), 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  i               2   14[COMRAM] int 
  3829 ;;  c               1   13[COMRAM] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  2    9[COMRAM] int 
  3832 ;; Registers used:
  3833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3839 ;;      Params:         4       0       0       0
  3840 ;;      Locals:         3       0       0       0
  3841 ;;      Temps:          0       0       0       0
  3842 ;;      Totals:         7       0       0       0
  3843 ;;Total ram usage:        7 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    2
  3846 ;; This function calls:
  3847 ;;		_fputc
  3848 ;; This function is called by:
  3849 ;;		_pad
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text20
  3854  0010A2                     __ptext20:
  3855                           	opt callstack 0
  3856  0010A2                     _fputs:
  3857                           	opt callstack 19
  3858  0010A2  0E00               	movlw	0
  3859  0010A4  6E10               	movwf	(fputs@i+1)^0,c
  3860  0010A6  0E00               	movlw	0
  3861  0010A8  6E0F               	movwf	fputs@i^0,c
  3862  0010AA  EF62  F008         	goto	i1l1653
  3863  0010AE                     i1l1649:
  3864  0010AE  C00E  F001         	movff	fputs@c,fputc@c
  3865  0010B2  6A02               	clrf	(fputc@c+1)^0,c
  3866  0010B4  C00C  F003         	movff	fputs@fp,fputc@fp
  3867  0010B8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3868  0010BC  ECBA  F005         	call	_fputc	;wreg free
  3869  0010C0  4A0F               	infsnz	fputs@i^0,f,c
  3870  0010C2  2A10               	incf	(fputs@i+1)^0,f,c
  3871  0010C4                     i1l1653:
  3872  0010C4  500F               	movf	fputs@i^0,w,c
  3873  0010C6  240A               	addwf	fputs@s^0,w,c
  3874  0010C8  6ED9               	movwf	fsr2l,c
  3875  0010CA  5010               	movf	(fputs@i+1)^0,w,c
  3876  0010CC  200B               	addwfc	(fputs@s+1)^0,w,c
  3877  0010CE  6EDA               	movwf	fsr2h,c
  3878  0010D0  50DF               	movf	indf2,w,c
  3879  0010D2  6E0E               	movwf	fputs@c^0,c
  3880  0010D4  500E               	movf	fputs@c^0,w,c
  3881  0010D6  A4D8               	btfss	status,2,c
  3882  0010D8  EF70  F008         	goto	i1u78_21
  3883  0010DC  EF72  F008         	goto	i1u78_20
  3884  0010E0                     i1u78_21:
  3885  0010E0  EF57  F008         	goto	i1l1649
  3886  0010E4                     i1u78_20:
  3887  0010E4  0012               	return		;funcret
  3888  0010E6                     __end_of_fputs:
  3889                           	opt callstack 0
  3890                           
  3891 ;; *************** function _fputc *****************
  3892 ;; Defined at:
  3893 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  c               2    0[COMRAM] int 
  3896 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3897 ;;		 -> sprintf@f(6), 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;		None
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  2    0[COMRAM] int 
  3902 ;; Registers used:
  3903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3909 ;;      Params:         4       0       0       0
  3910 ;;      Locals:         0       0       0       0
  3911 ;;      Temps:          5       0       0       0
  3912 ;;      Totals:         9       0       0       0
  3913 ;;Total ram usage:        9 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    1
  3916 ;; This function calls:
  3917 ;;		_putch
  3918 ;; This function is called by:
  3919 ;;		_pad
  3920 ;;		_vfpfcnvrt
  3921 ;;		_fputs
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text21
  3926  000B74                     __ptext21:
  3927                           	opt callstack 0
  3928  000B74                     _fputc:
  3929                           	opt callstack 22
  3930  000B74  5003               	movf	fputc@fp^0,w,c
  3931  000B76  1004               	iorwf	(fputc@fp+1)^0,w,c
  3932  000B78  B4D8               	btfsc	status,2,c
  3933  000B7A  EFC1  F005         	goto	i1u74_21
  3934  000B7E  EFC3  F005         	goto	i1u74_20
  3935  000B82                     i1u74_21:
  3936  000B82  EFCC  F005         	goto	i1l1637
  3937  000B86                     i1u74_20:
  3938  000B86  5003               	movf	fputc@fp^0,w,c
  3939  000B88  1004               	iorwf	(fputc@fp+1)^0,w,c
  3940  000B8A  A4D8               	btfss	status,2,c
  3941  000B8C  EFCA  F005         	goto	i1u75_21
  3942  000B90  EFCC  F005         	goto	i1u75_20
  3943  000B94                     i1u75_21:
  3944  000B94  EFD1  F005         	goto	i1l1639
  3945  000B98                     i1u75_20:
  3946  000B98                     i1l1637:
  3947  000B98  5001               	movf	fputc@c^0,w,c
  3948  000B9A  EC99  F009         	call	_putch
  3949  000B9E  EF1E  F006         	goto	i1l997
  3950  000BA2                     i1l1639:
  3951  000BA2  EE20 F004          	lfsr	2,4
  3952  000BA6  5003               	movf	fputc@fp^0,w,c
  3953  000BA8  26D9               	addwf	fsr2l,f,c
  3954  000BAA  5004               	movf	(fputc@fp+1)^0,w,c
  3955  000BAC  22DA               	addwfc	fsr2h,f,c
  3956  000BAE  50DE               	movf	postinc2,w,c
  3957  000BB0  10DE               	iorwf	postinc2,w,c
  3958  000BB2  B4D8               	btfsc	status,2,c
  3959  000BB4  EFDE  F005         	goto	i1u76_21
  3960  000BB8  EFE0  F005         	goto	i1u76_20
  3961  000BBC                     i1u76_21:
  3962  000BBC  EFFB  F005         	goto	i1l1643
  3963  000BC0                     i1u76_20:
  3964  000BC0  EE20 F004          	lfsr	2,4
  3965  000BC4  5003               	movf	fputc@fp^0,w,c
  3966  000BC6  26D9               	addwf	fsr2l,f,c
  3967  000BC8  5004               	movf	(fputc@fp+1)^0,w,c
  3968  000BCA  22DA               	addwfc	fsr2h,f,c
  3969  000BCC  EE10 F002          	lfsr	1,2
  3970  000BD0  5003               	movf	fputc@fp^0,w,c
  3971  000BD2  26E1               	addwf	fsr1l,f,c
  3972  000BD4  5004               	movf	(fputc@fp+1)^0,w,c
  3973  000BD6  22E2               	addwfc	fsr1h,f,c
  3974  000BD8  50DE               	movf	postinc2,w,c
  3975  000BDA  5CE6               	subwf	postinc1,w,c
  3976  000BDC  50E6               	movf	postinc1,w,c
  3977  000BDE  0A80               	xorlw	128
  3978  000BE0  6E09               	movwf	(??_fputc+4)^0,c
  3979  000BE2  50DE               	movf	postinc2,w,c
  3980  000BE4  0A80               	xorlw	128
  3981  000BE6  5809               	subwfb	(??_fputc+4)^0,w,c
  3982  000BE8  B0D8               	btfsc	status,0,c
  3983  000BEA  EFF9  F005         	goto	i1u77_21
  3984  000BEE  EFFB  F005         	goto	i1u77_20
  3985  000BF2                     i1u77_21:
  3986  000BF2  EF1E  F006         	goto	i1l997
  3987  000BF6                     i1u77_20:
  3988  000BF6                     i1l1643:
  3989  000BF6  EE20 F002          	lfsr	2,2
  3990  000BFA  5003               	movf	fputc@fp^0,w,c
  3991  000BFC  26D9               	addwf	fsr2l,f,c
  3992  000BFE  5004               	movf	(fputc@fp+1)^0,w,c
  3993  000C00  22DA               	addwfc	fsr2h,f,c
  3994  000C02  CFDE F005          	movff	postinc2,??_fputc
  3995  000C06  CFDD F006          	movff	postdec2,??_fputc+1
  3996  000C0A  C003  FFD9         	movff	fputc@fp,fsr2l
  3997  000C0E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3998  000C12  CFDE F007          	movff	postinc2,??_fputc+2
  3999  000C16  CFDD F008          	movff	postdec2,??_fputc+3
  4000  000C1A  5005               	movf	??_fputc^0,w,c
  4001  000C1C  2407               	addwf	(??_fputc+2)^0,w,c
  4002  000C1E  6ED9               	movwf	fsr2l,c
  4003  000C20  5006               	movf	(??_fputc+1)^0,w,c
  4004  000C22  2008               	addwfc	(??_fputc+3)^0,w,c
  4005  000C24  6EDA               	movwf	fsr2h,c
  4006  000C26  C001  FFDF         	movff	fputc@c,indf2
  4007  000C2A  EE20 F002          	lfsr	2,2
  4008  000C2E  5003               	movf	fputc@fp^0,w,c
  4009  000C30  26D9               	addwf	fsr2l,f,c
  4010  000C32  5004               	movf	(fputc@fp+1)^0,w,c
  4011  000C34  22DA               	addwfc	fsr2h,f,c
  4012  000C36  2ADE               	incf	postinc2,f,c
  4013  000C38  0E00               	movlw	0
  4014  000C3A  22DD               	addwfc	postdec2,f,c
  4015  000C3C                     i1l997:
  4016  000C3C  0012               	return		;funcret
  4017  000C3E                     __end_of_fputc:
  4018                           	opt callstack 0
  4019                           
  4020 ;; *************** function _putch *****************
  4021 ;; Defined at:
  4022 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  c               1    wreg     unsigned char 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  c               1    0[COMRAM] unsigned char 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4036 ;;      Params:         0       0       0       0
  4037 ;;      Locals:         0       0       0       0
  4038 ;;      Temps:          0       0       0       0
  4039 ;;      Totals:         0       0       0       0
  4040 ;;Total ram usage:        0 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_fputc
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text22
  4050  001332                     __ptext22:
  4051                           	opt callstack 0
  4052  001332                     _putch:
  4053                           	opt callstack 22
  4054  001332  0012               	return		;funcret
  4055  001334                     __end_of_putch:
  4056                           	opt callstack 0
  4057                           
  4058 ;; *************** function _abs *****************
  4059 ;; Defined at:
  4060 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  a               2   18[COMRAM] int 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;		None
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  2   18[COMRAM] int 
  4067 ;; Registers used:
  4068 ;;		wreg, status,2, status,0
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4074 ;;      Params:         2       0       0       0
  4075 ;;      Locals:         0       0       0       0
  4076 ;;      Temps:          2       0       0       0
  4077 ;;      Totals:         4       0       0       0
  4078 ;;Total ram usage:        4 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_dtoa
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text23
  4088  0010E6                     __ptext23:
  4089                           	opt callstack 0
  4090  0010E6                     _abs:
  4091                           	opt callstack 22
  4092  0010E6  BE14               	btfsc	(abs@a+1)^0,7,c
  4093  0010E8  EF80  F008         	goto	i1u84_20
  4094  0010EC  5014               	movf	(abs@a+1)^0,w,c
  4095  0010EE  E106               	bnz	i1u84_21
  4096  0010F0  0413               	decf	abs@a^0,w,c
  4097  0010F2  B0D8               	btfsc	status,0,c
  4098  0010F4  EF7E  F008         	goto	i1u84_21
  4099  0010F8  EF80  F008         	goto	i1u84_20
  4100  0010FC                     i1u84_21:
  4101  0010FC  EF8E  F008         	goto	i1l982
  4102  001100                     i1u84_20:
  4103  001100  C013  F015         	movff	abs@a,??_abs
  4104  001104  C014  F016         	movff	abs@a+1,??_abs+1
  4105  001108  1E15               	comf	??_abs^0,f,c
  4106  00110A  1E16               	comf	(??_abs+1)^0,f,c
  4107  00110C  4A15               	infsnz	??_abs^0,f,c
  4108  00110E  2A16               	incf	(??_abs+1)^0,f,c
  4109  001110  C015  F013         	movff	??_abs,?_abs
  4110  001114  C016  F014         	movff	??_abs+1,?_abs+1
  4111  001118  EF92  F008         	goto	i1l985
  4112  00111C                     i1l982:
  4113  00111C  C013  F013         	movff	abs@a,?_abs
  4114  001120  C014  F014         	movff	abs@a+1,?_abs+1
  4115  001124                     i1l985:
  4116  001124  0012               	return		;funcret
  4117  001126                     __end_of_abs:
  4118                           	opt callstack 0
  4119                           
  4120 ;; *************** function ___aomod *****************
  4121 ;; Defined at:
  4122 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  dividend        8    0[COMRAM] long long 
  4125 ;;  divisor         8    8[COMRAM] long long 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  sign            1   17[COMRAM] unsigned char 
  4128 ;;  counter         1   16[COMRAM] unsigned char 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  8    0[COMRAM] long long 
  4131 ;; Registers used:
  4132 ;;		wreg, status,2, status,0
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4138 ;;      Params:        16       0       0       0
  4139 ;;      Locals:         2       0       0       0
  4140 ;;      Temps:          0       0       0       0
  4141 ;;      Totals:        18       0       0       0
  4142 ;;Total ram usage:       18 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; This function calls:
  4145 ;;		Nothing
  4146 ;; This function is called by:
  4147 ;;		_dtoa
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text24
  4152  000A10                     __ptext24:
  4153                           	opt callstack 0
  4154  000A10                     ___aomod:
  4155                           	opt callstack 22
  4156  000A10  0E00               	movlw	0
  4157  000A12  6E12               	movwf	___aomod@sign^0,c
  4158  000A14  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  4159  000A16  EF11  F005         	goto	i1u92_20
  4160  000A1A  EF0F  F005         	goto	i1u92_21
  4161  000A1E                     i1u92_21:
  4162  000A1E  EF23  F005         	goto	i1l1743
  4163  000A22                     i1u92_20:
  4164  000A22  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4165  000A24  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4166  000A26  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4167  000A28  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4168  000A2A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4169  000A2C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4170  000A2E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4171  000A30  6C01               	negf	___aomod@dividend^0,c
  4172  000A32  0E00               	movlw	0
  4173  000A34  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4174  000A36  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4175  000A38  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4176  000A3A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4177  000A3C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4178  000A3E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4179  000A40  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4180  000A42  0E01               	movlw	1
  4181  000A44  6E12               	movwf	___aomod@sign^0,c
  4182  000A46                     i1l1743:
  4183  000A46  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  4184  000A48  EF2A  F005         	goto	i1u93_20
  4185  000A4C  EF28  F005         	goto	i1u93_21
  4186  000A50                     i1u93_21:
  4187  000A50  EF3A  F005         	goto	i1l1747
  4188  000A54                     i1u93_20:
  4189  000A54  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4190  000A56  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4191  000A58  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4192  000A5A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4193  000A5C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4194  000A5E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  4195  000A60  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  4196  000A62  6C09               	negf	___aomod@divisor^0,c
  4197  000A64  0E00               	movlw	0
  4198  000A66  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  4199  000A68  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  4200  000A6A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  4201  000A6C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  4202  000A6E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  4203  000A70  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  4204  000A72  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  4205  000A74                     i1l1747:
  4206  000A74  5009               	movf	___aomod@divisor^0,w,c
  4207  000A76  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  4208  000A78  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  4209  000A7A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  4210  000A7C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  4211  000A7E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  4212  000A80  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  4213  000A82  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  4214  000A84  B4D8               	btfsc	status,2,c
  4215  000A86  EF47  F005         	goto	i1u94_21
  4216  000A8A  EF49  F005         	goto	i1u94_20
  4217  000A8E                     i1u94_21:
  4218  000A8E  EF91  F005         	goto	i1l1763
  4219  000A92                     i1u94_20:
  4220  000A92  0E01               	movlw	1
  4221  000A94  6E11               	movwf	___aomod@counter^0,c
  4222  000A96  EF57  F005         	goto	i1l1753
  4223  000A9A                     i1l1751:
  4224  000A9A  90D8               	bcf	status,0,c
  4225  000A9C  3609               	rlcf	___aomod@divisor^0,f,c
  4226  000A9E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  4227  000AA0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  4228  000AA2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  4229  000AA4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  4230  000AA6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  4231  000AA8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  4232  000AAA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  4233  000AAC  2A11               	incf	___aomod@counter^0,f,c
  4234  000AAE                     i1l1753:
  4235  000AAE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  4236  000AB0  EF5C  F005         	goto	i1u95_21
  4237  000AB4  EF5E  F005         	goto	i1u95_20
  4238  000AB8                     i1u95_21:
  4239  000AB8  EF4D  F005         	goto	i1l1751
  4240  000ABC                     i1u95_20:
  4241  000ABC                     i1l1755:
  4242  000ABC  5009               	movf	___aomod@divisor^0,w,c
  4243  000ABE  5C01               	subwf	___aomod@dividend^0,w,c
  4244  000AC0  500A               	movf	(___aomod@divisor+1)^0,w,c
  4245  000AC2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  4246  000AC4  500B               	movf	(___aomod@divisor+2)^0,w,c
  4247  000AC6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  4248  000AC8  500C               	movf	(___aomod@divisor+3)^0,w,c
  4249  000ACA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  4250  000ACC  500D               	movf	(___aomod@divisor+4)^0,w,c
  4251  000ACE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  4252  000AD0  500E               	movf	(___aomod@divisor+5)^0,w,c
  4253  000AD2  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  4254  000AD4  500F               	movf	(___aomod@divisor+6)^0,w,c
  4255  000AD6  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  4256  000AD8  5010               	movf	(___aomod@divisor+7)^0,w,c
  4257  000ADA  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  4258  000ADC  A0D8               	btfss	status,0,c
  4259  000ADE  EF73  F005         	goto	i1u96_21
  4260  000AE2  EF75  F005         	goto	i1u96_20
  4261  000AE6                     i1u96_21:
  4262  000AE6  EF85  F005         	goto	i1l1759
  4263  000AEA                     i1u96_20:
  4264  000AEA  5009               	movf	___aomod@divisor^0,w,c
  4265  000AEC  5E01               	subwf	___aomod@dividend^0,f,c
  4266  000AEE  500A               	movf	(___aomod@divisor+1)^0,w,c
  4267  000AF0  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  4268  000AF2  500B               	movf	(___aomod@divisor+2)^0,w,c
  4269  000AF4  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  4270  000AF6  500C               	movf	(___aomod@divisor+3)^0,w,c
  4271  000AF8  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  4272  000AFA  500D               	movf	(___aomod@divisor+4)^0,w,c
  4273  000AFC  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  4274  000AFE  500E               	movf	(___aomod@divisor+5)^0,w,c
  4275  000B00  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  4276  000B02  500F               	movf	(___aomod@divisor+6)^0,w,c
  4277  000B04  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  4278  000B06  5010               	movf	(___aomod@divisor+7)^0,w,c
  4279  000B08  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  4280  000B0A                     i1l1759:
  4281  000B0A  90D8               	bcf	status,0,c
  4282  000B0C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  4283  000B0E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  4284  000B10  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  4285  000B12  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  4286  000B14  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  4287  000B16  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  4288  000B18  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  4289  000B1A  3209               	rrcf	___aomod@divisor^0,f,c
  4290  000B1C  2E11               	decfsz	___aomod@counter^0,f,c
  4291  000B1E  EF5E  F005         	goto	i1l1755
  4292  000B22                     i1l1763:
  4293  000B22  5012               	movf	___aomod@sign^0,w,c
  4294  000B24  B4D8               	btfsc	status,2,c
  4295  000B26  EF97  F005         	goto	i1u97_21
  4296  000B2A  EF99  F005         	goto	i1u97_20
  4297  000B2E                     i1u97_21:
  4298  000B2E  EFA9  F005         	goto	i1l1767
  4299  000B32                     i1u97_20:
  4300  000B32  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4301  000B34  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4302  000B36  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4303  000B38  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4304  000B3A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4305  000B3C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4306  000B3E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4307  000B40  6C01               	negf	___aomod@dividend^0,c
  4308  000B42  0E00               	movlw	0
  4309  000B44  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4310  000B46  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4311  000B48  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4312  000B4A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4313  000B4C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4314  000B4E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4315  000B50  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4316  000B52                     i1l1767:
  4317  000B52  C001  F001         	movff	___aomod@dividend,?___aomod
  4318  000B56  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4319  000B5A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4320  000B5E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4321  000B62  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4322  000B66  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4323  000B6A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4324  000B6E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  4325  000B72  0012               	return		;funcret
  4326  000B74                     __end_of___aomod:
  4327                           	opt callstack 0
  4328                           
  4329 ;; *************** function ___aodiv *****************
  4330 ;; Defined at:
  4331 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  dividend        8    0[COMRAM] long long 
  4334 ;;  divisor         8    8[COMRAM] long long 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  quotient        8   18[COMRAM] long long 
  4337 ;;  sign            1   17[COMRAM] unsigned char 
  4338 ;;  counter         1   16[COMRAM] unsigned char 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  8    0[COMRAM] long long 
  4341 ;; Registers used:
  4342 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4348 ;;      Params:        16       0       0       0
  4349 ;;      Locals:        10       0       0       0
  4350 ;;      Temps:          0       0       0       0
  4351 ;;      Totals:        26       0       0       0
  4352 ;;Total ram usage:       26 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_dtoa
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text25
  4362  000888                     __ptext25:
  4363                           	opt callstack 0
  4364  000888                     ___aodiv:
  4365                           	opt callstack 22
  4366  000888  0E00               	movlw	0
  4367  00088A  6E12               	movwf	___aodiv@sign^0,c
  4368  00088C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  4369  00088E  EF4D  F004         	goto	i1u85_20
  4370  000892  EF4B  F004         	goto	i1u85_21
  4371  000896                     i1u85_21:
  4372  000896  EF5F  F004         	goto	i1l1699
  4373  00089A                     i1u85_20:
  4374  00089A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  4375  00089C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  4376  00089E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  4377  0008A0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  4378  0008A2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  4379  0008A4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  4380  0008A6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  4381  0008A8  6C09               	negf	___aodiv@divisor^0,c
  4382  0008AA  0E00               	movlw	0
  4383  0008AC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  4384  0008AE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  4385  0008B0  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  4386  0008B2  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  4387  0008B4  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  4388  0008B6  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  4389  0008B8  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  4390  0008BA  0E01               	movlw	1
  4391  0008BC  6E12               	movwf	___aodiv@sign^0,c
  4392  0008BE                     i1l1699:
  4393  0008BE  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  4394  0008C0  EF66  F004         	goto	i1u86_20
  4395  0008C4  EF64  F004         	goto	i1u86_21
  4396  0008C8                     i1u86_21:
  4397  0008C8  EF78  F004         	goto	i1l1705
  4398  0008CC                     i1u86_20:
  4399  0008CC  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  4400  0008CE  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  4401  0008D0  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  4402  0008D2  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  4403  0008D4  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  4404  0008D6  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  4405  0008D8  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  4406  0008DA  6C01               	negf	___aodiv@dividend^0,c
  4407  0008DC  0E00               	movlw	0
  4408  0008DE  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  4409  0008E0  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  4410  0008E2  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  4411  0008E4  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  4412  0008E6  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  4413  0008E8  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4414  0008EA  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4415  0008EC  0E01               	movlw	1
  4416  0008EE  1A12               	xorwf	___aodiv@sign^0,f,c
  4417  0008F0                     i1l1705:
  4418  0008F0  EE20  F013         	lfsr	2,___aodiv@quotient
  4419  0008F4  0E07               	movlw	7
  4420  0008F6                     i1u87_21:
  4421  0008F6  6ADE               	clrf	postinc2,c
  4422  0008F8  06E8               	decf	wreg,f,c
  4423  0008FA  E2FD               	bc	i1u87_21
  4424  0008FC  5009               	movf	___aodiv@divisor^0,w,c
  4425  0008FE  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4426  000900  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4427  000902  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4428  000904  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4429  000906  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4430  000908  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4431  00090A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4432  00090C  B4D8               	btfsc	status,2,c
  4433  00090E  EF8B  F004         	goto	i1u88_21
  4434  000912  EF8D  F004         	goto	i1u88_20
  4435  000916                     i1u88_21:
  4436  000916  EFDF  F004         	goto	i1l1727
  4437  00091A                     i1u88_20:
  4438  00091A  0E01               	movlw	1
  4439  00091C  6E11               	movwf	___aodiv@counter^0,c
  4440  00091E  EF9B  F004         	goto	i1l1713
  4441  000922                     i1l1711:
  4442  000922  90D8               	bcf	status,0,c
  4443  000924  3609               	rlcf	___aodiv@divisor^0,f,c
  4444  000926  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4445  000928  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4446  00092A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4447  00092C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4448  00092E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4449  000930  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4450  000932  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4451  000934  2A11               	incf	___aodiv@counter^0,f,c
  4452  000936                     i1l1713:
  4453  000936  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4454  000938  EFA0  F004         	goto	i1u89_21
  4455  00093C  EFA2  F004         	goto	i1u89_20
  4456  000940                     i1u89_21:
  4457  000940  EF91  F004         	goto	i1l1711
  4458  000944                     i1u89_20:
  4459  000944                     i1l1715:
  4460  000944  90D8               	bcf	status,0,c
  4461  000946  3613               	rlcf	___aodiv@quotient^0,f,c
  4462  000948  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4463  00094A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4464  00094C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4465  00094E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4466  000950  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4467  000952  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4468  000954  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4469  000956  5009               	movf	___aodiv@divisor^0,w,c
  4470  000958  5C01               	subwf	___aodiv@dividend^0,w,c
  4471  00095A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4472  00095C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4473  00095E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4474  000960  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4475  000962  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4476  000964  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4477  000966  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4478  000968  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4479  00096A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4480  00096C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4481  00096E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4482  000970  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4483  000972  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4484  000974  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4485  000976  A0D8               	btfss	status,0,c
  4486  000978  EFC0  F004         	goto	i1u90_21
  4487  00097C  EFC2  F004         	goto	i1u90_20
  4488  000980                     i1u90_21:
  4489  000980  EFD3  F004         	goto	i1l1723
  4490  000984                     i1u90_20:
  4491  000984  5009               	movf	___aodiv@divisor^0,w,c
  4492  000986  5E01               	subwf	___aodiv@dividend^0,f,c
  4493  000988  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4494  00098A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4495  00098C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4496  00098E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4497  000990  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4498  000992  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4499  000994  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4500  000996  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4501  000998  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4502  00099A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4503  00099C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4504  00099E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4505  0009A0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4506  0009A2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4507  0009A4  8013               	bsf	___aodiv@quotient^0,0,c
  4508  0009A6                     i1l1723:
  4509  0009A6  90D8               	bcf	status,0,c
  4510  0009A8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4511  0009AA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4512  0009AC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4513  0009AE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4514  0009B0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4515  0009B2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4516  0009B4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4517  0009B6  3209               	rrcf	___aodiv@divisor^0,f,c
  4518  0009B8  2E11               	decfsz	___aodiv@counter^0,f,c
  4519  0009BA  EFA2  F004         	goto	i1l1715
  4520  0009BE                     i1l1727:
  4521  0009BE  5012               	movf	___aodiv@sign^0,w,c
  4522  0009C0  B4D8               	btfsc	status,2,c
  4523  0009C2  EFE5  F004         	goto	i1u91_21
  4524  0009C6  EFE7  F004         	goto	i1u91_20
  4525  0009CA                     i1u91_21:
  4526  0009CA  EFF7  F004         	goto	i1l1731
  4527  0009CE                     i1u91_20:
  4528  0009CE  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4529  0009D0  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4530  0009D2  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4531  0009D4  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4532  0009D6  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4533  0009D8  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4534  0009DA  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4535  0009DC  6C13               	negf	___aodiv@quotient^0,c
  4536  0009DE  0E00               	movlw	0
  4537  0009E0  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4538  0009E2  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4539  0009E4  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4540  0009E6  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4541  0009E8  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4542  0009EA  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4543  0009EC  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4544  0009EE                     i1l1731:
  4545  0009EE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4546  0009F2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4547  0009F6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4548  0009FA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4549  0009FE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4550  000A02  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4551  000A06  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4552  000A0A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4553  000A0E  0012               	return		;funcret
  4554  000A10                     __end_of___aodiv:
  4555                           	opt callstack 0
  4556                           
  4557 ;; *************** function ___lwmod *****************
  4558 ;; Defined at:
  4559 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  dividend        2    0[COMRAM] unsigned int 
  4562 ;;  divisor         2    2[COMRAM] unsigned int 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  counter         1    4[COMRAM] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  2    0[COMRAM] unsigned int 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4574 ;;      Params:         4       0       0       0
  4575 ;;      Locals:         1       0       0       0
  4576 ;;      Temps:          0       0       0       0
  4577 ;;      Totals:         5       0       0       0
  4578 ;;Total ram usage:        5 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; This function calls:
  4581 ;;		Nothing
  4582 ;; This function is called by:
  4583 ;;		_tcInt
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           	psect	text26
  4588  000EA0                     __ptext26:
  4589                           	opt callstack 0
  4590  000EA0                     ___lwmod:
  4591                           	opt callstack 26
  4592  000EA0  5003               	movf	___lwmod@divisor^0,w,c
  4593  000EA2  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  4594  000EA4  B4D8               	btfsc	status,2,c
  4595  000EA6  EF57  F007         	goto	i1u124_21
  4596  000EAA  EF59  F007         	goto	i1u124_20
  4597  000EAE                     i1u124_21:
  4598  000EAE  EF7D  F007         	goto	i1l808
  4599  000EB2                     i1u124_20:
  4600  000EB2  0E01               	movlw	1
  4601  000EB4  6E05               	movwf	___lwmod@counter^0,c
  4602  000EB6  EF61  F007         	goto	i1l2063
  4603  000EBA                     i1l2061:
  4604  000EBA  90D8               	bcf	status,0,c
  4605  000EBC  3603               	rlcf	___lwmod@divisor^0,f,c
  4606  000EBE  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  4607  000EC0  2A05               	incf	___lwmod@counter^0,f,c
  4608  000EC2                     i1l2063:
  4609  000EC2  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  4610  000EC4  EF66  F007         	goto	i1u125_21
  4611  000EC8  EF68  F007         	goto	i1u125_20
  4612  000ECC                     i1u125_21:
  4613  000ECC  EF5D  F007         	goto	i1l2061
  4614  000ED0                     i1u125_20:
  4615  000ED0                     i1l2065:
  4616  000ED0  5003               	movf	___lwmod@divisor^0,w,c
  4617  000ED2  5C01               	subwf	___lwmod@dividend^0,w,c
  4618  000ED4  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4619  000ED6  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  4620  000ED8  A0D8               	btfss	status,0,c
  4621  000EDA  EF71  F007         	goto	i1u126_21
  4622  000EDE  EF73  F007         	goto	i1u126_20
  4623  000EE2                     i1u126_21:
  4624  000EE2  EF77  F007         	goto	i1l2069
  4625  000EE6                     i1u126_20:
  4626  000EE6  5003               	movf	___lwmod@divisor^0,w,c
  4627  000EE8  5E01               	subwf	___lwmod@dividend^0,f,c
  4628  000EEA  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4629  000EEC  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  4630  000EEE                     i1l2069:
  4631  000EEE  90D8               	bcf	status,0,c
  4632  000EF0  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  4633  000EF2  3203               	rrcf	___lwmod@divisor^0,f,c
  4634  000EF4  2E05               	decfsz	___lwmod@counter^0,f,c
  4635  000EF6  EF68  F007         	goto	i1l2065
  4636  000EFA                     i1l808:
  4637  000EFA  C001  F001         	movff	___lwmod@dividend,?___lwmod
  4638  000EFE  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  4639  000F02  0012               	return		;funcret
  4640  000F04                     __end_of___lwmod:
  4641                           	opt callstack 0
  4642                           
  4643 ;; *************** function ___lwdiv *****************
  4644 ;; Defined at:
  4645 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  dividend        2    0[COMRAM] unsigned int 
  4648 ;;  divisor         2    2[COMRAM] unsigned int 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  quotient        2    4[COMRAM] unsigned int 
  4651 ;;  counter         1    6[COMRAM] unsigned char 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  2    0[COMRAM] unsigned int 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4661 ;;      Params:         4       0       0       0
  4662 ;;      Locals:         3       0       0       0
  4663 ;;      Temps:          0       0       0       0
  4664 ;;      Totals:         7       0       0       0
  4665 ;;Total ram usage:        7 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_tcInt
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text27
  4675  000E2C                     __ptext27:
  4676                           	opt callstack 0
  4677  000E2C                     ___lwdiv:
  4678                           	opt callstack 26
  4679  000E2C  0E00               	movlw	0
  4680  000E2E  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  4681  000E30  0E00               	movlw	0
  4682  000E32  6E05               	movwf	___lwdiv@quotient^0,c
  4683  000E34  5003               	movf	___lwdiv@divisor^0,w,c
  4684  000E36  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4685  000E38  B4D8               	btfsc	status,2,c
  4686  000E3A  EF21  F007         	goto	i1u121_21
  4687  000E3E  EF23  F007         	goto	i1u121_20
  4688  000E42                     i1u121_21:
  4689  000E42  EF4B  F007         	goto	i1l798
  4690  000E46                     i1u121_20:
  4691  000E46  0E01               	movlw	1
  4692  000E48  6E07               	movwf	___lwdiv@counter^0,c
  4693  000E4A  EF2B  F007         	goto	i1l2043
  4694  000E4E                     i1l2041:
  4695  000E4E  90D8               	bcf	status,0,c
  4696  000E50  3603               	rlcf	___lwdiv@divisor^0,f,c
  4697  000E52  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4698  000E54  2A07               	incf	___lwdiv@counter^0,f,c
  4699  000E56                     i1l2043:
  4700  000E56  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4701  000E58  EF30  F007         	goto	i1u122_21
  4702  000E5C  EF32  F007         	goto	i1u122_20
  4703  000E60                     i1u122_21:
  4704  000E60  EF27  F007         	goto	i1l2041
  4705  000E64                     i1u122_20:
  4706  000E64                     i1l2045:
  4707  000E64  90D8               	bcf	status,0,c
  4708  000E66  3605               	rlcf	___lwdiv@quotient^0,f,c
  4709  000E68  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4710  000E6A  5003               	movf	___lwdiv@divisor^0,w,c
  4711  000E6C  5C01               	subwf	___lwdiv@dividend^0,w,c
  4712  000E6E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4713  000E70  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4714  000E72  A0D8               	btfss	status,0,c
  4715  000E74  EF3E  F007         	goto	i1u123_21
  4716  000E78  EF40  F007         	goto	i1u123_20
  4717  000E7C                     i1u123_21:
  4718  000E7C  EF45  F007         	goto	i1l2053
  4719  000E80                     i1u123_20:
  4720  000E80  5003               	movf	___lwdiv@divisor^0,w,c
  4721  000E82  5E01               	subwf	___lwdiv@dividend^0,f,c
  4722  000E84  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4723  000E86  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4724  000E88  8005               	bsf	___lwdiv@quotient^0,0,c
  4725  000E8A                     i1l2053:
  4726  000E8A  90D8               	bcf	status,0,c
  4727  000E8C  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4728  000E8E  3203               	rrcf	___lwdiv@divisor^0,f,c
  4729  000E90  2E07               	decfsz	___lwdiv@counter^0,f,c
  4730  000E92  EF32  F007         	goto	i1l2045
  4731  000E96                     i1l798:
  4732  000E96  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4733  000E9A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4734  000E9E  0012               	return		;funcret
  4735  000EA0                     __end_of___lwdiv:
  4736                           	opt callstack 0
  4737                           
  4738 ;; *************** function _LCDPutStr *****************
  4739 ;; Defined at:
  4740 ;;		line 147 in file "lcd.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  str             2    5[COMRAM] PTR const unsigned char 
  4743 ;;		 -> tcInt@str1(16), 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  i               1    7[COMRAM] unsigned char 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4755 ;;      Params:         2       0       0       0
  4756 ;;      Locals:         1       0       0       0
  4757 ;;      Temps:          0       0       0       0
  4758 ;;      Totals:         3       0       0       0
  4759 ;;Total ram usage:        3 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    2
  4762 ;; This function calls:
  4763 ;;		i1_LCDPutChar
  4764 ;; This function is called by:
  4765 ;;		_tcInt
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text28
  4770  0011A2                     __ptext28:
  4771                           	opt callstack 0
  4772  0011A2                     _LCDPutStr:
  4773                           	opt callstack 24
  4774  0011A2                     
  4775                           ;lcd.c: 148:     uint8_t i = 0;
  4776  0011A2  0E00               	movlw	0
  4777  0011A4  6E08               	movwf	LCDPutStr@i^0,c
  4778                           
  4779                           ;lcd.c: 151:     while (str[i]) {
  4780  0011A6  EFDF  F008         	goto	i1l2033
  4781  0011AA                     i1l2029:
  4782                           
  4783                           ;lcd.c: 153:         LCDPutChar(str[i++]);
  4784  0011AA  5008               	movf	LCDPutStr@i^0,w,c
  4785  0011AC  2406               	addwf	LCDPutStr@str^0,w,c
  4786  0011AE  6ED9               	movwf	fsr2l,c
  4787  0011B0  0E00               	movlw	0
  4788  0011B2  2007               	addwfc	(LCDPutStr@str+1)^0,w,c
  4789  0011B4  6EDA               	movwf	fsr2h,c
  4790  0011B6  50DF               	movf	indf2,w,c
  4791  0011B8  EC3F  F009         	call	i1_LCDPutChar
  4792  0011BC  2A08               	incf	LCDPutStr@i^0,f,c
  4793  0011BE                     i1l2033:
  4794                           
  4795                           ;lcd.c: 151:     while (str[i]) {
  4796  0011BE  5008               	movf	LCDPutStr@i^0,w,c
  4797  0011C0  2406               	addwf	LCDPutStr@str^0,w,c
  4798  0011C2  6ED9               	movwf	fsr2l,c
  4799  0011C4  0E00               	movlw	0
  4800  0011C6  2007               	addwfc	(LCDPutStr@str+1)^0,w,c
  4801  0011C8  6EDA               	movwf	fsr2h,c
  4802  0011CA  50DF               	movf	indf2,w,c
  4803  0011CC  A4D8               	btfss	status,2,c
  4804  0011CE  EFEB  F008         	goto	i1u120_21
  4805  0011D2  EFED  F008         	goto	i1u120_20
  4806  0011D6                     i1u120_21:
  4807  0011D6  EFD5  F008         	goto	i1l2029
  4808  0011DA                     i1u120_20:
  4809  0011DA  0012               	return		;funcret
  4810  0011DC                     __end_of_LCDPutStr:
  4811                           	opt callstack 0
  4812                           
  4813 ;; *************** function i1_LCDPutChar *****************
  4814 ;; Defined at:
  4815 ;;		line 119 in file "lcd.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  ch              1    wreg     unsigned char 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  ch              1    4[COMRAM] unsigned char 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      void 
  4822 ;; Registers used:
  4823 ;;		wreg, status,2, status,0, cstack
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4829 ;;      Params:         0       0       0       0
  4830 ;;      Locals:         1       0       0       0
  4831 ;;      Temps:          1       0       0       0
  4832 ;;      Totals:         2       0       0       0
  4833 ;;Total ram usage:        2 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:    1
  4836 ;; This function calls:
  4837 ;;		i1_LCDWriteNibble
  4838 ;; This function is called by:
  4839 ;;		_tcInt
  4840 ;;		_LCDPutStr
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text29
  4845  00127E                     __ptext29:
  4846                           	opt callstack 0
  4847  00127E                     i1_LCDPutChar:
  4848                           	opt callstack 25
  4849                           
  4850                           ;incstack = 0
  4851                           ;i1LCDPutChar@ch stored from wreg
  4852  00127E  6E05               	movwf	i1LCDPutChar@ch^0,c
  4853  001280                     
  4854                           ;lcd.c: 120:     _delay((unsigned long)((5)*(40000000/4000.0)));
  4855  001280  0E41               	movlw	65
  4856  001282  6E04               	movwf	??i1_LCDPutChar^0,c
  4857  001284  0EEE               	movlw	238
  4858  001286                     i1u158_27:
  4859  001286  2EE8               	decfsz	wreg,f,c
  4860  001288  D7FE               	bra	i1u158_27
  4861  00128A  2E04               	decfsz	??i1_LCDPutChar^0,f,c
  4862  00128C  D7FC               	bra	i1u158_27
  4863  00128E  F000 F000          	nop2	
  4864  001292                     
  4865                           ;lcd.c: 123:     LCDWriteNibble(ch, 1);
  4866  001292  0E01               	movlw	1
  4867  001294  6E01               	movwf	i1LCDWriteNibble@rs^0,c
  4868  001296  5005               	movf	i1LCDPutChar@ch^0,w,c
  4869  001298  ECCD  F006         	call	i1_LCDWriteNibble
  4870  00129C                     
  4871                           ;lcd.c: 126:     ch = (ch << 4);
  4872  00129C  3805               	swapf	i1LCDPutChar@ch^0,w,c
  4873  00129E  0BF0               	andlw	240
  4874  0012A0  6E05               	movwf	i1LCDPutChar@ch^0,c
  4875  0012A2                     
  4876                           ;lcd.c: 129:     LCDWriteNibble(ch, 1);
  4877  0012A2  0E01               	movlw	1
  4878  0012A4  6E01               	movwf	i1LCDWriteNibble@rs^0,c
  4879  0012A6  5005               	movf	i1LCDPutChar@ch^0,w,c
  4880  0012A8  ECCD  F006         	call	i1_LCDWriteNibble
  4881  0012AC  0012               	return		;funcret
  4882  0012AE                     __end_ofi1_LCDPutChar:
  4883                           	opt callstack 0
  4884                           
  4885 ;; *************** function i1_LCDWriteNibble *****************
  4886 ;; Defined at:
  4887 ;;		line 89 in file "lcd.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  ch              1    wreg     unsigned char 
  4890 ;;  rs              1    0[COMRAM] unsigned char 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  ch              1    2[COMRAM] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4902 ;;      Params:         1       0       0       0
  4903 ;;      Locals:         1       0       0       0
  4904 ;;      Temps:          1       0       0       0
  4905 ;;      Totals:         3       0       0       0
  4906 ;;Total ram usage:        3 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		i1_LCDPutChar
  4912 ;;		i1_LCDPutCmd
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text30
  4917  000D9A                     __ptext30:
  4918                           	opt callstack 0
  4919  000D9A                     i1_LCDWriteNibble:
  4920                           	opt callstack 25
  4921                           
  4922                           ;incstack = 0
  4923                           ;i1LCDWriteNibble@ch stored from wreg
  4924  000D9A  6E03               	movwf	i1LCDWriteNibble@ch^0,c
  4925  000D9C                     
  4926                           ;lcd.c: 91:     ch = (ch >> 4);
  4927  000D9C  3803               	swapf	i1LCDWriteNibble@ch^0,w,c
  4928  000D9E  0B0F               	andlw	15
  4929  000DA0  6E03               	movwf	i1LCDWriteNibble@ch^0,c
  4930                           
  4931                           ;lcd.c: 94:     ch = (ch & 0x0F);
  4932  000DA2  5003               	movf	i1LCDWriteNibble@ch^0,w,c
  4933  000DA4  0B0F               	andlw	15
  4934  000DA6  6E03               	movwf	i1LCDWriteNibble@ch^0,c
  4935                           
  4936                           ;lcd.c: 95:     PORTCbits.RC2 = ch & 0xF1;
  4937  000DA8  C003  F002         	movff	i1LCDWriteNibble@ch,??i1_LCDWriteNibble
  4938  000DAC  0EF1               	movlw	241
  4939  000DAE  1602               	andwf	??i1_LCDWriteNibble^0,f,c
  4940  000DB0  4602               	rlncf	??i1_LCDWriteNibble^0,f,c
  4941  000DB2  4602               	rlncf	??i1_LCDWriteNibble^0,f,c
  4942  000DB4  5082               	movf	130,w,c	;volatile
  4943  000DB6  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4944  000DB8  0BFB               	andlw	-5
  4945  000DBA  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4946  000DBC  6E82               	movwf	130,c	;volatile
  4947                           
  4948                           ;lcd.c: 96:     PORTCbits.RC3 = (ch & 0xF2) >> 1;
  4949  000DBE  C003  F002         	movff	i1LCDWriteNibble@ch,??i1_LCDWriteNibble
  4950  000DC2  90D8               	bcf	status,0,c
  4951  000DC4  3202               	rrcf	??i1_LCDWriteNibble^0,f,c
  4952  000DC6  0E79               	movlw	121
  4953  000DC8  1602               	andwf	??i1_LCDWriteNibble^0,f,c
  4954  000DCA  4602               	rlncf	??i1_LCDWriteNibble^0,f,c
  4955  000DCC  4602               	rlncf	??i1_LCDWriteNibble^0,f,c
  4956  000DCE  4602               	rlncf	??i1_LCDWriteNibble^0,f,c
  4957  000DD0  5082               	movf	130,w,c	;volatile
  4958  000DD2  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4959  000DD4  0BF7               	andlw	-9
  4960  000DD6  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4961  000DD8  6E82               	movwf	130,c	;volatile
  4962                           
  4963                           ;lcd.c: 97:     PORTDbits.RD0 = (ch & 0xF4) >> 2;
  4964  000DDA  C003  F002         	movff	i1LCDWriteNibble@ch,??i1_LCDWriteNibble
  4965  000DDE  90D8               	bcf	status,0,c
  4966  000DE0  3202               	rrcf	??i1_LCDWriteNibble^0,f,c
  4967  000DE2  90D8               	bcf	status,0,c
  4968  000DE4  3202               	rrcf	??i1_LCDWriteNibble^0,f,c
  4969  000DE6  0E3D               	movlw	61
  4970  000DE8  1602               	andwf	??i1_LCDWriteNibble^0,f,c
  4971  000DEA  5083               	movf	131,w,c	;volatile
  4972  000DEC  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4973  000DEE  0BFE               	andlw	-2
  4974  000DF0  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4975  000DF2  6E83               	movwf	131,c	;volatile
  4976                           
  4977                           ;lcd.c: 98:     PORTDbits.RD1 = (ch & 0xF8) >> 3;
  4978  000DF4  C003  F002         	movff	i1LCDWriteNibble@ch,??i1_LCDWriteNibble
  4979  000DF8  90D8               	bcf	status,0,c
  4980  000DFA  3202               	rrcf	??i1_LCDWriteNibble^0,f,c
  4981  000DFC  90D8               	bcf	status,0,c
  4982  000DFE  3202               	rrcf	??i1_LCDWriteNibble^0,f,c
  4983  000E00  90D8               	bcf	status,0,c
  4984  000E02  3202               	rrcf	??i1_LCDWriteNibble^0,f,c
  4985  000E04  0E1F               	movlw	31
  4986  000E06  1602               	andwf	??i1_LCDWriteNibble^0,f,c
  4987  000E08  4602               	rlncf	??i1_LCDWriteNibble^0,f,c
  4988  000E0A  5083               	movf	131,w,c	;volatile
  4989  000E0C  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4990  000E0E  0BFD               	andlw	-3
  4991  000E10  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4992  000E12  6E83               	movwf	131,c	;volatile
  4993  000E14                     
  4994                           ;lcd.c: 107:     PORTCbits.RC0 = rs;
  4995  000E14  B001               	btfsc	i1LCDWriteNibble@rs^0,0,c
  4996  000E16  D002               	bra	i1u118_25
  4997  000E18  9082               	bcf	130,0,c	;volatile
  4998  000E1A  D001               	bra	i1u118_26
  4999  000E1C                     i1u118_25:
  5000  000E1C  8082               	bsf	130,0,c	;volatile
  5001  000E1E                     i1u118_26:
  5002  000E1E                     
  5003                           ;lcd.c: 113:     PORTCbits.RC1 = 1;
  5004  000E1E  8282               	bsf	130,1,c	;volatile
  5005  000E20                     
  5006                           ;lcd.c: 114:     _delay((unsigned long)((1)*(40000000/4000000.0)));
  5007  000E20  0E03               	movlw	3
  5008  000E22                     i1u159_27:
  5009  000E22  2EE8               	decfsz	wreg,f,c
  5010  000E24  D7FE               	bra	i1u159_27
  5011  000E26  F000               	nop	
  5012  000E28                     
  5013                           ;lcd.c: 116:     PORTCbits.RC1 = 0;
  5014  000E28  9282               	bcf	130,1,c	;volatile
  5015  000E2A  0012               	return		;funcret
  5016  000E2C                     __end_ofi1_LCDWriteNibble:
  5017                           	opt callstack 0
  5018                           
  5019                           	psect	rparam
  5020  0000                     
  5021                           	psect	temp
  5022  00005F                     btemp:
  5023                           	opt callstack 0
  5024  00005F                     	ds	1
  5025  0000                     int$flags	set	btemp
  5026  0000                     wtemp8	set	btemp+1
  5027  0000                     ttemp5	set	btemp+1
  5028  0000                     ttemp6	set	btemp+4
  5029  0000                     ttemp7	set	btemp+8
  5030                           tosu	equ	0xFFF
  5031                           tosh	equ	0xFFE
  5032                           tosl	equ	0xFFD
  5033                           stkptr	equ	0xFFC
  5034                           pclatu	equ	0xFFB
  5035                           pclath	equ	0xFFA
  5036                           pcl	equ	0xFF9
  5037                           tblptru	equ	0xFF8
  5038                           tblptrh	equ	0xFF7
  5039                           tblptrl	equ	0xFF6
  5040                           tablat	equ	0xFF5
  5041                           prodh	equ	0xFF4
  5042                           prodl	equ	0xFF3
  5043                           indf0	equ	0xFEF
  5044                           postinc0	equ	0xFEE
  5045                           postdec0	equ	0xFED
  5046                           preinc0	equ	0xFEC
  5047                           plusw0	equ	0xFEB
  5048                           fsr0h	equ	0xFEA
  5049                           fsr0l	equ	0xFE9
  5050                           wreg	equ	0xFE8
  5051                           indf1	equ	0xFE7
  5052                           postinc1	equ	0xFE6
  5053                           postdec1	equ	0xFE5
  5054                           preinc1	equ	0xFE4
  5055                           plusw1	equ	0xFE3
  5056                           fsr1h	equ	0xFE2
  5057                           fsr1l	equ	0xFE1
  5058                           bsr	equ	0xFE0
  5059                           indf2	equ	0xFDF
  5060                           postinc2	equ	0xFDE
  5061                           postdec2	equ	0xFDD
  5062                           preinc2	equ	0xFDC
  5063                           plusw2	equ	0xFDB
  5064                           fsr2h	equ	0xFDA
  5065                           fsr2l	equ	0xFD9
  5066                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    722
    Data        14
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     63     126
    BANK1           256      7       7
    BANK2           244      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> tcInt@str1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> tcInt@str1(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1808_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> tcInt@str1(BANK0[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> tcInt@str1(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 16
		 -> tcInt@str1(BANK0[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _tcInt in COMRAM

    _tcInt->_sprintf
    i1_LCDPutCmd->i1_LCDWriteNibble
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCDPutStr->i1_LCDPutChar
    i1_LCDPutChar->i1_LCDWriteNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _tcInt in BANK0

    _tcInt->_sprintf

Critical Paths under _main in BANK1

    _main->_LCD_Initialize
    _LCD_Initialize->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble
    _LCDPutChar->_LCDWriteNibble

Critical Paths under _tcInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tcInt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1358
                         _LCDPutChar
                     _LCD_Initialize
                       _configureADC
                _configureInterrupts
                       _configurePWM
                    _configureTimer0
                    _configureTimer1
                    _configureTimer5
                           _startPWM
 ---------------------------------------------------------------------------------
 (1) _startPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer5                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer1                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurePWM                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       2     2      0     679
                                              5 BANK1      2     2      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            2     2      0     679
                                              3 BANK1      2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDPutChar                                           2     2      0     679
                                              3 BANK1      2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       3     2      1     583
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tcInt                                               53    53      0    8728
                                             10 BANK0     53    53      0
                          _LCDPutStr
                            ___lwdiv
                            ___lwmod
                            _sprintf
                       i1_LCDPutChar
                        i1_LCDPutCmd
 ---------------------------------------------------------------------------------
 (5) i1_LCDPutCmd                                          2     2      0     327
                                              3 COMRAM     2     2      0
                   i1_LCDWriteNibble
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             16    10      6    6456
                                             87 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (6) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (7) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (9) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (10) _strlen                                              4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _fputs                                               7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (9) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (9) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _LCDPutStr                                            3     1      2     493
                                              5 COMRAM     3     1      2
                       i1_LCDPutChar
 ---------------------------------------------------------------------------------
 (5) i1_LCDPutChar                                         2     2      0     327
                                              3 COMRAM     2     2      0
                   i1_LCDWriteNibble
 ---------------------------------------------------------------------------------
 (6) i1_LCDWriteNibble                                     3     2      1     260
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDPutChar
     _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
       _LCDWriteNibble
   _configureADC
   _configureInterrupts
   _configurePWM
   _configureTimer0
   _configureTimer1
   _configureTimer5
   _startPWM

 _tcInt (ROOT)
   _LCDPutStr
     i1_LCDPutChar
       i1_LCDWriteNibble
   ___lwdiv
   ___lwmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   i1_LCDPutChar
     i1_LCDWriteNibble
   i1_LCDPutCmd
     i1_LCDWriteNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F3      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      7       7       7        2.7%
BITBANK2            F4      0       0       8        0.0%
BANK2               F4      0       0       9        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     3F      7E       4       78.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E3       5        0.0%
DATA                 0      0      E3      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jan 04 02:20:30 2020

               ?_configureADC 0001                 ?_configurePWM 0001                _LCD_Initialize 0F66  
                 ?_LCDPutChar 0001                            _d1 005E                            bsr 000FE0  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l210 0D98                           l140 12F0  
                         l213 1246                           l125 1162                           l134 132C  
                         l207 0FB6                           l143 1318                           l151 120A  
                         l216 10A0                           l128 1330                           l152 120A  
                         l137 12D4                           l146 1304                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                           _abs 10E6                           _pad 0C3E  
                         wreg 000FE8                  __CFG_LVP$OFF 000000                          ?_abs 0013  
                        l2301 12BC                          l2311 12C6                          l2303 12BE  
                        l2241 0D08                          l2321 12D0                          l2313 12C8  
                        l2305 12C0                          l2243 0D82                          l2251 105A  
                        l2323 12D2                          l2315 12CA                          l2307 12C2  
                        l2331 12F2                          l2245 0D8C                          l2253 106C  
                        l2341 0FA4                          l2333 0F66                          l2317 12CC  
                        l2309 12C4                          l2261 1126                          l2325 12D6  
                        l2247 0D8E                          l2351 1234                          l2255 1078  
                        l2343 0FAA                          l2335 0F7E                          l2319 12CE  
                        l2271 113A                          l2263 1132                          l2327 1306  
                        l2249 0D96                          l2353 123C                          l2257 1080  
                        l2345 0FB0                          l2337 0F98                          l2281 1144  
                        l2273 113C                          l2265 1134                          l2329 1310  
                        l2361 11E8                          l2347 1216                          l2259 1094  
                        l2339 0F9E                          l2283 1146                          l2275 113E  
                        l2267 1136                          l2291 132E                          l2371 11FC  
                        l2363 11EC                          l2355 11DC                          l2349 1228  
                        l2293 1328                          l2285 1148                          l2277 1140  
                        l2269 1138                          l2373 11FE                          l2365 11F0  
                        l2357 11E0                          l2295 12AE                          l2287 115A  
                        l2279 1142                          l2375 1200                          l2367 11F4  
                        l2359 11E4                          l2297 12B6                          l2289 115C  
                        l2377 1202                          l2369 11F8                          l2299 12BA  
                        l2379 1204                          ?_pad 0011                          STR_1 3DBB  
                        _LATB 000F8A                          u1517 0F8A                          u1527 1062  
                        u1537 1088                          u1475 0D8A                          u1547 121E  
                        u1476 0D8C                          u1557 0D90                          _TMR0 000FD6  
                        _TMR1 000FCE                          _TMR5 000F87                 __CFG_FCMEN$ON 000000  
            ?_configureTimer0 0001              ?_configureTimer1 0001              ?_configureTimer5 0001  
                        abs@a 0013                          _dbuf 00B1                          _main 11DC  
                        _dtoa 03F2                          _prec 00A7                          _nout 00A3  
                        pad@i 0018                          pad@p 0015                          fsr1h 000FE2  
                        fsr2h 000FDA                          indf2 000FDF                          fsr1l 000FE1  
                        pad@w 001A                          fsr2l 000FD9                          btemp 005F  
               __CFG_BOREN$ON 000000            __size_of_LCDPutCmd 004C                          prodh 000FF4  
                        prodl 000FF3                          start 03EE            __size_of_LCDPutStr 003A  
               __CFG_IESO$OFF 000000        __end_of_LCD_Initialize 0FB8                ??_configureADC 0100  
               __CFG_MCLRE$ON 000000                ??_configurePWM 0100                 __CFG_HPOL$LOW 000000  
                ___param_bank 000000             _timer0ReloadValue 00D3                         ??_abs 0015  
               __CFG_LPOL$LOW 000000                         ??_pad 0017                   LCDPutCmd@ch 0104  
             __end_of___aodiv 0A10                         ?_main 0001                         ?_dtoa 001C  
             __end_of___aomod 0B74                         _PDC0H 000F78                         _PDC1H 000F76  
                ?i1_LCDPutCmd 0001                         _PDC0L 000F79                         _PDC2H 000F74  
                       _PDC1L 000F77                         _PDC2L 000F75               __end_of___lwdiv 0EA0  
                       i1l210 0E2A                         i1l213 12AC                         i1l222 11DA  
                       i1l303 0F5C                         i1l304 0F64                         i1l216 11A0  
                       i1l180 03B6                         i1l421 0A0E                         i1l165 032E  
                       i1l262 0CC6                         i1l270 0492                         i1l167 031E  
                       i1l264 0D02                         i1l272 049A               __end_of___lwmod 0F04  
                       i1l434 0B72                         i1l290 06D2                         i1l259 0C84  
                       i1l297 0886                         i1l805 0E9E                         i1l815 0F02  
                       i1l808 0EFA                         i1l798 0E96                         i1l982 111C  
                       i1l985 1124                         i1l997 0C3C                  vfpfcnvrt@fmt 0042  
                       _PORTB 000F81                         _TRISB 000F93                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _flags 00A9  
                       _tcInt 0018                         _fputc 0B74                         _fputs 10A2  
                       pad@fp 0011                         _width 00A5                         _putch 1332  
                       dtoa@d 001E                         dtoa@i 003E                         dtoa@n 0036  
                       dtoa@p 0030                         dtoa@s 0034                         dtoa@w 0032  
                       tablat 000FF5           __size_of_LCDPutChar 0036                         ttemp5 0060  
                       ttemp6 0063                         ttemp7 0067                         status 000FD8  
                       wtemp8 0060               __end_of_sprintf 100A               ?_LCD_Initialize 0001  
             __initialization 100A                  __end_of_main 1212                  __end_of_dtoa 06D4  
 __end_of_configureInterrupts 132E                __CFG_OSC$HSPLL 000000                        ??_main 0107  
                      ??_dtoa 0026                 __activetblptr 000002             __end_of_LCDPutCmd 10A2  
                LCDPutChar@ch 0104             __end_of_LCDPutStr 11DC                        _ADCON1 000FC1  
                      ?_tcInt 0001                        ?_fputc 0001                        ?_fputs 000A  
                      _ADRESH 000FC4                        ?_putch 0001                 ?i1_LCDPutChar 0001  
                      i1l1012 1008                        i1l1005 10E4                        i1l1021 127C  
                      i1l1015 1332                        i1l2021 0FDA                        i1l2031 11BC  
                      i1l2023 0FF6                        i1l2015 0FB8                        i1l2111 005C  
                      i1l2033 11BE                        i1l2041 0E4E                        i1l2017 0FCA  
                      i1l2113 005E                        i1l2121 009E                        i1l2027 11A2  
                      i1l2051 0E88                        i1l2043 0E56                        i1l2035 0E2C  
                      i1l2019 0FD2                        i1l2211 0346                        i1l2203 02E2  
                      i1l2131 00D4                        i1l2123 00AC                        i1l2115 0072  
                  _PrevADRESH 00D9                        i1l2029 11AA                        i1l2053 0E8A  
                      i1l2045 0E64                        i1l2037 0E34                        i1l2061 0EBA  
                      i1l2221 0396                        i1l2213 035A                        i1l2205 0308  
                      i1l2141 011A                        i1l2133 00D8                        i1l2125 00AE  
                      i1l2117 0098                        i1l2109 004E                        i1l2055 0E90  
                      i1l2047 0E6A                        i1l2039 0E46                        i1l2071 0EF4  
                      i1l2063 0EC2                        i1l2223 0398                        i1l2215 035E  
                      i1l2207 0310                        i1l2151 019E                        i1l2143 0130  
                      i1l2135 00E8                        i1l2127 00C0                        i1l2119 009C  
                      i1l2049 0E80                        i1l2065 0ED0                        i1l2057 0EA0  
                      i1l2081 1196                        i1l2073 1166                        i1l2217 037A  
                      i1l2225 03B4                        i1l2209 033C                        i1l2161 01C4  
                      i1l2153 01A2                        i1l2145 015A                        i1l2137 00EC  
                      i1l2129 00C4                        i1l2067 0EE6                        i1l2059 0EB2  
                      i1l2075 1178                        i1l2219 0380                        i1l2171 01E2  
                      i1l2155 01B8                        i1l2147 015E                        i1l2139 0116  
                      i1l2163 01C6                        i1l2069 0EEE                        i1l1701 08CC  
                      i1l2077 1182                        i1l2181 022E                        i1l2173 01F4  
                      i1l2165 01D4                        i1l2157 01C0                        i1l2149 0174  
                      i1l1711 0922                        i1l1703 08EC                        i1l2079 1188  
                      i1l2191 026E                        i1l2183 024A                        i1l2175 01F8  
                      i1l2167 01D6                        i1l2159 01C2                        i1l1721 09A4  
                      i1l1713 0936                        i1l1705 08F0                        i1l1641 0BC0  
                      i1l1633 0B74                        i1l1801 0566                        i1l2193 0292  
                      i1l2185 0256                        i1l2177 0210                        i1l2169 01DE  
                      i1l1731 09EE                        i1l1723 09A6                        i1l1715 0944  
                      i1l1707 08FC                        i1l1643 0BF6                        i1l1635 0B86  
                      i1l1651 10C0                        i1l1811 0622                        i1l1803 056C  
                      i1l2195 02AE                        i1l2187 025C                        i1l2179 0228  
                      i1l1725 09B8                        i1l1717 0956                        i1l1709 091A  
                      i1l1741 0A42                        i1l1637 0B98                        i1l1653 10C4  
                      i1l1661 1270                        i1l1821 0674                        i1l1813 063C  
                      i1l1805 05D0                        i1l2197 02B2                        i1l2189 0264  
                      i1l1719 0984                        i1l1727 09BE                        i1l1751 0A9A  
                      i1l1743 0A46                        i1l1735 0A10                        i1l1639 0BA2  
                      i1l1647 10A2                        i1l1655 1248                        i1l1671 0C70  
                      i1l1823 0686                        i1l1807 05EA                        i1l1815 064C  
                      i1l1911 0F40                        i1l2199 02C4                        i1l1913 1280  
                      i1l1729 09CE                        i1l1761 0B1C                        i1l1753 0AAE  
                      i1l1745 0A54                        i1l1737 0A14                        i1l1649 10AE  
                      i1l1657 1254                        i1l1681 0CD6                        i1l1673 0C7C  
                      i1l1665 0C3E                        i1l1825 0692                        i1l1817 065E  
                      i1l1809 0608                        i1l1905 0F04                        i1l1915 1292  
                      i1l1691 0888                        i1l1755 0ABC                        i1l1763 0B22  
                      i1l1747 0A74                        i1l1739 0A22                        i1l1659 1258  
                      i1l1683 0CEA                        i1l1675 0C90                        i1l1667 0C4E  
                      i1l1827 069A                        i1l1819 066E                        i1l1771 03F2  
                      i1l1851 071C                        i1l1843 06D4                        i1l1907 0F0C  
                      i1l1917 129C                        i1l1693 088C                        i1l1765 0B32  
                      i1l1757 0AEA                        i1l1749 0A92                        i1l1677 0CA4  
                      i1l1669 0C62                        i1l1829 06AA                        i1l1781 046C  
                      i1l1773 0412                        i1l1861 07E4                        i1l1853 0740  
                      i1l1845 06F8                        i1l1909 0F1A                        i1l1919 12A2  
                      i1l1695 089A                        i1l1767 0B52                        i1l1759 0B0A  
                      i1l1687 10E6                        i1l1679 0CA8                        i1l1791 04C8  
                      i1l1783 0486                        i1l1775 043A                        i1l1863 0808  
                      i1l1871 0836                        i1l1855 0764                        i1l1847 0706  
                      i1l1697 08BA                        i1l1689 1100                        i1l1793 04D0  
                      i1l1785 04A2                        i1l1777 045A                        i1l1873 0844  
                      i1l1865 0816                        i1l1857 07AC                        i1l1849 0718  
                      i1l1891 0E20                        i1l1699 08BE                        i1l1795 04D8  
                      i1l1787 04B4                        i1l1779 046A                        i1l1867 082A  
                      i1l1893 0E28                        i1l1885 0D9C                        i1l1797 04DE  
                      i1l1789 04C2                        i1l1877 0850                        i1l1887 0E14  
                      i1l1799 0560                        i1l1879 0874                        i1l1889 0E1E  
              __CFG_WDTEN$OFF 000000                __CFG_WINEN$OFF 000000                        _PTPERH 000F7A  
                LCDPutStr@str 0006                        _PTPERL 000F7B                _LCDWriteNibble 0D04  
              __CFG_PWRTEN$ON 000000                __CFG_SSPMX$RC7 000000                  vfprintf@cfmt 0056  
                   ??___aodiv 0011                     ??___aomod 0011                __CFG_STVREN$ON 000000  
                      _digits 3DB1                     ??___lwdiv 0005                     ??___lwmod 0005  
                      clear_0 1042                        pad@buf 0013                        dtoa@fp 001C  
                      _strlen 1248                        tcInt@i 009C                        fputc@c 0001  
                      fputs@c 000E                        fputs@i 000F                  __pdataCOMRAM 005E  
                      fputs@s 000A                  __mediumconst 3AE8                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                i1LCDPutChar@ch 0005  
        __end_of_configureADC 12D6              __end_of_startPWM 1332                        putch@c 0001  
            __end_of_vfprintf 0F66          __end_of_configurePWM 1164             _timer5ReloadValue 00D5  
                   ??_sprintf 005E                ??i1_LCDPutChar 0004        __end_of_LCDWriteNibble 0D9A  
                  __accesstop 0060       __end_of__initialization 1048               __CFG_FLTAMX$RC1 000000  
                  _adcPercent 00AB                 ___rparam_used 000001               __CFG_T1OSCMX$ON 000000  
              __pcstackCOMRAM 0001                  __pidataBANK0 131A                 __end_of_tcInt 03EE  
               __end_of_fputc 0C3E                  ??_LCDPutChar 0103                 __end_of_fputs 10E6  
               __end_of_putch 1334     __size_ofi1_LCDWriteNibble 0092          __size_ofi1_LCDPutCmd 003E  
         _timer5OverflowCount 00AF                       ??_tcInt 006A                       ??_fputc 0005  
                     ??_fputs 000E                       ??_putch 0001                    __pbssBANK0 009F  
             ?_LCDWriteNibble 0100            __end_of_LCDPutChar 1248               __CFG_WDPS$32768 000000  
                     ?_strlen 0001               __CFG_PWM4MX$RB5 000000            __size_of_vfpfcnvrt 01B4  
                     i1u80_20 0C4E                       i1u80_21 0C4A                       _OVDCOND 000F6B  
                     i1u81_20 0C70                       i1u81_21 0C6C                       i1u90_20 0984  
                     i1u74_20 0B86                       i1u82_20 0CC6                       i1u90_21 0980  
                     i1u74_21 0B82                       i1u82_21 0CC2                       _OVDCONS 000F6A  
                     i1u91_20 09CE                       i1u75_20 0B98                       i1u83_20 0CD6  
                     i1u91_21 09CA                       i1u75_21 0B94                       i1u83_21 0CD2  
                     i1u92_20 0A22                       i1u84_20 1100                       i1u76_20 0BC0  
                     i1u92_21 0A1E                       i1u84_21 10FC                       i1u76_21 0BBC  
                     i1u85_20 089A                       i1u93_20 0A54                       i1u77_20 0BF6  
                     i1u85_21 0896                       i1u93_21 0A50                       i1u77_21 0BF2  
                     i1u86_20 08CC                       i1u94_20 0A92                       i1u78_20 10E4  
                     i1u86_21 08C8                       i1u94_21 0A8E                       i1u78_21 10E0  
                     i1u95_20 0ABC                       i1u79_20 1270                       i1u87_21 08F6  
                     i1u95_21 0AB8                       i1u79_21 126C                       i1u88_20 091A  
                     i1u96_20 0AEA                       i1u88_21 0916                       i1u96_21 0AE6  
                     i1u89_20 0944                       i1u97_20 0B32                       i1u89_21 0940  
                     i1u97_21 0B2E                       i1u98_20 0422                       i1u98_21 041C  
                     i1u99_20 0424                     _ADCHSbits 000F99               __CFG_PWMPIN$OFF 000000  
            ??_LCD_Initialize 0105                       __Hparam 0000                       __Lparam 0000  
    __size_of_configureTimer0 001C      __size_of_configureTimer1 0014      __size_of_configureTimer5 0014  
                     ___aodiv 0888                       ___aomod 0A10                     ?_startPWM 0001  
                     ___lwdiv 0E2C                       ___lwmod 0EA0                     ?_vfprintf 0050  
              _prevAdcPercent 00D7          __end_ofi1_LCDPutChar 12AE                       __pcinit 100A  
                     __ramtop 0300                       __ptext0 11DC                       __ptext1 132E  
                     __ptext2 12F2                       __ptext3 1306                       __ptext4 12D6  
                     __ptext5 1126                       __ptext6 1328                       __ptext7 12AE  
                     __ptext8 0F66                       __ptext9 1056                     _T0CONbits 000FD5  
       __size_of_configureADC 0028               __size_of_strlen 0036                     _T1CONbits 000FCD  
       __size_of_configurePWM 003E                  __size_of_abs 0040                  __size_of_pad 00C6  
                   _T5CONbits 000FB7                     _LCDPutCmd 1056                 tcInt@noDigits 0099  
                     _sprintf 0FB8                     _LCDPutStr 11A2          end_of_initialization 1048  
                     fputc@fp 0003                 __Lmediumconst 3AE8                       fputs@fp 000C  
           __end_of_vfpfcnvrt 0888                       postdec1 000FE5                       postdec2 000FDD  
                _configureADC 12AE                       postinc0 000FEE                       postinc1 000FE6  
                     postinc2 000FDE                  _configurePWM 1126                    ??_startPWM 0100  
                  ??_vfprintf 0056                       strlen@a 0003                       strlen@s 0001  
                   _PORTAbits 000F80                     _PORTCbits 000F82              i1_LCDWriteNibble 0D9A  
                   _PORTDbits 000F83                     _TRISAbits 000F92           _timer0PreloadValues 3CE9  
                   _TRISCbits 000F94                     _TRISDbits 000F95  __size_of_configureInterrupts 0006  
                  ?_LCDPutCmd 0001                    ?_LCDPutStr 0006              __CFG_EXCLKMX$RC3 000000  
                 vfpfcnvrt@ap 0044                   vfpfcnvrt@fp 0040                    LCDPutStr@i 0008  
                 vfpfcnvrt@ll 0048                 __pidataCOMRAM 1334                __end_of_digits 3DBB  
           ??_configureTimer0 0100             ??_configureTimer1 0100             ??_configureTimer5 0100  
              __end_of_strlen 127E           start_initialization 100A              ??_LCDWriteNibble 0101  
                 __end_of_abs 1126                   __end_of_pad 0D04         __size_ofi1_LCDPutChar 0030  
                 vfprintf@fmt 0052                   __pdataBANK0 00D1                 i1LCDPutCmd@ch 0005  
               ??i1_LCDPutCmd 0004                      ??_strlen 0003           _currentPreloadIndex 00AD  
               __pcstackBANK0 0060                 __pcstackBANK1 0100              ___aodiv@dividend 0001  
                 ??_LCDPutCmd 0103                   ??_LCDPutStr 0008                  i1_LCDPutChar 127E  
            ___lwdiv@dividend 0001                     _dtoa$1347 002E                     _maxADCVal 00DC  
               __pmediumconst 3AE8                      ?___aodiv 0001                      ?___aomod 0001  
            ___aodiv@quotient 0013                      ?___lwdiv 0001                      ?___lwmod 0001  
            LCDWriteNibble@ch 0102              LCDWriteNibble@rs 0100                   __pintcodelo 0018  
           __size_of_startPWM 0004             __size_of_vfprintf 0062              ___lwdiv@quotient 0005  
         __end_ofi1_LCDPutCmd 11A2                      ?_sprintf 0058                __size_of_tcInt 03D6  
              __size_of_fputc 00CA                __size_of_fputs 0044                     _dutyCycle 009F  
              __size_of_putch 0002      __end_ofi1_LCDWriteNibble 0E2C                      _PIE1bits 000F9D  
                    _PIE3bits 000FA3                      i1u100_20 043A                      i1u100_21 0436  
                    i1u101_20 046A                      i1u101_21 0466                      i1u110_20 065E  
                    i1u102_20 0486                      i1u110_21 065A                      i1u102_21 0482  
                    i1u111_20 066E                      i1u103_20 04B4                      i1u111_21 066A  
                    i1u103_21 04B0                      i1u120_20 11DA                      i1u112_20 0686  
                    i1u104_20 04C2                      i1u120_21 11D6                      i1u112_21 0682  
                    i1u104_21 04BE                      i1u121_20 0E46                      i1u105_20 05EA  
                    i1u121_21 0E42                      i1u105_21 05E6                      i1u122_20 0E64  
                    i1u106_20 0608                      i1u114_20 06F8                      i1u130_20 00C0  
                    i1u122_21 0E60                      i1u106_21 0604                      i1u114_21 06F4  
                    i1u130_21 00BC                      i1u123_20 0E80                      i1u107_20 0622  
                    i1u115_20 0740                      i1u131_20 00D4                      i1u123_21 0E7C  
                    i1u107_21 061E                      i1u115_21 073C                      i1u131_21 00D0  
                    i1u124_20 0EB2                      i1u108_20 063C                      i1u116_20 0764  
                    i1u140_20 033C                      i1u132_20 00E8                      i1u124_21 0EAE  
                    i1u108_21 0638                      i1u116_21 0760                      i1u140_21 0338  
                    i1u132_21 00E4                      i1u125_20 0ED0                      i1u109_20 064C  
                    i1u117_20 0808                      i1u141_20 035A                      i1u133_20 01D4  
                    i1u125_21 0ECC                      i1u109_21 0648                      i1u117_21 0804  
                    i1u141_21 0356                      i1u133_21 01D0                      i1u126_20 0EE6  
                    i1u142_20 037A                      i1u134_20 01F4                      i1u126_21 0EE2  
                    i1u142_21 0376                      i1u134_21 01F0                      i1u118_25 0E1C  
                    i1u118_26 0E1E                      i1u119_20 0F5C                      i1u143_20 0396  
                    i1u135_20 0210                      i1u127_20 005C                      i1u119_21 0F58  
                    i1u143_21 0392                      i1u135_21 020C                      i1u127_21 0058  
                    i1u136_20 0228                      i1u128_20 0072                      i1u136_21 0224  
                    i1u128_21 006E                      i1u137_20 02C4                      i1u129_20 00AC  
                    i1u137_21 02C0                      i1u129_21 00A8                      i1u138_20 02DE  
                    i1u138_21 02DA                      i1u139_20 031E                      i1u139_21 031A  
                    i1u156_27 116C                      i1u157_27 118E                      i1u158_27 1286  
                    i1u159_27 0E22                      _PIR1bits 000F9E                      _PIR3bits 000FA4  
         _configureInterrupts 1328                     _vfpfcnvrt 06D4                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0                    _ADCON3bits 000F9A          ?_configureInterrupts 0001  
       _prevTimer0ReloadValue 00D1                     copy_data0 101E                     tcInt@duty 009E  
                   tcInt@str1 0089                     tcInt@str2 0079                      __Hrparam 0000  
             _configureTimer0 12D6               _configureTimer1 1306               _configureTimer5 12F2  
                  vfprintf@ap 0054                      __Lrparam 0000                    vfprintf@fp 0050  
     __size_of_LCD_Initialize 0052              __size_of___aodiv 0188              __size_of___aomod 0164  
                  ?_vfpfcnvrt 0040              __size_of___lwdiv 0074              __size_of___lwmod 0064  
                  _ANSEL0bits 000FB8               ___aodiv@divisor 0009               ___aodiv@counter 0011  
                 i1_LCDPutCmd 1164                    sprintf@fmt 005A         ??_configureInterrupts 0100  
  tcInt@timer0ReloadValueCopy 009A               ___lwdiv@divisor 0003               ___lwdiv@counter 0007  
                    __ptext10 1212                      __ptext11 0D04                      __ptext20 10A2  
                    __ptext21 0B74                      __ptext13 1164                      __ptext30 0D9A  
                    __ptext22 1332                      __ptext14 0FB8                      __ptext23 10E6  
                    __ptext15 0F04                      __ptext24 0A10                      __ptext16 06D4  
                    __ptext25 0888                      __ptext17 03F2                      __ptext26 0EA0  
                    __ptext18 0C3E                      __ptext27 0E2C                      __ptext19 1248  
                    __ptext28 11A2                      __ptext29 127E              __size_of_sprintf 0052  
               __size_of_main 0036                 __size_of_dtoa 02E2            i1LCDWriteNibble@ch 0003  
          i1LCDWriteNibble@rs 0001           __end_of_sinusValues 3CE9                      int$flags 005F  
                    _startPWM 132E                      _vfprintf 0F04                    _LCDPutChar 1212  
            ___aomod@dividend 0001                   _refreshTime 00AE                    _INTCONbits 000FF2  
                    intlevel1 0000                     sprintf@ap 0062   __end_of_timer0PreloadValues 3DB1  
     __end_of_configureTimer0 12F2       __end_of_configureTimer1 131A       __end_of_configureTimer5 1306  
            ___lwmod@dividend 0001                   _PWMCON0bits 000F6F                   _PWMCON1bits 000F6E  
             ___aomod@divisor 0009                   ??_vfpfcnvrt 0046               ___aomod@counter 0011  
                  _PTCON0bits 000F7F                    _PTCON1bits 000F7E                      sprintf@f 0064  
                    sprintf@s 0058               ___lwmod@divisor 0003               ___lwmod@counter 0005  
                ___aodiv@sign 0012                   _sinusIndex1 00B0                   _sinusIndex2 00DB  
                 _sinusIndex3 00DA                   _sinusValues 3AE9             ?i1_LCDWriteNibble 0001  
     __size_of_LCDWriteNibble 0096                  ___aomod@sign 0012            ??i1_LCDWriteNibble 0002  
