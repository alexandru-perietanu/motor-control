

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jan 13 00:15:22 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           ; Version 2.10
    52                           ; Generated 31/07/2019 GMT
    53                           ; 
    54                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4431 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMRAM
    87  00123A                     __pidataCOMRAM:
    88                           	opt callstack 0
    89                           
    90                           ;initializer for _timer0ReloadValue
    91  00123A  413B               	dw	16699
    92                           
    93                           ;initializer for _PrevADRESH
    94  00123C  41                 	db	65
    95                           
    96                           ;initializer for _sinusIndex3
    97  00123D  AA                 	db	170
    98                           
    99                           ;initializer for _sinusIndex2
   100  00123E  55                 	db	85
   101                           
   102                           	psect	idataBANK0
   103  00121E                     __pidataBANK0:
   104                           	opt callstack 0
   105                           
   106                           ;initializer for _prevTimer0ReloadValue
   107  00121E  EC77               	dw	60535
   108                           
   109                           ;initializer for _timer5ReloadValue
   110  001220  0BDB               	dw	3035
   111                           
   112                           ;initializer for _prevAdcPercent
   113  001222  0065               	dw	101
   114                           
   115                           ;initializer for _adcPercent
   116  001224  0041               	dw	65
   117                           
   118                           ;initializer for _d1
   119  001226  01                 	db	1
   120                           
   121                           ;initializer for _maxADCVal
   122  001227  00FF               	dw	255
   123                           
   124                           	psect	mediumconst
   125  003AE8                     __pmediumconst:
   126                           	opt callstack 0
   127  003AE8  00                 	db	0
   128  003AE9                     _sinusValues:
   129                           	opt callstack 0
   130  003AE9  03C0               	dw	960
   131  003AEB  03D6               	dw	982
   132  003AED  03EC               	dw	1004
   133  003AEF  0402               	dw	1026
   134  003AF1  0419               	dw	1049
   135  003AF3  042F               	dw	1071
   136  003AF5  0445               	dw	1093
   137  003AF7  045B               	dw	1115
   138  003AF9  0471               	dw	1137
   139  003AFB  0488               	dw	1160
   140  003AFD  049E               	dw	1182
   141  003AFF  04BB               	dw	1211
   142  003B01  04D2               	dw	1234
   143  003B03  04E0               	dw	1248
   144  003B05  04F7               	dw	1271
   145  003B07  050D               	dw	1293
   146  003B09  0523               	dw	1315
   147  003B0B  0539               	dw	1337
   148  003B0D  054F               	dw	1359
   149  003B0F  0566               	dw	1382
   150  003B11  057C               	dw	1404
   151  003B13  058B               	dw	1419
   152  003B15  05A1               	dw	1441
   153  003B17  05B7               	dw	1463
   154  003B19  05C6               	dw	1478
   155  003B1B  05DC               	dw	1500
   156  003B1D  05EB               	dw	1515
   157  003B1F  0601               	dw	1537
   158  003B21  0610               	dw	1552
   159  003B23  0626               	dw	1574
   160  003B25  0635               	dw	1589
   161  003B27  0644               	dw	1604
   162  003B29  065A               	dw	1626
   163  003B2B  0669               	dw	1641
   164  003B2D  0677               	dw	1655
   165  003B2F  0686               	dw	1670
   166  003B31  0695               	dw	1685
   167  003B33  06A4               	dw	1700
   168  003B35  06B3               	dw	1715
   169  003B37  06C1               	dw	1729
   170  003B39  06C9               	dw	1737
   171  003B3B  06D8               	dw	1752
   172  003B3D  06E6               	dw	1766
   173  003B3F  06EE               	dw	1774
   174  003B41  06FD               	dw	1789
   175  003B43  0704               	dw	1796
   176  003B45  0713               	dw	1811
   177  003B47  071A               	dw	1818
   178  003B49  0722               	dw	1826
   179  003B4B  0729               	dw	1833
   180  003B4D  0730               	dw	1840
   181  003B4F  0738               	dw	1848
   182  003B51  073F               	dw	1855
   183  003B53  0747               	dw	1863
   184  003B55  074E               	dw	1870
   185  003B57  0755               	dw	1877
   186  003B59  0755               	dw	1877
   187  003B5B  075D               	dw	1885
   188  003B5D  075D               	dw	1885
   189  003B5F  0764               	dw	1892
   190  003B61  0764               	dw	1892
   191  003B63  0764               	dw	1892
   192  003B65  0764               	dw	1892
   193  003B67  0764               	dw	1892
   194  003B69  0764               	dw	1892
   195  003B6B  0764               	dw	1892
   196  003B6D  0764               	dw	1892
   197  003B6F  0764               	dw	1892
   198  003B71  0764               	dw	1892
   199  003B73  075D               	dw	1885
   200  003B75  075D               	dw	1885
   201  003B77  0755               	dw	1877
   202  003B79  0755               	dw	1877
   203  003B7B  074E               	dw	1870
   204  003B7D  0747               	dw	1863
   205  003B7F  0747               	dw	1863
   206  003B81  073F               	dw	1855
   207  003B83  0738               	dw	1848
   208  003B85  0730               	dw	1840
   209  003B87  0729               	dw	1833
   210  003B89  071A               	dw	1818
   211  003B8B  0713               	dw	1811
   212  003B8D  070B               	dw	1803
   213  003B8F  06FD               	dw	1789
   214  003B91  06F5               	dw	1781
   215  003B93  06E6               	dw	1766
   216  003B95  06DF               	dw	1759
   217  003B97  06D0               	dw	1744
   218  003B99  06C1               	dw	1729
   219  003B9B  06BA               	dw	1722
   220  003B9D  06AB               	dw	1707
   221  003B9F  069C               	dw	1692
   222  003BA1  068E               	dw	1678
   223  003BA3  067F               	dw	1663
   224  003BA5  0670               	dw	1648
   225  003BA7  0661               	dw	1633
   226  003BA9  064B               	dw	1611
   227  003BAB  063C               	dw	1596
   228  003BAD  062D               	dw	1581
   229  003BAF  061F               	dw	1567
   230  003BB1  0608               	dw	1544
   231  003BB3  05FA               	dw	1530
   232  003BB5  05E3               	dw	1507
   233  003BB7  05D5               	dw	1493
   234  003BB9  05BE               	dw	1470
   235  003BBB  05A8               	dw	1448
   236  003BBD  0599               	dw	1433
   237  003BBF  0583               	dw	1411
   238  003BC1  056D               	dw	1389
   239  003BC3  0557               	dw	1367
   240  003BC5  0548               	dw	1352
   241  003BC7  0532               	dw	1330
   242  003BC9  051C               	dw	1308
   243  003BCB  0505               	dw	1285
   244  003BCD  04EF               	dw	1263
   245  003BCF  04D9               	dw	1241
   246  003BD1  04C3               	dw	1219
   247  003BD3  04AD               	dw	1197
   248  003BD5  0496               	dw	1174
   249  003BD7  0480               	dw	1152
   250  003BD9  046A               	dw	1130
   251  003BDB  0454               	dw	1108
   252  003BDD  043E               	dw	1086
   253  003BDF  0427               	dw	1063
   254  003BE1  040A               	dw	1034
   255  003BE3  03F4               	dw	1012
   256  003BE5  03DD               	dw	989
   257  003BE7  03C7               	dw	967
   258  003BE9  03B1               	dw	945
   259  003BEB  039B               	dw	923
   260  003BED  0385               	dw	901
   261  003BEF  036E               	dw	878
   262  003BF1  0351               	dw	849
   263  003BF3  033B               	dw	827
   264  003BF5  0324               	dw	804
   265  003BF7  030E               	dw	782
   266  003BF9  02F8               	dw	760
   267  003BFB  02E2               	dw	738
   268  003BFD  02CC               	dw	716
   269  003BFF  02B5               	dw	693
   270  003C01  029F               	dw	671
   271  003C03  0289               	dw	649
   272  003C05  0273               	dw	627
   273  003C07  025D               	dw	605
   274  003C09  0246               	dw	582
   275  003C0B  0230               	dw	560
   276  003C0D  0221               	dw	545
   277  003C0F  020B               	dw	523
   278  003C11  01F5               	dw	501
   279  003C13  01DF               	dw	479
   280  003C15  01D0               	dw	464
   281  003C17  01BA               	dw	442
   282  003C19  01A4               	dw	420
   283  003C1B  0195               	dw	405
   284  003C1D  017F               	dw	383
   285  003C1F  0170               	dw	368
   286  003C21  015A               	dw	346
   287  003C23  014B               	dw	331
   288  003C25  013C               	dw	316
   289  003C27  012D               	dw	301
   290  003C29  0117               	dw	279
   291  003C2B  0108               	dw	264
   292  003C2D  00F9               	dw	249
   293  003C2F  00EB               	dw	235
   294  003C31  00DC               	dw	220
   295  003C33  00CD               	dw	205
   296  003C35  00BE               	dw	190
   297  003C37  00B7               	dw	183
   298  003C39  00A8               	dw	168
   299  003C3B  0099               	dw	153
   300  003C3D  0092               	dw	146
   301  003C3F  0083               	dw	131
   302  003C41  007C               	dw	124
   303  003C43  006D               	dw	109
   304  003C45  0065               	dw	101
   305  003C47  005E               	dw	94
   306  003C49  004F               	dw	79
   307  003C4B  0048               	dw	72
   308  003C4D  0040               	dw	64
   309  003C4F  0039               	dw	57
   310  003C51  0032               	dw	50
   311  003C53  0032               	dw	50
   312  003C55  002A               	dw	42
   313  003C57  0023               	dw	35
   314  003C59  0023               	dw	35
   315  003C5B  001B               	dw	27
   316  003C5D  001B               	dw	27
   317  003C5F  0014               	dw	20
   318  003C61  0014               	dw	20
   319  003C63  0014               	dw	20
   320  003C65  0014               	dw	20
   321  003C67  0014               	dw	20
   322  003C69  0014               	dw	20
   323  003C6B  0014               	dw	20
   324  003C6D  0014               	dw	20
   325  003C6F  0014               	dw	20
   326  003C71  0014               	dw	20
   327  003C73  001B               	dw	27
   328  003C75  001B               	dw	27
   329  003C77  0023               	dw	35
   330  003C79  0023               	dw	35
   331  003C7B  002A               	dw	42
   332  003C7D  0032               	dw	50
   333  003C7F  0039               	dw	57
   334  003C81  0040               	dw	64
   335  003C83  0048               	dw	72
   336  003C85  004F               	dw	79
   337  003C87  0057               	dw	87
   338  003C89  005E               	dw	94
   339  003C8B  0065               	dw	101
   340  003C8D  0074               	dw	116
   341  003C8F  007C               	dw	124
   342  003C91  008A               	dw	138
   343  003C93  0092               	dw	146
   344  003C95  00A1               	dw	161
   345  003C97  00AF               	dw	175
   346  003C99  00B7               	dw	183
   347  003C9B  00C6               	dw	198
   348  003C9D  00D4               	dw	212
   349  003C9F  00E3               	dw	227
   350  003CA1  00F2               	dw	242
   351  003CA3  0101               	dw	257
   352  003CA5  0110               	dw	272
   353  003CA7  011E               	dw	286
   354  003CA9  0135               	dw	309
   355  003CAB  0143               	dw	323
   356  003CAD  0152               	dw	338
   357  003CAF  0168               	dw	360
   358  003CB1  0177               	dw	375
   359  003CB3  018D               	dw	397
   360  003CB5  019C               	dw	412
   361  003CB7  01B2               	dw	434
   362  003CB9  01C1               	dw	449
   363  003CBB  01D7               	dw	471
   364  003CBD  01EE               	dw	494
   365  003CBF  01FC               	dw	508
   366  003CC1  0213               	dw	531
   367  003CC3  0229               	dw	553
   368  003CC5  023F               	dw	575
   369  003CC7  0255               	dw	597
   370  003CC9  026B               	dw	619
   371  003CCB  0282               	dw	642
   372  003CCD  0298               	dw	664
   373  003CCF  02A7               	dw	679
   374  003CD1  02BD               	dw	701
   375  003CD3  02DA               	dw	730
   376  003CD5  02F1               	dw	753
   377  003CD7  0307               	dw	775
   378  003CD9  031D               	dw	797
   379  003CDB  0333               	dw	819
   380  003CDD  0349               	dw	841
   381  003CDF  0360               	dw	864
   382  003CE1  0376               	dw	886
   383  003CE3  038C               	dw	908
   384  003CE5  03A2               	dw	930
   385  003CE7  03B8               	dw	952
   386  003CE9                     __end_of_sinusValues:
   387                           	opt callstack 0
   388  003CE9                     _timer0PreloadValues:
   389                           	opt callstack 0
   390  003CE9  ECF0               	dw	60656
   391  003CEB  F677               	dw	63095
   392  003CED  F9A4               	dw	63908
   393  003CEF  FB3B               	dw	64315
   394  003CF1  FC2F               	dw	64559
   395  003CF3  FCD1               	dw	64721
   396  003CF5  FD46               	dw	64838
   397  003CF7  FD9D               	dw	64925
   398  003CF9  FDE0               	dw	64992
   399  003CFB  FE17               	dw	65047
   400  003CFD  FE43               	dw	65091
   401  003CFF  FE68               	dw	65128
   402  003D01  FE87               	dw	65159
   403  003D03  FEA2               	dw	65186
   404  003D05  FEB9               	dw	65209
   405  003D07  FECE               	dw	65230
   406  003D09  FEE0               	dw	65248
   407  003D0B  FEEF               	dw	65263
   408  003D0D  FEFE               	dw	65278
   409  003D0F  FF0B               	dw	65291
   410  003D11  FF16               	dw	65302
   411  003D13  FF21               	dw	65313
   412  003D15  FF2A               	dw	65322
   413  003D17  FF33               	dw	65331
   414  003D19  FF3B               	dw	65339
   415  003D1B  FF43               	dw	65347
   416  003D1D  FF4A               	dw	65354
   417  003D1F  FF50               	dw	65360
   418  003D21  FF56               	dw	65366
   419  003D23  FF5C               	dw	65372
   420  003D25  FF61               	dw	65377
   421  003D27  FF66               	dw	65382
   422  003D29  FF6B               	dw	65387
   423  003D2B  FF6F               	dw	65391
   424  003D2D  FF73               	dw	65395
   425  003D2F  FF77               	dw	65399
   426  003D31  FF7B               	dw	65403
   427  003D33  FF7E               	dw	65406
   428  003D35  FF81               	dw	65409
   429  003D37  FF85               	dw	65413
   430  003D39  FF88               	dw	65416
   431  003D3B  FF8A               	dw	65418
   432  003D3D  FF8D               	dw	65421
   433  003D3F  FF90               	dw	65424
   434  003D41  FF92               	dw	65426
   435  003D43  FF94               	dw	65428
   436  003D45  FF97               	dw	65431
   437  003D47  FF99               	dw	65433
   438  003D49  FF9B               	dw	65435
   439  003D4B  FF9D               	dw	65437
   440  003D4D  FF9F               	dw	65439
   441  003D4F  FFA1               	dw	65441
   442  003D51  FFA2               	dw	65442
   443  003D53  FFA4               	dw	65444
   444  003D55  FFA6               	dw	65446
   445  003D57  FFA7               	dw	65447
   446  003D59  FFA9               	dw	65449
   447  003D5B  FFAA               	dw	65450
   448  003D5D  FFAC               	dw	65452
   449  003D5F  FFAD               	dw	65453
   450  003D61  FFAF               	dw	65455
   451  003D63  FFB0               	dw	65456
   452  003D65  FFB1               	dw	65457
   453  003D67  FFB2               	dw	65458
   454  003D69  FFB3               	dw	65459
   455  003D6B  FFB5               	dw	65461
   456  003D6D  FFB6               	dw	65462
   457  003D6F  FFB7               	dw	65463
   458  003D71  FFB8               	dw	65464
   459  003D73  FFB9               	dw	65465
   460  003D75  FFBA               	dw	65466
   461  003D77  FFBB               	dw	65467
   462  003D79  FFBC               	dw	65468
   463  003D7B  FFBD               	dw	65469
   464  003D7D  FFBD               	dw	65469
   465  003D7F  FFBE               	dw	65470
   466  003D81  FFBF               	dw	65471
   467  003D83  FFC0               	dw	65472
   468  003D85  FFC1               	dw	65473
   469  003D87  FFC2               	dw	65474
   470  003D89  FFC2               	dw	65474
   471  003D8B  FFC3               	dw	65475
   472  003D8D  FFC4               	dw	65476
   473  003D8F  FFC4               	dw	65476
   474  003D91  FFC5               	dw	65477
   475  003D93  FFC6               	dw	65478
   476  003D95  FFC6               	dw	65478
   477  003D97  FFC7               	dw	65479
   478  003D99  FFC8               	dw	65480
   479  003D9B  FFC8               	dw	65480
   480  003D9D  FFC9               	dw	65481
   481  003D9F  FFC9               	dw	65481
   482  003DA1  FFCA               	dw	65482
   483  003DA3  FFCB               	dw	65483
   484  003DA5  FFCC               	dw	65484
   485  003DA7  FFCD               	dw	65485
   486  003DA9  FFCE               	dw	65486
   487  003DAB  FFCF               	dw	65487
   488  003DAD  FFCF               	dw	65487
   489  003DAF  FFD0               	dw	65488
   490  003DB1                     __end_of_timer0PreloadValues:
   491                           	opt callstack 0
   492  003DB1                     _digits:
   493                           	opt callstack 0
   494  003DB1  30                 	db	48
   495  003DB2  31                 	db	49
   496  003DB3  32                 	db	50
   497  003DB4  33                 	db	51
   498  003DB5  34                 	db	52
   499  003DB6  35                 	db	53
   500  003DB7  36                 	db	54
   501  003DB8  37                 	db	55
   502  003DB9  38                 	db	56
   503  003DBA  39                 	db	57
   504  003DBB                     __end_of_digits:
   505                           	opt callstack 0
   506  0000                     _TMR5	set	3975
   507  0000                     _PORTDbits	set	3971
   508  0000                     _PORTCbits	set	3970
   509  0000                     _TRISDbits	set	3989
   510  0000                     _TRISCbits	set	3988
   511  0000                     _PDC2L	set	3957
   512  0000                     _PDC2H	set	3956
   513  0000                     _PDC1L	set	3959
   514  0000                     _PDC1H	set	3958
   515  0000                     _PORTAbits	set	3968
   516  0000                     _TRISAbits	set	3986
   517  0000                     _ADCHSbits	set	3993
   518  0000                     _ADCON3bits	set	3994
   519  0000                     _OVDCONS	set	3946
   520  0000                     _OVDCOND	set	3947
   521  0000                     _PDC0L	set	3961
   522  0000                     _PDC0H	set	3960
   523  0000                     _PTPERL	set	3963
   524  0000                     _PTPERH	set	3962
   525  0000                     _PWMCON1bits	set	3950
   526  0000                     _PWMCON0bits	set	3951
   527  0000                     _PTCON1bits	set	3966
   528  0000                     _PTCON0bits	set	3967
   529  0000                     _PORTB	set	3969
   530  0000                     _TRISB	set	3987
   531  0000                     _LATB	set	3978
   532  0000                     _TMR1	set	4046
   533  0000                     _ADRESH	set	4036
   534  0000                     _PIR3bits	set	4004
   535  0000                     _PIR1bits	set	3998
   536  0000                     _PIE3bits	set	4003
   537  0000                     _T5CONbits	set	4023
   538  0000                     _T1CONbits	set	4045
   539  0000                     _PIE1bits	set	3997
   540  0000                     _ANSEL0bits	set	4024
   541  0000                     _ADCON2bits	set	4032
   542  0000                     _ADCON1	set	4033
   543  0000                     _ADCON0bits	set	4034
   544  0000                     _TMR0	set	4054
   545  0000                     _T0CONbits	set	4053
   546  0000                     _INTCON2bits	set	4081
   547  0000                     _INTCONbits	set	4082
   548  003DBB                     STR_1:
   549  003DBB  25                 	db	37
   550  003DBC  64                 	db	100	;'d'
   551  003DBD  00                 	db	0
   552                           
   553                           ; #config settings
   554  003DBE  00                 	db	0	; dummy byte at the end
   555  0000                     
   556                           	psect	cinit
   557  000D9E                     __pcinit:
   558                           	opt callstack 0
   559  000D9E                     start_initialization:
   560                           	opt callstack 0
   561  000D9E                     __initialization:
   562                           	opt callstack 0
   563                           
   564                           ; Initialize objects allocated to BANK0 (11 bytes)
   565                           ; load TBLPTR registers with __pidataBANK0
   566  000D9E  0E1E               	movlw	low __pidataBANK0
   567  000DA0  6EF6               	movwf	tblptrl,c
   568  000DA2  0E12               	movlw	high __pidataBANK0
   569  000DA4  6EF7               	movwf	tblptrh,c
   570  000DA6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   571  000DA8  6EF8               	movwf	tblptru,c
   572  000DAA  EE00  F0E0         	lfsr	0,__pdataBANK0
   573  000DAE  EE10 F00B          	lfsr	1,11
   574  000DB2                     copy_data0:
   575  000DB2  0009               	tblrd		*+
   576  000DB4  CFF5 FFEE          	movff	tablat,postinc0
   577  000DB8  50E5               	movf	postdec1,w,c
   578  000DBA  50E1               	movf	fsr1l,w,c
   579  000DBC  E1FA               	bnz	copy_data0
   580                           
   581                           ; Initialize objects allocated to COMRAM (5 bytes)
   582                           ; load TBLPTR registers with __pidataCOMRAM
   583  000DBE  0E3A               	movlw	low __pidataCOMRAM
   584  000DC0  6EF6               	movwf	tblptrl,c
   585  000DC2  0E12               	movlw	high __pidataCOMRAM
   586  000DC4  6EF7               	movwf	tblptrh,c
   587  000DC6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   588  000DC8  6EF8               	movwf	tblptru,c
   589  000DCA  EE00  F04E         	lfsr	0,__pdataCOMRAM
   590  000DCE  EE10 F005          	lfsr	1,5
   591  000DD2                     copy_data1:
   592  000DD2  0009               	tblrd		*+
   593  000DD4  CFF5 FFEE          	movff	tablat,postinc0
   594  000DD8  50E5               	movf	postdec1,w,c
   595  000DDA  50E1               	movf	fsr1l,w,c
   596  000DDC  E1FA               	bnz	copy_data1
   597                           
   598                           ; Clear objects allocated to BANK0 (43 bytes)
   599  000DDE  EE00  F0B5         	lfsr	0,__pbssBANK0
   600  000DE2  0E2B               	movlw	43
   601  000DE4                     clear_0:
   602  000DE4  6AEE               	clrf	postinc0,c
   603  000DE6  06E8               	decf	wreg,f,c
   604  000DE8  E1FD               	bnz	clear_0
   605                           
   606                           ; Clear objects allocated to COMRAM (8 bytes)
   607  000DEA  EE00  F046         	lfsr	0,__pbssCOMRAM
   608  000DEE  0E08               	movlw	8
   609  000DF0                     clear_1:
   610  000DF0  6AEE               	clrf	postinc0,c
   611  000DF2  06E8               	decf	wreg,f,c
   612  000DF4  E1FD               	bnz	clear_1
   613  000DF6                     end_of_initialization:
   614                           	opt callstack 0
   615  000DF6                     __end_of__initialization:
   616                           	opt callstack 0
   617  000DF6  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   618  000DF8  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   619  000DFA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   620  000DFC  6EF8               	movwf	tblptru,c
   621  000DFE  0100               	movlb	0
   622  000E00  EF65  F007         	goto	_main	;jump to C main() function
   623                           
   624                           	psect	bssCOMRAM
   625  000046                     __pbssCOMRAM:
   626                           	opt callstack 0
   627  000046                     _prec:
   628                           	opt callstack 0
   629  000046                     	ds	2
   630  000048                     _flags:
   631                           	opt callstack 0
   632  000048                     	ds	2
   633  00004A                     _shouldUpdateTimer0Preload:
   634                           	opt callstack 0
   635  00004A                     	ds	1
   636  00004B                     _currentPreloadIndex:
   637                           	opt callstack 0
   638  00004B                     	ds	1
   639  00004C                     _timer5OverflowCount:
   640                           	opt callstack 0
   641  00004C                     	ds	1
   642  00004D                     _sinusIndex1:
   643                           	opt callstack 0
   644  00004D                     	ds	1
   645                           
   646                           	psect	dataCOMRAM
   647  00004E                     __pdataCOMRAM:
   648                           	opt callstack 0
   649  00004E                     _timer0ReloadValue:
   650                           	opt callstack 0
   651  00004E                     	ds	2
   652  000050                     _PrevADRESH:
   653                           	opt callstack 0
   654  000050                     	ds	1
   655  000051                     _sinusIndex3:
   656                           	opt callstack 0
   657  000051                     	ds	1
   658  000052                     _sinusIndex2:
   659                           	opt callstack 0
   660  000052                     	ds	1
   661                           
   662                           	psect	bssBANK0
   663  0000B5                     __pbssBANK0:
   664                           	opt callstack 0
   665  0000B5                     _dutyCycle:
   666                           	opt callstack 0
   667  0000B5                     	ds	4
   668  0000B9                     _nout:
   669                           	opt callstack 0
   670  0000B9                     	ds	2
   671  0000BB                     _width:
   672                           	opt callstack 0
   673  0000BB                     	ds	2
   674  0000BD                     _shouldDisplay:
   675                           	opt callstack 0
   676  0000BD                     	ds	1
   677  0000BE                     _shouldUpdateDutyCycle:
   678                           	opt callstack 0
   679  0000BE                     	ds	1
   680  0000BF                     _refreshTime:
   681                           	opt callstack 0
   682  0000BF                     	ds	1
   683  0000C0                     _dbuf:
   684                           	opt callstack 0
   685  0000C0                     	ds	32
   686                           
   687                           	psect	dataBANK0
   688  0000E0                     __pdataBANK0:
   689                           	opt callstack 0
   690  0000E0                     _prevTimer0ReloadValue:
   691                           	opt callstack 0
   692  0000E0                     	ds	2
   693  0000E2                     _timer5ReloadValue:
   694                           	opt callstack 0
   695  0000E2                     	ds	2
   696  0000E4                     _prevAdcPercent:
   697                           	opt callstack 0
   698  0000E4                     	ds	2
   699  0000E6                     _adcPercent:
   700                           	opt callstack 0
   701  0000E6                     	ds	2
   702  0000E8                     _d1:
   703                           	opt callstack 0
   704  0000E8                     	ds	1
   705  0000E9                     _maxADCVal:
   706                           	opt callstack 0
   707  0000E9                     	ds	2
   708                           
   709                           	psect	cstackBANK0
   710  000060                     __pcstackBANK0:
   711                           	opt callstack 0
   712  000060                     _dtoa$1413:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x0
   716  000060                     	ds	2
   717  000062                     dtoa@p:
   718                           	opt callstack 0
   719                           
   720                           ; 2 bytes @ 0x2
   721  000062                     	ds	2
   722  000064                     dtoa@w:
   723                           	opt callstack 0
   724                           
   725                           ; 2 bytes @ 0x4
   726  000064                     	ds	2
   727  000066                     dtoa@s:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x6
   731  000066                     	ds	2
   732  000068                     dtoa@n:
   733                           	opt callstack 0
   734                           
   735                           ; 8 bytes @ 0x8
   736  000068                     	ds	8
   737  000070                     dtoa@i:
   738                           	opt callstack 0
   739                           
   740                           ; 2 bytes @ 0x10
   741  000070                     	ds	2
   742  000072                     vfpfcnvrt@ll:
   743                           	opt callstack 0
   744                           
   745                           ; 8 bytes @ 0x12
   746  000072                     	ds	8
   747  00007A                     ?_vfprintf:
   748                           	opt callstack 0
   749  00007A                     vfprintf@fp:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x1A
   753  00007A                     	ds	2
   754  00007C                     vfprintf@fmt:
   755                           	opt callstack 0
   756                           
   757                           ; 2 bytes @ 0x1C
   758  00007C                     	ds	2
   759  00007E                     vfprintf@ap:
   760                           	opt callstack 0
   761                           
   762                           ; 2 bytes @ 0x1E
   763  00007E                     	ds	2
   764  000080                     ?_sprintf:
   765                           	opt callstack 0
   766  000080                     sprintf@s:
   767                           	opt callstack 0
   768                           
   769                           ; 2 bytes @ 0x20
   770  000080                     	ds	2
   771  000082                     sprintf@fmt:
   772                           	opt callstack 0
   773                           
   774                           ; 2 bytes @ 0x22
   775  000082                     	ds	6
   776  000088                     sprintf@ap:
   777                           	opt callstack 0
   778                           
   779                           ; 2 bytes @ 0x28
   780  000088                     	ds	2
   781  00008A                     sprintf@f:
   782                           	opt callstack 0
   783                           
   784                           ; 6 bytes @ 0x2A
   785  00008A                     	ds	6
   786  000090                     display@str2:
   787                           	opt callstack 0
   788                           
   789                           ; 16 bytes @ 0x30
   790  000090                     	ds	16
   791  0000A0                     display@str1:
   792                           	opt callstack 0
   793                           
   794                           ; 16 bytes @ 0x40
   795  0000A0                     	ds	16
   796  0000B0                     display@noDigits:
   797                           	opt callstack 0
   798                           
   799                           ; 1 bytes @ 0x50
   800  0000B0                     	ds	1
   801  0000B1                     display@timer0ReloadValueCopy:
   802                           	opt callstack 0
   803                           
   804                           ; 2 bytes @ 0x51
   805  0000B1                     	ds	2
   806  0000B3                     display@i:
   807                           	opt callstack 0
   808                           
   809                           ; 2 bytes @ 0x53
   810  0000B3                     	ds	2
   811                           
   812                           	psect	cstackCOMRAM
   813  000001                     __pcstackCOMRAM:
   814                           	opt callstack 0
   815  000001                     ??_tcInt:
   816  000001                     
   817                           ; 1 bytes @ 0x0
   818  000001                     	ds	11
   819  00000C                     tcInt@duty:
   820                           	opt callstack 0
   821                           
   822                           ; 1 bytes @ 0xB
   823  00000C                     	ds	1
   824  00000D                     ??_updateTMR0PreloadValue:
   825  00000D                     ?_strlen:
   826                           	opt callstack 0
   827  00000D                     ?___lwdiv:
   828                           	opt callstack 0
   829  00000D                     ?___lwmod:
   830                           	opt callstack 0
   831  00000D                     ?___aodiv:
   832                           	opt callstack 0
   833  00000D                     ?___aomod:
   834                           	opt callstack 0
   835  00000D                     LCDWriteNibble@rs:
   836                           	opt callstack 0
   837  00000D                     ___lwdiv@dividend:
   838                           	opt callstack 0
   839  00000D                     ___lwmod@dividend:
   840                           	opt callstack 0
   841  00000D                     fputc@c:
   842                           	opt callstack 0
   843  00000D                     strlen@s:
   844                           	opt callstack 0
   845  00000D                     ___aodiv@dividend:
   846                           	opt callstack 0
   847  00000D                     ___aomod@dividend:
   848                           	opt callstack 0
   849                           
   850                           ; 8 bytes @ 0xC
   851  00000D                     	ds	1
   852  00000E                     ??_LCDWriteNibble:
   853                           
   854                           ; 1 bytes @ 0xD
   855  00000E                     	ds	1
   856  00000F                     LCDWriteNibble@ch:
   857                           	opt callstack 0
   858  00000F                     ___lwdiv@divisor:
   859                           	opt callstack 0
   860  00000F                     ___lwmod@divisor:
   861                           	opt callstack 0
   862  00000F                     fputc@fp:
   863                           	opt callstack 0
   864  00000F                     strlen@a:
   865                           	opt callstack 0
   866                           
   867                           ; 2 bytes @ 0xE
   868  00000F                     	ds	1
   869  000010                     ??_LCDPutCmd:
   870  000010                     ??_LCDPutChar:
   871                           
   872                           ; 1 bytes @ 0xF
   873  000010                     	ds	1
   874  000011                     ??_fputc:
   875  000011                     LCDPutChar@ch:
   876                           	opt callstack 0
   877  000011                     LCDPutCmd@ch:
   878                           	opt callstack 0
   879  000011                     ___lwmod@counter:
   880                           	opt callstack 0
   881  000011                     ___lwdiv@quotient:
   882                           	opt callstack 0
   883                           
   884                           ; 2 bytes @ 0x10
   885  000011                     	ds	1
   886  000012                     ??_LCD_Initialize:
   887  000012                     LCDPutStr@str:
   888                           	opt callstack 0
   889                           
   890                           ; 2 bytes @ 0x11
   891  000012                     	ds	1
   892  000013                     ___lwdiv@counter:
   893                           	opt callstack 0
   894                           
   895                           ; 1 bytes @ 0x12
   896  000013                     	ds	1
   897  000014                     ??_readADC:
   898  000014                     LCDPutStr@i:
   899                           	opt callstack 0
   900                           
   901                           ; 1 bytes @ 0x13
   902  000014                     	ds	1
   903  000015                     ___aodiv@divisor:
   904                           	opt callstack 0
   905  000015                     ___aomod@divisor:
   906                           	opt callstack 0
   907                           
   908                           ; 8 bytes @ 0x14
   909  000015                     	ds	1
   910  000016                     fputs@s:
   911                           	opt callstack 0
   912                           
   913                           ; 2 bytes @ 0x15
   914  000016                     	ds	2
   915  000018                     fputs@fp:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0x17
   919  000018                     	ds	2
   920  00001A                     fputs@c:
   921                           	opt callstack 0
   922                           
   923                           ; 1 bytes @ 0x19
   924  00001A                     	ds	1
   925  00001B                     fputs@i:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0x1A
   929  00001B                     	ds	2
   930  00001D                     ?_pad:
   931                           	opt callstack 0
   932  00001D                     ___aodiv@counter:
   933                           	opt callstack 0
   934  00001D                     ___aomod@counter:
   935                           	opt callstack 0
   936  00001D                     pad@fp:
   937                           	opt callstack 0
   938                           
   939                           ; 2 bytes @ 0x1C
   940  00001D                     	ds	1
   941  00001E                     ___aodiv@sign:
   942                           	opt callstack 0
   943  00001E                     ___aomod@sign:
   944                           	opt callstack 0
   945                           
   946                           ; 1 bytes @ 0x1D
   947  00001E                     	ds	1
   948  00001F                     ?_abs:
   949                           	opt callstack 0
   950  00001F                     pad@buf:
   951                           	opt callstack 0
   952  00001F                     abs@a:
   953                           	opt callstack 0
   954  00001F                     ___aodiv@quotient:
   955                           	opt callstack 0
   956                           
   957                           ; 8 bytes @ 0x1E
   958  00001F                     	ds	2
   959  000021                     ??_abs:
   960  000021                     pad@p:
   961                           	opt callstack 0
   962                           
   963                           ; 2 bytes @ 0x20
   964  000021                     	ds	2
   965  000023                     ??_pad:
   966                           
   967                           ; 1 bytes @ 0x22
   968  000023                     	ds	1
   969  000024                     pad@i:
   970                           	opt callstack 0
   971                           
   972                           ; 2 bytes @ 0x23
   973  000024                     	ds	2
   974  000026                     pad@w:
   975                           	opt callstack 0
   976                           
   977                           ; 2 bytes @ 0x25
   978  000026                     	ds	2
   979  000028                     ?_dtoa:
   980                           	opt callstack 0
   981  000028                     dtoa@fp:
   982                           	opt callstack 0
   983                           
   984                           ; 2 bytes @ 0x27
   985  000028                     	ds	2
   986  00002A                     dtoa@d:
   987                           	opt callstack 0
   988                           
   989                           ; 8 bytes @ 0x29
   990  00002A                     	ds	8
   991  000032                     ??_dtoa:
   992                           
   993                           ; 1 bytes @ 0x31
   994  000032                     	ds	8
   995  00003A                     ?_vfpfcnvrt:
   996                           	opt callstack 0
   997  00003A                     vfpfcnvrt@fp:
   998                           	opt callstack 0
   999                           
  1000                           ; 2 bytes @ 0x39
  1001  00003A                     	ds	2
  1002  00003C                     vfpfcnvrt@fmt:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x3B
  1006  00003C                     	ds	2
  1007  00003E                     vfpfcnvrt@ap:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x3D
  1011  00003E                     	ds	2
  1012  000040                     ??_vfpfcnvrt:
  1013                           
  1014                           ; 1 bytes @ 0x3F
  1015  000040                     	ds	2
  1016  000042                     vfprintf@cfmt:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x41
  1020  000042                     	ds	2
  1021  000044                     ??_display:
  1022  000044                     
  1023                           ; 1 bytes @ 0x43
  1024  000044                     	ds	2
  1025  000046                     
  1026                           ; 1 bytes @ 0x45
  1027 ;;
  1028 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1029 ;;
  1030 ;; *************** function _main *****************
  1031 ;; Defined at:
  1032 ;;		line 398 in file "newmain.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1046 ;;      Params:         0       0       0       0
  1047 ;;      Locals:         0       0       0       0
  1048 ;;      Temps:          0       0       0       0
  1049 ;;      Totals:         0       0       0       0
  1050 ;;Total ram usage:        0 bytes
  1051 ;; Hardware stack levels required when called:   10
  1052 ;; This function calls:
  1053 ;;		_LCD_Initialize
  1054 ;;		_configureADC
  1055 ;;		_configureInputs
  1056 ;;		_configureInterrupts
  1057 ;;		_configurePWM
  1058 ;;		_configureTimer0
  1059 ;;		_configureTimer1
  1060 ;;		_configureTimer5
  1061 ;;		_display
  1062 ;;		_readADC
  1063 ;;		_startPWM
  1064 ;;		_updateTMR0PreloadValue
  1065 ;; This function is called by:
  1066 ;;		Startup code after reset
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text0
  1071  000ECA                     __ptext0:
  1072                           	opt callstack 0
  1073  000ECA                     _main:
  1074                           	opt callstack 21
  1075  000ECA                     
  1076                           ;newmain.c: 399:     LCD_Initialize();
  1077  000ECA  ECBB  F007         	call	_LCD_Initialize	;wreg free
  1078  000ECE                     
  1079                           ;newmain.c: 400:     configureInterrupts();
  1080  000ECE  EC1A  F009         	call	_configureInterrupts	;wreg free
  1081  000ED2                     
  1082                           ;newmain.c: 401:     configurePWM();
  1083  000ED2  EC4D  F008         	call	_configurePWM	;wreg free
  1084  000ED6                     
  1085                           ;newmain.c: 402:     configureADC();
  1086  000ED6  ECDC  F008         	call	_configureADC	;wreg free
  1087  000EDA                     
  1088                           ;newmain.c: 403:     configureTimer0();
  1089  000EDA  ECF0  F008         	call	_configureTimer0	;wreg free
  1090  000EDE                     
  1091                           ;newmain.c: 404:     configureTimer1();
  1092  000EDE  EC05  F009         	call	_configureTimer1	;wreg free
  1093  000EE2                     
  1094                           ;newmain.c: 405:     configureTimer5();
  1095  000EE2  ECFB  F008         	call	_configureTimer5	;wreg free
  1096  000EE6                     
  1097                           ;newmain.c: 406:     configureInputs();
  1098  000EE6  EC15  F009         	call	_configureInputs	;wreg free
  1099  000EEA                     
  1100                           ;newmain.c: 407:     startPWM();
  1101  000EEA  EC20  F009         	call	_startPWM	;wreg free
  1102  000EEE                     
  1103                           ;newmain.c: 409:     TRISAbits.TRISA2 = 0;
  1104  000EEE  9492               	bcf	146,2,c	;volatile
  1105  000EF0                     
  1106                           ;newmain.c: 410:     TRISAbits.RA2 = 0;
  1107  000EF0  9492               	bcf	146,2,c	;volatile
  1108  000EF2                     
  1109                           ;newmain.c: 411:     ANSEL0bits.ANS2 = 0;
  1110  000EF2  94B8               	bcf	184,2,c	;volatile
  1111  000EF4                     
  1112                           ;newmain.c: 412:     PORTAbits.RA2 = 0;
  1113  000EF4  9480               	bcf	128,2,c	;volatile
  1114  000EF6                     
  1115                           ;newmain.c: 415:     __nop();
  1116  000EF6  F000               	nop	
  1117  000EF8                     l2516:
  1118                           
  1119                           ;newmain.c: 417:         __nop();
  1120  000EF8  F000               	nop	
  1121  000EFA                     
  1122                           ;newmain.c: 418:         display();
  1123  000EFA  ECDE  F003         	call	_display	;wreg free
  1124  000EFE                     
  1125                           ;newmain.c: 419:         updateTMR0PreloadValue();
  1126  000EFE  EC53  F006         	call	_updateTMR0PreloadValue	;wreg free
  1127  000F02                     
  1128                           ;newmain.c: 420:         readADC();
  1129  000F02  ECE4  F007         	call	_readADC	;wreg free
  1130  000F06                     
  1131                           ;newmain.c: 429:         if (PORTAbits.RA3 == 1) {
  1132  000F06  A680               	btfss	128,3,c	;volatile
  1133  000F08  EF88  F007         	goto	u1961
  1134  000F0C  EF8A  F007         	goto	u1960
  1135  000F10                     u1961:
  1136  000F10  EF8D  F007         	goto	l169
  1137  000F14                     u1960:
  1138  000F14                     
  1139                           ;newmain.c: 430:             PORTAbits.RA2 = 1;
  1140  000F14  8480               	bsf	128,2,c	;volatile
  1141                           
  1142                           ;newmain.c: 432:         } else {
  1143  000F16  EF7C  F007         	goto	l2516
  1144  000F1A                     l169:
  1145                           
  1146                           ;newmain.c: 433:             PORTAbits.RA2 = 0;
  1147  000F1A  9480               	bcf	128,2,c	;volatile
  1148  000F1C  EF7C  F007         	goto	l2516
  1149  000F20  EFCD  F000         	goto	start
  1150  000F24                     __end_of_main:
  1151                           	opt callstack 0
  1152                           
  1153 ;; *************** function _updateTMR0PreloadValue *****************
  1154 ;; Defined at:
  1155 ;;		line 532 in file "newmain.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1169 ;;      Params:         0       0       0       0
  1170 ;;      Locals:         0       0       0       0
  1171 ;;      Temps:          2       0       0       0
  1172 ;;      Totals:         2       0       0       0
  1173 ;;Total ram usage:        2 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_main
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           	psect	text1
  1184  000CA6                     __ptext1:
  1185                           	opt callstack 0
  1186  000CA6                     _updateTMR0PreloadValue:
  1187                           	opt callstack 29
  1188  000CA6                     
  1189                           ;newmain.c: 533:     if (shouldUpdateTimer0Preload) {
  1190  000CA6  504A               	movf	_shouldUpdateTimer0Preload^0,w,c	;volatile
  1191  000CA8  B4D8               	btfsc	status,2,c
  1192  000CAA  EF59  F006         	goto	u1321
  1193  000CAE  EF5B  F006         	goto	u1320
  1194  000CB2                     u1321:
  1195  000CB2  EF94  F006         	goto	l202
  1196  000CB6                     u1320:
  1197  000CB6                     
  1198                           ;newmain.c: 534:         if (timer5OverflowCount == 1) {
  1199  000CB6  044C               	decf	_timer5OverflowCount^0,w,c	;volatile
  1200  000CB8  A4D8               	btfss	status,2,c
  1201  000CBA  EF61  F006         	goto	u1331
  1202  000CBE  EF63  F006         	goto	u1330
  1203  000CC2                     u1331:
  1204  000CC2  EF91  F006         	goto	l2062
  1205  000CC6                     u1330:
  1206  000CC6                     
  1207                           ;newmain.c: 535:             timer5OverflowCount = 0;
  1208  000CC6  0E00               	movlw	0
  1209  000CC8  6E4C               	movwf	_timer5OverflowCount^0,c	;volatile
  1210  000CCA                     
  1211                           ;newmain.c: 536:             if (currentPreloadIndex < adcPercent) {
  1212  000CCA  504B               	movf	_currentPreloadIndex^0,w,c	;volatile
  1213  000CCC  6E0D               	movwf	??_updateTMR0PreloadValue^0,c
  1214  000CCE  6A0E               	clrf	(??_updateTMR0PreloadValue+1)^0,c
  1215  000CD0  0100               	movlb	0	; () banked
  1216  000CD2  51E6               	movf	_adcPercent& (0+255),w,b	;volatile
  1217  000CD4  5C0D               	subwf	??_updateTMR0PreloadValue^0,w,c
  1218  000CD6  51E7               	movf	(_adcPercent+1)& (0+255),w,b	;volatile
  1219  000CD8  580E               	subwfb	(??_updateTMR0PreloadValue+1)^0,w,c
  1220  000CDA  B0D8               	btfsc	status,0,c
  1221  000CDC  EF72  F006         	goto	u1341
  1222  000CE0  EF74  F006         	goto	u1340
  1223  000CE4                     u1341:
  1224  000CE4  EF77  F006         	goto	l2056
  1225  000CE8                     u1340:
  1226  000CE8                     
  1227                           ; BSR set to: 0
  1228                           ;newmain.c: 537:                 currentPreloadIndex++;
  1229  000CE8  2A4B               	incf	_currentPreloadIndex^0,f,c	;volatile
  1230                           
  1231                           ;newmain.c: 538:             } else if (currentPreloadIndex > adcPercent) {
  1232  000CEA  EF83  F006         	goto	l2060
  1233  000CEE                     l2056:
  1234                           
  1235                           ; BSR set to: 0
  1236  000CEE  504B               	movf	_currentPreloadIndex^0,w,c	;volatile
  1237  000CF0  5DE6               	subwf	_adcPercent& (0+255),w,b	;volatile
  1238  000CF2  0E00               	movlw	0
  1239  000CF4  59E7               	subwfb	(_adcPercent+1)& (0+255),w,b	;volatile
  1240  000CF6  B0D8               	btfsc	status,0,c
  1241  000CF8  EF80  F006         	goto	u1351
  1242  000CFC  EF82  F006         	goto	u1350
  1243  000D00                     u1351:
  1244  000D00  EF83  F006         	goto	l2060
  1245  000D04                     u1350:
  1246  000D04                     
  1247                           ; BSR set to: 0
  1248                           ;newmain.c: 539:                 currentPreloadIndex--;
  1249  000D04  064B               	decf	_currentPreloadIndex^0,f,c	;volatile
  1250  000D06                     l2060:
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;newmain.c: 541:             timer0ReloadValue = timer0PreloadValues[currentPreloadIndex
      +                          ];
  1254  000D06  504B               	movf	_currentPreloadIndex^0,w,c	;volatile
  1255  000D08  0D02               	mullw	2
  1256  000D0A  0EE9               	movlw	low _timer0PreloadValues
  1257  000D0C  24F3               	addwf	243,w,c
  1258  000D0E  6EF6               	movwf	tblptrl,c
  1259  000D10  0E3C               	movlw	high _timer0PreloadValues
  1260  000D12  20F4               	addwfc	244,w,c
  1261  000D14  6EF7               	movwf	tblptrh,c
  1262  000D16                     	if	0	;There are less than 3 active tblptr bytes
  1263  000D16                     	endif
  1264  000D16  0009               	tblrd		*+
  1265  000D18  CFF5 F04E          	movff	tablat,_timer0ReloadValue	;volatile
  1266  000D1C  000A               	tblrd		*-
  1267  000D1E  CFF5 F04F          	movff	tablat,_timer0ReloadValue+1	;volatile
  1268  000D22                     l2062:
  1269                           
  1270                           ;newmain.c: 543:         timer5OverflowCount++;
  1271  000D22  2A4C               	incf	_timer5OverflowCount^0,f,c	;volatile
  1272  000D24                     
  1273                           ;newmain.c: 544:         shouldUpdateTimer0Preload = 0;
  1274  000D24  0E00               	movlw	0
  1275  000D26  6E4A               	movwf	_shouldUpdateTimer0Preload^0,c	;volatile
  1276  000D28                     l202:
  1277  000D28  0012               	return		;funcret
  1278  000D2A                     __end_of_updateTMR0PreloadValue:
  1279                           	opt callstack 0
  1280                           
  1281 ;; *************** function _startPWM *****************
  1282 ;; Defined at:
  1283 ;;		line 275 in file "newmain.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		None
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1297 ;;      Params:         0       0       0       0
  1298 ;;      Locals:         0       0       0       0
  1299 ;;      Temps:          0       0       0       0
  1300 ;;      Totals:         0       0       0       0
  1301 ;;Total ram usage:        0 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text2
  1312  001240                     __ptext2:
  1313                           	opt callstack 0
  1314  001240                     _startPWM:
  1315                           	opt callstack 29
  1316  001240                     
  1317                           ;newmain.c: 276:     PTCON1bits.PTEN = 1;
  1318  001240  8E7E               	bsf	126,7,c	;volatile
  1319  001242  0012               	return		;funcret
  1320  001244                     __end_of_startPWM:
  1321                           	opt callstack 0
  1322                           
  1323 ;; *************** function _readADC *****************
  1324 ;; Defined at:
  1325 ;;		line 548 in file "newmain.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1339 ;;      Params:         0       0       0       0
  1340 ;;      Locals:         0       0       0       0
  1341 ;;      Temps:          1       0       0       0
  1342 ;;      Totals:         1       0       0       0
  1343 ;;Total ram usage:        1 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    2
  1346 ;; This function calls:
  1347 ;;		___lwdiv
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text3
  1354  000FC8                     __ptext3:
  1355                           	opt callstack 0
  1356  000FC8                     _readADC:
  1357                           	opt callstack 28
  1358  000FC8                     
  1359                           ;newmain.c: 549:     if (PIR1bits.ADIF == 1) {
  1360  000FC8  AC9E               	btfss	158,6,c	;volatile
  1361  000FCA  EFE9  F007         	goto	u1361
  1362  000FCE  EFEB  F007         	goto	u1360
  1363  000FD2                     u1361:
  1364  000FD2  EF0A  F008         	goto	l207
  1365  000FD6                     u1360:
  1366  000FD6                     
  1367                           ;newmain.c: 550:         if (PrevADRESH != ADRESH) {
  1368  000FD6  50C4               	movf	196,w,c	;volatile
  1369  000FD8  1850               	xorwf	_PrevADRESH^0,w,c	;volatile
  1370  000FDA  B4D8               	btfsc	status,2,c
  1371  000FDC  EFF2  F007         	goto	u1371
  1372  000FE0  EFF4  F007         	goto	u1370
  1373  000FE4                     u1371:
  1374  000FE4  EF07  F008         	goto	l2072
  1375  000FE8                     u1370:
  1376  000FE8                     
  1377                           ;newmain.c: 551:             adcPercent = (255 - ADRESH) * 99 / maxADCVal;
  1378  000FE8  50C4               	movf	196,w,c	;volatile
  1379  000FEA  0AFF               	xorlw	255
  1380  000FEC  6E14               	movwf	??_readADC^0,c
  1381  000FEE  5014               	movf	??_readADC^0,w,c
  1382  000FF0  0D63               	mullw	99
  1383  000FF2  CFF3 F00D          	movff	prodl,___lwdiv@dividend
  1384  000FF6  CFF4 F00E          	movff	prodh,___lwdiv@dividend+1
  1385  000FFA  C0E9  F00F         	movff	_maxADCVal,___lwdiv@divisor
  1386  000FFE  C0EA  F010         	movff	_maxADCVal+1,___lwdiv@divisor+1
  1387  001002  EC95  F006         	call	___lwdiv	;wreg free
  1388  001006  C00D  F0E6         	movff	?___lwdiv,_adcPercent	;volatile
  1389  00100A  C00E  F0E7         	movff	?___lwdiv+1,_adcPercent+1	;volatile
  1390  00100E                     l2072:
  1391                           
  1392                           ;newmain.c: 554:         PrevADRESH = ADRESH;
  1393  00100E  CFC4 F050          	movff	4036,_PrevADRESH	;volatile
  1394  001012                     
  1395                           ;newmain.c: 555:         PIR1bits.ADIF = 0;
  1396  001012  9C9E               	bcf	158,6,c	;volatile
  1397  001014                     l207:
  1398  001014  0012               	return		;funcret
  1399  001016                     __end_of_readADC:
  1400                           	opt callstack 0
  1401                           
  1402 ;; *************** function _display *****************
  1403 ;; Defined at:
  1404 ;;		line 498 in file "newmain.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  i               2   83[BANK0 ] int 
  1409 ;;  str1           16   64[BANK0 ] unsigned char [16]
  1410 ;;  str2           16   48[BANK0 ] unsigned char [16]
  1411 ;;  timer0Reload    2   81[BANK0 ] unsigned int 
  1412 ;;  noDigits        1   80[BANK0 ] unsigned char 
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1422 ;;      Params:         0       0       0       0
  1423 ;;      Locals:         0      37       0       0
  1424 ;;      Temps:          2       0       0       0
  1425 ;;      Totals:         2      37       0       0
  1426 ;;Total ram usage:       39 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; Hardware stack levels required when called:    9
  1429 ;; This function calls:
  1430 ;;		_LCDPutChar
  1431 ;;		_LCDPutCmd
  1432 ;;		_LCDPutStr
  1433 ;;		___lwdiv
  1434 ;;		___lwmod
  1435 ;;		_sprintf
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text4
  1442  0007BC                     __ptext4:
  1443                           	opt callstack 0
  1444  0007BC                     _display:
  1445                           	opt callstack 21
  1446  0007BC                     
  1447                           ;newmain.c: 499:     if (shouldDisplay) {
  1448  0007BC  0100               	movlb	0	; () banked
  1449  0007BE  51BD               	movf	_shouldDisplay& (0+255),w,b	;volatile
  1450  0007C0  B4D8               	btfsc	status,2,c
  1451  0007C2  EFE5  F003         	goto	u1891
  1452  0007C6  EFE7  F003         	goto	u1890
  1453  0007CA                     u1891:
  1454  0007CA  EF91  F004         	goto	l194
  1455  0007CE                     u1890:
  1456  0007CE                     
  1457                           ; BSR set to: 0
  1458                           ;newmain.c: 500:         if (refreshTime == 5) {
  1459  0007CE  0E05               	movlw	5
  1460  0007D0  19BF               	xorwf	_refreshTime& (0+255),w,b	;volatile
  1461  0007D2  A4D8               	btfss	status,2,c
  1462  0007D4  EFEE  F003         	goto	u1901
  1463  0007D8  EFF0  F003         	goto	u1900
  1464  0007DC                     u1901:
  1465  0007DC  EF86  F004         	goto	l2480
  1466  0007E0                     u1900:
  1467  0007E0                     
  1468                           ; BSR set to: 0
  1469                           ;newmain.c: 501:             if (prevAdcPercent != adcPercent || prevTimer0ReloadValue !
      +                          = timer0ReloadValue) {
  1470  0007E0  51E6               	movf	_adcPercent& (0+255),w,b	;volatile
  1471  0007E2  19E4               	xorwf	_prevAdcPercent& (0+255),w,b	;volatile
  1472  0007E4  E107               	bnz	u1911
  1473  0007E6  51E7               	movf	(_adcPercent+1)& (0+255),w,b	;volatile
  1474  0007E8  19E5               	xorwf	(_prevAdcPercent+1)& (0+255),w,b	;volatile
  1475  0007EA  A4D8               	btfss	status,2,c
  1476  0007EC  EFFA  F003         	goto	u1911
  1477  0007F0  EFFC  F003         	goto	u1910
  1478  0007F4                     u1911:
  1479  0007F4  EF08  F004         	goto	l2448
  1480  0007F8                     u1910:
  1481  0007F8                     
  1482                           ; BSR set to: 0
  1483  0007F8  504E               	movf	_timer0ReloadValue^0,w,c	;volatile
  1484  0007FA  19E0               	xorwf	_prevTimer0ReloadValue& (0+255),w,b	;volatile
  1485  0007FC  E109               	bnz	u1920
  1486  0007FE  504F               	movf	(_timer0ReloadValue+1)^0,w,c	;volatile
  1487  000800  19E1               	xorwf	(_prevTimer0ReloadValue+1)& (0+255),w,b	;volatile
  1488  000802  B4D8               	btfsc	status,2,c
  1489  000804  EF06  F004         	goto	u1921
  1490  000808  EF08  F004         	goto	u1920
  1491  00080C                     u1921:
  1492  00080C  EF84  F004         	goto	l2478
  1493  000810                     u1920:
  1494  000810                     l2448:
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;newmain.c: 503:                 char str1[16];;newmain.c: 504:                 char str
      +                          2[16];;newmain.c: 506:                 LCDPutCmd(0x01);
  1498  000810  0E01               	movlw	1
  1499  000812  EC6D  F008         	call	_LCDPutCmd
  1500  000816                     
  1501                           ;newmain.c: 507:                 sprintf(str1, "%d", adcPercent);
  1502  000816  0EA0               	movlw	low display@str1
  1503  000818  0100               	movlb	0	; () banked
  1504  00081A  6F80               	movwf	sprintf@s& (0+255),b
  1505  00081C  0E00               	movlw	high display@str1
  1506  00081E  6F81               	movwf	(sprintf@s+1)& (0+255),b
  1507  000820  0EBB               	movlw	low STR_1
  1508  000822  6F82               	movwf	sprintf@fmt& (0+255),b
  1509  000824  0E3D               	movlw	high STR_1
  1510  000826  6F83               	movwf	(sprintf@fmt+1)& (0+255),b
  1511  000828  C0E6  F084         	movff	_adcPercent,?_sprintf+4	;volatile
  1512  00082C  C0E7  F085         	movff	_adcPercent+1,?_sprintf+5	;volatile
  1513  000830  EC92  F007         	call	_sprintf	;wreg free
  1514  000834                     
  1515                           ;newmain.c: 508:                 LCDPutStr(str1);
  1516  000834  0EA0               	movlw	low display@str1
  1517  000836  6E12               	movwf	LCDPutStr@str^0,c
  1518  000838  0E00               	movlw	high display@str1
  1519  00083A  6E13               	movwf	(LCDPutStr@str+1)^0,c
  1520  00083C  EC8C  F008         	call	_LCDPutStr	;wreg free
  1521  000840                     
  1522                           ;newmain.c: 509:                 LCDPutChar(' ');
  1523  000840  0E20               	movlw	32
  1524  000842  ECC4  F008         	call	_LCDPutChar
  1525  000846                     
  1526                           ;newmain.c: 511:                 unsigned int timer0ReloadValueCopy = timer0ReloadValue;
  1527  000846  C04E  F0B1         	movff	_timer0ReloadValue,display@timer0ReloadValueCopy	;volatile
  1528  00084A  C04F  F0B2         	movff	_timer0ReloadValue+1,display@timer0ReloadValueCopy+1	;volatile
  1529  00084E                     
  1530                           ;newmain.c: 512:                 char noDigits = 0;
  1531  00084E  0E00               	movlw	0
  1532  000850  0100               	movlb	0	; () banked
  1533  000852  6FB0               	movwf	display@noDigits& (0+255),b
  1534                           
  1535                           ;newmain.c: 513:                 while (timer0ReloadValueCopy > 0) {
  1536  000854  EF4E  F004         	goto	l2466
  1537  000858                     l2460:
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;newmain.c: 514:                     str2[noDigits] = timer0ReloadValueCopy % 10;
  1541  000858  0E90               	movlw	low display@str2
  1542  00085A  25B0               	addwf	display@noDigits& (0+255),w,b
  1543  00085C  6ED9               	movwf	fsr2l,c
  1544  00085E  6ADA               	clrf	fsr2h,c
  1545  000860  0E00               	movlw	high display@str2
  1546  000862  22DA               	addwfc	fsr2h,f,c
  1547  000864  C0B1  F00D         	movff	display@timer0ReloadValueCopy,___lwmod@dividend
  1548  000868  C0B2  F00E         	movff	display@timer0ReloadValueCopy+1,___lwmod@dividend+1
  1549  00086C  0E00               	movlw	0
  1550  00086E  6E10               	movwf	(___lwmod@divisor+1)^0,c
  1551  000870  0E0A               	movlw	10
  1552  000872  6E0F               	movwf	___lwmod@divisor^0,c
  1553  000874  EC02  F007         	call	___lwmod	;wreg free
  1554  000878  500D               	movf	?___lwmod^0,w,c
  1555  00087A  6EDF               	movwf	indf2,c
  1556  00087C                     
  1557                           ;newmain.c: 515:                     timer0ReloadValueCopy /= 10;
  1558  00087C  C0B1  F00D         	movff	display@timer0ReloadValueCopy,___lwdiv@dividend
  1559  000880  C0B2  F00E         	movff	display@timer0ReloadValueCopy+1,___lwdiv@dividend+1
  1560  000884  0E00               	movlw	0
  1561  000886  6E10               	movwf	(___lwdiv@divisor+1)^0,c
  1562  000888  0E0A               	movlw	10
  1563  00088A  6E0F               	movwf	___lwdiv@divisor^0,c
  1564  00088C  EC95  F006         	call	___lwdiv	;wreg free
  1565  000890  C00D  F0B1         	movff	?___lwdiv,display@timer0ReloadValueCopy
  1566  000894  C00E  F0B2         	movff	?___lwdiv+1,display@timer0ReloadValueCopy+1
  1567  000898                     
  1568                           ;newmain.c: 516:                     noDigits++;
  1569  000898  0100               	movlb	0	; () banked
  1570  00089A  2BB0               	incf	display@noDigits& (0+255),f,b
  1571  00089C                     l2466:
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;newmain.c: 513:                 while (timer0ReloadValueCopy > 0) {
  1575  00089C  51B1               	movf	display@timer0ReloadValueCopy& (0+255),w,b
  1576  00089E  11B2               	iorwf	(display@timer0ReloadValueCopy+1)& (0+255),w,b
  1577  0008A0  A4D8               	btfss	status,2,c
  1578  0008A2  EF55  F004         	goto	u1931
  1579  0008A6  EF57  F004         	goto	u1930
  1580  0008AA                     u1931:
  1581  0008AA  EF2C  F004         	goto	l2460
  1582  0008AE                     u1930:
  1583  0008AE                     
  1584                           ; BSR set to: 0
  1585                           ;newmain.c: 518:                 for (int i = noDigits - 1; i >= 0; i--) {
  1586  0008AE  0EFF               	movlw	255
  1587  0008B0  25B0               	addwf	display@noDigits& (0+255),w,b
  1588  0008B2  6FB3               	movwf	display@i& (0+255),b
  1589  0008B4  6BB4               	clrf	(display@i+1)& (0+255),b
  1590  0008B6  0EFF               	movlw	255
  1591  0008B8  23B4               	addwfc	(display@i+1)& (0+255),f,b
  1592  0008BA  BFB4               	btfsc	(display@i+1)& (0+255),7,b
  1593  0008BC  EF64  F004         	goto	u1940
  1594  0008C0  EF62  F004         	goto	u1941
  1595  0008C4                     u1941:
  1596  0008C4  EF66  F004         	goto	l2472
  1597  0008C8                     u1940:
  1598  0008C8  EF84  F004         	goto	l2478
  1599  0008CC                     l2472:
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;newmain.c: 519:                     LCDPutChar(digits[str2[i]]);
  1603  0008CC  0E90               	movlw	low display@str2
  1604  0008CE  25B3               	addwf	display@i& (0+255),w,b
  1605  0008D0  6ED9               	movwf	fsr2l,c
  1606  0008D2  0E00               	movlw	high display@str2
  1607  0008D4  21B4               	addwfc	(display@i+1)& (0+255),w,b
  1608  0008D6  6EDA               	movwf	fsr2h,c
  1609  0008D8  50DF               	movf	indf2,w,c
  1610  0008DA  6E44               	movwf	??_display^0,c
  1611  0008DC  6A45               	clrf	(??_display+1)^0,c
  1612  0008DE  0EB1               	movlw	low _digits
  1613  0008E0  2444               	addwf	??_display^0,w,c
  1614  0008E2  6EF6               	movwf	tblptrl,c
  1615  0008E4  0E3D               	movlw	high _digits
  1616  0008E6  2045               	addwfc	(??_display+1)^0,w,c
  1617  0008E8  6EF7               	movwf	tblptrh,c
  1618  0008EA                     	if	0	;There are less than 3 active tblptr bytes
  1619  0008EA                     	endif
  1620  0008EA  0008               	tblrd		*
  1621  0008EC  50F5               	movf	tablat,w,c
  1622  0008EE  ECC4  F008         	call	_LCDPutChar
  1623  0008F2                     
  1624                           ;newmain.c: 520:                 }
  1625  0008F2  0100               	movlb	0	; () banked
  1626  0008F4  07B3               	decf	display@i& (0+255),f,b
  1627  0008F6  A0D8               	btfss	status,0,c
  1628  0008F8  07B4               	decf	(display@i+1)& (0+255),f,b
  1629  0008FA                     
  1630                           ; BSR set to: 0
  1631  0008FA  BFB4               	btfsc	(display@i+1)& (0+255),7,b
  1632  0008FC  EF84  F004         	goto	u1950
  1633  000900  EF82  F004         	goto	u1951
  1634  000904                     u1951:
  1635  000904  EF66  F004         	goto	l2472
  1636  000908                     u1950:
  1637  000908                     l2478:
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;newmain.c: 523:             refreshTime = 0;
  1641  000908  0E00               	movlw	0
  1642  00090A  6FBF               	movwf	_refreshTime& (0+255),b	;volatile
  1643  00090C                     l2480:
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;newmain.c: 525:         refreshTime++;
  1647  00090C  2BBF               	incf	_refreshTime& (0+255),f,b	;volatile
  1648  00090E                     
  1649                           ; BSR set to: 0
  1650                           ;newmain.c: 526:         prevAdcPercent = adcPercent;
  1651  00090E  C0E6  F0E4         	movff	_adcPercent,_prevAdcPercent	;volatile
  1652  000912  C0E7  F0E5         	movff	_adcPercent+1,_prevAdcPercent+1	;volatile
  1653  000916                     
  1654                           ; BSR set to: 0
  1655                           ;newmain.c: 527:         prevTimer0ReloadValue = timer0ReloadValue;
  1656  000916  C04E  F0E0         	movff	_timer0ReloadValue,_prevTimer0ReloadValue	;volatile
  1657  00091A  C04F  F0E1         	movff	_timer0ReloadValue+1,_prevTimer0ReloadValue+1	;volatile
  1658  00091E                     
  1659                           ; BSR set to: 0
  1660                           ;newmain.c: 528:         shouldDisplay = 0;
  1661  00091E  0E00               	movlw	0
  1662  000920  6FBD               	movwf	_shouldDisplay& (0+255),b	;volatile
  1663  000922                     l194:
  1664                           
  1665                           ; BSR set to: 0
  1666  000922  0012               	return		;funcret
  1667  000924                     __end_of_display:
  1668                           	opt callstack 0
  1669                           
  1670 ;; *************** function _sprintf *****************
  1671 ;; Defined at:
  1672 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  s               2   32[BANK0 ] PTR unsigned char 
  1675 ;;		 -> display@str1(16), 
  1676 ;;  fmt             2   34[BANK0 ] PTR const unsigned char 
  1677 ;;		 -> STR_1(3), 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  f               6   42[BANK0 ] struct _IO_FILE
  1680 ;;  ap              2   40[BANK0 ] PTR void [1]
  1681 ;;		 -> ?_sprintf(2), 
  1682 ;;  ret             2    0        int 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2   32[BANK0 ] int 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1692 ;;      Params:         0       6       0       0
  1693 ;;      Locals:         0      10       0       0
  1694 ;;      Temps:          0       0       0       0
  1695 ;;      Totals:         0      16       0       0
  1696 ;;Total ram usage:       16 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    8
  1699 ;; This function calls:
  1700 ;;		_vfprintf
  1701 ;; This function is called by:
  1702 ;;		_display
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text5
  1707  000F24                     __ptext5:
  1708                           	opt callstack 0
  1709  000F24                     _sprintf:
  1710                           	opt callstack 21
  1711  000F24  0E84               	movlw	low (?_sprintf+4)
  1712  000F26  0100               	movlb	0	; () banked
  1713  000F28  6F88               	movwf	sprintf@ap& (0+255),b
  1714  000F2A  0E00               	movlw	high (?_sprintf+4)
  1715  000F2C  6F89               	movwf	(sprintf@ap+1)& (0+255),b
  1716  000F2E  C080  F08A         	movff	sprintf@s,sprintf@f
  1717  000F32  C081  F08B         	movff	sprintf@s+1,sprintf@f+1
  1718  000F36                     
  1719                           ; BSR set to: 0
  1720  000F36  0E00               	movlw	0
  1721  000F38  6F8D               	movwf	(sprintf@f+3)& (0+255),b
  1722  000F3A  0E00               	movlw	0
  1723  000F3C  6F8C               	movwf	(sprintf@f+2)& (0+255),b
  1724  000F3E                     
  1725                           ; BSR set to: 0
  1726  000F3E  0E00               	movlw	0
  1727  000F40  6F8F               	movwf	(sprintf@f+5)& (0+255),b
  1728  000F42  0E00               	movlw	0
  1729  000F44  6F8E               	movwf	(sprintf@f+4)& (0+255),b
  1730  000F46                     
  1731                           ; BSR set to: 0
  1732  000F46  0E8A               	movlw	low sprintf@f
  1733  000F48  6F7A               	movwf	vfprintf@fp& (0+255),b
  1734  000F4A  0E00               	movlw	high sprintf@f
  1735  000F4C  6F7B               	movwf	(vfprintf@fp+1)& (0+255),b
  1736  000F4E  C082  F07C         	movff	sprintf@fmt,vfprintf@fmt
  1737  000F52  C083  F07D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1738  000F56  0E88               	movlw	low sprintf@ap
  1739  000F58  6F7E               	movwf	vfprintf@ap& (0+255),b
  1740  000F5A  0E00               	movlw	high sprintf@ap
  1741  000F5C  6F7F               	movwf	(vfprintf@ap+1)& (0+255),b
  1742  000F5E  EC34  F007         	call	_vfprintf	;wreg free
  1743  000F62  0100               	movlb	0	; () banked
  1744  000F64  518C               	movf	(sprintf@f+2)& (0+255),w,b
  1745  000F66  2580               	addwf	sprintf@s& (0+255),w,b
  1746  000F68  6ED9               	movwf	fsr2l,c
  1747  000F6A  518D               	movf	(sprintf@f+3)& (0+255),w,b
  1748  000F6C  2181               	addwfc	(sprintf@s+1)& (0+255),w,b
  1749  000F6E  6EDA               	movwf	fsr2h,c
  1750  000F70  0E00               	movlw	0
  1751  000F72  6EDF               	movwf	indf2,c
  1752  000F74                     
  1753                           ; BSR set to: 0
  1754  000F74  0012               	return		;funcret
  1755  000F76                     __end_of_sprintf:
  1756                           	opt callstack 0
  1757                           
  1758 ;; *************** function _vfprintf *****************
  1759 ;; Defined at:
  1760 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  1763 ;;		 -> sprintf@f(6), 
  1764 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
  1765 ;;		 -> STR_1(3), 
  1766 ;;  ap              2   30[BANK0 ] PTR PTR void 
  1767 ;;		 -> sprintf@ap(2), 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  cfmt            2   65[COMRAM] PTR unsigned char 
  1770 ;;		 -> STR_1(3), 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  2   26[BANK0 ] int 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1780 ;;      Params:         0       6       0       0
  1781 ;;      Locals:         2       0       0       0
  1782 ;;      Temps:          0       0       0       0
  1783 ;;      Totals:         2       6       0       0
  1784 ;;Total ram usage:        8 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:    7
  1787 ;; This function calls:
  1788 ;;		_vfpfcnvrt
  1789 ;; This function is called by:
  1790 ;;		_sprintf
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text6
  1795  000E68                     __ptext6:
  1796                           	opt callstack 0
  1797  000E68                     _vfprintf:
  1798                           	opt callstack 21
  1799  000E68                     
  1800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1801  000E68  C07C  F042         	movff	vfprintf@fmt,vfprintf@cfmt
  1802  000E6C  C07D  F043         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1803  000E70                     
  1804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1805  000E70  0E00               	movlw	0
  1806  000E72  0100               	movlb	0	; () banked
  1807  000E74  6FBA               	movwf	(_nout+1)& (0+255),b
  1808  000E76  0E00               	movlw	0
  1809  000E78  6FB9               	movwf	_nout& (0+255),b
  1810                           
  1811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1812  000E7A  EF52  F007         	goto	l2426
  1813  000E7E                     l2424:
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1817  000E7E  C07A  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1818  000E82  C07B  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1819  000E86  0E42               	movlw	low vfprintf@cfmt
  1820  000E88  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1821  000E8A  0E00               	movlw	high vfprintf@cfmt
  1822  000E8C  6E3D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1823  000E8E  C07E  F03E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1824  000E92  C07F  F03F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1825  000E96  EC40  F002         	call	_vfpfcnvrt	;wreg free
  1826  000E9A  503A               	movf	?_vfpfcnvrt^0,w,c
  1827  000E9C  0100               	movlb	0	; () banked
  1828  000E9E  27B9               	addwf	_nout& (0+255),f,b
  1829  000EA0  503B               	movf	(?_vfpfcnvrt+1)^0,w,c
  1830  000EA2  23BA               	addwfc	(_nout+1)& (0+255),f,b
  1831  000EA4                     l2426:
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1835  000EA4  C042  FFF6         	movff	vfprintf@cfmt,tblptrl
  1836  000EA8  C043  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1837  000EAC                     	if	0	;tblptru may be non-zero
  1838  000EAC                     	endif
  1839  000EAC                     	if	0	;tblptru may be non-zero
  1840  000EAC                     	endif
  1841  000EAC  0008               	tblrd		*
  1842  000EAE  50F5               	movf	tablat,w,c
  1843  000EB0  0900               	iorlw	0
  1844  000EB2  A4D8               	btfss	status,2,c
  1845  000EB4  EF5E  F007         	goto	u1881
  1846  000EB8  EF60  F007         	goto	u1880
  1847  000EBC                     u1881:
  1848  000EBC  EF3F  F007         	goto	l2424
  1849  000EC0                     u1880:
  1850  000EC0                     
  1851                           ; BSR set to: 0
  1852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1853  000EC0  C0B9  F07A         	movff	_nout,?_vfprintf
  1854  000EC4  C0BA  F07B         	movff	_nout+1,?_vfprintf+1
  1855  000EC8                     
  1856                           ; BSR set to: 0
  1857  000EC8  0012               	return		;funcret
  1858  000ECA                     __end_of_vfprintf:
  1859                           	opt callstack 0
  1860                           
  1861 ;; *************** function _vfpfcnvrt *****************
  1862 ;; Defined at:
  1863 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  1866 ;;		 -> sprintf@f(6), 
  1867 ;;  fmt             2   59[COMRAM] PTR PTR unsigned char 
  1868 ;;		 -> vfprintf@cfmt(2), 
  1869 ;;  ap              2   61[COMRAM] PTR PTR void 
  1870 ;;		 -> sprintf@ap(2), 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  ll              8   18[BANK0 ] long long 
  1873 ;;  llu             8    0        unsigned long long 
  1874 ;;  f               4    0        unsigned long long 
  1875 ;;  vp              3    0        PTR void 
  1876 ;;  ct              3    0        unsigned char [3]
  1877 ;;  cp              3    0        PTR unsigned char 
  1878 ;;  i               2    0        int 
  1879 ;;  done            2    0        int 
  1880 ;;  c               1    0        unsigned char 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  2   57[COMRAM] int 
  1883 ;; Registers used:
  1884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1890 ;;      Params:         6       0       0       0
  1891 ;;      Locals:         0       8       0       0
  1892 ;;      Temps:          2       0       0       0
  1893 ;;      Totals:         8       8       0       0
  1894 ;;Total ram usage:       16 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    6
  1897 ;; This function calls:
  1898 ;;		_dtoa
  1899 ;;		_fputc
  1900 ;; This function is called by:
  1901 ;;		_vfprintf
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text7
  1906  000480                     __ptext7:
  1907                           	opt callstack 0
  1908  000480                     _vfpfcnvrt:
  1909                           	opt callstack 21
  1910  000480                     
  1911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1912  000480  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1913  000484  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1914  000488  CFDE FFF6          	movff	postinc2,tblptrl
  1915  00048C  CFDD FFF7          	movff	postdec2,tblptrh
  1916  000490                     	if	0	;tblptru may be non-zero
  1917  000490                     	endif
  1918  000490                     	if	0	;tblptru may be non-zero
  1919  000490                     	endif
  1920  000490  0008               	tblrd		*
  1921  000492  50F5               	movf	tablat,w,c
  1922  000494  0A25               	xorlw	37
  1923  000496  A4D8               	btfss	status,2,c
  1924  000498  EF50  F002         	goto	u1841
  1925  00049C  EF52  F002         	goto	u1840
  1926  0004A0                     u1841:
  1927  0004A0  EFFE  F002         	goto	l2412
  1928  0004A4                     u1840:
  1929  0004A4                     
  1930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1931  0004A4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1932  0004A8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1933  0004AC  2ADE               	incf	postinc2,f,c
  1934  0004AE  0E00               	movlw	0
  1935  0004B0  22DD               	addwfc	postdec2,f,c
  1936  0004B2                     
  1937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1938  0004B2  0E00               	movlw	0
  1939  0004B4  0100               	movlb	0	; () banked
  1940  0004B6  6FBC               	movwf	(_width+1)& (0+255),b
  1941  0004B8  0E00               	movlw	0
  1942  0004BA  6FBB               	movwf	_width& (0+255),b
  1943  0004BC  C0BB  F048         	movff	_width,_flags
  1944  0004C0  C0BC  F049         	movff	_width+1,_flags+1
  1945  0004C4                     
  1946                           ; BSR set to: 0
  1947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1948  0004C4  6846               	setf	_prec^0,c
  1949  0004C6  6847               	setf	(_prec+1)^0,c
  1950  0004C8                     
  1951                           ; BSR set to: 0
  1952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1953  0004C8  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1954  0004CC  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1955  0004D0  CFDE FFF6          	movff	postinc2,tblptrl
  1956  0004D4  CFDD FFF7          	movff	postdec2,tblptrh
  1957  0004D8                     	if	0	;tblptru may be non-zero
  1958  0004D8                     	endif
  1959  0004D8                     	if	0	;tblptru may be non-zero
  1960  0004D8                     	endif
  1961  0004D8  0008               	tblrd		*
  1962  0004DA  50F5               	movf	tablat,w,c
  1963  0004DC  0A64               	xorlw	100
  1964  0004DE  B4D8               	btfsc	status,2,c
  1965  0004E0  EF74  F002         	goto	u1851
  1966  0004E4  EF76  F002         	goto	u1850
  1967  0004E8                     u1851:
  1968  0004E8  EF88  F002         	goto	l2390
  1969  0004EC                     u1850:
  1970  0004EC                     
  1971                           ; BSR set to: 0
  1972  0004EC  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1973  0004F0  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1974  0004F4  CFDE FFF6          	movff	postinc2,tblptrl
  1975  0004F8  CFDD FFF7          	movff	postdec2,tblptrh
  1976  0004FC                     	if	0	;tblptru may be non-zero
  1977  0004FC                     	endif
  1978  0004FC                     	if	0	;tblptru may be non-zero
  1979  0004FC                     	endif
  1980  0004FC  0008               	tblrd		*
  1981  0004FE  50F5               	movf	tablat,w,c
  1982  000500  0A69               	xorlw	105
  1983  000502  A4D8               	btfss	status,2,c
  1984  000504  EF86  F002         	goto	u1861
  1985  000508  EF88  F002         	goto	u1860
  1986  00050C                     u1861:
  1987  00050C  EFC8  F002         	goto	l2396
  1988  000510                     u1860:
  1989  000510                     l2390:
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1993  000510  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1994  000514  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1995  000518  2ADE               	incf	postinc2,f,c
  1996  00051A  0E00               	movlw	0
  1997  00051C  22DD               	addwfc	postdec2,f,c
  1998                           
  1999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2000  00051E  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2001  000522  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2002  000526  CFDF F040          	movff	indf2,??_vfpfcnvrt
  2003  00052A  0E02               	movlw	2
  2004  00052C  26DE               	addwf	postinc2,f,c
  2005  00052E  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  2006  000532  0E00               	movlw	0
  2007  000534  22DD               	addwfc	postdec2,f,c
  2008  000536  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2009  00053A  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2010  00053E  CFDE F072          	movff	postinc2,vfpfcnvrt@ll
  2011  000542  CFDD F073          	movff	postdec2,vfpfcnvrt@ll+1
  2012  000546  0E00               	movlw	0
  2013  000548  BF73               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2014  00054A  0EFF               	movlw	-1
  2015  00054C  6F74               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2016  00054E  6F75               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2017  000550  6F76               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2018  000552  6F77               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2019  000554  6F78               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2020  000556  6F79               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2021  000558                     
  2022                           ; BSR set to: 0
  2023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2024  000558  C03A  F028         	movff	vfpfcnvrt@fp,dtoa@fp
  2025  00055C  C03B  F029         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2026  000560  C072  F02A         	movff	vfpfcnvrt@ll,dtoa@d
  2027  000564  C073  F02B         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2028  000568  C074  F02C         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2029  00056C  C075  F02D         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2030  000570  C076  F02E         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2031  000574  C077  F02F         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2032  000578  C078  F030         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2033  00057C  C079  F031         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2034  000580  ECCF  F000         	call	_dtoa	;wreg free
  2035  000584  C028  F03A         	movff	?_dtoa,?_vfpfcnvrt
  2036  000588  C029  F03B         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2037  00058C  EF19  F003         	goto	l312
  2038  000590                     l2396:
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2042  000590  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2043  000594  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2044  000598  CFDE FFF6          	movff	postinc2,tblptrl
  2045  00059C  CFDD FFF7          	movff	postdec2,tblptrh
  2046  0005A0                     	if	0	;tblptru may be non-zero
  2047  0005A0                     	endif
  2048  0005A0                     	if	0	;tblptru may be non-zero
  2049  0005A0                     	endif
  2050  0005A0  0008               	tblrd		*
  2051  0005A2  50F5               	movf	tablat,w,c
  2052  0005A4  0A25               	xorlw	37
  2053  0005A6  A4D8               	btfss	status,2,c
  2054  0005A8  EFD8  F002         	goto	u1871
  2055  0005AC  EFDA  F002         	goto	u1870
  2056  0005B0                     u1871:
  2057  0005B0  EFF1  F002         	goto	l2406
  2058  0005B4                     u1870:
  2059  0005B4                     
  2060                           ; BSR set to: 0
  2061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2062  0005B4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2063  0005B8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2064  0005BC  2ADE               	incf	postinc2,f,c
  2065  0005BE  0E00               	movlw	0
  2066  0005C0  22DD               	addwfc	postdec2,f,c
  2067  0005C2                     
  2068                           ; BSR set to: 0
  2069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2070  0005C2  0E00               	movlw	0
  2071  0005C4  6E0E               	movwf	(fputc@c+1)^0,c
  2072  0005C6  0E25               	movlw	37
  2073  0005C8  6E0D               	movwf	fputc@c^0,c
  2074  0005CA  C03A  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  2075  0005CE  C03B  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2076  0005D2  EC44  F005         	call	_fputc	;wreg free
  2077  0005D6                     l2402:
  2078                           
  2079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2080  0005D6  0E00               	movlw	0
  2081  0005D8  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  2082  0005DA  0E01               	movlw	1
  2083  0005DC  6E3A               	movwf	?_vfpfcnvrt^0,c
  2084  0005DE  EF19  F003         	goto	l312
  2085  0005E2                     l2406:
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2089  0005E2  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2090  0005E6  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2091  0005EA  2ADE               	incf	postinc2,f,c
  2092  0005EC  0E00               	movlw	0
  2093  0005EE  22DD               	addwfc	postdec2,f,c
  2094  0005F0                     
  2095                           ; BSR set to: 0
  2096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2097  0005F0  0E00               	movlw	0
  2098  0005F2  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  2099  0005F4  0E00               	movlw	0
  2100  0005F6  6E3A               	movwf	?_vfpfcnvrt^0,c
  2101  0005F8  EF19  F003         	goto	l312
  2102  0005FC                     l2412:
  2103                           
  2104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2105  0005FC  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2106  000600  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2107  000604  CFDE FFF6          	movff	postinc2,tblptrl
  2108  000608  CFDD FFF7          	movff	postdec2,tblptrh
  2109  00060C                     	if	0	;tblptru may be non-zero
  2110  00060C                     	endif
  2111  00060C                     	if	0	;tblptru may be non-zero
  2112  00060C                     	endif
  2113  00060C  0008               	tblrd		*
  2114  00060E  50F5               	movf	tablat,w,c
  2115  000610  6E0D               	movwf	fputc@c^0,c
  2116  000612  6A0E               	clrf	(fputc@c+1)^0,c
  2117  000614  C03A  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  2118  000618  C03B  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2119  00061C  EC44  F005         	call	_fputc	;wreg free
  2120  000620                     
  2121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2122  000620  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2123  000624  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2124  000628  2ADE               	incf	postinc2,f,c
  2125  00062A  0E00               	movlw	0
  2126  00062C  22DD               	addwfc	postdec2,f,c
  2127  00062E  EFEB  F002         	goto	l2402
  2128  000632                     l312:
  2129  000632  0012               	return		;funcret
  2130  000634                     __end_of_vfpfcnvrt:
  2131                           	opt callstack 0
  2132                           
  2133 ;; *************** function _dtoa *****************
  2134 ;; Defined at:
  2135 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  2138 ;;		 -> sprintf@f(6), 
  2139 ;;  d               8   41[COMRAM] long long 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  n               8    8[BANK0 ] long long 
  2142 ;;  i               2   16[BANK0 ] int 
  2143 ;;  s               2    6[BANK0 ] int 
  2144 ;;  w               2    4[BANK0 ] int 
  2145 ;;  p               2    2[BANK0 ] int 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  2   39[COMRAM] int 
  2148 ;; Registers used:
  2149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2155 ;;      Params:        10       0       0       0
  2156 ;;      Locals:         0      18       0       0
  2157 ;;      Temps:          8       0       0       0
  2158 ;;      Totals:        18      18       0       0
  2159 ;;Total ram usage:       36 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    5
  2162 ;; This function calls:
  2163 ;;		___aodiv
  2164 ;;		___aomod
  2165 ;;		_abs
  2166 ;;		_pad
  2167 ;; This function is called by:
  2168 ;;		_vfpfcnvrt
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text8
  2173  00019E                     __ptext8:
  2174                           	opt callstack 0
  2175  00019E                     _dtoa:
  2176                           	opt callstack 21
  2177  00019E                     
  2178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2179  00019E  C02A  F068         	movff	dtoa@d,dtoa@n
  2180  0001A2  C02B  F069         	movff	dtoa@d+1,dtoa@n+1
  2181  0001A6  C02C  F06A         	movff	dtoa@d+2,dtoa@n+2
  2182  0001AA  C02D  F06B         	movff	dtoa@d+3,dtoa@n+3
  2183  0001AE  C02E  F06C         	movff	dtoa@d+4,dtoa@n+4
  2184  0001B2  C02F  F06D         	movff	dtoa@d+5,dtoa@n+5
  2185  0001B6  C030  F06E         	movff	dtoa@d+6,dtoa@n+6
  2186  0001BA  C031  F06F         	movff	dtoa@d+7,dtoa@n+7
  2187  0001BE                     
  2188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2189  0001BE  0100               	movlb	0	; () banked
  2190  0001C0  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
  2191  0001C2  EFE5  F000         	goto	u1691
  2192  0001C6  EFE8  F000         	goto	u1690
  2193  0001CA                     u1691:
  2194  0001CA  0E01               	movlw	1
  2195  0001CC  EFE9  F000         	goto	u1700
  2196  0001D0                     u1690:
  2197  0001D0  0E00               	movlw	0
  2198  0001D2                     u1700:
  2199  0001D2  6F66               	movwf	dtoa@s& (0+255),b
  2200  0001D4  6B67               	clrf	(dtoa@s+1)& (0+255),b
  2201                           
  2202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2203  0001D6  5166               	movf	dtoa@s& (0+255),w,b
  2204  0001D8  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  2205  0001DA  B4D8               	btfsc	status,2,c
  2206  0001DC  EFF2  F000         	goto	u1711
  2207  0001E0  EFF4  F000         	goto	u1710
  2208  0001E4                     u1711:
  2209  0001E4  EF04  F001         	goto	l2322
  2210  0001E8                     u1710:
  2211  0001E8                     
  2212                           ; BSR set to: 0
  2213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2214  0001E8  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
  2215  0001EA  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
  2216  0001EC  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
  2217  0001EE  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
  2218  0001F0  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
  2219  0001F2  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
  2220  0001F4  1F69               	comf	(dtoa@n+1)& (0+255),f,b
  2221  0001F6  6D68               	negf	dtoa@n& (0+255),b
  2222  0001F8  0E00               	movlw	0
  2223  0001FA  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
  2224  0001FC  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
  2225  0001FE  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
  2226  000200  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
  2227  000202  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
  2228  000204  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
  2229  000206  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
  2230  000208                     l2322:
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2234  000208  BE47               	btfsc	(_prec+1)^0,7,c
  2235  00020A  EF09  F001         	goto	u1721
  2236  00020E  EF0B  F001         	goto	u1720
  2237  000212                     u1721:
  2238  000212  EF0C  F001         	goto	l2326
  2239  000216                     u1720:
  2240  000216                     
  2241                           ; BSR set to: 0
  2242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2243  000216  9248               	bcf	_flags^0,1,c
  2244  000218                     l2326:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2248  000218  BE47               	btfsc	(_prec+1)^0,7,c
  2249  00021A  EF19  F001         	goto	u1730
  2250  00021E  5047               	movf	(_prec+1)^0,w,c
  2251  000220  E106               	bnz	u1731
  2252  000222  0446               	decf	_prec^0,w,c
  2253  000224  B0D8               	btfsc	status,0,c
  2254  000226  EF17  F001         	goto	u1731
  2255  00022A  EF19  F001         	goto	u1730
  2256  00022E                     u1731:
  2257  00022E  EF1F  F001         	goto	l285
  2258  000232                     u1730:
  2259  000232                     
  2260                           ; BSR set to: 0
  2261  000232  0E00               	movlw	0
  2262  000234  6F63               	movwf	(dtoa@p+1)& (0+255),b
  2263  000236  0E01               	movlw	1
  2264  000238  6F62               	movwf	dtoa@p& (0+255),b
  2265  00023A  EF23  F001         	goto	l287
  2266  00023E                     l285:
  2267                           
  2268                           ; BSR set to: 0
  2269  00023E  C046  F062         	movff	_prec,dtoa@p
  2270  000242  C047  F063         	movff	_prec+1,dtoa@p+1
  2271  000246                     l287:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2275  000246  C0BB  F064         	movff	_width,dtoa@w
  2276  00024A  C0BC  F065         	movff	_width+1,dtoa@w+1
  2277  00024E                     
  2278                           ; BSR set to: 0
  2279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2280  00024E  5166               	movf	dtoa@s& (0+255),w,b
  2281  000250  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  2282  000252  A4D8               	btfss	status,2,c
  2283  000254  EF2E  F001         	goto	u1741
  2284  000258  EF30  F001         	goto	u1740
  2285  00025C                     u1741:
  2286  00025C  EF37  F001         	goto	l2334
  2287  000260                     u1740:
  2288  000260                     
  2289                           ; BSR set to: 0
  2290  000260  A448               	btfss	_flags^0,2,c
  2291  000262  EF35  F001         	goto	u1751
  2292  000266  EF37  F001         	goto	u1750
  2293  00026A                     u1751:
  2294  00026A  EF3A  F001         	goto	l2336
  2295  00026E                     u1750:
  2296  00026E                     l2334:
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2300  00026E  0764               	decf	dtoa@w& (0+255),f,b
  2301  000270  A0D8               	btfss	status,0,c
  2302  000272  0765               	decf	(dtoa@w+1)& (0+255),f,b
  2303  000274                     l2336:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2307  000274  0E00               	movlw	0
  2308  000276  6F71               	movwf	(dtoa@i+1)& (0+255),b
  2309  000278  0E1F               	movlw	31
  2310  00027A  6F70               	movwf	dtoa@i& (0+255),b
  2311  00027C                     
  2312                           ; BSR set to: 0
  2313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2314  00027C  0E00               	movlw	0
  2315  00027E  6FDF               	movwf	(_dbuf+31)& (0+255),b
  2316                           
  2317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2318  000280  EFBF  F001         	goto	l2350
  2319  000284                     l2340:
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2323  000284  0770               	decf	dtoa@i& (0+255),f,b
  2324  000286  A0D8               	btfss	status,0,c
  2325  000288  0771               	decf	(dtoa@i+1)& (0+255),f,b
  2326  00028A                     
  2327                           ; BSR set to: 0
  2328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2329  00028A  0EC0               	movlw	low _dbuf
  2330  00028C  2570               	addwf	dtoa@i& (0+255),w,b
  2331  00028E  6ED9               	movwf	fsr2l,c
  2332  000290  0E00               	movlw	high _dbuf
  2333  000292  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  2334  000294  6EDA               	movwf	fsr2h,c
  2335  000296  C068  F00D         	movff	dtoa@n,___aomod@dividend
  2336  00029A  C069  F00E         	movff	dtoa@n+1,___aomod@dividend+1
  2337  00029E  C06A  F00F         	movff	dtoa@n+2,___aomod@dividend+2
  2338  0002A2  C06B  F010         	movff	dtoa@n+3,___aomod@dividend+3
  2339  0002A6  C06C  F011         	movff	dtoa@n+4,___aomod@dividend+4
  2340  0002AA  C06D  F012         	movff	dtoa@n+5,___aomod@dividend+5
  2341  0002AE  C06E  F013         	movff	dtoa@n+6,___aomod@dividend+6
  2342  0002B2  C06F  F014         	movff	dtoa@n+7,___aomod@dividend+7
  2343  0002B6  0E0A               	movlw	10
  2344  0002B8  6E15               	movwf	___aomod@divisor^0,c
  2345  0002BA  0E00               	movlw	0
  2346  0002BC  6E16               	movwf	(___aomod@divisor+1)^0,c
  2347  0002BE  0E00               	movlw	0
  2348  0002C0  6E17               	movwf	(___aomod@divisor+2)^0,c
  2349  0002C2  0E00               	movlw	0
  2350  0002C4  6E18               	movwf	(___aomod@divisor+3)^0,c
  2351  0002C6  0E00               	movlw	0
  2352  0002C8  6E19               	movwf	(___aomod@divisor+4)^0,c
  2353  0002CA  0E00               	movlw	0
  2354  0002CC  6E1A               	movwf	(___aomod@divisor+5)^0,c
  2355  0002CE  0E00               	movlw	0
  2356  0002D0  6E1B               	movwf	(___aomod@divisor+6)^0,c
  2357  0002D2  0E00               	movlw	0
  2358  0002D4  6E1C               	movwf	(___aomod@divisor+7)^0,c
  2359  0002D6  EC92  F004         	call	___aomod	;wreg free
  2360  0002DA  C00D  F032         	movff	?___aomod,??_dtoa
  2361  0002DE  C00E  F033         	movff	?___aomod+1,??_dtoa+1
  2362  0002E2  C00F  F034         	movff	?___aomod+2,??_dtoa+2
  2363  0002E6  C010  F035         	movff	?___aomod+3,??_dtoa+3
  2364  0002EA  C011  F036         	movff	?___aomod+4,??_dtoa+4
  2365  0002EE  C012  F037         	movff	?___aomod+5,??_dtoa+5
  2366  0002F2  C013  F038         	movff	?___aomod+6,??_dtoa+6
  2367  0002F6  C014  F039         	movff	?___aomod+7,??_dtoa+7
  2368  0002FA  C032  F01F         	movff	??_dtoa,abs@a
  2369  0002FE  C034  F020         	movff	??_dtoa+2,abs@a+1
  2370  000302  EC2D  F008         	call	_abs	;wreg free
  2371  000306  501F               	movf	?_abs^0,w,c
  2372  000308  0F30               	addlw	48
  2373  00030A  6EDF               	movwf	indf2,c
  2374  00030C                     
  2375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2376  00030C  0100               	movlb	0	; () banked
  2377  00030E  0762               	decf	dtoa@p& (0+255),f,b
  2378  000310  A0D8               	btfss	status,0,c
  2379  000312  0763               	decf	(dtoa@p+1)& (0+255),f,b
  2380  000314                     
  2381                           ; BSR set to: 0
  2382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2383  000314  0764               	decf	dtoa@w& (0+255),f,b
  2384  000316  A0D8               	btfss	status,0,c
  2385  000318  0765               	decf	(dtoa@w+1)& (0+255),f,b
  2386  00031A                     
  2387                           ; BSR set to: 0
  2388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2389  00031A  C068  F00D         	movff	dtoa@n,___aodiv@dividend
  2390  00031E  C069  F00E         	movff	dtoa@n+1,___aodiv@dividend+1
  2391  000322  C06A  F00F         	movff	dtoa@n+2,___aodiv@dividend+2
  2392  000326  C06B  F010         	movff	dtoa@n+3,___aodiv@dividend+3
  2393  00032A  C06C  F011         	movff	dtoa@n+4,___aodiv@dividend+4
  2394  00032E  C06D  F012         	movff	dtoa@n+5,___aodiv@dividend+5
  2395  000332  C06E  F013         	movff	dtoa@n+6,___aodiv@dividend+6
  2396  000336  C06F  F014         	movff	dtoa@n+7,___aodiv@dividend+7
  2397  00033A  0E0A               	movlw	10
  2398  00033C  6E15               	movwf	___aodiv@divisor^0,c
  2399  00033E  0E00               	movlw	0
  2400  000340  6E16               	movwf	(___aodiv@divisor+1)^0,c
  2401  000342  0E00               	movlw	0
  2402  000344  6E17               	movwf	(___aodiv@divisor+2)^0,c
  2403  000346  0E00               	movlw	0
  2404  000348  6E18               	movwf	(___aodiv@divisor+3)^0,c
  2405  00034A  0E00               	movlw	0
  2406  00034C  6E19               	movwf	(___aodiv@divisor+4)^0,c
  2407  00034E  0E00               	movlw	0
  2408  000350  6E1A               	movwf	(___aodiv@divisor+5)^0,c
  2409  000352  0E00               	movlw	0
  2410  000354  6E1B               	movwf	(___aodiv@divisor+6)^0,c
  2411  000356  0E00               	movlw	0
  2412  000358  6E1C               	movwf	(___aodiv@divisor+7)^0,c
  2413  00035A  EC1A  F003         	call	___aodiv	;wreg free
  2414  00035E  C00D  F068         	movff	?___aodiv,dtoa@n
  2415  000362  C00E  F069         	movff	?___aodiv+1,dtoa@n+1
  2416  000366  C00F  F06A         	movff	?___aodiv+2,dtoa@n+2
  2417  00036A  C010  F06B         	movff	?___aodiv+3,dtoa@n+3
  2418  00036E  C011  F06C         	movff	?___aodiv+4,dtoa@n+4
  2419  000372  C012  F06D         	movff	?___aodiv+5,dtoa@n+5
  2420  000376  C013  F06E         	movff	?___aodiv+6,dtoa@n+6
  2421  00037A  C014  F06F         	movff	?___aodiv+7,dtoa@n+7
  2422  00037E                     l2350:
  2423                           
  2424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2425  00037E  0100               	movlb	0	; () banked
  2426  000380  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
  2427  000382  EFCB  F001         	goto	u1761
  2428  000386  5171               	movf	(dtoa@i+1)& (0+255),w,b
  2429  000388  E108               	bnz	u1760
  2430  00038A  0570               	decf	dtoa@i& (0+255),w,b
  2431  00038C  A0D8               	btfss	status,0,c
  2432  00038E  EFCB  F001         	goto	u1761
  2433  000392  EFCD  F001         	goto	u1760
  2434  000396                     u1761:
  2435  000396  EFFD  F001         	goto	l2360
  2436  00039A                     u1760:
  2437  00039A                     
  2438                           ; BSR set to: 0
  2439  00039A  5168               	movf	dtoa@n& (0+255),w,b
  2440  00039C  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
  2441  00039E  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
  2442  0003A0  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
  2443  0003A2  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
  2444  0003A4  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
  2445  0003A6  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
  2446  0003A8  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
  2447  0003AA  A4D8               	btfss	status,2,c
  2448  0003AC  EFDA  F001         	goto	u1771
  2449  0003B0  EFDC  F001         	goto	u1770
  2450  0003B4                     u1771:
  2451  0003B4  EF42  F001         	goto	l2340
  2452  0003B8                     u1770:
  2453  0003B8                     
  2454                           ; BSR set to: 0
  2455  0003B8  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  2456  0003BA  EFE9  F001         	goto	u1780
  2457  0003BE  5163               	movf	(dtoa@p+1)& (0+255),w,b
  2458  0003C0  E106               	bnz	u1781
  2459  0003C2  0562               	decf	dtoa@p& (0+255),w,b
  2460  0003C4  B0D8               	btfsc	status,0,c
  2461  0003C6  EFE7  F001         	goto	u1781
  2462  0003CA  EFE9  F001         	goto	u1780
  2463  0003CE                     u1781:
  2464  0003CE  EF42  F001         	goto	l2340
  2465  0003D2                     u1780:
  2466  0003D2                     
  2467                           ; BSR set to: 0
  2468  0003D2  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  2469  0003D4  EFF4  F001         	goto	u1791
  2470  0003D8  5165               	movf	(dtoa@w+1)& (0+255),w,b
  2471  0003DA  E108               	bnz	u1790
  2472  0003DC  0564               	decf	dtoa@w& (0+255),w,b
  2473  0003DE  A0D8               	btfss	status,0,c
  2474  0003E0  EFF4  F001         	goto	u1791
  2475  0003E4  EFF6  F001         	goto	u1790
  2476  0003E8                     u1791:
  2477  0003E8  EFFD  F001         	goto	l2360
  2478  0003EC                     u1790:
  2479  0003EC                     
  2480                           ; BSR set to: 0
  2481  0003EC  B248               	btfsc	_flags^0,1,c
  2482  0003EE  EFFB  F001         	goto	u1801
  2483  0003F2  EFFD  F001         	goto	u1800
  2484  0003F6                     u1801:
  2485  0003F6  EF42  F001         	goto	l2340
  2486  0003FA                     u1800:
  2487  0003FA                     l2360:
  2488                           
  2489                           ; BSR set to: 0
  2490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2491  0003FA  5166               	movf	dtoa@s& (0+255),w,b
  2492  0003FC  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  2493  0003FE  A4D8               	btfss	status,2,c
  2494  000400  EF04  F002         	goto	u1811
  2495  000404  EF06  F002         	goto	u1810
  2496  000408                     u1811:
  2497  000408  EF0D  F002         	goto	l2364
  2498  00040C                     u1810:
  2499  00040C                     
  2500                           ; BSR set to: 0
  2501  00040C  A448               	btfss	_flags^0,2,c
  2502  00040E  EF0B  F002         	goto	u1821
  2503  000412  EF0D  F002         	goto	u1820
  2504  000416                     u1821:
  2505  000416  EF2B  F002         	goto	l2374
  2506  00041A                     u1820:
  2507  00041A                     l2364:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2511  00041A  0770               	decf	dtoa@i& (0+255),f,b
  2512  00041C  A0D8               	btfss	status,0,c
  2513  00041E  0771               	decf	(dtoa@i+1)& (0+255),f,b
  2514  000420                     
  2515                           ; BSR set to: 0
  2516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2517  000420  5166               	movf	dtoa@s& (0+255),w,b
  2518  000422  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  2519  000424  A4D8               	btfss	status,2,c
  2520  000426  EF17  F002         	goto	u1831
  2521  00042A  EF19  F002         	goto	u1830
  2522  00042E                     u1831:
  2523  00042E  EF1F  F002         	goto	l2370
  2524  000432                     u1830:
  2525  000432                     
  2526                           ; BSR set to: 0
  2527  000432  0E00               	movlw	0
  2528  000434  6F61               	movwf	(_dtoa$1413+1)& (0+255),b
  2529  000436  0E2B               	movlw	43
  2530  000438  6F60               	movwf	_dtoa$1413& (0+255),b
  2531  00043A  EF23  F002         	goto	l2372
  2532  00043E                     l2370:
  2533                           
  2534                           ; BSR set to: 0
  2535  00043E  0E00               	movlw	0
  2536  000440  6F61               	movwf	(_dtoa$1413+1)& (0+255),b
  2537  000442  0E2D               	movlw	45
  2538  000444  6F60               	movwf	_dtoa$1413& (0+255),b
  2539  000446                     l2372:
  2540                           
  2541                           ; BSR set to: 0
  2542  000446  0EC0               	movlw	low _dbuf
  2543  000448  2570               	addwf	dtoa@i& (0+255),w,b
  2544  00044A  6ED9               	movwf	fsr2l,c
  2545  00044C  0E00               	movlw	high _dbuf
  2546  00044E  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  2547  000450  6EDA               	movwf	fsr2h,c
  2548  000452  C060  FFDF         	movff	_dtoa$1413,indf2
  2549  000456                     l2374:
  2550                           
  2551                           ; BSR set to: 0
  2552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2553  000456  C028  F01D         	movff	dtoa@fp,pad@fp
  2554  00045A  C029  F01E         	movff	dtoa@fp+1,pad@fp+1
  2555  00045E  0EC0               	movlw	low _dbuf
  2556  000460  2570               	addwf	dtoa@i& (0+255),w,b
  2557  000462  6E1F               	movwf	pad@buf^0,c
  2558  000464  0E00               	movlw	high _dbuf
  2559  000466  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  2560  000468  6E20               	movwf	(pad@buf+1)^0,c
  2561  00046A  C064  F021         	movff	dtoa@w,pad@p
  2562  00046E  C065  F022         	movff	dtoa@w+1,pad@p+1
  2563  000472  ECA9  F005         	call	_pad	;wreg free
  2564  000476  C01D  F028         	movff	?_pad,?_dtoa
  2565  00047A  C01E  F029         	movff	?_pad+1,?_dtoa+1
  2566  00047E  0012               	return		;funcret
  2567  000480                     __end_of_dtoa:
  2568                           	opt callstack 0
  2569                           
  2570 ;; *************** function _pad *****************
  2571 ;; Defined at:
  2572 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2575 ;;		 -> sprintf@f(6), 
  2576 ;;  buf             2   30[COMRAM] PTR unsigned char 
  2577 ;;		 -> dbuf(32), 
  2578 ;;  p               2   32[COMRAM] int 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  w               2   37[COMRAM] int 
  2581 ;;  i               2   35[COMRAM] int 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  2   28[COMRAM] int 
  2584 ;; Registers used:
  2585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2591 ;;      Params:         6       0       0       0
  2592 ;;      Locals:         4       0       0       0
  2593 ;;      Temps:          1       0       0       0
  2594 ;;      Totals:        11       0       0       0
  2595 ;;Total ram usage:       11 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    4
  2598 ;; This function calls:
  2599 ;;		_fputc
  2600 ;;		_fputs
  2601 ;;		_strlen
  2602 ;; This function is called by:
  2603 ;;		_dtoa
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text9
  2608  000B52                     __ptext9:
  2609                           	opt callstack 0
  2610  000B52                     _pad:
  2611                           	opt callstack 21
  2612  000B52                     
  2613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2614  000B52  A048               	btfss	_flags^0,0,c
  2615  000B54  EFAE  F005         	goto	u1511
  2616  000B58  EFB0  F005         	goto	u1510
  2617  000B5C                     u1511:
  2618  000B5C  EFBA  F005         	goto	l2214
  2619  000B60                     u1510:
  2620  000B60                     
  2621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2622  000B60  C01F  F016         	movff	pad@buf,fputs@s
  2623  000B64  C020  F017         	movff	pad@buf+1,fputs@s+1
  2624  000B68  C01D  F018         	movff	pad@fp,fputs@fp
  2625  000B6C  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  2626  000B70  EC0B  F008         	call	_fputs	;wreg free
  2627  000B74                     l2214:
  2628                           
  2629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2630  000B74  BE22               	btfsc	(pad@p+1)^0,7,c
  2631  000B76  EFBF  F005         	goto	u1521
  2632  000B7A  EFC1  F005         	goto	u1520
  2633  000B7E                     u1521:
  2634  000B7E  EFC7  F005         	goto	l2218
  2635  000B82                     u1520:
  2636  000B82  C021  F026         	movff	pad@p,pad@w
  2637  000B86  C022  F027         	movff	pad@p+1,pad@w+1
  2638  000B8A  EFCB  F005         	goto	l274
  2639  000B8E                     l2218:
  2640  000B8E  0E00               	movlw	0
  2641  000B90  6E27               	movwf	(pad@w+1)^0,c
  2642  000B92  0E00               	movlw	0
  2643  000B94  6E26               	movwf	pad@w^0,c
  2644  000B96                     l274:
  2645                           
  2646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2647  000B96  0E00               	movlw	0
  2648  000B98  6E25               	movwf	(pad@i+1)^0,c
  2649  000B9A  0E00               	movlw	0
  2650  000B9C  6E24               	movwf	pad@i^0,c
  2651                           
  2652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2653  000B9E  EFDD  F005         	goto	l2224
  2654  000BA2                     l2220:
  2655                           
  2656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2657  000BA2  0E00               	movlw	0
  2658  000BA4  6E0E               	movwf	(fputc@c+1)^0,c
  2659  000BA6  0E20               	movlw	32
  2660  000BA8  6E0D               	movwf	fputc@c^0,c
  2661  000BAA  C01D  F00F         	movff	pad@fp,fputc@fp
  2662  000BAE  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  2663  000BB2  EC44  F005         	call	_fputc	;wreg free
  2664  000BB6                     
  2665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2666  000BB6  4A24               	infsnz	pad@i^0,f,c
  2667  000BB8  2A25               	incf	(pad@i+1)^0,f,c
  2668  000BBA                     l2224:
  2669                           
  2670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2671  000BBA  5026               	movf	pad@w^0,w,c
  2672  000BBC  5C24               	subwf	pad@i^0,w,c
  2673  000BBE  5025               	movf	(pad@i+1)^0,w,c
  2674  000BC0  0A80               	xorlw	128
  2675  000BC2  6E23               	movwf	??_pad^0,c
  2676  000BC4  5027               	movf	(pad@w+1)^0,w,c
  2677  000BC6  0A80               	xorlw	128
  2678  000BC8  5823               	subwfb	??_pad^0,w,c
  2679  000BCA  A0D8               	btfss	status,0,c
  2680  000BCC  EFEA  F005         	goto	u1531
  2681  000BD0  EFEC  F005         	goto	u1530
  2682  000BD4                     u1531:
  2683  000BD4  EFD1  F005         	goto	l2220
  2684  000BD8                     u1530:
  2685  000BD8                     
  2686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2687  000BD8  B048               	btfsc	_flags^0,0,c
  2688  000BDA  EFF1  F005         	goto	u1541
  2689  000BDE  EFF3  F005         	goto	u1540
  2690  000BE2                     u1541:
  2691  000BE2  EFFD  F005         	goto	l2228
  2692  000BE6                     u1540:
  2693  000BE6                     
  2694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2695  000BE6  C01F  F016         	movff	pad@buf,fputs@s
  2696  000BEA  C020  F017         	movff	pad@buf+1,fputs@s+1
  2697  000BEE  C01D  F018         	movff	pad@fp,fputs@fp
  2698  000BF2  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  2699  000BF6  EC0B  F008         	call	_fputs	;wreg free
  2700  000BFA                     l2228:
  2701                           
  2702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2703  000BFA  C01F  F00D         	movff	pad@buf,strlen@s
  2704  000BFE  C020  F00E         	movff	pad@buf+1,strlen@s+1
  2705  000C02  ECA9  F008         	call	_strlen	;wreg free
  2706  000C06  5026               	movf	pad@w^0,w,c
  2707  000C08  240D               	addwf	?_strlen^0,w,c
  2708  000C0A  6E1D               	movwf	?_pad^0,c
  2709  000C0C  5027               	movf	(pad@w+1)^0,w,c
  2710  000C0E  200E               	addwfc	(?_strlen+1)^0,w,c
  2711  000C10  6E1E               	movwf	(?_pad+1)^0,c
  2712  000C12  0012               	return		;funcret
  2713  000C14                     __end_of_pad:
  2714                           	opt callstack 0
  2715                           
  2716 ;; *************** function _strlen *****************
  2717 ;; Defined at:
  2718 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  s               2   12[COMRAM] PTR const unsigned char 
  2721 ;;		 -> dbuf(32), 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  a               2   14[COMRAM] PTR const unsigned char 
  2724 ;;		 -> dbuf(32), 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  2   12[COMRAM] unsigned int 
  2727 ;; Registers used:
  2728 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2734 ;;      Params:         2       0       0       0
  2735 ;;      Locals:         2       0       0       0
  2736 ;;      Temps:          0       0       0       0
  2737 ;;      Totals:         4       0       0       0
  2738 ;;Total ram usage:        4 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    1
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_pad
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text10
  2749  001152                     __ptext10:
  2750                           	opt callstack 0
  2751  001152                     _strlen:
  2752                           	opt callstack 23
  2753  001152  C00D  F00F         	movff	strlen@s,strlen@a
  2754  001156  C00E  F010         	movff	strlen@s+1,strlen@a+1
  2755  00115A  EFB1  F008         	goto	l2204
  2756  00115E                     l2202:
  2757  00115E  4A0D               	infsnz	strlen@s^0,f,c
  2758  001160  2A0E               	incf	(strlen@s+1)^0,f,c
  2759  001162                     l2204:
  2760  001162  C00D  FFD9         	movff	strlen@s,fsr2l
  2761  001166  C00E  FFDA         	movff	strlen@s+1,fsr2h
  2762  00116A  50DF               	movf	indf2,w,c
  2763  00116C  A4D8               	btfss	status,2,c
  2764  00116E  EFBB  F008         	goto	u1501
  2765  001172  EFBD  F008         	goto	u1500
  2766  001176                     u1501:
  2767  001176  EFAF  F008         	goto	l2202
  2768  00117A                     u1500:
  2769  00117A  500F               	movf	strlen@a^0,w,c
  2770  00117C  5C0D               	subwf	strlen@s^0,w,c
  2771  00117E  6E0D               	movwf	?_strlen^0,c
  2772  001180  5010               	movf	(strlen@a+1)^0,w,c
  2773  001182  580E               	subwfb	(strlen@s+1)^0,w,c
  2774  001184  6E0E               	movwf	(?_strlen+1)^0,c
  2775  001186  0012               	return		;funcret
  2776  001188                     __end_of_strlen:
  2777                           	opt callstack 0
  2778                           
  2779 ;; *************** function _fputs *****************
  2780 ;; Defined at:
  2781 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2784 ;;		 -> dbuf(32), 
  2785 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  2786 ;;		 -> sprintf@f(6), 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  i               2   26[COMRAM] int 
  2789 ;;  c               1   25[COMRAM] unsigned char 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  2   21[COMRAM] int 
  2792 ;; Registers used:
  2793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2799 ;;      Params:         4       0       0       0
  2800 ;;      Locals:         3       0       0       0
  2801 ;;      Temps:          0       0       0       0
  2802 ;;      Totals:         7       0       0       0
  2803 ;;Total ram usage:        7 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    3
  2806 ;; This function calls:
  2807 ;;		_fputc
  2808 ;; This function is called by:
  2809 ;;		_pad
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text11
  2814  001016                     __ptext11:
  2815                           	opt callstack 0
  2816  001016                     _fputs:
  2817                           	opt callstack 21
  2818  001016  0E00               	movlw	0
  2819  001018  6E1C               	movwf	(fputs@i+1)^0,c
  2820  00101A  0E00               	movlw	0
  2821  00101C  6E1B               	movwf	fputs@i^0,c
  2822  00101E  EF1C  F008         	goto	l2198
  2823  001022                     l2194:
  2824  001022  C01A  F00D         	movff	fputs@c,fputc@c
  2825  001026  6A0E               	clrf	(fputc@c+1)^0,c
  2826  001028  C018  F00F         	movff	fputs@fp,fputc@fp
  2827  00102C  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  2828  001030  EC44  F005         	call	_fputc	;wreg free
  2829  001034  4A1B               	infsnz	fputs@i^0,f,c
  2830  001036  2A1C               	incf	(fputs@i+1)^0,f,c
  2831  001038                     l2198:
  2832  001038  501B               	movf	fputs@i^0,w,c
  2833  00103A  2416               	addwf	fputs@s^0,w,c
  2834  00103C  6ED9               	movwf	fsr2l,c
  2835  00103E  501C               	movf	(fputs@i+1)^0,w,c
  2836  001040  2017               	addwfc	(fputs@s+1)^0,w,c
  2837  001042  6EDA               	movwf	fsr2h,c
  2838  001044  50DF               	movf	indf2,w,c
  2839  001046  6E1A               	movwf	fputs@c^0,c
  2840  001048  501A               	movf	fputs@c^0,w,c
  2841  00104A  A4D8               	btfss	status,2,c
  2842  00104C  EF2A  F008         	goto	u1491
  2843  001050  EF2C  F008         	goto	u1490
  2844  001054                     u1491:
  2845  001054  EF11  F008         	goto	l2194
  2846  001058                     u1490:
  2847  001058  0012               	return		;funcret
  2848  00105A                     __end_of_fputs:
  2849                           	opt callstack 0
  2850                           
  2851 ;; *************** function _fputc *****************
  2852 ;; Defined at:
  2853 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  c               2   12[COMRAM] int 
  2856 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  2857 ;;		 -> sprintf@f(6), 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  2   12[COMRAM] int 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2869 ;;      Params:         4       0       0       0
  2870 ;;      Locals:         0       0       0       0
  2871 ;;      Temps:          5       0       0       0
  2872 ;;      Totals:         9       0       0       0
  2873 ;;Total ram usage:        9 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    2
  2876 ;; This function calls:
  2877 ;;		_putch
  2878 ;; This function is called by:
  2879 ;;		_pad
  2880 ;;		_vfpfcnvrt
  2881 ;;		_fputs
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text12
  2886  000A88                     __ptext12:
  2887                           	opt callstack 0
  2888  000A88                     _fputc:
  2889                           	opt callstack 24
  2890  000A88  500F               	movf	fputc@fp^0,w,c
  2891  000A8A  1010               	iorwf	(fputc@fp+1)^0,w,c
  2892  000A8C  B4D8               	btfsc	status,2,c
  2893  000A8E  EF4B  F005         	goto	u1451
  2894  000A92  EF4D  F005         	goto	u1450
  2895  000A96                     u1451:
  2896  000A96  EF56  F005         	goto	l2182
  2897  000A9A                     u1450:
  2898  000A9A  500F               	movf	fputc@fp^0,w,c
  2899  000A9C  1010               	iorwf	(fputc@fp+1)^0,w,c
  2900  000A9E  A4D8               	btfss	status,2,c
  2901  000AA0  EF54  F005         	goto	u1461
  2902  000AA4  EF56  F005         	goto	u1460
  2903  000AA8                     u1461:
  2904  000AA8  EF5B  F005         	goto	l2184
  2905  000AAC                     u1460:
  2906  000AAC                     l2182:
  2907  000AAC  500D               	movf	fputc@c^0,w,c
  2908  000AAE  EC22  F009         	call	_putch
  2909  000AB2  EFA8  F005         	goto	l1012
  2910  000AB6                     l2184:
  2911  000AB6  EE20 F004          	lfsr	2,4
  2912  000ABA  500F               	movf	fputc@fp^0,w,c
  2913  000ABC  26D9               	addwf	fsr2l,f,c
  2914  000ABE  5010               	movf	(fputc@fp+1)^0,w,c
  2915  000AC0  22DA               	addwfc	fsr2h,f,c
  2916  000AC2  50DE               	movf	postinc2,w,c
  2917  000AC4  10DE               	iorwf	postinc2,w,c
  2918  000AC6  B4D8               	btfsc	status,2,c
  2919  000AC8  EF68  F005         	goto	u1471
  2920  000ACC  EF6A  F005         	goto	u1470
  2921  000AD0                     u1471:
  2922  000AD0  EF85  F005         	goto	l2188
  2923  000AD4                     u1470:
  2924  000AD4  EE20 F004          	lfsr	2,4
  2925  000AD8  500F               	movf	fputc@fp^0,w,c
  2926  000ADA  26D9               	addwf	fsr2l,f,c
  2927  000ADC  5010               	movf	(fputc@fp+1)^0,w,c
  2928  000ADE  22DA               	addwfc	fsr2h,f,c
  2929  000AE0  EE10 F002          	lfsr	1,2
  2930  000AE4  500F               	movf	fputc@fp^0,w,c
  2931  000AE6  26E1               	addwf	fsr1l,f,c
  2932  000AE8  5010               	movf	(fputc@fp+1)^0,w,c
  2933  000AEA  22E2               	addwfc	fsr1h,f,c
  2934  000AEC  50DE               	movf	postinc2,w,c
  2935  000AEE  5CE6               	subwf	postinc1,w,c
  2936  000AF0  50E6               	movf	postinc1,w,c
  2937  000AF2  0A80               	xorlw	128
  2938  000AF4  6E15               	movwf	(??_fputc+4)^0,c
  2939  000AF6  50DE               	movf	postinc2,w,c
  2940  000AF8  0A80               	xorlw	128
  2941  000AFA  5815               	subwfb	(??_fputc+4)^0,w,c
  2942  000AFC  B0D8               	btfsc	status,0,c
  2943  000AFE  EF83  F005         	goto	u1481
  2944  000B02  EF85  F005         	goto	u1480
  2945  000B06                     u1481:
  2946  000B06  EFA8  F005         	goto	l1012
  2947  000B0A                     u1480:
  2948  000B0A                     l2188:
  2949  000B0A  EE20 F002          	lfsr	2,2
  2950  000B0E  500F               	movf	fputc@fp^0,w,c
  2951  000B10  26D9               	addwf	fsr2l,f,c
  2952  000B12  5010               	movf	(fputc@fp+1)^0,w,c
  2953  000B14  22DA               	addwfc	fsr2h,f,c
  2954  000B16  CFDE F011          	movff	postinc2,??_fputc
  2955  000B1A  CFDD F012          	movff	postdec2,??_fputc+1
  2956  000B1E  C00F  FFD9         	movff	fputc@fp,fsr2l
  2957  000B22  C010  FFDA         	movff	fputc@fp+1,fsr2h
  2958  000B26  CFDE F013          	movff	postinc2,??_fputc+2
  2959  000B2A  CFDD F014          	movff	postdec2,??_fputc+3
  2960  000B2E  5011               	movf	??_fputc^0,w,c
  2961  000B30  2413               	addwf	(??_fputc+2)^0,w,c
  2962  000B32  6ED9               	movwf	fsr2l,c
  2963  000B34  5012               	movf	(??_fputc+1)^0,w,c
  2964  000B36  2014               	addwfc	(??_fputc+3)^0,w,c
  2965  000B38  6EDA               	movwf	fsr2h,c
  2966  000B3A  C00D  FFDF         	movff	fputc@c,indf2
  2967  000B3E  EE20 F002          	lfsr	2,2
  2968  000B42  500F               	movf	fputc@fp^0,w,c
  2969  000B44  26D9               	addwf	fsr2l,f,c
  2970  000B46  5010               	movf	(fputc@fp+1)^0,w,c
  2971  000B48  22DA               	addwfc	fsr2h,f,c
  2972  000B4A  2ADE               	incf	postinc2,f,c
  2973  000B4C  0E00               	movlw	0
  2974  000B4E  22DD               	addwfc	postdec2,f,c
  2975  000B50                     l1012:
  2976  000B50  0012               	return		;funcret
  2977  000B52                     __end_of_fputc:
  2978                           	opt callstack 0
  2979                           
  2980 ;; *************** function _putch *****************
  2981 ;; Defined at:
  2982 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  c               1    wreg     unsigned char 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  c               1    0[COMRAM] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2996 ;;      Params:         0       0       0       0
  2997 ;;      Locals:         0       0       0       0
  2998 ;;      Temps:          0       0       0       0
  2999 ;;      Totals:         0       0       0       0
  3000 ;;Total ram usage:        0 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    1
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_fputc
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text13
  3011  001244                     __ptext13:
  3012                           	opt callstack 0
  3013  001244                     _putch:
  3014                           	opt callstack 24
  3015  001244  0012               	return		;funcret
  3016  001246                     __end_of_putch:
  3017                           	opt callstack 0
  3018                           
  3019 ;; *************** function _abs *****************
  3020 ;; Defined at:
  3021 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  a               2   30[COMRAM] int 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  2   30[COMRAM] int 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3035 ;;      Params:         2       0       0       0
  3036 ;;      Locals:         0       0       0       0
  3037 ;;      Temps:          2       0       0       0
  3038 ;;      Totals:         4       0       0       0
  3039 ;;Total ram usage:        4 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    1
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_dtoa
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text14
  3050  00105A                     __ptext14:
  3051                           	opt callstack 0
  3052  00105A                     _abs:
  3053                           	opt callstack 24
  3054  00105A  BE20               	btfsc	(abs@a+1)^0,7,c
  3055  00105C  EF3A  F008         	goto	u1550
  3056  001060  5020               	movf	(abs@a+1)^0,w,c
  3057  001062  E106               	bnz	u1551
  3058  001064  041F               	decf	abs@a^0,w,c
  3059  001066  B0D8               	btfsc	status,0,c
  3060  001068  EF38  F008         	goto	u1551
  3061  00106C  EF3A  F008         	goto	u1550
  3062  001070                     u1551:
  3063  001070  EF48  F008         	goto	l997
  3064  001074                     u1550:
  3065  001074  C01F  F021         	movff	abs@a,??_abs
  3066  001078  C020  F022         	movff	abs@a+1,??_abs+1
  3067  00107C  1E21               	comf	??_abs^0,f,c
  3068  00107E  1E22               	comf	(??_abs+1)^0,f,c
  3069  001080  4A21               	infsnz	??_abs^0,f,c
  3070  001082  2A22               	incf	(??_abs+1)^0,f,c
  3071  001084  C021  F01F         	movff	??_abs,?_abs
  3072  001088  C022  F020         	movff	??_abs+1,?_abs+1
  3073  00108C  EF4C  F008         	goto	l1000
  3074  001090                     l997:
  3075  001090  C01F  F01F         	movff	abs@a,?_abs
  3076  001094  C020  F020         	movff	abs@a+1,?_abs+1
  3077  001098                     l1000:
  3078  001098  0012               	return		;funcret
  3079  00109A                     __end_of_abs:
  3080                           	opt callstack 0
  3081                           
  3082 ;; *************** function ___aomod *****************
  3083 ;; Defined at:
  3084 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  dividend        8   12[COMRAM] long long 
  3087 ;;  divisor         8   20[COMRAM] long long 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  sign            1   29[COMRAM] unsigned char 
  3090 ;;  counter         1   28[COMRAM] unsigned char 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  8   12[COMRAM] long long 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3100 ;;      Params:        16       0       0       0
  3101 ;;      Locals:         2       0       0       0
  3102 ;;      Temps:          0       0       0       0
  3103 ;;      Totals:        18       0       0       0
  3104 ;;Total ram usage:       18 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    1
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_dtoa
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text15
  3115  000924                     __ptext15:
  3116                           	opt callstack 0
  3117  000924                     ___aomod:
  3118                           	opt callstack 24
  3119  000924  0E00               	movlw	0
  3120  000926  6E1E               	movwf	___aomod@sign^0,c
  3121  000928  BE14               	btfsc	(___aomod@dividend+7)^0,7,c
  3122  00092A  EF9B  F004         	goto	u1630
  3123  00092E  EF99  F004         	goto	u1631
  3124  000932                     u1631:
  3125  000932  EFAD  F004         	goto	l2288
  3126  000936                     u1630:
  3127  000936  1E14               	comf	(___aomod@dividend+7)^0,f,c
  3128  000938  1E13               	comf	(___aomod@dividend+6)^0,f,c
  3129  00093A  1E12               	comf	(___aomod@dividend+5)^0,f,c
  3130  00093C  1E11               	comf	(___aomod@dividend+4)^0,f,c
  3131  00093E  1E10               	comf	(___aomod@dividend+3)^0,f,c
  3132  000940  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  3133  000942  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  3134  000944  6C0D               	negf	___aomod@dividend^0,c
  3135  000946  0E00               	movlw	0
  3136  000948  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  3137  00094A  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  3138  00094C  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  3139  00094E  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  3140  000950  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  3141  000952  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  3142  000954  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  3143  000956  0E01               	movlw	1
  3144  000958  6E1E               	movwf	___aomod@sign^0,c
  3145  00095A                     l2288:
  3146  00095A  BE1C               	btfsc	(___aomod@divisor+7)^0,7,c
  3147  00095C  EFB4  F004         	goto	u1640
  3148  000960  EFB2  F004         	goto	u1641
  3149  000964                     u1641:
  3150  000964  EFC4  F004         	goto	l2292
  3151  000968                     u1640:
  3152  000968  1E1C               	comf	(___aomod@divisor+7)^0,f,c
  3153  00096A  1E1B               	comf	(___aomod@divisor+6)^0,f,c
  3154  00096C  1E1A               	comf	(___aomod@divisor+5)^0,f,c
  3155  00096E  1E19               	comf	(___aomod@divisor+4)^0,f,c
  3156  000970  1E18               	comf	(___aomod@divisor+3)^0,f,c
  3157  000972  1E17               	comf	(___aomod@divisor+2)^0,f,c
  3158  000974  1E16               	comf	(___aomod@divisor+1)^0,f,c
  3159  000976  6C15               	negf	___aomod@divisor^0,c
  3160  000978  0E00               	movlw	0
  3161  00097A  2216               	addwfc	(___aomod@divisor+1)^0,f,c
  3162  00097C  2217               	addwfc	(___aomod@divisor+2)^0,f,c
  3163  00097E  2218               	addwfc	(___aomod@divisor+3)^0,f,c
  3164  000980  2219               	addwfc	(___aomod@divisor+4)^0,f,c
  3165  000982  221A               	addwfc	(___aomod@divisor+5)^0,f,c
  3166  000984  221B               	addwfc	(___aomod@divisor+6)^0,f,c
  3167  000986  221C               	addwfc	(___aomod@divisor+7)^0,f,c
  3168  000988                     l2292:
  3169  000988  5015               	movf	___aomod@divisor^0,w,c
  3170  00098A  1016               	iorwf	(___aomod@divisor+1)^0,w,c
  3171  00098C  1017               	iorwf	(___aomod@divisor+2)^0,w,c
  3172  00098E  1018               	iorwf	(___aomod@divisor+3)^0,w,c
  3173  000990  1019               	iorwf	(___aomod@divisor+4)^0,w,c
  3174  000992  101A               	iorwf	(___aomod@divisor+5)^0,w,c
  3175  000994  101B               	iorwf	(___aomod@divisor+6)^0,w,c
  3176  000996  101C               	iorwf	(___aomod@divisor+7)^0,w,c
  3177  000998  B4D8               	btfsc	status,2,c
  3178  00099A  EFD1  F004         	goto	u1651
  3179  00099E  EFD3  F004         	goto	u1650
  3180  0009A2                     u1651:
  3181  0009A2  EF1B  F005         	goto	l2308
  3182  0009A6                     u1650:
  3183  0009A6  0E01               	movlw	1
  3184  0009A8  6E1D               	movwf	___aomod@counter^0,c
  3185  0009AA  EFE1  F004         	goto	l2298
  3186  0009AE                     l2296:
  3187  0009AE  90D8               	bcf	status,0,c
  3188  0009B0  3615               	rlcf	___aomod@divisor^0,f,c
  3189  0009B2  3616               	rlcf	(___aomod@divisor+1)^0,f,c
  3190  0009B4  3617               	rlcf	(___aomod@divisor+2)^0,f,c
  3191  0009B6  3618               	rlcf	(___aomod@divisor+3)^0,f,c
  3192  0009B8  3619               	rlcf	(___aomod@divisor+4)^0,f,c
  3193  0009BA  361A               	rlcf	(___aomod@divisor+5)^0,f,c
  3194  0009BC  361B               	rlcf	(___aomod@divisor+6)^0,f,c
  3195  0009BE  361C               	rlcf	(___aomod@divisor+7)^0,f,c
  3196  0009C0  2A1D               	incf	___aomod@counter^0,f,c
  3197  0009C2                     l2298:
  3198  0009C2  AE1C               	btfss	(___aomod@divisor+7)^0,7,c
  3199  0009C4  EFE6  F004         	goto	u1661
  3200  0009C8  EFE8  F004         	goto	u1660
  3201  0009CC                     u1661:
  3202  0009CC  EFD7  F004         	goto	l2296
  3203  0009D0                     u1660:
  3204  0009D0                     l2300:
  3205  0009D0  5015               	movf	___aomod@divisor^0,w,c
  3206  0009D2  5C0D               	subwf	___aomod@dividend^0,w,c
  3207  0009D4  5016               	movf	(___aomod@divisor+1)^0,w,c
  3208  0009D6  580E               	subwfb	(___aomod@dividend+1)^0,w,c
  3209  0009D8  5017               	movf	(___aomod@divisor+2)^0,w,c
  3210  0009DA  580F               	subwfb	(___aomod@dividend+2)^0,w,c
  3211  0009DC  5018               	movf	(___aomod@divisor+3)^0,w,c
  3212  0009DE  5810               	subwfb	(___aomod@dividend+3)^0,w,c
  3213  0009E0  5019               	movf	(___aomod@divisor+4)^0,w,c
  3214  0009E2  5811               	subwfb	(___aomod@dividend+4)^0,w,c
  3215  0009E4  501A               	movf	(___aomod@divisor+5)^0,w,c
  3216  0009E6  5812               	subwfb	(___aomod@dividend+5)^0,w,c
  3217  0009E8  501B               	movf	(___aomod@divisor+6)^0,w,c
  3218  0009EA  5813               	subwfb	(___aomod@dividend+6)^0,w,c
  3219  0009EC  501C               	movf	(___aomod@divisor+7)^0,w,c
  3220  0009EE  5814               	subwfb	(___aomod@dividend+7)^0,w,c
  3221  0009F0  A0D8               	btfss	status,0,c
  3222  0009F2  EFFD  F004         	goto	u1671
  3223  0009F6  EFFF  F004         	goto	u1670
  3224  0009FA                     u1671:
  3225  0009FA  EF0F  F005         	goto	l2304
  3226  0009FE                     u1670:
  3227  0009FE  5015               	movf	___aomod@divisor^0,w,c
  3228  000A00  5E0D               	subwf	___aomod@dividend^0,f,c
  3229  000A02  5016               	movf	(___aomod@divisor+1)^0,w,c
  3230  000A04  5A0E               	subwfb	(___aomod@dividend+1)^0,f,c
  3231  000A06  5017               	movf	(___aomod@divisor+2)^0,w,c
  3232  000A08  5A0F               	subwfb	(___aomod@dividend+2)^0,f,c
  3233  000A0A  5018               	movf	(___aomod@divisor+3)^0,w,c
  3234  000A0C  5A10               	subwfb	(___aomod@dividend+3)^0,f,c
  3235  000A0E  5019               	movf	(___aomod@divisor+4)^0,w,c
  3236  000A10  5A11               	subwfb	(___aomod@dividend+4)^0,f,c
  3237  000A12  501A               	movf	(___aomod@divisor+5)^0,w,c
  3238  000A14  5A12               	subwfb	(___aomod@dividend+5)^0,f,c
  3239  000A16  501B               	movf	(___aomod@divisor+6)^0,w,c
  3240  000A18  5A13               	subwfb	(___aomod@dividend+6)^0,f,c
  3241  000A1A  501C               	movf	(___aomod@divisor+7)^0,w,c
  3242  000A1C  5A14               	subwfb	(___aomod@dividend+7)^0,f,c
  3243  000A1E                     l2304:
  3244  000A1E  90D8               	bcf	status,0,c
  3245  000A20  321C               	rrcf	(___aomod@divisor+7)^0,f,c
  3246  000A22  321B               	rrcf	(___aomod@divisor+6)^0,f,c
  3247  000A24  321A               	rrcf	(___aomod@divisor+5)^0,f,c
  3248  000A26  3219               	rrcf	(___aomod@divisor+4)^0,f,c
  3249  000A28  3218               	rrcf	(___aomod@divisor+3)^0,f,c
  3250  000A2A  3217               	rrcf	(___aomod@divisor+2)^0,f,c
  3251  000A2C  3216               	rrcf	(___aomod@divisor+1)^0,f,c
  3252  000A2E  3215               	rrcf	___aomod@divisor^0,f,c
  3253  000A30  2E1D               	decfsz	___aomod@counter^0,f,c
  3254  000A32  EFE8  F004         	goto	l2300
  3255  000A36                     l2308:
  3256  000A36  501E               	movf	___aomod@sign^0,w,c
  3257  000A38  B4D8               	btfsc	status,2,c
  3258  000A3A  EF21  F005         	goto	u1681
  3259  000A3E  EF23  F005         	goto	u1680
  3260  000A42                     u1681:
  3261  000A42  EF33  F005         	goto	l2312
  3262  000A46                     u1680:
  3263  000A46  1E14               	comf	(___aomod@dividend+7)^0,f,c
  3264  000A48  1E13               	comf	(___aomod@dividend+6)^0,f,c
  3265  000A4A  1E12               	comf	(___aomod@dividend+5)^0,f,c
  3266  000A4C  1E11               	comf	(___aomod@dividend+4)^0,f,c
  3267  000A4E  1E10               	comf	(___aomod@dividend+3)^0,f,c
  3268  000A50  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  3269  000A52  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  3270  000A54  6C0D               	negf	___aomod@dividend^0,c
  3271  000A56  0E00               	movlw	0
  3272  000A58  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  3273  000A5A  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  3274  000A5C  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  3275  000A5E  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  3276  000A60  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  3277  000A62  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  3278  000A64  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  3279  000A66                     l2312:
  3280  000A66  C00D  F00D         	movff	___aomod@dividend,?___aomod
  3281  000A6A  C00E  F00E         	movff	___aomod@dividend+1,?___aomod+1
  3282  000A6E  C00F  F00F         	movff	___aomod@dividend+2,?___aomod+2
  3283  000A72  C010  F010         	movff	___aomod@dividend+3,?___aomod+3
  3284  000A76  C011  F011         	movff	___aomod@dividend+4,?___aomod+4
  3285  000A7A  C012  F012         	movff	___aomod@dividend+5,?___aomod+5
  3286  000A7E  C013  F013         	movff	___aomod@dividend+6,?___aomod+6
  3287  000A82  C014  F014         	movff	___aomod@dividend+7,?___aomod+7
  3288  000A86  0012               	return		;funcret
  3289  000A88                     __end_of___aomod:
  3290                           	opt callstack 0
  3291                           
  3292 ;; *************** function ___aodiv *****************
  3293 ;; Defined at:
  3294 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  dividend        8   12[COMRAM] long long 
  3297 ;;  divisor         8   20[COMRAM] long long 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  quotient        8   30[COMRAM] long long 
  3300 ;;  sign            1   29[COMRAM] unsigned char 
  3301 ;;  counter         1   28[COMRAM] unsigned char 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  8   12[COMRAM] long long 
  3304 ;; Registers used:
  3305 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3311 ;;      Params:        16       0       0       0
  3312 ;;      Locals:        10       0       0       0
  3313 ;;      Temps:          0       0       0       0
  3314 ;;      Totals:        26       0       0       0
  3315 ;;Total ram usage:       26 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    1
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_dtoa
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text16
  3326  000634                     __ptext16:
  3327                           	opt callstack 0
  3328  000634                     ___aodiv:
  3329                           	opt callstack 24
  3330  000634  0E00               	movlw	0
  3331  000636  6E1E               	movwf	___aodiv@sign^0,c
  3332  000638  BE1C               	btfsc	(___aodiv@divisor+7)^0,7,c
  3333  00063A  EF23  F003         	goto	u1560
  3334  00063E  EF21  F003         	goto	u1561
  3335  000642                     u1561:
  3336  000642  EF35  F003         	goto	l2244
  3337  000646                     u1560:
  3338  000646  1E1C               	comf	(___aodiv@divisor+7)^0,f,c
  3339  000648  1E1B               	comf	(___aodiv@divisor+6)^0,f,c
  3340  00064A  1E1A               	comf	(___aodiv@divisor+5)^0,f,c
  3341  00064C  1E19               	comf	(___aodiv@divisor+4)^0,f,c
  3342  00064E  1E18               	comf	(___aodiv@divisor+3)^0,f,c
  3343  000650  1E17               	comf	(___aodiv@divisor+2)^0,f,c
  3344  000652  1E16               	comf	(___aodiv@divisor+1)^0,f,c
  3345  000654  6C15               	negf	___aodiv@divisor^0,c
  3346  000656  0E00               	movlw	0
  3347  000658  2216               	addwfc	(___aodiv@divisor+1)^0,f,c
  3348  00065A  2217               	addwfc	(___aodiv@divisor+2)^0,f,c
  3349  00065C  2218               	addwfc	(___aodiv@divisor+3)^0,f,c
  3350  00065E  2219               	addwfc	(___aodiv@divisor+4)^0,f,c
  3351  000660  221A               	addwfc	(___aodiv@divisor+5)^0,f,c
  3352  000662  221B               	addwfc	(___aodiv@divisor+6)^0,f,c
  3353  000664  221C               	addwfc	(___aodiv@divisor+7)^0,f,c
  3354  000666  0E01               	movlw	1
  3355  000668  6E1E               	movwf	___aodiv@sign^0,c
  3356  00066A                     l2244:
  3357  00066A  BE14               	btfsc	(___aodiv@dividend+7)^0,7,c
  3358  00066C  EF3C  F003         	goto	u1570
  3359  000670  EF3A  F003         	goto	u1571
  3360  000674                     u1571:
  3361  000674  EF4E  F003         	goto	l2250
  3362  000678                     u1570:
  3363  000678  1E14               	comf	(___aodiv@dividend+7)^0,f,c
  3364  00067A  1E13               	comf	(___aodiv@dividend+6)^0,f,c
  3365  00067C  1E12               	comf	(___aodiv@dividend+5)^0,f,c
  3366  00067E  1E11               	comf	(___aodiv@dividend+4)^0,f,c
  3367  000680  1E10               	comf	(___aodiv@dividend+3)^0,f,c
  3368  000682  1E0F               	comf	(___aodiv@dividend+2)^0,f,c
  3369  000684  1E0E               	comf	(___aodiv@dividend+1)^0,f,c
  3370  000686  6C0D               	negf	___aodiv@dividend^0,c
  3371  000688  0E00               	movlw	0
  3372  00068A  220E               	addwfc	(___aodiv@dividend+1)^0,f,c
  3373  00068C  220F               	addwfc	(___aodiv@dividend+2)^0,f,c
  3374  00068E  2210               	addwfc	(___aodiv@dividend+3)^0,f,c
  3375  000690  2211               	addwfc	(___aodiv@dividend+4)^0,f,c
  3376  000692  2212               	addwfc	(___aodiv@dividend+5)^0,f,c
  3377  000694  2213               	addwfc	(___aodiv@dividend+6)^0,f,c
  3378  000696  2214               	addwfc	(___aodiv@dividend+7)^0,f,c
  3379  000698  0E01               	movlw	1
  3380  00069A  1A1E               	xorwf	___aodiv@sign^0,f,c
  3381  00069C                     l2250:
  3382  00069C  EE20  F01F         	lfsr	2,___aodiv@quotient
  3383  0006A0  0E07               	movlw	7
  3384  0006A2                     u1581:
  3385  0006A2  6ADE               	clrf	postinc2,c
  3386  0006A4  06E8               	decf	wreg,f,c
  3387  0006A6  E2FD               	bc	u1581
  3388  0006A8  5015               	movf	___aodiv@divisor^0,w,c
  3389  0006AA  1016               	iorwf	(___aodiv@divisor+1)^0,w,c
  3390  0006AC  1017               	iorwf	(___aodiv@divisor+2)^0,w,c
  3391  0006AE  1018               	iorwf	(___aodiv@divisor+3)^0,w,c
  3392  0006B0  1019               	iorwf	(___aodiv@divisor+4)^0,w,c
  3393  0006B2  101A               	iorwf	(___aodiv@divisor+5)^0,w,c
  3394  0006B4  101B               	iorwf	(___aodiv@divisor+6)^0,w,c
  3395  0006B6  101C               	iorwf	(___aodiv@divisor+7)^0,w,c
  3396  0006B8  B4D8               	btfsc	status,2,c
  3397  0006BA  EF61  F003         	goto	u1591
  3398  0006BE  EF63  F003         	goto	u1590
  3399  0006C2                     u1591:
  3400  0006C2  EFB5  F003         	goto	l2272
  3401  0006C6                     u1590:
  3402  0006C6  0E01               	movlw	1
  3403  0006C8  6E1D               	movwf	___aodiv@counter^0,c
  3404  0006CA  EF71  F003         	goto	l2258
  3405  0006CE                     l2256:
  3406  0006CE  90D8               	bcf	status,0,c
  3407  0006D0  3615               	rlcf	___aodiv@divisor^0,f,c
  3408  0006D2  3616               	rlcf	(___aodiv@divisor+1)^0,f,c
  3409  0006D4  3617               	rlcf	(___aodiv@divisor+2)^0,f,c
  3410  0006D6  3618               	rlcf	(___aodiv@divisor+3)^0,f,c
  3411  0006D8  3619               	rlcf	(___aodiv@divisor+4)^0,f,c
  3412  0006DA  361A               	rlcf	(___aodiv@divisor+5)^0,f,c
  3413  0006DC  361B               	rlcf	(___aodiv@divisor+6)^0,f,c
  3414  0006DE  361C               	rlcf	(___aodiv@divisor+7)^0,f,c
  3415  0006E0  2A1D               	incf	___aodiv@counter^0,f,c
  3416  0006E2                     l2258:
  3417  0006E2  AE1C               	btfss	(___aodiv@divisor+7)^0,7,c
  3418  0006E4  EF76  F003         	goto	u1601
  3419  0006E8  EF78  F003         	goto	u1600
  3420  0006EC                     u1601:
  3421  0006EC  EF67  F003         	goto	l2256
  3422  0006F0                     u1600:
  3423  0006F0                     l2260:
  3424  0006F0  90D8               	bcf	status,0,c
  3425  0006F2  361F               	rlcf	___aodiv@quotient^0,f,c
  3426  0006F4  3620               	rlcf	(___aodiv@quotient+1)^0,f,c
  3427  0006F6  3621               	rlcf	(___aodiv@quotient+2)^0,f,c
  3428  0006F8  3622               	rlcf	(___aodiv@quotient+3)^0,f,c
  3429  0006FA  3623               	rlcf	(___aodiv@quotient+4)^0,f,c
  3430  0006FC  3624               	rlcf	(___aodiv@quotient+5)^0,f,c
  3431  0006FE  3625               	rlcf	(___aodiv@quotient+6)^0,f,c
  3432  000700  3626               	rlcf	(___aodiv@quotient+7)^0,f,c
  3433  000702  5015               	movf	___aodiv@divisor^0,w,c
  3434  000704  5C0D               	subwf	___aodiv@dividend^0,w,c
  3435  000706  5016               	movf	(___aodiv@divisor+1)^0,w,c
  3436  000708  580E               	subwfb	(___aodiv@dividend+1)^0,w,c
  3437  00070A  5017               	movf	(___aodiv@divisor+2)^0,w,c
  3438  00070C  580F               	subwfb	(___aodiv@dividend+2)^0,w,c
  3439  00070E  5018               	movf	(___aodiv@divisor+3)^0,w,c
  3440  000710  5810               	subwfb	(___aodiv@dividend+3)^0,w,c
  3441  000712  5019               	movf	(___aodiv@divisor+4)^0,w,c
  3442  000714  5811               	subwfb	(___aodiv@dividend+4)^0,w,c
  3443  000716  501A               	movf	(___aodiv@divisor+5)^0,w,c
  3444  000718  5812               	subwfb	(___aodiv@dividend+5)^0,w,c
  3445  00071A  501B               	movf	(___aodiv@divisor+6)^0,w,c
  3446  00071C  5813               	subwfb	(___aodiv@dividend+6)^0,w,c
  3447  00071E  501C               	movf	(___aodiv@divisor+7)^0,w,c
  3448  000720  5814               	subwfb	(___aodiv@dividend+7)^0,w,c
  3449  000722  A0D8               	btfss	status,0,c
  3450  000724  EF96  F003         	goto	u1611
  3451  000728  EF98  F003         	goto	u1610
  3452  00072C                     u1611:
  3453  00072C  EFA9  F003         	goto	l2268
  3454  000730                     u1610:
  3455  000730  5015               	movf	___aodiv@divisor^0,w,c
  3456  000732  5E0D               	subwf	___aodiv@dividend^0,f,c
  3457  000734  5016               	movf	(___aodiv@divisor+1)^0,w,c
  3458  000736  5A0E               	subwfb	(___aodiv@dividend+1)^0,f,c
  3459  000738  5017               	movf	(___aodiv@divisor+2)^0,w,c
  3460  00073A  5A0F               	subwfb	(___aodiv@dividend+2)^0,f,c
  3461  00073C  5018               	movf	(___aodiv@divisor+3)^0,w,c
  3462  00073E  5A10               	subwfb	(___aodiv@dividend+3)^0,f,c
  3463  000740  5019               	movf	(___aodiv@divisor+4)^0,w,c
  3464  000742  5A11               	subwfb	(___aodiv@dividend+4)^0,f,c
  3465  000744  501A               	movf	(___aodiv@divisor+5)^0,w,c
  3466  000746  5A12               	subwfb	(___aodiv@dividend+5)^0,f,c
  3467  000748  501B               	movf	(___aodiv@divisor+6)^0,w,c
  3468  00074A  5A13               	subwfb	(___aodiv@dividend+6)^0,f,c
  3469  00074C  501C               	movf	(___aodiv@divisor+7)^0,w,c
  3470  00074E  5A14               	subwfb	(___aodiv@dividend+7)^0,f,c
  3471  000750  801F               	bsf	___aodiv@quotient^0,0,c
  3472  000752                     l2268:
  3473  000752  90D8               	bcf	status,0,c
  3474  000754  321C               	rrcf	(___aodiv@divisor+7)^0,f,c
  3475  000756  321B               	rrcf	(___aodiv@divisor+6)^0,f,c
  3476  000758  321A               	rrcf	(___aodiv@divisor+5)^0,f,c
  3477  00075A  3219               	rrcf	(___aodiv@divisor+4)^0,f,c
  3478  00075C  3218               	rrcf	(___aodiv@divisor+3)^0,f,c
  3479  00075E  3217               	rrcf	(___aodiv@divisor+2)^0,f,c
  3480  000760  3216               	rrcf	(___aodiv@divisor+1)^0,f,c
  3481  000762  3215               	rrcf	___aodiv@divisor^0,f,c
  3482  000764  2E1D               	decfsz	___aodiv@counter^0,f,c
  3483  000766  EF78  F003         	goto	l2260
  3484  00076A                     l2272:
  3485  00076A  501E               	movf	___aodiv@sign^0,w,c
  3486  00076C  B4D8               	btfsc	status,2,c
  3487  00076E  EFBB  F003         	goto	u1621
  3488  000772  EFBD  F003         	goto	u1620
  3489  000776                     u1621:
  3490  000776  EFCD  F003         	goto	l2276
  3491  00077A                     u1620:
  3492  00077A  1E26               	comf	(___aodiv@quotient+7)^0,f,c
  3493  00077C  1E25               	comf	(___aodiv@quotient+6)^0,f,c
  3494  00077E  1E24               	comf	(___aodiv@quotient+5)^0,f,c
  3495  000780  1E23               	comf	(___aodiv@quotient+4)^0,f,c
  3496  000782  1E22               	comf	(___aodiv@quotient+3)^0,f,c
  3497  000784  1E21               	comf	(___aodiv@quotient+2)^0,f,c
  3498  000786  1E20               	comf	(___aodiv@quotient+1)^0,f,c
  3499  000788  6C1F               	negf	___aodiv@quotient^0,c
  3500  00078A  0E00               	movlw	0
  3501  00078C  2220               	addwfc	(___aodiv@quotient+1)^0,f,c
  3502  00078E  2221               	addwfc	(___aodiv@quotient+2)^0,f,c
  3503  000790  2222               	addwfc	(___aodiv@quotient+3)^0,f,c
  3504  000792  2223               	addwfc	(___aodiv@quotient+4)^0,f,c
  3505  000794  2224               	addwfc	(___aodiv@quotient+5)^0,f,c
  3506  000796  2225               	addwfc	(___aodiv@quotient+6)^0,f,c
  3507  000798  2226               	addwfc	(___aodiv@quotient+7)^0,f,c
  3508  00079A                     l2276:
  3509  00079A  C01F  F00D         	movff	___aodiv@quotient,?___aodiv
  3510  00079E  C020  F00E         	movff	___aodiv@quotient+1,?___aodiv+1
  3511  0007A2  C021  F00F         	movff	___aodiv@quotient+2,?___aodiv+2
  3512  0007A6  C022  F010         	movff	___aodiv@quotient+3,?___aodiv+3
  3513  0007AA  C023  F011         	movff	___aodiv@quotient+4,?___aodiv+4
  3514  0007AE  C024  F012         	movff	___aodiv@quotient+5,?___aodiv+5
  3515  0007B2  C025  F013         	movff	___aodiv@quotient+6,?___aodiv+6
  3516  0007B6  C026  F014         	movff	___aodiv@quotient+7,?___aodiv+7
  3517  0007BA  0012               	return		;funcret
  3518  0007BC                     __end_of___aodiv:
  3519                           	opt callstack 0
  3520                           
  3521 ;; *************** function ___lwmod *****************
  3522 ;; Defined at:
  3523 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  dividend        2   12[COMRAM] unsigned int 
  3526 ;;  divisor         2   14[COMRAM] unsigned int 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  counter         1   16[COMRAM] unsigned char 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  2   12[COMRAM] unsigned int 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3538 ;;      Params:         4       0       0       0
  3539 ;;      Locals:         1       0       0       0
  3540 ;;      Temps:          0       0       0       0
  3541 ;;      Totals:         5       0       0       0
  3542 ;;Total ram usage:        5 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    1
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_display
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text17
  3553  000E04                     __ptext17:
  3554                           	opt callstack 0
  3555  000E04                     ___lwmod:
  3556                           	opt callstack 28
  3557  000E04  500F               	movf	___lwmod@divisor^0,w,c
  3558  000E06  1010               	iorwf	(___lwmod@divisor+1)^0,w,c
  3559  000E08  B4D8               	btfsc	status,2,c
  3560  000E0A  EF09  F007         	goto	u1221
  3561  000E0E  EF0B  F007         	goto	u1220
  3562  000E12                     u1221:
  3563  000E12  EF2F  F007         	goto	l823
  3564  000E16                     u1220:
  3565  000E16  0E01               	movlw	1
  3566  000E18  6E11               	movwf	___lwmod@counter^0,c
  3567  000E1A  EF13  F007         	goto	l1972
  3568  000E1E                     l1970:
  3569  000E1E  90D8               	bcf	status,0,c
  3570  000E20  360F               	rlcf	___lwmod@divisor^0,f,c
  3571  000E22  3610               	rlcf	(___lwmod@divisor+1)^0,f,c
  3572  000E24  2A11               	incf	___lwmod@counter^0,f,c
  3573  000E26                     l1972:
  3574  000E26  AE10               	btfss	(___lwmod@divisor+1)^0,7,c
  3575  000E28  EF18  F007         	goto	u1231
  3576  000E2C  EF1A  F007         	goto	u1230
  3577  000E30                     u1231:
  3578  000E30  EF0F  F007         	goto	l1970
  3579  000E34                     u1230:
  3580  000E34                     l1974:
  3581  000E34  500F               	movf	___lwmod@divisor^0,w,c
  3582  000E36  5C0D               	subwf	___lwmod@dividend^0,w,c
  3583  000E38  5010               	movf	(___lwmod@divisor+1)^0,w,c
  3584  000E3A  580E               	subwfb	(___lwmod@dividend+1)^0,w,c
  3585  000E3C  A0D8               	btfss	status,0,c
  3586  000E3E  EF23  F007         	goto	u1241
  3587  000E42  EF25  F007         	goto	u1240
  3588  000E46                     u1241:
  3589  000E46  EF29  F007         	goto	l1978
  3590  000E4A                     u1240:
  3591  000E4A  500F               	movf	___lwmod@divisor^0,w,c
  3592  000E4C  5E0D               	subwf	___lwmod@dividend^0,f,c
  3593  000E4E  5010               	movf	(___lwmod@divisor+1)^0,w,c
  3594  000E50  5A0E               	subwfb	(___lwmod@dividend+1)^0,f,c
  3595  000E52                     l1978:
  3596  000E52  90D8               	bcf	status,0,c
  3597  000E54  3210               	rrcf	(___lwmod@divisor+1)^0,f,c
  3598  000E56  320F               	rrcf	___lwmod@divisor^0,f,c
  3599  000E58  2E11               	decfsz	___lwmod@counter^0,f,c
  3600  000E5A  EF1A  F007         	goto	l1974
  3601  000E5E                     l823:
  3602  000E5E  C00D  F00D         	movff	___lwmod@dividend,?___lwmod
  3603  000E62  C00E  F00E         	movff	___lwmod@dividend+1,?___lwmod+1
  3604  000E66  0012               	return		;funcret
  3605  000E68                     __end_of___lwmod:
  3606                           	opt callstack 0
  3607                           
  3608 ;; *************** function ___lwdiv *****************
  3609 ;; Defined at:
  3610 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  dividend        2   12[COMRAM] unsigned int 
  3613 ;;  divisor         2   14[COMRAM] unsigned int 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  quotient        2   16[COMRAM] unsigned int 
  3616 ;;  counter         1   18[COMRAM] unsigned char 
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  2   12[COMRAM] unsigned int 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3626 ;;      Params:         4       0       0       0
  3627 ;;      Locals:         3       0       0       0
  3628 ;;      Temps:          0       0       0       0
  3629 ;;      Totals:         7       0       0       0
  3630 ;;Total ram usage:        7 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    1
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		_display
  3637 ;;		_readADC
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text18
  3642  000D2A                     __ptext18:
  3643                           	opt callstack 0
  3644  000D2A                     ___lwdiv:
  3645                           	opt callstack 28
  3646  000D2A  0E00               	movlw	0
  3647  000D2C  6E12               	movwf	(___lwdiv@quotient+1)^0,c
  3648  000D2E  0E00               	movlw	0
  3649  000D30  6E11               	movwf	___lwdiv@quotient^0,c
  3650  000D32  500F               	movf	___lwdiv@divisor^0,w,c
  3651  000D34  1010               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3652  000D36  B4D8               	btfsc	status,2,c
  3653  000D38  EFA0  F006         	goto	u1191
  3654  000D3C  EFA2  F006         	goto	u1190
  3655  000D40                     u1191:
  3656  000D40  EFCA  F006         	goto	l813
  3657  000D44                     u1190:
  3658  000D44  0E01               	movlw	1
  3659  000D46  6E13               	movwf	___lwdiv@counter^0,c
  3660  000D48  EFAA  F006         	goto	l1952
  3661  000D4C                     l1950:
  3662  000D4C  90D8               	bcf	status,0,c
  3663  000D4E  360F               	rlcf	___lwdiv@divisor^0,f,c
  3664  000D50  3610               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3665  000D52  2A13               	incf	___lwdiv@counter^0,f,c
  3666  000D54                     l1952:
  3667  000D54  AE10               	btfss	(___lwdiv@divisor+1)^0,7,c
  3668  000D56  EFAF  F006         	goto	u1201
  3669  000D5A  EFB1  F006         	goto	u1200
  3670  000D5E                     u1201:
  3671  000D5E  EFA6  F006         	goto	l1950
  3672  000D62                     u1200:
  3673  000D62                     l1954:
  3674  000D62  90D8               	bcf	status,0,c
  3675  000D64  3611               	rlcf	___lwdiv@quotient^0,f,c
  3676  000D66  3612               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3677  000D68  500F               	movf	___lwdiv@divisor^0,w,c
  3678  000D6A  5C0D               	subwf	___lwdiv@dividend^0,w,c
  3679  000D6C  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  3680  000D6E  580E               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3681  000D70  A0D8               	btfss	status,0,c
  3682  000D72  EFBD  F006         	goto	u1211
  3683  000D76  EFBF  F006         	goto	u1210
  3684  000D7A                     u1211:
  3685  000D7A  EFC4  F006         	goto	l1962
  3686  000D7E                     u1210:
  3687  000D7E  500F               	movf	___lwdiv@divisor^0,w,c
  3688  000D80  5E0D               	subwf	___lwdiv@dividend^0,f,c
  3689  000D82  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  3690  000D84  5A0E               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3691  000D86  8011               	bsf	___lwdiv@quotient^0,0,c
  3692  000D88                     l1962:
  3693  000D88  90D8               	bcf	status,0,c
  3694  000D8A  3210               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3695  000D8C  320F               	rrcf	___lwdiv@divisor^0,f,c
  3696  000D8E  2E13               	decfsz	___lwdiv@counter^0,f,c
  3697  000D90  EFB1  F006         	goto	l1954
  3698  000D94                     l813:
  3699  000D94  C011  F00D         	movff	___lwdiv@quotient,?___lwdiv
  3700  000D98  C012  F00E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3701  000D9C  0012               	return		;funcret
  3702  000D9E                     __end_of___lwdiv:
  3703                           	opt callstack 0
  3704                           
  3705 ;; *************** function _LCDPutStr *****************
  3706 ;; Defined at:
  3707 ;;		line 147 in file "lcd.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  str             2   17[COMRAM] PTR const unsigned char 
  3710 ;;		 -> display@str1(16), 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  i               1   19[COMRAM] unsigned char 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3722 ;;      Params:         2       0       0       0
  3723 ;;      Locals:         1       0       0       0
  3724 ;;      Temps:          0       0       0       0
  3725 ;;      Totals:         3       0       0       0
  3726 ;;Total ram usage:        3 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:    3
  3729 ;; This function calls:
  3730 ;;		_LCDPutChar
  3731 ;; This function is called by:
  3732 ;;		_display
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text19
  3737  001118                     __ptext19:
  3738                           	opt callstack 0
  3739  001118                     _LCDPutStr:
  3740                           	opt callstack 26
  3741  001118                     
  3742                           ;lcd.c: 148:     uint8_t i = 0;
  3743  001118  0E00               	movlw	0
  3744  00111A  6E14               	movwf	LCDPutStr@i^0,c
  3745                           
  3746                           ;lcd.c: 151:     while (str[i]) {
  3747  00111C  EF9A  F008         	goto	l1942
  3748  001120                     l1938:
  3749                           
  3750                           ;lcd.c: 153:         LCDPutChar(str[i++]);
  3751  001120  5014               	movf	LCDPutStr@i^0,w,c
  3752  001122  2412               	addwf	LCDPutStr@str^0,w,c
  3753  001124  6ED9               	movwf	fsr2l,c
  3754  001126  0E00               	movlw	0
  3755  001128  2013               	addwfc	(LCDPutStr@str+1)^0,w,c
  3756  00112A  6EDA               	movwf	fsr2h,c
  3757  00112C  50DF               	movf	indf2,w,c
  3758  00112E  ECC4  F008         	call	_LCDPutChar
  3759  001132  2A14               	incf	LCDPutStr@i^0,f,c
  3760  001134                     l1942:
  3761                           
  3762                           ;lcd.c: 151:     while (str[i]) {
  3763  001134  5014               	movf	LCDPutStr@i^0,w,c
  3764  001136  2412               	addwf	LCDPutStr@str^0,w,c
  3765  001138  6ED9               	movwf	fsr2l,c
  3766  00113A  0E00               	movlw	0
  3767  00113C  2013               	addwfc	(LCDPutStr@str+1)^0,w,c
  3768  00113E  6EDA               	movwf	fsr2h,c
  3769  001140  50DF               	movf	indf2,w,c
  3770  001142  A4D8               	btfss	status,2,c
  3771  001144  EFA6  F008         	goto	u1181
  3772  001148  EFA8  F008         	goto	u1180
  3773  00114C                     u1181:
  3774  00114C  EF90  F008         	goto	l1938
  3775  001150                     u1180:
  3776  001150  0012               	return		;funcret
  3777  001152                     __end_of_LCDPutStr:
  3778                           	opt callstack 0
  3779                           
  3780 ;; *************** function _LCDPutChar *****************
  3781 ;; Defined at:
  3782 ;;		line 119 in file "lcd.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  ch              1    wreg     unsigned char 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  ch              1   16[COMRAM] unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3796 ;;      Params:         0       0       0       0
  3797 ;;      Locals:         1       0       0       0
  3798 ;;      Temps:          1       0       0       0
  3799 ;;      Totals:         2       0       0       0
  3800 ;;Total ram usage:        2 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    2
  3803 ;; This function calls:
  3804 ;;		_LCDWriteNibble
  3805 ;; This function is called by:
  3806 ;;		_display
  3807 ;;		_LCDPutStr
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text20
  3812  001188                     __ptext20:
  3813                           	opt callstack 0
  3814  001188                     _LCDPutChar:
  3815                           	opt callstack 26
  3816                           
  3817                           ;incstack = 0
  3818                           ;LCDPutChar@ch stored from wreg
  3819  001188  6E11               	movwf	LCDPutChar@ch^0,c
  3820  00118A                     
  3821                           ;lcd.c: 120:     _delay((unsigned long)((5)*(40000000/4000.0)));
  3822  00118A  0E41               	movlw	65
  3823  00118C  6E10               	movwf	??_LCDPutChar^0,c
  3824  00118E  0EEE               	movlw	238
  3825  001190                     u1977:
  3826  001190  2EE8               	decfsz	wreg,f,c
  3827  001192  D7FE               	bra	u1977
  3828  001194  2E10               	decfsz	??_LCDPutChar^0,f,c
  3829  001196  D7FC               	bra	u1977
  3830  001198  F000 F000          	nop2	
  3831  00119C                     
  3832                           ;lcd.c: 123:     LCDWriteNibble(ch, 1);
  3833  00119C  0E01               	movlw	1
  3834  00119E  6E0D               	movwf	LCDWriteNibble@rs^0,c
  3835  0011A0  5011               	movf	LCDPutChar@ch^0,w,c
  3836  0011A2  EC0A  F006         	call	_LCDWriteNibble
  3837  0011A6                     
  3838                           ;lcd.c: 126:     ch = (ch << 4);
  3839  0011A6  3811               	swapf	LCDPutChar@ch^0,w,c
  3840  0011A8  0BF0               	andlw	240
  3841  0011AA  6E11               	movwf	LCDPutChar@ch^0,c
  3842  0011AC                     
  3843                           ;lcd.c: 129:     LCDWriteNibble(ch, 1);
  3844  0011AC  0E01               	movlw	1
  3845  0011AE  6E0D               	movwf	LCDWriteNibble@rs^0,c
  3846  0011B0  5011               	movf	LCDPutChar@ch^0,w,c
  3847  0011B2  EC0A  F006         	call	_LCDWriteNibble
  3848  0011B6  0012               	return		;funcret
  3849  0011B8                     __end_of_LCDPutChar:
  3850                           	opt callstack 0
  3851                           
  3852 ;; *************** function _configureTimer5 *****************
  3853 ;; Defined at:
  3854 ;;		line 381 in file "newmain.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		None
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3868 ;;      Params:         0       0       0       0
  3869 ;;      Locals:         0       0       0       0
  3870 ;;      Temps:          0       0       0       0
  3871 ;;      Totals:         0       0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    1
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_main
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text21
  3883  0011F6                     __ptext21:
  3884                           	opt callstack 0
  3885  0011F6                     _configureTimer5:
  3886                           	opt callstack 29
  3887  0011F6                     
  3888                           ;newmain.c: 382:     T5CONbits.T5PS1 = 1;
  3889  0011F6  88B7               	bsf	183,4,c	;volatile
  3890                           
  3891                           ;newmain.c: 383:     T5CONbits.T5PS0 = 1;
  3892  0011F8  86B7               	bsf	183,3,c	;volatile
  3893                           
  3894                           ;newmain.c: 384:     T5CONbits.T5MOD = 0;
  3895  0011FA  9AB7               	bcf	183,5,c	;volatile
  3896                           
  3897                           ;newmain.c: 385:     T5CONbits.TMR5ON = 1;
  3898  0011FC  80B7               	bsf	183,0,c	;volatile
  3899                           
  3900                           ;newmain.c: 386:     PIE3bits.TMR5IE = 1;
  3901  0011FE  80A3               	bsf	163,0,c	;volatile
  3902                           
  3903                           ;newmain.c: 387:     TMR5 = timer5ReloadValue;
  3904  001200  C0E2  FF87         	movff	_timer5ReloadValue,3975	;volatile
  3905  001204  C0E3  FF88         	movff	_timer5ReloadValue+1,3976	;volatile
  3906  001208  0012               	return		;funcret
  3907  00120A                     __end_of_configureTimer5:
  3908                           	opt callstack 0
  3909                           
  3910 ;; *************** function _configureTimer1 *****************
  3911 ;; Defined at:
  3912 ;;		line 370 in file "newmain.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;		None
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3926 ;;      Params:         0       0       0       0
  3927 ;;      Locals:         0       0       0       0
  3928 ;;      Temps:          0       0       0       0
  3929 ;;      Totals:         0       0       0       0
  3930 ;;Total ram usage:        0 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    1
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_main
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text22
  3941  00120A                     __ptext22:
  3942                           	opt callstack 0
  3943  00120A                     _configureTimer1:
  3944                           	opt callstack 29
  3945  00120A                     
  3946                           ;newmain.c: 372:     T1CONbits.T1CKPS1 = 1;
  3947  00120A  8ACD               	bsf	205,5,c	;volatile
  3948                           
  3949                           ;newmain.c: 373:     T1CONbits.T1CKPS0 = 1;
  3950  00120C  88CD               	bsf	205,4,c	;volatile
  3951                           
  3952                           ;newmain.c: 375:     T1CONbits.TMR1CS = 0;
  3953  00120E  92CD               	bcf	205,1,c	;volatile
  3954                           
  3955                           ;newmain.c: 376:     T1CONbits.TMR1ON = 1;
  3956  001210  80CD               	bsf	205,0,c	;volatile
  3957                           
  3958                           ;newmain.c: 377:     PIE1bits.TMR1IE = 1;
  3959  001212  809D               	bsf	157,0,c	;volatile
  3960  001214                     
  3961                           ;newmain.c: 378:     TMR1 = 0;
  3962  001214  0E00               	movlw	0
  3963  001216  6ECF               	movwf	207,c	;volatile
  3964  001218  0E00               	movlw	0
  3965  00121A  6ECE               	movwf	206,c	;volatile
  3966  00121C  0012               	return		;funcret
  3967  00121E                     __end_of_configureTimer1:
  3968                           	opt callstack 0
  3969                           
  3970 ;; *************** function _configureTimer0 *****************
  3971 ;; Defined at:
  3972 ;;		line 352 in file "newmain.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		None
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3986 ;;      Params:         0       0       0       0
  3987 ;;      Locals:         0       0       0       0
  3988 ;;      Temps:          0       0       0       0
  3989 ;;      Totals:         0       0       0       0
  3990 ;;Total ram usage:        0 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    1
  3993 ;; This function calls:
  3994 ;;		Nothing
  3995 ;; This function is called by:
  3996 ;;		_main
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text23
  4001  0011E0                     __ptext23:
  4002                           	opt callstack 0
  4003  0011E0                     _configureTimer0:
  4004                           	opt callstack 29
  4005  0011E0                     
  4006                           ;newmain.c: 356:     T0CONbits.PSA = 0;
  4007  0011E0  96D5               	bcf	213,3,c	;volatile
  4008                           
  4009                           ;newmain.c: 357:     T0CONbits.T0SE = 0;
  4010  0011E2  98D5               	bcf	213,4,c	;volatile
  4011                           
  4012                           ;newmain.c: 358:     T0CONbits.T0CS = 0;
  4013  0011E4  9AD5               	bcf	213,5,c	;volatile
  4014                           
  4015                           ;newmain.c: 359:     T0CONbits.T016BIT = 0;
  4016  0011E6  9CD5               	bcf	213,6,c	;volatile
  4017                           
  4018                           ;newmain.c: 360:     T0CONbits.TMR0ON = 1;
  4019  0011E8  8ED5               	bsf	213,7,c	;volatile
  4020                           
  4021                           ;newmain.c: 361:     T0CONbits.T0PS0 = 1;
  4022  0011EA  80D5               	bsf	213,0,c	;volatile
  4023                           
  4024                           ;newmain.c: 362:     T0CONbits.T0PS1 = 0;
  4025  0011EC  92D5               	bcf	213,1,c	;volatile
  4026                           
  4027                           ;newmain.c: 363:     T0CONbits.T0PS2 = 1;
  4028  0011EE  84D5               	bsf	213,2,c	;volatile
  4029                           
  4030                           ;newmain.c: 364:     INTCONbits.TMR0IE = 1;
  4031  0011F0  8AF2               	bsf	242,5,c	;volatile
  4032                           
  4033                           ;newmain.c: 365:     INTCON2bits.TMR0IP = 0;
  4034  0011F2  94F1               	bcf	241,2,c	;volatile
  4035  0011F4  0012               	return		;funcret
  4036  0011F6                     __end_of_configureTimer0:
  4037                           	opt callstack 0
  4038                           
  4039 ;; *************** function _configurePWM *****************
  4040 ;; Defined at:
  4041 ;;		line 164 in file "newmain.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4055 ;;      Params:         0       0       0       0
  4056 ;;      Locals:         0       0       0       0
  4057 ;;      Temps:          0       0       0       0
  4058 ;;      Totals:         0       0       0       0
  4059 ;;Total ram usage:        0 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    1
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text24
  4070  00109A                     __ptext24:
  4071                           	opt callstack 0
  4072  00109A                     _configurePWM:
  4073                           	opt callstack 29
  4074  00109A                     
  4075                           ;newmain.c: 165:     LATB = 0;
  4076  00109A  0E00               	movlw	0
  4077  00109C  6E8A               	movwf	138,c	;volatile
  4078                           
  4079                           ;newmain.c: 166:     TRISB = 0;
  4080  00109E  0E00               	movlw	0
  4081  0010A0  6E93               	movwf	147,c	;volatile
  4082                           
  4083                           ;newmain.c: 167:     PORTB = 0;
  4084  0010A2  0E00               	movlw	0
  4085  0010A4  6E81               	movwf	129,c	;volatile
  4086  0010A6                     
  4087                           ;newmain.c: 177:     PTCON0bits.PTMOD0 = 0;
  4088  0010A6  907F               	bcf	127,0,c	;volatile
  4089  0010A8                     
  4090                           ;newmain.c: 178:     PTCON0bits.PTMOD1 = 0;
  4091  0010A8  927F               	bcf	127,1,c	;volatile
  4092  0010AA                     
  4093                           ;newmain.c: 179:     PTCON0bits.PTCKPS1 = 0;
  4094  0010AA  967F               	bcf	127,3,c	;volatile
  4095  0010AC                     
  4096                           ;newmain.c: 180:     PTCON0bits.PTCKPS0 = 1;
  4097  0010AC  847F               	bsf	127,2,c	;volatile
  4098  0010AE                     
  4099                           ;newmain.c: 195:     PTCON1bits.PTEN = 0;
  4100  0010AE  9E7E               	bcf	126,7,c	;volatile
  4101  0010B0                     
  4102                           ;newmain.c: 196:     PTCON1bits.PTDIR = 0;
  4103  0010B0  9C7E               	bcf	126,6,c	;volatile
  4104  0010B2                     
  4105                           ;newmain.c: 224:     PWMCON0bits.PWMEN2 = 1;
  4106  0010B2  8C6F               	bsf	111,6,c	;volatile
  4107  0010B4                     
  4108                           ;newmain.c: 225:     PWMCON0bits.PWMEN1 = 0;
  4109  0010B4  9A6F               	bcf	111,5,c	;volatile
  4110  0010B6                     
  4111                           ;newmain.c: 226:     PWMCON0bits.PWMEN0 = 0;
  4112  0010B6  986F               	bcf	111,4,c	;volatile
  4113  0010B8                     
  4114                           ;newmain.c: 228:     PWMCON0bits.PMOD0 = 0;
  4115  0010B8  906F               	bcf	111,0,c	;volatile
  4116  0010BA                     
  4117                           ;newmain.c: 229:     PWMCON0bits.PMOD1 = 0;
  4118  0010BA  926F               	bcf	111,1,c	;volatile
  4119  0010BC                     
  4120                           ;newmain.c: 230:     PWMCON0bits.PMOD2 = 0;
  4121  0010BC  946F               	bcf	111,2,c	;volatile
  4122  0010BE                     
  4123                           ;newmain.c: 238:     PWMCON1bits.UDIS = 0;
  4124  0010BE  926E               	bcf	110,1,c	;volatile
  4125  0010C0                     
  4126                           ;newmain.c: 239:     PWMCON1bits.OSYNC = 1;
  4127  0010C0  806E               	bsf	110,0,c	;volatile
  4128                           
  4129                           ;newmain.c: 244:     PTPERH = 0x01;
  4130  0010C2  0E01               	movlw	1
  4131  0010C4  6E7A               	movwf	122,c	;volatile
  4132                           
  4133                           ;newmain.c: 245:     PTPERL = 0xF3;
  4134  0010C6  0EF3               	movlw	243
  4135  0010C8  6E7B               	movwf	123,c	;volatile
  4136                           
  4137                           ;newmain.c: 251:     PDC0H = 0x00;
  4138  0010CA  0E00               	movlw	0
  4139  0010CC  6E78               	movwf	120,c	;volatile
  4140                           
  4141                           ;newmain.c: 252:     PDC0L = 0x13;
  4142  0010CE  0E13               	movlw	19
  4143  0010D0  6E79               	movwf	121,c	;volatile
  4144  0010D2                     
  4145                           ;newmain.c: 262:     OVDCOND = 0xff;
  4146  0010D2  686B               	setf	107,c	;volatile
  4147                           
  4148                           ;newmain.c: 272:     OVDCONS = 0;
  4149  0010D4  0E00               	movlw	0
  4150  0010D6  6E6A               	movwf	106,c	;volatile
  4151  0010D8  0012               	return		;funcret
  4152  0010DA                     __end_of_configurePWM:
  4153                           	opt callstack 0
  4154                           
  4155 ;; *************** function _configureInterrupts *****************
  4156 ;; Defined at:
  4157 ;;		line 287 in file "newmain.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      void 
  4164 ;; Registers used:
  4165 ;;		None
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4171 ;;      Params:         0       0       0       0
  4172 ;;      Locals:         0       0       0       0
  4173 ;;      Temps:          0       0       0       0
  4174 ;;      Totals:         0       0       0       0
  4175 ;;Total ram usage:        0 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; Hardware stack levels required when called:    1
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_main
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text25
  4186  001234                     __ptext25:
  4187                           	opt callstack 0
  4188  001234                     _configureInterrupts:
  4189                           	opt callstack 29
  4190  001234                     
  4191                           ;newmain.c: 307:     INTCONbits.GIE = 1;
  4192  001234  8EF2               	bsf	242,7,c	;volatile
  4193                           
  4194                           ;newmain.c: 308:     INTCONbits.PEIE = 1;
  4195  001236  8CF2               	bsf	242,6,c	;volatile
  4196  001238  0012               	return		;funcret
  4197  00123A                     __end_of_configureInterrupts:
  4198                           	opt callstack 0
  4199                           
  4200 ;; *************** function _configureInputs *****************
  4201 ;; Defined at:
  4202 ;;		line 390 in file "newmain.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;		None
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;		None
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      void 
  4209 ;; Registers used:
  4210 ;;		None
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4216 ;;      Params:         0       0       0       0
  4217 ;;      Locals:         0       0       0       0
  4218 ;;      Temps:          0       0       0       0
  4219 ;;      Totals:         0       0       0       0
  4220 ;;Total ram usage:        0 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    1
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_main
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text26
  4231  00122A                     __ptext26:
  4232                           	opt callstack 0
  4233  00122A                     _configureInputs:
  4234                           	opt callstack 29
  4235  00122A                     
  4236                           ;newmain.c: 391:     TRISAbits.TRISA1 = 1;
  4237  00122A  8292               	bsf	146,1,c	;volatile
  4238                           
  4239                           ;newmain.c: 392:     ANSEL0bits.ANS1 = 0;
  4240  00122C  92B8               	bcf	184,1,c	;volatile
  4241                           
  4242                           ;newmain.c: 394:     TRISAbits.TRISA3 = 1;
  4243  00122E  8692               	bsf	146,3,c	;volatile
  4244                           
  4245                           ;newmain.c: 395:     ANSEL0bits.ANS3 = 0;
  4246  001230  96B8               	bcf	184,3,c	;volatile
  4247  001232  0012               	return		;funcret
  4248  001234                     __end_of_configureInputs:
  4249                           	opt callstack 0
  4250                           
  4251 ;; *************** function _configureADC *****************
  4252 ;; Defined at:
  4253 ;;		line 318 in file "newmain.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;		None
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;		None
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  1    wreg      void 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4267 ;;      Params:         0       0       0       0
  4268 ;;      Locals:         0       0       0       0
  4269 ;;      Temps:          0       0       0       0
  4270 ;;      Totals:         0       0       0       0
  4271 ;;Total ram usage:        0 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:    1
  4274 ;; This function calls:
  4275 ;;		Nothing
  4276 ;; This function is called by:
  4277 ;;		_main
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text27
  4282  0011B8                     __ptext27:
  4283                           	opt callstack 0
  4284  0011B8                     _configureADC:
  4285                           	opt callstack 29
  4286  0011B8                     
  4287                           ;newmain.c: 320:     ADCON0bits.ACONV = 1;
  4288  0011B8  8AC2               	bsf	194,5,c	;volatile
  4289                           
  4290                           ;newmain.c: 321:     ADCON0bits.ACSCH = 0;
  4291  0011BA  98C2               	bcf	194,4,c	;volatile
  4292                           
  4293                           ;newmain.c: 322:     ADCON0bits.ACMOD1 = 0;
  4294  0011BC  96C2               	bcf	194,3,c	;volatile
  4295                           
  4296                           ;newmain.c: 323:     ADCON0bits.ACMOD0 = 0;
  4297  0011BE  94C2               	bcf	194,2,c	;volatile
  4298  0011C0                     
  4299                           ;newmain.c: 325:     ADCON1 = 0;
  4300  0011C0  0E00               	movlw	0
  4301  0011C2  6EC1               	movwf	193,c	;volatile
  4302  0011C4                     
  4303                           ;newmain.c: 327:     ADCON2bits.ACQT2 = 1;
  4304  0011C4  8AC0               	bsf	192,5,c	;volatile
  4305  0011C6                     
  4306                           ;newmain.c: 328:     ADCON2bits.ACQT1 = 1;
  4307  0011C6  88C0               	bsf	192,4,c	;volatile
  4308  0011C8                     
  4309                           ;newmain.c: 331:     ADCON2bits.ADCS2 = 1;
  4310  0011C8  84C0               	bsf	192,2,c	;volatile
  4311  0011CA                     
  4312                           ;newmain.c: 332:     ADCON2bits.ADCS1 = 1;
  4313  0011CA  82C0               	bsf	192,1,c	;volatile
  4314  0011CC                     
  4315                           ;newmain.c: 333:     ADCON2bits.ADFM = 0;
  4316  0011CC  9EC0               	bcf	192,7,c	;volatile
  4317  0011CE                     
  4318                           ;newmain.c: 336:     ADCON3bits.ADRS1 = 1;
  4319  0011CE  8E9A               	bsf	154,7,c	;volatile
  4320  0011D0                     
  4321                           ;newmain.c: 338:     ADCHSbits.GASEL1 = 0;
  4322  0011D0  9299               	bcf	153,1,c	;volatile
  4323  0011D2                     
  4324                           ;newmain.c: 339:     ADCHSbits.GASEL0 = 0;
  4325  0011D2  9099               	bcf	153,0,c	;volatile
  4326  0011D4                     
  4327                           ;newmain.c: 341:     ANSEL0bits.ANS0 = 1;
  4328  0011D4  80B8               	bsf	184,0,c	;volatile
  4329  0011D6                     
  4330                           ;newmain.c: 342:     TRISAbits.TRISA0 = 1;
  4331  0011D6  8092               	bsf	146,0,c	;volatile
  4332  0011D8                     
  4333                           ;newmain.c: 345:     PIE1bits.ADIE = 0;
  4334  0011D8  9C9D               	bcf	157,6,c	;volatile
  4335  0011DA                     
  4336                           ;newmain.c: 347:     ADCON0bits.ADON = 1;
  4337  0011DA  80C2               	bsf	194,0,c	;volatile
  4338  0011DC                     
  4339                           ;newmain.c: 349:     ADCON0bits.GODONE = 1;
  4340  0011DC  82C2               	bsf	194,1,c	;volatile
  4341  0011DE  0012               	return		;funcret
  4342  0011E0                     __end_of_configureADC:
  4343                           	opt callstack 0
  4344                           
  4345 ;; *************** function _LCD_Initialize *****************
  4346 ;; Defined at:
  4347 ;;		line 48 in file "lcd.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;		None
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;		None
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      void 
  4354 ;; Registers used:
  4355 ;;		wreg, status,2, status,0, cstack
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4361 ;;      Params:         0       0       0       0
  4362 ;;      Locals:         0       0       0       0
  4363 ;;      Temps:          2       0       0       0
  4364 ;;      Totals:         2       0       0       0
  4365 ;;Total ram usage:        2 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; Hardware stack levels required when called:    3
  4368 ;; This function calls:
  4369 ;;		_LCDPutCmd
  4370 ;; This function is called by:
  4371 ;;		_main
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text28
  4376  000F76                     __ptext28:
  4377                           	opt callstack 0
  4378  000F76                     _LCD_Initialize:
  4379                           	opt callstack 27
  4380  000F76                     
  4381                           ;lcd.c: 51:     TRISCbits.RC0 = 0;
  4382  000F76  9094               	bcf	148,0,c	;volatile
  4383                           
  4384                           ;lcd.c: 52:     TRISCbits.RC1 = 0;
  4385  000F78  9294               	bcf	148,1,c	;volatile
  4386                           
  4387                           ;lcd.c: 53:     TRISCbits.RC2 = 0;
  4388  000F7A  9494               	bcf	148,2,c	;volatile
  4389                           
  4390                           ;lcd.c: 54:     TRISCbits.RC3 = 0;
  4391  000F7C  9694               	bcf	148,3,c	;volatile
  4392                           
  4393                           ;lcd.c: 55:     TRISDbits.RD0 = 0;
  4394  000F7E  9095               	bcf	149,0,c	;volatile
  4395                           
  4396                           ;lcd.c: 56:     TRISDbits.RD1 = 0;
  4397  000F80  9295               	bcf	149,1,c	;volatile
  4398                           
  4399                           ;lcd.c: 59:     PORTCbits.RC0 = 0;
  4400  000F82  9082               	bcf	130,0,c	;volatile
  4401                           
  4402                           ;lcd.c: 60:     PORTCbits.RC1 = 0;
  4403  000F84  9282               	bcf	130,1,c	;volatile
  4404                           
  4405                           ;lcd.c: 61:     PORTCbits.RC2 = 0;
  4406  000F86  9482               	bcf	130,2,c	;volatile
  4407                           
  4408                           ;lcd.c: 62:     PORTCbits.RC3 = 0;
  4409  000F88  9682               	bcf	130,3,c	;volatile
  4410                           
  4411                           ;lcd.c: 63:     PORTDbits.RD0 = 0;
  4412  000F8A  9083               	bcf	131,0,c	;volatile
  4413                           
  4414                           ;lcd.c: 64:     PORTDbits.RD1 = 0;
  4415  000F8C  9283               	bcf	131,1,c	;volatile
  4416  000F8E                     
  4417                           ;lcd.c: 71:     _delay((unsigned long)((20)*(40000000/4000.0)));
  4418  000F8E  0E02               	movlw	2
  4419  000F90  6E13               	movwf	(??_LCD_Initialize+1)^0,c
  4420  000F92  0E04               	movlw	4
  4421  000F94  6E12               	movwf	??_LCD_Initialize^0,c
  4422  000F96  0EBA               	movlw	186
  4423  000F98                     u1987:
  4424  000F98  2EE8               	decfsz	wreg,f,c
  4425  000F9A  D7FE               	bra	u1987
  4426  000F9C  2E12               	decfsz	??_LCD_Initialize^0,f,c
  4427  000F9E  D7FC               	bra	u1987
  4428  000FA0  2E13               	decfsz	(??_LCD_Initialize+1)^0,f,c
  4429  000FA2  D7FA               	bra	u1987
  4430  000FA4  F000 F000          	nop2	
  4431  000FA8                     
  4432                           ;lcd.c: 74:     LCDPutCmd(0x32);
  4433  000FA8  0E32               	movlw	50
  4434  000FAA  EC6D  F008         	call	_LCDPutCmd
  4435  000FAE                     
  4436                           ;lcd.c: 77:     LCDPutCmd(0x28);
  4437  000FAE  0E28               	movlw	40
  4438  000FB0  EC6D  F008         	call	_LCDPutCmd
  4439  000FB4                     
  4440                           ;lcd.c: 80:     LCDPutCmd(0x0C);
  4441  000FB4  0E0C               	movlw	12
  4442  000FB6  EC6D  F008         	call	_LCDPutCmd
  4443  000FBA                     
  4444                           ;lcd.c: 82:     LCDPutCmd(0x01);
  4445  000FBA  0E01               	movlw	1
  4446  000FBC  EC6D  F008         	call	_LCDPutCmd
  4447  000FC0                     
  4448                           ;lcd.c: 85:     LCDPutCmd(0x06);
  4449  000FC0  0E06               	movlw	6
  4450  000FC2  EC6D  F008         	call	_LCDPutCmd
  4451  000FC6  0012               	return		;funcret
  4452  000FC8                     __end_of_LCD_Initialize:
  4453                           	opt callstack 0
  4454                           
  4455 ;; *************** function _LCDPutCmd *****************
  4456 ;; Defined at:
  4457 ;;		line 132 in file "lcd.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  ch              1    wreg     unsigned char 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  ch              1   16[COMRAM] unsigned char 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4471 ;;      Params:         0       0       0       0
  4472 ;;      Locals:         1       0       0       0
  4473 ;;      Temps:          1       0       0       0
  4474 ;;      Totals:         2       0       0       0
  4475 ;;Total ram usage:        2 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    2
  4478 ;; This function calls:
  4479 ;;		_LCDWriteNibble
  4480 ;; This function is called by:
  4481 ;;		_display
  4482 ;;		_LCD_Initialize
  4483 ;;		_LCDGoto
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           	psect	text29
  4488  0010DA                     __ptext29:
  4489                           	opt callstack 0
  4490  0010DA                     _LCDPutCmd:
  4491                           	opt callstack 27
  4492                           
  4493                           ;incstack = 0
  4494                           ;LCDPutCmd@ch stored from wreg
  4495  0010DA  6E11               	movwf	LCDPutCmd@ch^0,c
  4496  0010DC                     
  4497                           ;lcd.c: 133:     _delay((unsigned long)((5)*(40000000/4000.0)));
  4498  0010DC  0E41               	movlw	65
  4499  0010DE  6E10               	movwf	??_LCDPutCmd^0,c
  4500  0010E0  0EEE               	movlw	238
  4501  0010E2                     u1997:
  4502  0010E2  2EE8               	decfsz	wreg,f,c
  4503  0010E4  D7FE               	bra	u1997
  4504  0010E6  2E10               	decfsz	??_LCDPutCmd^0,f,c
  4505  0010E8  D7FC               	bra	u1997
  4506  0010EA  F000 F000          	nop2	
  4507  0010EE                     
  4508                           ;lcd.c: 136:     LCDWriteNibble(ch, 0);
  4509  0010EE  0E00               	movlw	0
  4510  0010F0  6E0D               	movwf	LCDWriteNibble@rs^0,c
  4511  0010F2  5011               	movf	LCDPutCmd@ch^0,w,c
  4512  0010F4  EC0A  F006         	call	_LCDWriteNibble
  4513  0010F8                     
  4514                           ;lcd.c: 139:     ch = (ch << 4);
  4515  0010F8  3811               	swapf	LCDPutCmd@ch^0,w,c
  4516  0010FA  0BF0               	andlw	240
  4517  0010FC  6E11               	movwf	LCDPutCmd@ch^0,c
  4518  0010FE                     
  4519                           ;lcd.c: 141:     _delay((unsigned long)((1)*(40000000/4000.0)));
  4520  0010FE  0E0D               	movlw	13
  4521  001100  6E10               	movwf	??_LCDPutCmd^0,c
  4522  001102  0EFC               	movlw	252
  4523  001104                     u2007:
  4524  001104  2EE8               	decfsz	wreg,f,c
  4525  001106  D7FE               	bra	u2007
  4526  001108  2E10               	decfsz	??_LCDPutCmd^0,f,c
  4527  00110A  D7FC               	bra	u2007
  4528  00110C                     
  4529                           ;lcd.c: 144:     LCDWriteNibble(ch, 0);
  4530  00110C  0E00               	movlw	0
  4531  00110E  6E0D               	movwf	LCDWriteNibble@rs^0,c
  4532  001110  5011               	movf	LCDPutCmd@ch^0,w,c
  4533  001112  EC0A  F006         	call	_LCDWriteNibble
  4534  001116  0012               	return		;funcret
  4535  001118                     __end_of_LCDPutCmd:
  4536                           	opt callstack 0
  4537                           
  4538 ;; *************** function _LCDWriteNibble *****************
  4539 ;; Defined at:
  4540 ;;		line 89 in file "lcd.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  ch              1    wreg     unsigned char 
  4543 ;;  rs              1   12[COMRAM] unsigned char 
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  ch              1   14[COMRAM] unsigned char 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2, status,0
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4555 ;;      Params:         1       0       0       0
  4556 ;;      Locals:         1       0       0       0
  4557 ;;      Temps:          1       0       0       0
  4558 ;;      Totals:         3       0       0       0
  4559 ;;Total ram usage:        3 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:    1
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		_LCDPutChar
  4566 ;;		_LCDPutCmd
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text30
  4571  000C14                     __ptext30:
  4572                           	opt callstack 0
  4573  000C14                     _LCDWriteNibble:
  4574                           	opt callstack 26
  4575                           
  4576                           ;incstack = 0
  4577                           ;LCDWriteNibble@ch stored from wreg
  4578  000C14  6E0F               	movwf	LCDWriteNibble@ch^0,c
  4579  000C16                     
  4580                           ;lcd.c: 91:     ch = (ch >> 4);
  4581  000C16  380F               	swapf	LCDWriteNibble@ch^0,w,c
  4582  000C18  0B0F               	andlw	15
  4583  000C1A  6E0F               	movwf	LCDWriteNibble@ch^0,c
  4584                           
  4585                           ;lcd.c: 94:     ch = (ch & 0x0F);
  4586  000C1C  500F               	movf	LCDWriteNibble@ch^0,w,c
  4587  000C1E  0B0F               	andlw	15
  4588  000C20  6E0F               	movwf	LCDWriteNibble@ch^0,c
  4589                           
  4590                           ;lcd.c: 95:     PORTCbits.RC2 = ch & 0xF1;
  4591  000C22  C00F  F00E         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  4592  000C26  0EF1               	movlw	241
  4593  000C28  160E               	andwf	??_LCDWriteNibble^0,f,c
  4594  000C2A  460E               	rlncf	??_LCDWriteNibble^0,f,c
  4595  000C2C  460E               	rlncf	??_LCDWriteNibble^0,f,c
  4596  000C2E  5082               	movf	130,w,c	;volatile
  4597  000C30  180E               	xorwf	??_LCDWriteNibble^0,w,c
  4598  000C32  0BFB               	andlw	-5
  4599  000C34  180E               	xorwf	??_LCDWriteNibble^0,w,c
  4600  000C36  6E82               	movwf	130,c	;volatile
  4601                           
  4602                           ;lcd.c: 96:     PORTCbits.RC3 = (ch & 0xF2) >> 1;
  4603  000C38  C00F  F00E         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  4604  000C3C  90D8               	bcf	status,0,c
  4605  000C3E  320E               	rrcf	??_LCDWriteNibble^0,f,c
  4606  000C40  0E79               	movlw	121
  4607  000C42  160E               	andwf	??_LCDWriteNibble^0,f,c
  4608  000C44  460E               	rlncf	??_LCDWriteNibble^0,f,c
  4609  000C46  460E               	rlncf	??_LCDWriteNibble^0,f,c
  4610  000C48  460E               	rlncf	??_LCDWriteNibble^0,f,c
  4611  000C4A  5082               	movf	130,w,c	;volatile
  4612  000C4C  180E               	xorwf	??_LCDWriteNibble^0,w,c
  4613  000C4E  0BF7               	andlw	-9
  4614  000C50  180E               	xorwf	??_LCDWriteNibble^0,w,c
  4615  000C52  6E82               	movwf	130,c	;volatile
  4616                           
  4617                           ;lcd.c: 97:     PORTDbits.RD0 = (ch & 0xF4) >> 2;
  4618  000C54  C00F  F00E         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  4619  000C58  90D8               	bcf	status,0,c
  4620  000C5A  320E               	rrcf	??_LCDWriteNibble^0,f,c
  4621  000C5C  90D8               	bcf	status,0,c
  4622  000C5E  320E               	rrcf	??_LCDWriteNibble^0,f,c
  4623  000C60  0E3D               	movlw	61
  4624  000C62  160E               	andwf	??_LCDWriteNibble^0,f,c
  4625  000C64  5083               	movf	131,w,c	;volatile
  4626  000C66  180E               	xorwf	??_LCDWriteNibble^0,w,c
  4627  000C68  0BFE               	andlw	-2
  4628  000C6A  180E               	xorwf	??_LCDWriteNibble^0,w,c
  4629  000C6C  6E83               	movwf	131,c	;volatile
  4630                           
  4631                           ;lcd.c: 98:     PORTDbits.RD1 = (ch & 0xF8) >> 3;
  4632  000C6E  C00F  F00E         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  4633  000C72  90D8               	bcf	status,0,c
  4634  000C74  320E               	rrcf	??_LCDWriteNibble^0,f,c
  4635  000C76  90D8               	bcf	status,0,c
  4636  000C78  320E               	rrcf	??_LCDWriteNibble^0,f,c
  4637  000C7A  90D8               	bcf	status,0,c
  4638  000C7C  320E               	rrcf	??_LCDWriteNibble^0,f,c
  4639  000C7E  0E1F               	movlw	31
  4640  000C80  160E               	andwf	??_LCDWriteNibble^0,f,c
  4641  000C82  460E               	rlncf	??_LCDWriteNibble^0,f,c
  4642  000C84  5083               	movf	131,w,c	;volatile
  4643  000C86  180E               	xorwf	??_LCDWriteNibble^0,w,c
  4644  000C88  0BFD               	andlw	-3
  4645  000C8A  180E               	xorwf	??_LCDWriteNibble^0,w,c
  4646  000C8C  6E83               	movwf	131,c	;volatile
  4647  000C8E                     
  4648                           ;lcd.c: 107:     PORTCbits.RC0 = rs;
  4649  000C8E  B00D               	btfsc	LCDWriteNibble@rs^0,0,c
  4650  000C90  D002               	bra	u1125
  4651  000C92  9082               	bcf	130,0,c	;volatile
  4652  000C94  D001               	bra	u1126
  4653  000C96                     u1125:
  4654  000C96  8082               	bsf	130,0,c	;volatile
  4655  000C98                     u1126:
  4656  000C98                     
  4657                           ;lcd.c: 113:     PORTCbits.RC1 = 1;
  4658  000C98  8282               	bsf	130,1,c	;volatile
  4659  000C9A                     
  4660                           ;lcd.c: 114:     _delay((unsigned long)((1)*(40000000/4000000.0)));
  4661  000C9A  0E03               	movlw	3
  4662  000C9C                     u2017:
  4663  000C9C  2EE8               	decfsz	wreg,f,c
  4664  000C9E  D7FE               	bra	u2017
  4665  000CA0  F000               	nop	
  4666  000CA2                     
  4667                           ;lcd.c: 116:     PORTCbits.RC1 = 0;
  4668  000CA2  9282               	bcf	130,1,c	;volatile
  4669  000CA4  0012               	return		;funcret
  4670  000CA6                     __end_of_LCDWriteNibble:
  4671                           	opt callstack 0
  4672                           
  4673 ;; *************** function _tcInt *****************
  4674 ;; Defined at:
  4675 ;;		line 441 in file "newmain.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  duty            1   11[COMRAM] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      void 
  4682 ;; Registers used:
  4683 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4689 ;;      Params:         0       0       0       0
  4690 ;;      Locals:         1       0       0       0
  4691 ;;      Temps:         11       0       0       0
  4692 ;;      Totals:        12       0       0       0
  4693 ;;Total ram usage:       12 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		Interrupt level 1
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	intcodelo
  4703  000018                     __pintcodelo:
  4704                           	opt callstack 0
  4705  000018                     _tcInt:
  4706                           	opt callstack 21
  4707                           
  4708                           ;incstack = 0
  4709  000018  8053               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4710  00001A  CFD8 F003          	movff	status,??_tcInt+2
  4711  00001E  CFE8 F004          	movff	wreg,??_tcInt+3
  4712  000022  CFE0 F005          	movff	bsr,??_tcInt+4
  4713  000026  CFF3 F006          	movff	prodl,??_tcInt+5
  4714  00002A  CFF4 F007          	movff	prodh,??_tcInt+6
  4715  00002E  CFF6 F008          	movff	tblptrl,??_tcInt+7
  4716  000032  CFF7 F009          	movff	tblptrh,??_tcInt+8
  4717  000036  CFF8 F00A          	movff	tblptru,??_tcInt+9
  4718  00003A  CFF5 F00B          	movff	tablat,??_tcInt+10
  4719  00003E                     
  4720                           ;newmain.c: 444:     if (INTCONbits.TMR0IF) {
  4721  00003E  A4F2               	btfss	242,2,c	;volatile
  4722  000040  EF24  F000         	goto	i1u139_21
  4723  000044  EF26  F000         	goto	i1u139_20
  4724  000048                     i1u139_21:
  4725  000048  EF9C  F000         	goto	i1l2152
  4726  00004C                     i1u139_20:
  4727  00004C                     
  4728                           ;newmain.c: 445:         INTCONbits.TMR0IF = 0;
  4729  00004C  94F2               	bcf	242,2,c	;volatile
  4730  00004E                     
  4731                           ;newmain.c: 446:         shouldUpdateDutyCycle = 1;
  4732  00004E  0E01               	movlw	1
  4733  000050  0100               	movlb	0	; () banked
  4734  000052  6FBE               	movwf	_shouldUpdateDutyCycle& (0+255),b	;volatile
  4735  000054                     
  4736                           ; BSR set to: 0
  4737                           ;newmain.c: 457:         PWMCON1bits.UDIS = 1;
  4738  000054  826E               	bsf	110,1,c	;volatile
  4739  000056                     
  4740                           ; BSR set to: 0
  4741                           ;newmain.c: 460:         unsigned char duty = (sinusValues[sinusIndex1] >> 8);
  4742  000056  504D               	movf	_sinusIndex1^0,w,c	;volatile
  4743  000058  0D02               	mullw	2
  4744  00005A  0EE9               	movlw	low _sinusValues
  4745  00005C  24F3               	addwf	243,w,c
  4746  00005E  6EF6               	movwf	tblptrl,c
  4747  000060  0E3A               	movlw	high _sinusValues
  4748  000062  20F4               	addwfc	244,w,c
  4749  000064  6EF7               	movwf	tblptrh,c
  4750  000066                     	if	0	;There are less than 3 active tblptr bytes
  4751  000066                     	endif
  4752  000066  0009               	tblrd		*+
  4753  000068  CFF5 F001          	movff	tablat,??_tcInt
  4754  00006C  0009               	tblrd		*+
  4755  00006E  CFF5 F002          	movff	tablat,??_tcInt+1
  4756  000072  C002  F001         	movff	??_tcInt+1,??_tcInt
  4757  000076  6A02               	clrf	(??_tcInt+1)^0,c
  4758  000078  BE01               	btfsc	??_tcInt^0,7,c
  4759  00007A  6802               	setf	(??_tcInt+1)^0,c
  4760  00007C  5001               	movf	??_tcInt^0,w,c
  4761  00007E  6E0C               	movwf	tcInt@duty^0,c
  4762  000080                     
  4763                           ; BSR set to: 0
  4764                           ;newmain.c: 461:         PDC0H = duty;
  4765  000080  C00C  FF78         	movff	tcInt@duty,3960	;volatile
  4766  000084                     
  4767                           ; BSR set to: 0
  4768                           ;newmain.c: 462:         PDC0L = sinusValues[sinusIndex1];
  4769  000084  504D               	movf	_sinusIndex1^0,w,c	;volatile
  4770  000086  0D02               	mullw	2
  4771  000088  0EE9               	movlw	low _sinusValues
  4772  00008A  24F3               	addwf	243,w,c
  4773  00008C  6EF6               	movwf	tblptrl,c
  4774  00008E  0E3A               	movlw	high _sinusValues
  4775  000090  20F4               	addwfc	244,w,c
  4776  000092  6EF7               	movwf	tblptrh,c
  4777  000094                     	if	0	;There are less than 3 active tblptr bytes
  4778  000094                     	endif
  4779  000094  0008               	tblrd		*
  4780  000096  CFF5 FF79          	movff	tablat,3961	;volatile
  4781  00009A                     
  4782                           ; BSR set to: 0
  4783                           ;newmain.c: 464:         duty = (sinusValues[sinusIndex2] >> 8);
  4784  00009A  5052               	movf	_sinusIndex2^0,w,c	;volatile
  4785  00009C  0D02               	mullw	2
  4786  00009E  0EE9               	movlw	low _sinusValues
  4787  0000A0  24F3               	addwf	243,w,c
  4788  0000A2  6EF6               	movwf	tblptrl,c
  4789  0000A4  0E3A               	movlw	high _sinusValues
  4790  0000A6  20F4               	addwfc	244,w,c
  4791  0000A8  6EF7               	movwf	tblptrh,c
  4792  0000AA                     	if	0	;There are less than 3 active tblptr bytes
  4793  0000AA                     	endif
  4794  0000AA  0009               	tblrd		*+
  4795  0000AC  CFF5 F001          	movff	tablat,??_tcInt
  4796  0000B0  0009               	tblrd		*+
  4797  0000B2  CFF5 F002          	movff	tablat,??_tcInt+1
  4798  0000B6  C002  F001         	movff	??_tcInt+1,??_tcInt
  4799  0000BA  6A02               	clrf	(??_tcInt+1)^0,c
  4800  0000BC  BE01               	btfsc	??_tcInt^0,7,c
  4801  0000BE  6802               	setf	(??_tcInt+1)^0,c
  4802  0000C0  5001               	movf	??_tcInt^0,w,c
  4803  0000C2  6E0C               	movwf	tcInt@duty^0,c
  4804  0000C4                     
  4805                           ; BSR set to: 0
  4806                           ;newmain.c: 465:         PDC1H = duty;
  4807  0000C4  C00C  FF76         	movff	tcInt@duty,3958	;volatile
  4808  0000C8                     
  4809                           ; BSR set to: 0
  4810                           ;newmain.c: 466:         PDC1L = sinusValues[sinusIndex2];
  4811  0000C8  5052               	movf	_sinusIndex2^0,w,c	;volatile
  4812  0000CA  0D02               	mullw	2
  4813  0000CC  0EE9               	movlw	low _sinusValues
  4814  0000CE  24F3               	addwf	243,w,c
  4815  0000D0  6EF6               	movwf	tblptrl,c
  4816  0000D2  0E3A               	movlw	high _sinusValues
  4817  0000D4  20F4               	addwfc	244,w,c
  4818  0000D6  6EF7               	movwf	tblptrh,c
  4819  0000D8                     	if	0	;There are less than 3 active tblptr bytes
  4820  0000D8                     	endif
  4821  0000D8  0008               	tblrd		*
  4822  0000DA  CFF5 FF77          	movff	tablat,3959	;volatile
  4823  0000DE                     
  4824                           ; BSR set to: 0
  4825                           ;newmain.c: 468:         duty = (sinusValues[sinusIndex3] >> 8);
  4826  0000DE  5051               	movf	_sinusIndex3^0,w,c	;volatile
  4827  0000E0  0D02               	mullw	2
  4828  0000E2  0EE9               	movlw	low _sinusValues
  4829  0000E4  24F3               	addwf	243,w,c
  4830  0000E6  6EF6               	movwf	tblptrl,c
  4831  0000E8  0E3A               	movlw	high _sinusValues
  4832  0000EA  20F4               	addwfc	244,w,c
  4833  0000EC  6EF7               	movwf	tblptrh,c
  4834  0000EE                     	if	0	;There are less than 3 active tblptr bytes
  4835  0000EE                     	endif
  4836  0000EE  0009               	tblrd		*+
  4837  0000F0  CFF5 F001          	movff	tablat,??_tcInt
  4838  0000F4  0009               	tblrd		*+
  4839  0000F6  CFF5 F002          	movff	tablat,??_tcInt+1
  4840  0000FA  C002  F001         	movff	??_tcInt+1,??_tcInt
  4841  0000FE  6A02               	clrf	(??_tcInt+1)^0,c
  4842  000100  BE01               	btfsc	??_tcInt^0,7,c
  4843  000102  6802               	setf	(??_tcInt+1)^0,c
  4844  000104  5001               	movf	??_tcInt^0,w,c
  4845  000106  6E0C               	movwf	tcInt@duty^0,c
  4846  000108                     
  4847                           ; BSR set to: 0
  4848                           ;newmain.c: 469:         PDC2H = duty;
  4849  000108  C00C  FF74         	movff	tcInt@duty,3956	;volatile
  4850  00010C                     
  4851                           ; BSR set to: 0
  4852                           ;newmain.c: 470:         PDC2L = sinusValues[sinusIndex3];
  4853  00010C  5051               	movf	_sinusIndex3^0,w,c	;volatile
  4854  00010E  0D02               	mullw	2
  4855  000110  0EE9               	movlw	low _sinusValues
  4856  000112  24F3               	addwf	243,w,c
  4857  000114  6EF6               	movwf	tblptrl,c
  4858  000116  0E3A               	movlw	high _sinusValues
  4859  000118  20F4               	addwfc	244,w,c
  4860  00011A  6EF7               	movwf	tblptrh,c
  4861  00011C                     	if	0	;There are less than 3 active tblptr bytes
  4862  00011C                     	endif
  4863  00011C  0008               	tblrd		*
  4864  00011E  CFF5 FF75          	movff	tablat,3957	;volatile
  4865  000122                     
  4866                           ; BSR set to: 0
  4867                           ;newmain.c: 471:         PWMCON1bits.UDIS = 0;
  4868  000122  926E               	bcf	110,1,c	;volatile
  4869  000124                     
  4870                           ; BSR set to: 0
  4871                           ;newmain.c: 473:         sinusIndex1 += 8;
  4872  000124  0E08               	movlw	8
  4873  000126  264D               	addwf	_sinusIndex1^0,f,c	;volatile
  4874  000128                     
  4875                           ; BSR set to: 0
  4876                           ;newmain.c: 474:         sinusIndex2 += 8;
  4877  000128  0E08               	movlw	8
  4878  00012A  2652               	addwf	_sinusIndex2^0,f,c	;volatile
  4879  00012C                     
  4880                           ; BSR set to: 0
  4881                           ;newmain.c: 475:         sinusIndex3 += 8;
  4882  00012C  0E08               	movlw	8
  4883  00012E  2651               	addwf	_sinusIndex3^0,f,c	;volatile
  4884  000130                     
  4885                           ; BSR set to: 0
  4886                           ;newmain.c: 476:         TMR0 = timer0ReloadValue;
  4887  000130  C04E  FFD6         	movff	_timer0ReloadValue,4054	;volatile
  4888  000134  C04F  FFD7         	movff	_timer0ReloadValue+1,4055	;volatile
  4889  000138                     i1l2152:
  4890                           
  4891                           ;newmain.c: 481:     if (PIR1bits.TMR1IF) {
  4892  000138  A09E               	btfss	158,0,c	;volatile
  4893  00013A  EFA1  F000         	goto	i1u140_21
  4894  00013E  EFA3  F000         	goto	i1u140_20
  4895  000142                     i1u140_21:
  4896  000142  EFAB  F000         	goto	i1l2158
  4897  000146                     i1u140_20:
  4898  000146                     
  4899                           ;newmain.c: 482:         PIR1bits.TMR1IF = 0;
  4900  000146  909E               	bcf	158,0,c	;volatile
  4901  000148                     
  4902                           ;newmain.c: 483:         TMR1 = 0;
  4903  000148  0E00               	movlw	0
  4904  00014A  6ECF               	movwf	207,c	;volatile
  4905  00014C  0E00               	movlw	0
  4906  00014E  6ECE               	movwf	206,c	;volatile
  4907                           
  4908                           ;newmain.c: 485:         shouldDisplay = 1;
  4909  000150  0E01               	movlw	1
  4910  000152  0100               	movlb	0	; () banked
  4911  000154  6FBD               	movwf	_shouldDisplay& (0+255),b	;volatile
  4912  000156                     i1l2158:
  4913                           
  4914                           ;newmain.c: 489:     if (PIR3bits.TMR5IF) {
  4915  000156  A0A4               	btfss	164,0,c	;volatile
  4916  000158  EFB0  F000         	goto	i1u141_21
  4917  00015C  EFB2  F000         	goto	i1u141_20
  4918  000160                     i1u141_21:
  4919  000160  EFB9  F000         	goto	i1l181
  4920  000164                     i1u141_20:
  4921  000164                     
  4922                           ;newmain.c: 490:         PIR3bits.TMR5IF = 0;
  4923  000164  90A4               	bcf	164,0,c	;volatile
  4924                           
  4925                           ;newmain.c: 491:         TMR5 = timer5ReloadValue;
  4926  000166  C0E2  FF87         	movff	_timer5ReloadValue,3975	;volatile
  4927  00016A  C0E3  FF88         	movff	_timer5ReloadValue+1,3976	;volatile
  4928  00016E                     
  4929                           ;newmain.c: 492:         shouldUpdateTimer0Preload = 1;
  4930  00016E  0E01               	movlw	1
  4931  000170  6E4A               	movwf	_shouldUpdateTimer0Preload^0,c	;volatile
  4932  000172                     i1l181:
  4933  000172  C00B  FFF5         	movff	??_tcInt+10,tablat
  4934  000176  C00A  FFF8         	movff	??_tcInt+9,tblptru
  4935  00017A  C009  FFF7         	movff	??_tcInt+8,tblptrh
  4936  00017E  C008  FFF6         	movff	??_tcInt+7,tblptrl
  4937  000182  C007  FFF4         	movff	??_tcInt+6,prodh
  4938  000186  C006  FFF3         	movff	??_tcInt+5,prodl
  4939  00018A  C005  FFE0         	movff	??_tcInt+4,bsr
  4940  00018E  C004  FFE8         	movff	??_tcInt+3,wreg
  4941  000192  C003  FFD8         	movff	??_tcInt+2,status
  4942  000196  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4943  000198  0010               	retfie	
  4944  00019A                     __end_of_tcInt:
  4945                           	opt callstack 0
  4946                           
  4947                           	psect	rparam
  4948  0000                     
  4949                           	psect	temp
  4950  000053                     btemp:
  4951                           	opt callstack 0
  4952  000053                     	ds	1
  4953  0000                     int$flags	set	btemp
  4954  0000                     wtemp8	set	btemp+1
  4955  0000                     ttemp5	set	btemp+1
  4956  0000                     ttemp6	set	btemp+4
  4957  0000                     ttemp7	set	btemp+8
  4958                           tosu	equ	0xFFF
  4959                           tosh	equ	0xFFE
  4960                           tosl	equ	0xFFD
  4961                           stkptr	equ	0xFFC
  4962                           pclatu	equ	0xFFB
  4963                           pclath	equ	0xFFA
  4964                           pcl	equ	0xFF9
  4965                           tblptru	equ	0xFF8
  4966                           tblptrh	equ	0xFF7
  4967                           tblptrl	equ	0xFF6
  4968                           tablat	equ	0xFF5
  4969                           prodh	equ	0xFF4
  4970                           prodl	equ	0xFF3
  4971                           indf0	equ	0xFEF
  4972                           postinc0	equ	0xFEE
  4973                           postdec0	equ	0xFED
  4974                           preinc0	equ	0xFEC
  4975                           plusw0	equ	0xFEB
  4976                           fsr0h	equ	0xFEA
  4977                           fsr0l	equ	0xFE9
  4978                           wreg	equ	0xFE8
  4979                           indf1	equ	0xFE7
  4980                           postinc1	equ	0xFE6
  4981                           postdec1	equ	0xFE5
  4982                           preinc1	equ	0xFE4
  4983                           plusw1	equ	0xFE3
  4984                           fsr1h	equ	0xFE2
  4985                           fsr1l	equ	0xFE1
  4986                           bsr	equ	0xFE0
  4987                           indf2	equ	0xFDF
  4988                           postinc2	equ	0xFDE
  4989                           postdec2	equ	0xFDD
  4990                           preinc2	equ	0xFDC
  4991                           plusw2	equ	0xFDB
  4992                           fsr2h	equ	0xFDA
  4993                           fsr2l	equ	0xFD9
  4994                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    722
    Data        16
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      82
    BANK0           160     85     139
    BANK1           256      0       0
    BANK2           244      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1874_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK0[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK0[16]), 


Critical Paths under _main in COMRAM

    _main->_display
    _readADC->___lwdiv
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCD_Initialize->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _tcInt in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_display
    _display->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _tcInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tcInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tcInt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12351
                     _LCD_Initialize
                       _configureADC
                    _configureInputs
                _configureInterrupts
                       _configurePWM
                    _configureTimer0
                    _configureTimer1
                    _configureTimer5
                            _display
                            _readADC
                           _startPWM
             _updateTMR0PreloadValue
 ---------------------------------------------------------------------------------
 (1) _updateTMR0PreloadValue                               2     2      0       0
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _startPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              1     1      0     466
                                             19 COMRAM     1     1      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _display                                             39    39      0   11358
                                             67 COMRAM     2     2      0
                                             48 BANK0     37    37      0
                         _LCDPutChar
                          _LCDPutCmd
                          _LCDPutStr
                            ___lwdiv
                            ___lwmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    8417
                                             32 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7931
                                             65 COMRAM     2     2      0
                                             26 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7458
                                             57 COMRAM     8     2      6
                                             18 BANK0      8     8      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             39 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             30 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             12 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             12 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                             12 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                             12 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            3     1      2     693
                                             17 COMRAM     3     1      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           2     2      0     527
                                             15 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _configureTimer5                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer1                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurePWM                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureInputs                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       2     2      0     527
                                             17 COMRAM     2     2      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            2     2      0     527
                                             15 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (4) _LCDWriteNibble                                       3     2      1     460
                                             12 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _tcInt                                              12    12      0      69
                                              0 COMRAM    12    12      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Initialize
     _LCDPutCmd
       _LCDWriteNibble
   _configureADC
   _configureInputs
   _configureInterrupts
   _configurePWM
   _configureTimer0
   _configureTimer1
   _configureTimer5
   _display
     _LCDPutChar
       _LCDWriteNibble
     _LCDPutCmd
       _LCDWriteNibble
     _LCDPutStr
       _LCDPutChar
         _LCDWriteNibble
     ___lwdiv
     ___lwmod
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _readADC
     ___lwdiv
   _startPWM
   _updateTMR0PreloadValue

 _tcInt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F3      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2            F4      0       0       8        0.0%
BANK2               F4      0       0       9        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     55      8B       4       86.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     45      52       1       87.2%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DD       5        0.0%
DATA                 0      0      DD      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jan 13 00:15:22 2020

                  ?_configureADC 0001                    ?_configurePWM 0001  
                 _LCD_Initialize 0F76                      ?_LCDPutChar 0001  
                             _d1 00E8                               bsr 000FE0  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                            l202 0D28                              l222 0FC6  
                            l142 1242                              l231 1116  
                            l151 11DE                              l207 1014  
                            l160 1208                              l312 0632  
                            l225 0CA4                              l305 047E  
                            l154 11F4                              l163 1232  
                            l139 10D8                              l148 1238  
                            l228 11B6                              l157 121C  
                            l237 1150                              l318 0EC0  
                            l319 0EC8                              l169 0F1A  
                            l274 0B96                              l194 0922  
                            l436 07BA                              l277 0BD8  
                            l285 023E                              l279 0C12  
                            l287 0246                              l449 0A86  
                            l820 0D9C                              l813 0D94  
                            l830 0E66                              l823 0E5E  
                            l997 1090                     __CFG_CPB$OFF 000000  
                   __CFG_CPD$OFF 000000                              _abs 105A  
                            _pad 0B52                              wreg 000FE8  
       ??_updateTMR0PreloadValue 000D                     __CFG_LVP$OFF 000000  
                           l1000 1098                             l1012 0B50  
                           l1020 1058                             l1030 1244  
                           l1027 0F74                             ?_abs 001F  
                           l1036 1186                             l1400 10BE  
                           l2200 1152                             l1410 11B8  
                           l1402 10C0                             l2202 115E  
                           l2210 0B52                             l2050 0CC6  
                           l1420 11CA                             l1412 11C0  
                           l1404 10D2                             l2300 09D0  
                           l2204 1162                             l2220 0BA2  
                           l2212 0B60                             l2060 0D06  
                           l2052 0CCA                             l1430 11D4  
                           l1422 11CC                             l1414 11C4  
                           l2310 0A46                             l2302 09FE  
                           l2206 117A                             l2222 0BB6  
                           l2214 0B74                             l2070 0FE8  
                           l1406 1240                             l2054 0CE8  
                           l2062 0D22                             l2046 0CA6  
                           l1432 11D6                             l1424 11CE  
                           l1416 11C6                             l1408 1234  
                           l1440 11E0                             l2240 0646  
                           l2312 0A66                             l2304 0A1E  
                           l2232 105A                             l2224 0BBA  
                           l2216 0B82                             l2320 01E8  
                           l2400 05C2                             l2072 100E  
                           l2064 0D24                             l2056 0CEE  
                           l2048 0CB6                             l1434 11D8  
                           l1426 11D0                             l1418 11C8  
                           l1442 120A                             l2250 069C  
                           l2242 0666                             l2306 0A30  
                           l2234 1074                             l2226 0BE6  
                           l2218 0B8E                             l2330 024E  
                           l2322 0208                             l2402 05D6  
                           l2074 1012                             l2066 0FC8  
                           l2058 0D04                             l1436 11DA  
                           l1428 11D2                             l1380 10AA  
                           l1444 1214                             l2260 06F0  
                           l2252 06A8                             l2244 066A  
                           l2236 0634                             l2308 0A36  
                           l2180 0A9A                             l2228 0BFA  
                           l2340 0284                             l2332 0260  
                           l2324 0216                             l2316 019E  
                           l2412 05FC                             l2420 0E68  
                           l2068 0FD6                             l2500 0EE2  
                           l1438 11DC                             l1390 10B4  
                           l1382 10AC                             l1374 109A  
                           l2270 0764                             l2262 0702  
                           l2254 06C6                             l2246 0678  
                           l2238 0638                             l2182 0AAC  
                           l2342 028A                             l2350 037E  
                           l2334 026E                             l2326 0218  
                           l2318 01BE                             l2414 0620  
                           l2406 05E2                             l2422 0E70  
                           l2430 0F36                             l2510 0EF2  
                           l2502 0EE6                             l1448 122A  
                           l1392 10B6                             l1384 10AE  
                           l1376 10A6                             l2264 0730  
                           l2256 06CE                             l2272 076A  
                           l2248 0698                             l2280 0924  
                           l2184 0AB6                             l2192 1016  
                           l2352 039A                             l2360 03FA  
                           l2344 030C                             l2336 0274  
                           l2328 0232                             l2408 05F0  
                           l2424 0E7E                             l2432 0F3E  
                           l2440 07BC                             l2520 0EFE  
                           l2512 0EF4                             l2504 0EEA  
                           l1394 10B8                             l1386 10B0  
                           l1378 10A8                             l2274 077A  
                           l2266 0750                             l2258 06E2  
                           l2290 0968                             l2282 0928  
                           l2186 0AD4                             l2178 0A88  
                           l2194 1022                             l2370 043E  
                           l2362 040C                             l2354 03B8  
                           l2346 0314                             l2338 027C  
                           l2426 0EA4                             l2434 0F46  
                           l2450 0816                             l2442 07CE  
                           l2522 0F02                             l2514 0EF6  
                           l2506 0EEE                             l1396 10BA  
                           l1388 10B2                             l1900 119C  
                           l2276 079A                             l2268 0752  
                           l2292 0988                             l2284 0936  
                           l2188 0B0A                             l2196 1034  
                           l2372 0446                             l2364 041A  
                           l2356 03D2                             l2348 031A  
                           l2380 04A4                             l2436 0F62  
                           l2428 0F24                             l2460 0858  
                           l2452 0834                             l2444 07E0  
                           l2524 0F06                             l2516 0EF8  
                           l2508 0EF0                             l1398 10BC  
                           l1902 11A6                             l2294 09A6  
                           l2286 0956                             l2198 1038  
                           l2366 0420                             l2374 0456  
                           l2358 03EC                             l2390 0510  
                           l2382 04B2                             l2462 087C  
                           l2454 0840                             l2446 07F8  
                           l2526 0F14                             l2518 0EFA  
                           l1920 10FE                             l1904 11AC  
                           l2296 09AE                             l2288 095A  
                           l2368 0432                             l2392 0558  
                           l2384 04C4                             l2472 08CC  
                           l2464 0898                             l2456 0846  
                           l2448 0810                             l2480 090C  
                           l1850 0C98                             l1922 110C  
                           l1914 10DC                             l2298 09C2  
                           l2386 04C8                             l2378 0480  
                           l2482 090E                             l2474 08F2  
                           l2466 089C                             l2458 084E  
                           l2490 0ECE                             l1852 0C9A  
                           l1916 10EE                             l1940 1132  
                           l2396 0590                             l2388 04EC  
                           l2484 0916                             l2476 08FA  
                           l2468 08AE                             l2492 0ED2  
                           l1854 0CA2                             l1846 0C16  
                           l1918 10F8                             l1942 1134  
                           l1950 0D4C                             l2398 05B4  
                           l2486 091E                             l2478 0908  
                           l2494 0ED6                             l1848 0C8E  
                           l1936 1118                             l1960 0D86  
                           l1952 0D54                             l1944 0D2A  
                           l2496 0EDA                             l2488 0ECA  
                           l1938 1120                             l1962 0D88  
                           l1954 0D62                             l1946 0D32  
                           l1970 0E1E                             l2498 0EDE  
                           l1964 0D8E                             l1956 0D68  
                           l1948 0D44                             l1980 0E58  
                           l1972 0E26                             l1990 0FAE  
                           l1982 11F6                             l1958 0D7E  
                           l1974 0E34                             l1966 0E04  
                           ?_pad 001D                             l1992 0FB4  
                           l1984 0F76                             l1976 0E4A  
                           l1968 0E16                             l1994 0FBA  
                           l1986 0F8E                             l1898 118A  
                           l1978 0E52                             l1996 0FC0  
                           l1988 0FA8                             STR_1 3DBB  
                           u1200 0D62                             u1201 0D5E  
                           u1210 0D7E                             u1211 0D7A  
                           u1220 0E16                             u1125 0C96  
                           u1221 0E12                             u1126 0C98  
                           u1230 0E34                             u2007 1104  
                           u1231 0E30                             u1240 0E4A  
                           u1320 0CB6                             u2017 0C9C  
                           u1241 0E46                             u1321 0CB2  
                           u1330 0CC6                             u1331 0CC2  
                           u1180 1150                             u1500 117A  
                           u1340 0CE8                             u1181 114C  
                           u1501 1176                             u1341 0CE4  
                           u1190 0D44                             u1510 0B60  
                           u1350 0D04                             _LATB 000F8A  
                           u1191 0D40                             u1511 0B5C  
                           u1351 0D00                             u1600 06F0  
                           u1520 0B82                             u1360 0FD6  
                           u1601 06EC                             u1521 0B7E  
                           u1361 0FD2                             u1610 0730  
                           u1450 0A9A                             u1530 0BD8  
                           u1370 0FE8                             u1611 072C  
                           u1451 0A96                             u1531 0BD4  
                           u1371 0FE4                             u1620 077A  
                           u1460 0AAC                             u1540 0BE6  
                           u1700 01D2                             u1621 0776  
                           u1461 0AA8                             u1541 0BE2  
                           u1630 0936                             u1550 1074  
                           u1470 0AD4                             u1710 01E8  
                           u1631 0932                             u1551 1070  
                           u1471 0AD0                             u1711 01E4  
                           u1560 0646                             u1640 0968  
                           u1480 0B0A                             u1800 03FA  
                           u1720 0216                             u1561 0642  
                           u1641 0964                             u1481 0B06  
                           u1801 03F6                             u1721 0212  
                           u1570 0678                             u1650 09A6  
                           u1490 1058                             u1810 040C  
                           u1730 0232                             u1571 0674  
                           u1651 09A2                             u1491 1054  
                           u1811 0408                             u1731 022E  
                           u1660 09D0                             u1820 041A  
                           u1740 0260                             u1900 07E0  
                           u1581 06A2                             u1661 09CC  
                           u1821 0416                             u1741 025C  
                           u1901 07DC                             u1590 06C6  
                           u1670 09FE                             u1830 0432  
                           u1750 026E                             u1910 07F8  
                           u1591 06C2                             u1671 09FA  
                           u1831 042E                             u1751 026A  
                           u1911 07F4                             u1680 0A46  
                           u1760 039A                             u1840 04A4  
                           u1920 0810                             u1681 0A42  
                           u1761 0396                             u1841 04A0  
                           u1921 080C                             u1770 03B8  
                           u1690 01D0                             u1850 04EC  
                           u1930 08AE                             u1771 03B4  
                           u1691 01CA                             u1851 04E8  
                           u1931 08AA                             u1780 03D2  
                           u1860 0510                             u1940 08C8  
                           u1781 03CE                             u1861 050C  
                           u1941 08C4                             u1790 03EC  
                           u1870 05B4                             u1950 0908  
                           u1791 03E8                             u1871 05B0  
                           u1951 0904                             u1880 0EC0  
                           u1960 0F14                             u1881 0EBC  
                           u1961 0F10                             u1890 07CE  
                           u1891 07CA                             u1977 1190  
                           u1987 0F98                             u1997 10E2  
                           _TMR0 000FD6                             _TMR1 000FCE  
                           _TMR5 000F87                 ?_configureInputs 0001  
               ?_configureTimer0 0001                 ?_configureTimer1 0001  
               ?_configureTimer5 0001                      display@str1 00A0  
                    display@str2 0090                             abs@a 001F  
                           _dbuf 00C0                             _main 0ECA  
                           _dtoa 019E                             _prec 0046  
                           _nout 00B9                             pad@i 0024  
                           pad@p 0021                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 0026  
                           fsr2l 000FD9                             btemp 0053  
             __size_of_LCDPutCmd 003E                             prodh 000FF4  
                           prodl 000FF3                             start 019A  
             __size_of_LCDPutStr 003A                    __CFG_IESO$OFF 000000  
         __end_of_LCD_Initialize 0FC8                   ??_configureADC 000D  
                 ??_configurePWM 000D                    __CFG_HPOL$LOW 000000  
                   ___param_bank 000000                _timer0ReloadValue 004E  
                          ??_abs 0021                    __CFG_LPOL$LOW 000000  
                          ??_pad 0023                      LCDPutCmd@ch 0011  
                __end_of___aodiv 07BC                            ?_main 0001  
                          ?_dtoa 0028                  __end_of___aomod 0A88  
                          _PDC0H 000F78                            _PDC1H 000F76  
                          _PDC0L 000F79                            _PDC2H 000F74  
                          _PDC1L 000F77                            _PDC2L 000F75  
                __end_of___lwdiv 0D9E                            i1l181 0172  
                __end_of___lwmod 0E68                     vfpfcnvrt@fmt 003C  
                          _PORTB 000F81                            _TRISB 000F93  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                __end_of_display 0924                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                  __end_of_readADC 1016  
                 __CFG_EBTRB$OFF 000000                            _flags 0048  
                          _tcInt 0018                            _fputc 0A88  
                          _fputs 1016                            pad@fp 001D  
                          _width 00BB                            _putch 1244  
                          dtoa@d 002A                            dtoa@i 0070  
                          dtoa@n 0068                            dtoa@p 0062  
                          dtoa@s 0066                            dtoa@w 0064  
                 __CFG_BOREN$OFF 000000                            tablat 000FF5  
            __size_of_LCDPutChar 0030                            ttemp5 0054  
                          ttemp6 0057                            ttemp7 005B  
                          status 000FD8                            wtemp8 0054  
                __end_of_sprintf 0F76                   __CFG_MCLRE$OFF 000000  
                ?_LCD_Initialize 0001                  __initialization 0D9E  
                   __end_of_main 0F24                     __end_of_dtoa 0480  
    __end_of_configureInterrupts 123A                   __CFG_OSC$HSPLL 000000  
                         ??_main 0046                           ??_dtoa 0032  
                  __activetblptr 000002                __end_of_LCDPutCmd 1118  
                   LCDPutChar@ch 0011                __end_of_LCDPutStr 1152  
__size_of_updateTMR0PreloadValue 0084                           _ADCON1 000FC1  
                         ?_tcInt 0001                           ?_fputc 000D  
                         ?_fputs 0016                           _ADRESH 000FC4  
                         ?_putch 0001                           i1l2120 004E  
                         i1l2130 009A                           i1l2122 0054  
                     _PrevADRESH 0050                           i1l2140 010C  
                         i1l2132 00C4                           i1l2124 0056  
                         i1l2116 003E                           i1l2150 0130  
                         i1l2142 0122                           i1l2134 00C8  
                         i1l2126 0080                           i1l2118 004C  
                         i1l2160 0164                           i1l2144 0124  
                         i1l2136 00DE                           i1l2128 0084  
                         i1l2152 0138                           i1l2162 016E  
                         i1l2154 0146                           i1l2146 0128  
                         i1l2138 0108                           i1l2156 0148  
                         i1l2148 012C                           i1l2158 0156  
                 __CFG_WDTEN$OFF 000000                   __CFG_WINEN$OFF 000000  
                         _PTPERH 000F7A                     LCDPutStr@str 0012  
                         _PTPERL 000F7B                   _LCDWriteNibble 0C14  
                 __CFG_SSPMX$RC7 000000                     vfprintf@cfmt 0042  
                      ??___aodiv 001D                        ??___aomod 001D  
                         _digits 3DB1                        ??___lwdiv 0011  
                      ??___lwmod 0011                           clear_0 0DE4  
                         clear_1 0DF0                           pad@buf 001F  
                         dtoa@fp 0028                           _strlen 1152  
                      ??_display 0044                        ??_readADC 0014  
                         fputc@c 000D                           fputs@c 001A  
                         fputs@i 001B                     __pdataCOMRAM 004E  
                         fputs@s 0016                     __mediumconst 3AE8  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8             __end_of_configureADC 11E0  
               __end_of_startPWM 1244                           putch@c 0001  
               __end_of_vfprintf 0ECA             __end_of_configurePWM 10DA  
              _timer5ReloadValue 00E2                        ??_sprintf 0044  
         __end_of_LCDWriteNibble 0CA6                       __accesstop 0060  
        __end_of__initialization 0DF6                  __CFG_FLTAMX$RC1 000000  
                     _adcPercent 00E6                    ___rparam_used 000001  
                __CFG_T1OSCMX$ON 000000           _updateTMR0PreloadValue 0CA6  
                 __pcstackCOMRAM 0001                     __pidataBANK0 121E  
   display@timer0ReloadValueCopy 00B1                    __end_of_tcInt 019A  
                  __end_of_fputc 0B52                     ??_LCDPutChar 0010  
                  __end_of_fputs 105A                    __end_of_putch 1246  
      _shouldUpdateTimer0Preload 004A              _timer5OverflowCount 004C  
                        ??_tcInt 0001                          ??_fputc 0011  
                        ??_fputs 001A                          ??_putch 000D  
                     __pbssBANK0 00B5                  ?_LCDWriteNibble 000D  
             __end_of_LCDPutChar 11B8                  __CFG_WDPS$32768 000000  
                        ?_strlen 000D                  __CFG_PWM4MX$RB5 000000  
             __size_of_vfpfcnvrt 01B4                          _OVDCOND 000F6B  
                        _OVDCONS 000F6A                        _ADCHSbits 000F99  
                __CFG_PWMPIN$OFF 000000                 ??_LCD_Initialize 0012  
                __CFG_PWRTEN$OFF 000000                          __Hparam 0000  
                        __Lparam 0000         __size_of_configureInputs 000A  
       __size_of_configureTimer0 0016         __size_of_configureTimer1 0014  
       __size_of_configureTimer5 0014                          ___aodiv 0634  
                        ___aomod 0924                        ?_startPWM 0001  
                        ___lwdiv 0D2A                          ___lwmod 0E04  
                      ?_vfprintf 007A                   _prevAdcPercent 00E4  
                __CFG_STVREN$OFF 000000                          __pcinit 0D9E  
                        __ramtop 0300                          __ptext0 0ECA  
                        __ptext1 0CA6                          __ptext2 1240  
                        __ptext3 0FC8                          __ptext4 07BC  
                        __ptext5 0F24                          __ptext6 0E68  
                        __ptext7 0480                          __ptext8 019E  
                        __ptext9 0B52                          _display 07BC  
                      _T0CONbits 000FD5            __size_of_configureADC 0028  
                        _readADC 0FC8                  __size_of_strlen 0036  
                      _T1CONbits 000FCD            __size_of_configurePWM 0040  
                   __size_of_abs 0040                     __size_of_pad 00C2  
                      _T5CONbits 000FB7                        _LCDPutCmd 10DA  
                        _sprintf 0F24                        _LCDPutStr 1118  
           end_of_initialization 0DF6                          fputc@fp 000F  
                  __Lmediumconst 3AE8                          fputs@fp 0018  
              __end_of_vfpfcnvrt 0634                          postdec1 000FE5  
                        postdec2 000FDD                     _configureADC 11B8  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                     _configurePWM 109A  
                     ??_startPWM 000D                       ??_vfprintf 0042  
                        strlen@a 000F                          strlen@s 000D  
                      _PORTAbits 000F80                        _PORTCbits 000F82  
                      _PORTDbits 000F83                        _TRISAbits 000F92  
            _timer0PreloadValues 3CE9                        _TRISCbits 000F94  
                      _TRISDbits 000F95     __size_of_configureInterrupts 0006  
                     ?_LCDPutCmd 0001                       ?_LCDPutStr 0012  
        ?_updateTMR0PreloadValue 0001                 __CFG_EXCLKMX$RC3 000000  
                    vfpfcnvrt@ap 003E                      vfpfcnvrt@fp 003A  
                     LCDPutStr@i 0014                      vfpfcnvrt@ll 0072  
                  __pidataCOMRAM 123A                   __end_of_digits 3DBB  
              ??_configureInputs 000D                ??_configureTimer0 000D  
              ??_configureTimer1 000D                ??_configureTimer5 000D  
                 __end_of_strlen 1188              start_initialization 0D9E  
               ??_LCDWriteNibble 000E                      __end_of_abs 109A  
                    __end_of_pad 0C14   __end_of_updateTMR0PreloadValue 0D2A  
                    vfprintf@fmt 007C                      __pdataBANK0 00E0  
                       ??_strlen 000F              _currentPreloadIndex 004B  
                    __pbssCOMRAM 0046                    __pcstackBANK0 0060  
               ___aodiv@dividend 000D                      ??_LCDPutCmd 0010  
                    ??_LCDPutStr 0014                 ___lwdiv@dividend 000D  
                      _dtoa$1413 0060                        _maxADCVal 00E9  
                  __pmediumconst 3AE8                         ?___aodiv 000D  
                       ?___aomod 000D                 ___aodiv@quotient 001F  
                       ?___lwdiv 000D                         ?___lwmod 000D  
               LCDWriteNibble@ch 000F                 LCDWriteNibble@rs 000D  
                    __pintcodelo 0018                __size_of_startPWM 0004  
              __size_of_vfprintf 0062                         ?_display 0001  
                       ?_readADC 0001                 ___lwdiv@quotient 0011  
          _shouldUpdateDutyCycle 00BE                         ?_sprintf 0080  
                 __size_of_tcInt 0182                   __size_of_fputc 00CA  
                 __size_of_fputs 0044                        _dutyCycle 00B5  
                 __size_of_putch 0002                         _PIE1bits 000F9D  
                       _PIE3bits 000FA3                         i1u140_20 0146  
                       i1u140_21 0142                         i1u141_20 0164  
                       i1u141_21 0160                         i1u139_20 004C  
                       i1u139_21 0048                         _PIR1bits 000F9E  
                       _PIR3bits 000FA4              _configureInterrupts 1234  
                      _vfpfcnvrt 0480                       _ADCON0bits 000FC2  
                     _ADCON2bits 000FC0                       _ADCON3bits 000F9A  
           ?_configureInterrupts 0001            _prevTimer0ReloadValue 00E0  
                    _INTCON2bits 000FF1                        copy_data0 0DB2  
                      copy_data1 0DD2                        tcInt@duty 000C  
                       __Hrparam 0000                  _configureInputs 122A  
                _configureTimer0 11E0                  _configureTimer1 120A  
                _configureTimer5 11F6                  display@noDigits 00B0  
                     vfprintf@ap 007E                         __Lrparam 0000  
                     vfprintf@fp 007A          __size_of_LCD_Initialize 0052  
               __size_of___aodiv 0188                 __size_of___aomod 0164  
                     ?_vfpfcnvrt 003A                 __size_of___lwdiv 0074  
               __size_of___lwmod 0064                       _ANSEL0bits 000FB8  
                ___aodiv@divisor 0015                  ___aodiv@counter 001D  
               __size_of_display 0168                       sprintf@fmt 0082  
               __size_of_readADC 004E            ??_configureInterrupts 000D  
                ___lwdiv@divisor 000F                  ___lwdiv@counter 0013  
                       __ptext10 1152                         __ptext11 1016  
                       __ptext20 1188                         __ptext12 0A88  
                       __ptext21 11F6                         __ptext13 1244  
                       __ptext30 0C14                         __ptext22 120A  
                       __ptext14 105A                         __ptext23 11E0  
                       __ptext15 0924                         __ptext24 109A  
                       __ptext16 0634                         __ptext25 1234  
                       __ptext17 0E04                         __ptext26 122A  
                       __ptext18 0D2A                         __ptext27 11B8  
                       __ptext19 1118                         __ptext28 0F76  
                       __ptext29 10DA                 __size_of_sprintf 0052  
                  __size_of_main 005A                    __size_of_dtoa 02E2  
            __end_of_sinusValues 3CE9                         int$flags 0053  
                       _startPWM 1240                         _vfprintf 0E68  
                     _LCDPutChar 1188                         display@i 00B3  
               ___aomod@dividend 000D                      _refreshTime 00BF  
                     _INTCONbits 000FF2                    _shouldDisplay 00BD  
                       intlevel1 0000                        sprintf@ap 0088  
        __end_of_configureInputs 1234      __end_of_timer0PreloadValues 3DB1  
        __end_of_configureTimer0 11F6          __end_of_configureTimer1 121E  
        __end_of_configureTimer5 120A                 ___lwmod@dividend 000D  
                    _PWMCON0bits 000F6F                      _PWMCON1bits 000F6E  
                ___aomod@divisor 0015                      ??_vfpfcnvrt 0040  
                ___aomod@counter 001D                       _PTCON0bits 000F7F  
                     _PTCON1bits 000F7E                         sprintf@f 008A  
                       sprintf@s 0080                  ___lwmod@divisor 000F  
                ___lwmod@counter 0011                     ___aodiv@sign 001E  
                    _sinusIndex1 004D                      _sinusIndex2 0052  
                    _sinusIndex3 0051                      _sinusValues 3AE9  
        __size_of_LCDWriteNibble 0092                     ___aomod@sign 001E  
