

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jan 04 12:04:42 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4431 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  0012BA                     __pidataCOMRAM:
    85                           	opt callstack 0
    86                           
    87                           ;initializer for _d1
    88  0012BA  01                 	db	1
    89                           
    90                           	psect	idataBANK0
    91  00129E                     __pidataBANK0:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for _prevTimer0ReloadValue
    95  00129E  EC77               	dw	60535
    96                           
    97                           ;initializer for _timer0ReloadValue
    98  0012A0  EC77               	dw	60535
    99                           
   100                           ;initializer for _timer5ReloadValue
   101  0012A2  0BDB               	dw	3035
   102                           
   103                           ;initializer for _maxADCVal
   104  0012A4  00FF               	dw	255
   105                           
   106                           ;initializer for _prevAdcPercent
   107  0012A6  0065               	dw	101
   108                           
   109                           ;initializer for _adcPercent
   110  0012A8  0063               	dw	99
   111                           
   112                           ;initializer for _PrevADRESH
   113  0012AA  41                 	db	65
   114                           
   115                           ;initializer for _sinusIndex3
   116  0012AB  AA                 	db	170
   117                           
   118                           ;initializer for _sinusIndex2
   119  0012AC  55                 	db	85
   120                           
   121                           	psect	mediumconst
   122  003D28                     __pmediumconst:
   123                           	opt callstack 0
   124  003D28  00                 	db	0
   125  003D29                     _sinusValues:
   126                           	opt callstack 0
   127  003D29  03C0               	dw	960
   128  003D2B  03D6               	dw	982
   129  003D2D  03EC               	dw	1004
   130  003D2F  0402               	dw	1026
   131  003D31  0419               	dw	1049
   132  003D33  042F               	dw	1071
   133  003D35  0445               	dw	1093
   134  003D37  045B               	dw	1115
   135  003D39  0471               	dw	1137
   136  003D3B  0488               	dw	1160
   137  003D3D  049E               	dw	1182
   138  003D3F  04BB               	dw	1211
   139  003D41  04D2               	dw	1234
   140  003D43  04E0               	dw	1248
   141  003D45  04F7               	dw	1271
   142  003D47  050D               	dw	1293
   143  003D49  0523               	dw	1315
   144  003D4B  0539               	dw	1337
   145  003D4D  054F               	dw	1359
   146  003D4F  0566               	dw	1382
   147  003D51  057C               	dw	1404
   148  003D53  058B               	dw	1419
   149  003D55  05A1               	dw	1441
   150  003D57  05B7               	dw	1463
   151  003D59  05C6               	dw	1478
   152  003D5B  05DC               	dw	1500
   153  003D5D  05EB               	dw	1515
   154  003D5F  0601               	dw	1537
   155  003D61  0610               	dw	1552
   156  003D63  0626               	dw	1574
   157  003D65  0635               	dw	1589
   158  003D67  0644               	dw	1604
   159  003D69  065A               	dw	1626
   160  003D6B  0669               	dw	1641
   161  003D6D  0677               	dw	1655
   162  003D6F  0686               	dw	1670
   163  003D71  0695               	dw	1685
   164  003D73  06A4               	dw	1700
   165  003D75  06B3               	dw	1715
   166  003D77  06C1               	dw	1729
   167  003D79  06C9               	dw	1737
   168  003D7B  06D8               	dw	1752
   169  003D7D  06E6               	dw	1766
   170  003D7F  06EE               	dw	1774
   171  003D81  06FD               	dw	1789
   172  003D83  0704               	dw	1796
   173  003D85  0713               	dw	1811
   174  003D87  071A               	dw	1818
   175  003D89  0722               	dw	1826
   176  003D8B  0729               	dw	1833
   177  003D8D  0730               	dw	1840
   178  003D8F  0738               	dw	1848
   179  003D91  073F               	dw	1855
   180  003D93  0747               	dw	1863
   181  003D95  074E               	dw	1870
   182  003D97  0755               	dw	1877
   183  003D99  0755               	dw	1877
   184  003D9B  075D               	dw	1885
   185  003D9D  075D               	dw	1885
   186  003D9F  0764               	dw	1892
   187  003DA1  0764               	dw	1892
   188  003DA3  0764               	dw	1892
   189  003DA5  0764               	dw	1892
   190  003DA7  0764               	dw	1892
   191  003DA9  0764               	dw	1892
   192  003DAB  0764               	dw	1892
   193  003DAD  0764               	dw	1892
   194  003DAF  0764               	dw	1892
   195  003DB1  0764               	dw	1892
   196  003DB3  075D               	dw	1885
   197  003DB5  075D               	dw	1885
   198  003DB7  0755               	dw	1877
   199  003DB9  0755               	dw	1877
   200  003DBB  074E               	dw	1870
   201  003DBD  0747               	dw	1863
   202  003DBF  0747               	dw	1863
   203  003DC1  073F               	dw	1855
   204  003DC3  0738               	dw	1848
   205  003DC5  0730               	dw	1840
   206  003DC7  0729               	dw	1833
   207  003DC9  071A               	dw	1818
   208  003DCB  0713               	dw	1811
   209  003DCD  070B               	dw	1803
   210  003DCF  06FD               	dw	1789
   211  003DD1  06F5               	dw	1781
   212  003DD3  06E6               	dw	1766
   213  003DD5  06DF               	dw	1759
   214  003DD7  06D0               	dw	1744
   215  003DD9  06C1               	dw	1729
   216  003DDB  06BA               	dw	1722
   217  003DDD  06AB               	dw	1707
   218  003DDF  069C               	dw	1692
   219  003DE1  068E               	dw	1678
   220  003DE3  067F               	dw	1663
   221  003DE5  0670               	dw	1648
   222  003DE7  0661               	dw	1633
   223  003DE9  064B               	dw	1611
   224  003DEB  063C               	dw	1596
   225  003DED  062D               	dw	1581
   226  003DEF  061F               	dw	1567
   227  003DF1  0608               	dw	1544
   228  003DF3  05FA               	dw	1530
   229  003DF5  05E3               	dw	1507
   230  003DF7  05D5               	dw	1493
   231  003DF9  05BE               	dw	1470
   232  003DFB  05A8               	dw	1448
   233  003DFD  0599               	dw	1433
   234  003DFF  0583               	dw	1411
   235  003E01  056D               	dw	1389
   236  003E03  0557               	dw	1367
   237  003E05  0548               	dw	1352
   238  003E07  0532               	dw	1330
   239  003E09  051C               	dw	1308
   240  003E0B  0505               	dw	1285
   241  003E0D  04EF               	dw	1263
   242  003E0F  04D9               	dw	1241
   243  003E11  04C3               	dw	1219
   244  003E13  04AD               	dw	1197
   245  003E15  0496               	dw	1174
   246  003E17  0480               	dw	1152
   247  003E19  046A               	dw	1130
   248  003E1B  0454               	dw	1108
   249  003E1D  043E               	dw	1086
   250  003E1F  0427               	dw	1063
   251  003E21  040A               	dw	1034
   252  003E23  03F4               	dw	1012
   253  003E25  03DD               	dw	989
   254  003E27  03C7               	dw	967
   255  003E29  03B1               	dw	945
   256  003E2B  039B               	dw	923
   257  003E2D  0385               	dw	901
   258  003E2F  036E               	dw	878
   259  003E31  0351               	dw	849
   260  003E33  033B               	dw	827
   261  003E35  0324               	dw	804
   262  003E37  030E               	dw	782
   263  003E39  02F8               	dw	760
   264  003E3B  02E2               	dw	738
   265  003E3D  02CC               	dw	716
   266  003E3F  02B5               	dw	693
   267  003E41  029F               	dw	671
   268  003E43  0289               	dw	649
   269  003E45  0273               	dw	627
   270  003E47  025D               	dw	605
   271  003E49  0246               	dw	582
   272  003E4B  0230               	dw	560
   273  003E4D  0221               	dw	545
   274  003E4F  020B               	dw	523
   275  003E51  01F5               	dw	501
   276  003E53  01DF               	dw	479
   277  003E55  01D0               	dw	464
   278  003E57  01BA               	dw	442
   279  003E59  01A4               	dw	420
   280  003E5B  0195               	dw	405
   281  003E5D  017F               	dw	383
   282  003E5F  0170               	dw	368
   283  003E61  015A               	dw	346
   284  003E63  014B               	dw	331
   285  003E65  013C               	dw	316
   286  003E67  012D               	dw	301
   287  003E69  0117               	dw	279
   288  003E6B  0108               	dw	264
   289  003E6D  00F9               	dw	249
   290  003E6F  00EB               	dw	235
   291  003E71  00DC               	dw	220
   292  003E73  00CD               	dw	205
   293  003E75  00BE               	dw	190
   294  003E77  00B7               	dw	183
   295  003E79  00A8               	dw	168
   296  003E7B  0099               	dw	153
   297  003E7D  0092               	dw	146
   298  003E7F  0083               	dw	131
   299  003E81  007C               	dw	124
   300  003E83  006D               	dw	109
   301  003E85  0065               	dw	101
   302  003E87  005E               	dw	94
   303  003E89  004F               	dw	79
   304  003E8B  0048               	dw	72
   305  003E8D  0040               	dw	64
   306  003E8F  0039               	dw	57
   307  003E91  0032               	dw	50
   308  003E93  0032               	dw	50
   309  003E95  002A               	dw	42
   310  003E97  0023               	dw	35
   311  003E99  0023               	dw	35
   312  003E9B  001B               	dw	27
   313  003E9D  001B               	dw	27
   314  003E9F  0014               	dw	20
   315  003EA1  0014               	dw	20
   316  003EA3  0014               	dw	20
   317  003EA5  0014               	dw	20
   318  003EA7  0014               	dw	20
   319  003EA9  0014               	dw	20
   320  003EAB  0014               	dw	20
   321  003EAD  0014               	dw	20
   322  003EAF  0014               	dw	20
   323  003EB1  0014               	dw	20
   324  003EB3  001B               	dw	27
   325  003EB5  001B               	dw	27
   326  003EB7  0023               	dw	35
   327  003EB9  0023               	dw	35
   328  003EBB  002A               	dw	42
   329  003EBD  0032               	dw	50
   330  003EBF  0039               	dw	57
   331  003EC1  0040               	dw	64
   332  003EC3  0048               	dw	72
   333  003EC5  004F               	dw	79
   334  003EC7  0057               	dw	87
   335  003EC9  005E               	dw	94
   336  003ECB  0065               	dw	101
   337  003ECD  0074               	dw	116
   338  003ECF  007C               	dw	124
   339  003ED1  008A               	dw	138
   340  003ED3  0092               	dw	146
   341  003ED5  00A1               	dw	161
   342  003ED7  00AF               	dw	175
   343  003ED9  00B7               	dw	183
   344  003EDB  00C6               	dw	198
   345  003EDD  00D4               	dw	212
   346  003EDF  00E3               	dw	227
   347  003EE1  00F2               	dw	242
   348  003EE3  0101               	dw	257
   349  003EE5  0110               	dw	272
   350  003EE7  011E               	dw	286
   351  003EE9  0135               	dw	309
   352  003EEB  0143               	dw	323
   353  003EED  0152               	dw	338
   354  003EEF  0168               	dw	360
   355  003EF1  0177               	dw	375
   356  003EF3  018D               	dw	397
   357  003EF5  019C               	dw	412
   358  003EF7  01B2               	dw	434
   359  003EF9  01C1               	dw	449
   360  003EFB  01D7               	dw	471
   361  003EFD  01EE               	dw	494
   362  003EFF  01FC               	dw	508
   363  003F01  0213               	dw	531
   364  003F03  0229               	dw	553
   365  003F05  023F               	dw	575
   366  003F07  0255               	dw	597
   367  003F09  026B               	dw	619
   368  003F0B  0282               	dw	642
   369  003F0D  0298               	dw	664
   370  003F0F  02A7               	dw	679
   371  003F11  02BD               	dw	701
   372  003F13  02DA               	dw	730
   373  003F15  02F1               	dw	753
   374  003F17  0307               	dw	775
   375  003F19  031D               	dw	797
   376  003F1B  0333               	dw	819
   377  003F1D  0349               	dw	841
   378  003F1F  0360               	dw	864
   379  003F21  0376               	dw	886
   380  003F23  038C               	dw	908
   381  003F25  03A2               	dw	930
   382  003F27  03B8               	dw	952
   383  003F29                     __end_of_sinusValues:
   384                           	opt callstack 0
   385  003F29                     _timer0PreloadValues:
   386                           	opt callstack 0
   387  003F29  ECEC               	dw	60652
   388  003F2B  F675               	dw	63093
   389  003F2D  F9A3               	dw	63907
   390  003F2F  FB3A               	dw	64314
   391  003F31  FC2E               	dw	64558
   392  003F33  FCD1               	dw	64721
   393  003F35  FD45               	dw	64837
   394  003F37  FD9C               	dw	64924
   395  003F39  FDE0               	dw	64992
   396  003F3B  FE16               	dw	65046
   397  003F3D  FE43               	dw	65091
   398  003F3F  FE68               	dw	65128
   399  003F41  FE87               	dw	65159
   400  003F43  FEA2               	dw	65186
   401  003F45  FEB9               	dw	65209
   402  003F47  FECD               	dw	65229
   403  003F49  FEDF               	dw	65247
   404  003F4B  FEEF               	dw	65263
   405  003F4D  FEFE               	dw	65278
   406  003F4F  FF0A               	dw	65290
   407  003F51  FF16               	dw	65302
   408  003F53  FF21               	dw	65313
   409  003F55  FF2A               	dw	65322
   410  003F57  FF33               	dw	65331
   411  003F59  FF3B               	dw	65339
   412  003F5B  FF43               	dw	65347
   413  003F5D  FF4A               	dw	65354
   414  003F5F  FF50               	dw	65360
   415  003F61  FF56               	dw	65366
   416  003F63  FF5C               	dw	65372
   417  003F65  FF61               	dw	65377
   418  003F67  FF66               	dw	65382
   419  003F69  FF6B               	dw	65387
   420  003F6B  FF6F               	dw	65391
   421  003F6D  FF73               	dw	65395
   422  003F6F  FF77               	dw	65399
   423  003F71  FF7B               	dw	65403
   424  003F73  FF7E               	dw	65406
   425  003F75  FF81               	dw	65409
   426  003F77  FF84               	dw	65412
   427  003F79  FF87               	dw	65415
   428  003F7B  FF8A               	dw	65418
   429  003F7D  FF8D               	dw	65421
   430  003F7F  FF90               	dw	65424
   431  003F81  FF92               	dw	65426
   432  003F83  FF94               	dw	65428
   433  003F85  FF97               	dw	65431
   434  003F87  FF99               	dw	65433
   435  003F89  FF9B               	dw	65435
   436  003F8B  FF9D               	dw	65437
   437  003F8D  FF9F               	dw	65439
   438  003F8F  FFA1               	dw	65441
   439  003F91  FFA2               	dw	65442
   440  003F93  FFA4               	dw	65444
   441  003F95  FFA6               	dw	65446
   442  003F97  FFA7               	dw	65447
   443  003F99  FFA9               	dw	65449
   444  003F9B  FFAA               	dw	65450
   445  003F9D  FFAC               	dw	65452
   446  003F9F  FFAD               	dw	65453
   447  003FA1  FFAE               	dw	65454
   448  003FA3  FFB0               	dw	65456
   449  003FA5  FFB1               	dw	65457
   450  003FA7  FFB2               	dw	65458
   451  003FA9  FFB3               	dw	65459
   452  003FAB  FFB5               	dw	65461
   453  003FAD  FFB6               	dw	65462
   454  003FAF  FFB7               	dw	65463
   455  003FB1  FFB8               	dw	65464
   456  003FB3  FFB9               	dw	65465
   457  003FB5  FFBA               	dw	65466
   458  003FB7  FFBB               	dw	65467
   459  003FB9  FFBC               	dw	65468
   460  003FBB  FFBD               	dw	65469
   461  003FBD  FFBD               	dw	65469
   462  003FBF  FFBE               	dw	65470
   463  003FC1  FFBF               	dw	65471
   464  003FC3  FFC0               	dw	65472
   465  003FC5  FFC1               	dw	65473
   466  003FC7  FFC1               	dw	65473
   467  003FC9  FFC2               	dw	65474
   468  003FCB  FFC3               	dw	65475
   469  003FCD  FFC4               	dw	65476
   470  003FCF  FFC4               	dw	65476
   471  003FD1  FFC5               	dw	65477
   472  003FD3  FFC6               	dw	65478
   473  003FD5  FFC6               	dw	65478
   474  003FD7  FFC7               	dw	65479
   475  003FD9  FFC8               	dw	65480
   476  003FDB  FFC8               	dw	65480
   477  003FDD  FFC9               	dw	65481
   478  003FDF  FFC9               	dw	65481
   479  003FE1  FFCA               	dw	65482
   480  003FE3  FFCB               	dw	65483
   481  003FE5  FFCB               	dw	65483
   482  003FE7  FFCC               	dw	65484
   483  003FE9  FFCC               	dw	65484
   484  003FEB  FFCD               	dw	65485
   485  003FED  FFCD               	dw	65485
   486  003FEF  FFDC               	dw	65500
   487  003FF1                     __end_of_timer0PreloadValues:
   488                           	opt callstack 0
   489  003FF1                     _digits:
   490                           	opt callstack 0
   491  003FF1  30                 	db	48
   492  003FF2  31                 	db	49
   493  003FF3  32                 	db	50
   494  003FF4  33                 	db	51
   495  003FF5  34                 	db	52
   496  003FF6  35                 	db	53
   497  003FF7  36                 	db	54
   498  003FF8  37                 	db	55
   499  003FF9  38                 	db	56
   500  003FFA  39                 	db	57
   501  003FFB                     __end_of_digits:
   502                           	opt callstack 0
   503  0000                     _TMR5	set	3975
   504  0000                     _TMR1	set	4046
   505  0000                     _TMR0	set	4054
   506  0000                     _PORTDbits	set	3971
   507  0000                     _PORTCbits	set	3970
   508  0000                     _TRISDbits	set	3989
   509  0000                     _TRISCbits	set	3988
   510  0000                     _PIR3bits	set	4004
   511  0000                     _PDC2L	set	3957
   512  0000                     _PDC2H	set	3956
   513  0000                     _PDC1L	set	3959
   514  0000                     _PDC1H	set	3958
   515  0000                     _ADRESH	set	4036
   516  0000                     _PORTAbits	set	3968
   517  0000                     _T5CONbits	set	4023
   518  0000                     _T1CONbits	set	4045
   519  0000                     _T0CONbits	set	4053
   520  0000                     _PIR1bits	set	3998
   521  0000                     _PIE1bits	set	3997
   522  0000                     _TRISAbits	set	3986
   523  0000                     _ANSEL0bits	set	4024
   524  0000                     _ADCHSbits	set	3993
   525  0000                     _ADCON3bits	set	3994
   526  0000                     _ADCON2bits	set	4032
   527  0000                     _ADCON1	set	4033
   528  0000                     _ADCON0bits	set	4034
   529  0000                     _INTCONbits	set	4082
   530  0000                     _OVDCONS	set	3946
   531  0000                     _OVDCOND	set	3947
   532  0000                     _PIE3bits	set	4003
   533  0000                     _PDC0L	set	3961
   534  0000                     _PDC0H	set	3960
   535  0000                     _PTPERL	set	3963
   536  0000                     _PTPERH	set	3962
   537  0000                     _PWMCON1bits	set	3950
   538  0000                     _PWMCON0bits	set	3951
   539  0000                     _PTCON1bits	set	3966
   540  0000                     _PTCON0bits	set	3967
   541  0000                     _PORTB	set	3969
   542  0000                     _TRISB	set	3987
   543  0000                     _LATB	set	3978
   544  003FFB                     STR_1:
   545  003FFB  25                 	db	37
   546  003FFC  64                 	db	100	;'d'
   547  003FFD  00                 	db	0
   548                           
   549                           ; #config settings
   550  003FFE  00                 	db	0	; dummy byte at the end
   551  0000                     
   552                           	psect	cinit
   553  000FD2                     __pcinit:
   554                           	opt callstack 0
   555  000FD2                     start_initialization:
   556                           	opt callstack 0
   557  000FD2                     __initialization:
   558                           	opt callstack 0
   559                           
   560                           ; Initialize objects allocated to BANK0 (15 bytes)
   561                           ; load TBLPTR registers with __pidataBANK0
   562  000FD2  0E9E               	movlw	low __pidataBANK0
   563  000FD4  6EF6               	movwf	tblptrl,c
   564  000FD6  0E12               	movlw	high __pidataBANK0
   565  000FD8  6EF7               	movwf	tblptrh,c
   566  000FDA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   567  000FDC  6EF8               	movwf	tblptru,c
   568  000FDE  EE00  F0CF         	lfsr	0,__pdataBANK0
   569  000FE2  EE10 F00F          	lfsr	1,15
   570  000FE6                     copy_data0:
   571  000FE6  0009               	tblrd		*+
   572  000FE8  CFF5 FFEE          	movff	tablat,postinc0
   573  000FEC  50E5               	movf	postdec1,w,c
   574  000FEE  50E1               	movf	fsr1l,w,c
   575  000FF0  E1FA               	bnz	copy_data0
   576                           
   577                           ; Initialize objects allocated to COMRAM (1 bytes)
   578                           ; load TBLPTR registers with __pidataCOMRAM
   579  000FF2  0EBA               	movlw	low __pidataCOMRAM
   580  000FF4  6EF6               	movwf	tblptrl,c
   581  000FF6  0E12               	movlw	high __pidataCOMRAM
   582  000FF8  6EF7               	movwf	tblptrh,c
   583  000FFA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   584  000FFC  6EF8               	movwf	tblptru,c
   585  000FFE  0009               	tblrd		*+	;fetch initializer
   586  001000  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   587                           
   588                           ; Clear objects allocated to BANK0 (48 bytes)
   589  001004  EE00  F09F         	lfsr	0,__pbssBANK0
   590  001008  0E30               	movlw	48
   591  00100A                     clear_0:
   592  00100A  6AEE               	clrf	postinc0,c
   593  00100C  06E8               	decf	wreg,f,c
   594  00100E  E1FD               	bnz	clear_0
   595  001010                     end_of_initialization:
   596                           	opt callstack 0
   597  001010                     __end_of__initialization:
   598                           	opt callstack 0
   599  001010  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   600  001012  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   601  001014  0E00               	movlw	low (__Lmediumconst shr (0+16))
   602  001016  6EF8               	movwf	tblptru,c
   603  001018  0100               	movlb	0
   604  00101A  EF20  F009         	goto	_main	;jump to C main() function
   605                           
   606                           	psect	dataCOMRAM
   607  00005E                     __pdataCOMRAM:
   608                           	opt callstack 0
   609  00005E                     _d1:
   610                           	opt callstack 0
   611  00005E                     	ds	1
   612                           
   613                           	psect	bssBANK0
   614  00009F                     __pbssBANK0:
   615                           	opt callstack 0
   616  00009F                     _dutyCycle:
   617                           	opt callstack 0
   618  00009F                     	ds	4
   619  0000A3                     _nout:
   620                           	opt callstack 0
   621  0000A3                     	ds	2
   622  0000A5                     _width:
   623                           	opt callstack 0
   624  0000A5                     	ds	2
   625  0000A7                     _prec:
   626                           	opt callstack 0
   627  0000A7                     	ds	2
   628  0000A9                     _flags:
   629                           	opt callstack 0
   630  0000A9                     	ds	2
   631  0000AB                     _currentPreloadIndex:
   632                           	opt callstack 0
   633  0000AB                     	ds	1
   634  0000AC                     _refreshTime:
   635                           	opt callstack 0
   636  0000AC                     	ds	1
   637  0000AD                     _timer5OverflowCount:
   638                           	opt callstack 0
   639  0000AD                     	ds	1
   640  0000AE                     _sinusIndex1:
   641                           	opt callstack 0
   642  0000AE                     	ds	1
   643  0000AF                     _dbuf:
   644                           	opt callstack 0
   645  0000AF                     	ds	32
   646                           
   647                           	psect	dataBANK0
   648  0000CF                     __pdataBANK0:
   649                           	opt callstack 0
   650  0000CF                     _prevTimer0ReloadValue:
   651                           	opt callstack 0
   652  0000CF                     	ds	2
   653  0000D1                     _timer0ReloadValue:
   654                           	opt callstack 0
   655  0000D1                     	ds	2
   656  0000D3                     _timer5ReloadValue:
   657                           	opt callstack 0
   658  0000D3                     	ds	2
   659  0000D5                     _maxADCVal:
   660                           	opt callstack 0
   661  0000D5                     	ds	2
   662  0000D7                     _prevAdcPercent:
   663                           	opt callstack 0
   664  0000D7                     	ds	2
   665  0000D9                     _adcPercent:
   666                           	opt callstack 0
   667  0000D9                     	ds	2
   668  0000DB                     _PrevADRESH:
   669                           	opt callstack 0
   670  0000DB                     	ds	1
   671  0000DC                     _sinusIndex3:
   672                           	opt callstack 0
   673  0000DC                     	ds	1
   674  0000DD                     _sinusIndex2:
   675                           	opt callstack 0
   676  0000DD                     	ds	1
   677                           
   678                           	psect	cstackBANK1
   679  000100                     __pcstackBANK1:
   680                           	opt callstack 0
   681  000100                     LCDWriteNibble@rs:
   682                           	opt callstack 0
   683                           
   684                           ; 1 bytes @ 0x0
   685  000100                     	ds	1
   686  000101                     ??_LCDWriteNibble:
   687                           
   688                           ; 1 bytes @ 0x1
   689  000101                     	ds	1
   690  000102                     LCDWriteNibble@ch:
   691                           	opt callstack 0
   692                           
   693                           ; 1 bytes @ 0x2
   694  000102                     	ds	1
   695  000103                     ??_LCDPutChar:
   696  000103                     ??_LCDPutCmd:
   697                           
   698                           ; 1 bytes @ 0x3
   699  000103                     	ds	1
   700  000104                     LCDPutChar@ch:
   701                           	opt callstack 0
   702  000104                     LCDPutCmd@ch:
   703                           	opt callstack 0
   704                           
   705                           ; 1 bytes @ 0x4
   706  000104                     	ds	1
   707  000105                     ??_LCD_Initialize:
   708                           
   709                           ; 1 bytes @ 0x5
   710  000105                     	ds	2
   711  000107                     
   712                           ; 1 bytes @ 0x7
   713                           
   714                           	psect	cstackBANK0
   715  000060                     __pcstackBANK0:
   716                           	opt callstack 0
   717  000060                     	ds	2
   718  000062                     sprintf@ap:
   719                           	opt callstack 0
   720                           
   721                           ; 2 bytes @ 0x2
   722  000062                     	ds	2
   723  000064                     sprintf@f:
   724                           	opt callstack 0
   725                           
   726                           ; 6 bytes @ 0x4
   727  000064                     	ds	6
   728  00006A                     ??_tcInt:
   729                           
   730                           ; 1 bytes @ 0xA
   731  00006A                     	ds	15
   732  000079                     tcInt@str2:
   733                           	opt callstack 0
   734                           
   735                           ; 16 bytes @ 0x19
   736  000079                     	ds	16
   737  000089                     tcInt@str1:
   738                           	opt callstack 0
   739                           
   740                           ; 16 bytes @ 0x29
   741  000089                     	ds	16
   742  000099                     tcInt@noDigits:
   743                           	opt callstack 0
   744                           
   745                           ; 1 bytes @ 0x39
   746  000099                     	ds	1
   747  00009A                     tcInt@timer0ReloadValueCopy:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x3A
   751  00009A                     	ds	2
   752  00009C                     tcInt@i:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x3C
   756  00009C                     	ds	2
   757  00009E                     tcInt@duty:
   758                           	opt callstack 0
   759                           
   760                           ; 1 bytes @ 0x3E
   761  00009E                     	ds	1
   762                           
   763                           	psect	cstackCOMRAM
   764  000001                     __pcstackCOMRAM:
   765                           	opt callstack 0
   766  000001                     ?_strlen:
   767                           	opt callstack 0
   768  000001                     ?___lwdiv:
   769                           	opt callstack 0
   770  000001                     ?___lwmod:
   771                           	opt callstack 0
   772  000001                     ?___aodiv:
   773                           	opt callstack 0
   774  000001                     ?___aomod:
   775                           	opt callstack 0
   776  000001                     i1LCDWriteNibble@rs:
   777                           	opt callstack 0
   778  000001                     ___lwdiv@dividend:
   779                           	opt callstack 0
   780  000001                     ___lwmod@dividend:
   781                           	opt callstack 0
   782  000001                     fputc@c:
   783                           	opt callstack 0
   784  000001                     strlen@s:
   785                           	opt callstack 0
   786  000001                     ___aodiv@dividend:
   787                           	opt callstack 0
   788  000001                     ___aomod@dividend:
   789                           	opt callstack 0
   790                           
   791                           ; 8 bytes @ 0x0
   792  000001                     	ds	1
   793  000002                     ??i1_LCDWriteNibble:
   794                           
   795                           ; 1 bytes @ 0x1
   796  000002                     	ds	1
   797  000003                     i1LCDWriteNibble@ch:
   798                           	opt callstack 0
   799  000003                     ___lwdiv@divisor:
   800                           	opt callstack 0
   801  000003                     ___lwmod@divisor:
   802                           	opt callstack 0
   803  000003                     fputc@fp:
   804                           	opt callstack 0
   805  000003                     strlen@a:
   806                           	opt callstack 0
   807                           
   808                           ; 2 bytes @ 0x2
   809  000003                     	ds	1
   810  000004                     ??i1_LCDPutChar:
   811  000004                     ??i1_LCDPutCmd:
   812                           
   813                           ; 1 bytes @ 0x3
   814  000004                     	ds	1
   815  000005                     ??_fputc:
   816  000005                     ___lwmod@counter:
   817                           	opt callstack 0
   818  000005                     i1LCDPutChar@ch:
   819                           	opt callstack 0
   820  000005                     i1LCDPutCmd@ch:
   821                           	opt callstack 0
   822  000005                     ___lwdiv@quotient:
   823                           	opt callstack 0
   824                           
   825                           ; 2 bytes @ 0x4
   826  000005                     	ds	1
   827  000006                     LCDPutStr@str:
   828                           	opt callstack 0
   829                           
   830                           ; 2 bytes @ 0x5
   831  000006                     	ds	1
   832  000007                     ___lwdiv@counter:
   833                           	opt callstack 0
   834                           
   835                           ; 1 bytes @ 0x6
   836  000007                     	ds	1
   837  000008                     LCDPutStr@i:
   838                           	opt callstack 0
   839                           
   840                           ; 1 bytes @ 0x7
   841  000008                     	ds	1
   842  000009                     ___aodiv@divisor:
   843                           	opt callstack 0
   844  000009                     ___aomod@divisor:
   845                           	opt callstack 0
   846                           
   847                           ; 8 bytes @ 0x8
   848  000009                     	ds	1
   849  00000A                     fputs@s:
   850                           	opt callstack 0
   851                           
   852                           ; 2 bytes @ 0x9
   853  00000A                     	ds	2
   854  00000C                     fputs@fp:
   855                           	opt callstack 0
   856                           
   857                           ; 2 bytes @ 0xB
   858  00000C                     	ds	2
   859  00000E                     fputs@c:
   860                           	opt callstack 0
   861                           
   862                           ; 1 bytes @ 0xD
   863  00000E                     	ds	1
   864  00000F                     fputs@i:
   865                           	opt callstack 0
   866                           
   867                           ; 2 bytes @ 0xE
   868  00000F                     	ds	2
   869  000011                     ?_pad:
   870                           	opt callstack 0
   871  000011                     ___aodiv@counter:
   872                           	opt callstack 0
   873  000011                     ___aomod@counter:
   874                           	opt callstack 0
   875  000011                     pad@fp:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x10
   879  000011                     	ds	1
   880  000012                     ___aodiv@sign:
   881                           	opt callstack 0
   882  000012                     ___aomod@sign:
   883                           	opt callstack 0
   884                           
   885                           ; 1 bytes @ 0x11
   886  000012                     	ds	1
   887  000013                     ?_abs:
   888                           	opt callstack 0
   889  000013                     pad@buf:
   890                           	opt callstack 0
   891  000013                     abs@a:
   892                           	opt callstack 0
   893  000013                     ___aodiv@quotient:
   894                           	opt callstack 0
   895                           
   896                           ; 8 bytes @ 0x12
   897  000013                     	ds	2
   898  000015                     ??_abs:
   899  000015                     pad@p:
   900                           	opt callstack 0
   901                           
   902                           ; 2 bytes @ 0x14
   903  000015                     	ds	2
   904  000017                     ??_pad:
   905                           
   906                           ; 1 bytes @ 0x16
   907  000017                     	ds	1
   908  000018                     pad@i:
   909                           	opt callstack 0
   910                           
   911                           ; 2 bytes @ 0x17
   912  000018                     	ds	2
   913  00001A                     pad@w:
   914                           	opt callstack 0
   915                           
   916                           ; 2 bytes @ 0x19
   917  00001A                     	ds	2
   918  00001C                     ?_dtoa:
   919                           	opt callstack 0
   920  00001C                     dtoa@fp:
   921                           	opt callstack 0
   922                           
   923                           ; 2 bytes @ 0x1B
   924  00001C                     	ds	2
   925  00001E                     dtoa@d:
   926                           	opt callstack 0
   927                           
   928                           ; 8 bytes @ 0x1D
   929  00001E                     	ds	8
   930  000026                     ??_dtoa:
   931                           
   932                           ; 1 bytes @ 0x25
   933  000026                     	ds	8
   934  00002E                     _dtoa$1345:
   935                           	opt callstack 0
   936                           
   937                           ; 2 bytes @ 0x2D
   938  00002E                     	ds	2
   939  000030                     dtoa@p:
   940                           	opt callstack 0
   941                           
   942                           ; 2 bytes @ 0x2F
   943  000030                     	ds	2
   944  000032                     dtoa@w:
   945                           	opt callstack 0
   946                           
   947                           ; 2 bytes @ 0x31
   948  000032                     	ds	2
   949  000034                     dtoa@s:
   950                           	opt callstack 0
   951                           
   952                           ; 2 bytes @ 0x33
   953  000034                     	ds	2
   954  000036                     dtoa@n:
   955                           	opt callstack 0
   956                           
   957                           ; 8 bytes @ 0x35
   958  000036                     	ds	8
   959  00003E                     dtoa@i:
   960                           	opt callstack 0
   961                           
   962                           ; 2 bytes @ 0x3D
   963  00003E                     	ds	2
   964  000040                     ?_vfpfcnvrt:
   965                           	opt callstack 0
   966  000040                     vfpfcnvrt@fp:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0x3F
   970  000040                     	ds	2
   971  000042                     vfpfcnvrt@fmt:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x41
   975  000042                     	ds	2
   976  000044                     vfpfcnvrt@ap:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x43
   980  000044                     	ds	2
   981  000046                     ??_vfpfcnvrt:
   982                           
   983                           ; 1 bytes @ 0x45
   984  000046                     	ds	2
   985  000048                     vfpfcnvrt@ll:
   986                           	opt callstack 0
   987                           
   988                           ; 8 bytes @ 0x47
   989  000048                     	ds	8
   990  000050                     ?_vfprintf:
   991                           	opt callstack 0
   992  000050                     vfprintf@fp:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0x4F
   996  000050                     	ds	2
   997  000052                     vfprintf@fmt:
   998                           	opt callstack 0
   999                           
  1000                           ; 2 bytes @ 0x51
  1001  000052                     	ds	2
  1002  000054                     vfprintf@ap:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x53
  1006  000054                     	ds	2
  1007  000056                     vfprintf@cfmt:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x55
  1011  000056                     	ds	2
  1012  000058                     ?_sprintf:
  1013                           	opt callstack 0
  1014  000058                     sprintf@s:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x57
  1018  000058                     	ds	2
  1019  00005A                     sprintf@fmt:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x59
  1023  00005A                     	ds	4
  1024  00005E                     
  1025                           ; 1 bytes @ 0x5D
  1026 ;;
  1027 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1028 ;;
  1029 ;; *************** function _main *****************
  1030 ;; Defined at:
  1031 ;;		line 362 in file "newmain.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1045 ;;      Params:         0       0       0       0
  1046 ;;      Locals:         0       0       0       0
  1047 ;;      Temps:          0       0       0       0
  1048 ;;      Totals:         0       0       0       0
  1049 ;;Total ram usage:        0 bytes
  1050 ;; Hardware stack levels required when called:   12
  1051 ;; This function calls:
  1052 ;;		_LCDPutChar
  1053 ;;		_LCD_Initialize
  1054 ;;		_configureInterrupts
  1055 ;;		_configurePWM
  1056 ;;		_configureTimer0
  1057 ;;		_configureTimer5
  1058 ;;		_startPWM
  1059 ;; This function is called by:
  1060 ;;		Startup code after reset
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text0
  1065  001240                     __ptext0:
  1066                           	opt callstack 0
  1067  001240                     _main:
  1068                           	opt callstack 19
  1069  001240                     
  1070                           ;newmain.c: 363:     LCD_Initialize();
  1071  001240  EC97  F007         	call	_LCD_Initialize	;wreg free
  1072  001244                     
  1073                           ;newmain.c: 364:     configureInterrupts();
  1074  001244  EC57  F009         	call	_configureInterrupts	;wreg free
  1075  001248                     
  1076                           ;newmain.c: 365:     configurePWM();
  1077  001248  EC77  F008         	call	_configurePWM	;wreg free
  1078  00124C                     
  1079                           ;newmain.c: 367:     configureTimer0();
  1080  00124C  EC37  F009         	call	_configureTimer0	;wreg free
  1081  001250                     
  1082                           ;newmain.c: 369:     configureTimer5();
  1083  001250  EC45  F009         	call	_configureTimer5	;wreg free
  1084  001254                     
  1085                           ;newmain.c: 370:     startPWM();
  1086  001254  EC5A  F009         	call	_startPWM	;wreg free
  1087  001258                     
  1088                           ;newmain.c: 377:     TRISAbits.TRISA2 = 0;
  1089  001258  9492               	bcf	146,2,c	;volatile
  1090  00125A                     
  1091                           ;newmain.c: 378:     TRISAbits.RA2 = 0;
  1092  00125A  9492               	bcf	146,2,c	;volatile
  1093  00125C                     
  1094                           ;newmain.c: 379:     ANSEL0bits.ANS2 = 0;
  1095  00125C  94B8               	bcf	184,2,c	;volatile
  1096  00125E                     
  1097                           ;newmain.c: 380:     PORTAbits.RA2 = 1;
  1098  00125E  8480               	bsf	128,2,c	;volatile
  1099  001260                     
  1100                           ;newmain.c: 384:     LCDPutChar('a');
  1101  001260  0E61               	movlw	97
  1102  001262  ECD2  F008         	call	_LCDPutChar
  1103  001266                     l151:
  1104  001266  EF33  F009         	goto	l151
  1105  00126A  EFDB  F001         	goto	start
  1106  00126E                     __end_of_main:
  1107                           	opt callstack 0
  1108                           
  1109 ;; *************** function _startPWM *****************
  1110 ;; Defined at:
  1111 ;;		line 249 in file "newmain.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		None
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1125 ;;      Params:         0       0       0       0
  1126 ;;      Locals:         0       0       0       0
  1127 ;;      Temps:          0       0       0       0
  1128 ;;      Totals:         0       0       0       0
  1129 ;;Total ram usage:        0 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; Hardware stack levels required when called:    9
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text1
  1140  0012B4                     __ptext1:
  1141                           	opt callstack 0
  1142  0012B4                     _startPWM:
  1143                           	opt callstack 21
  1144  0012B4                     
  1145                           ;newmain.c: 250:     PTCON1bits.PTEN = 1;
  1146  0012B4  8E7E               	bsf	126,7,c	;volatile
  1147  0012B6  0012               	return		;funcret
  1148  0012B8                     __end_of_startPWM:
  1149                           	opt callstack 0
  1150                           
  1151 ;; *************** function _configureTimer5 *****************
  1152 ;; Defined at:
  1153 ;;		line 353 in file "newmain.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;		None
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		None
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1167 ;;      Params:         0       0       0       0
  1168 ;;      Locals:         0       0       0       0
  1169 ;;      Temps:          0       0       0       0
  1170 ;;      Totals:         0       0       0       0
  1171 ;;Total ram usage:        0 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; Hardware stack levels required when called:    9
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_main
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text2
  1182  00128A                     __ptext2:
  1183                           	opt callstack 0
  1184  00128A                     _configureTimer5:
  1185                           	opt callstack 21
  1186  00128A                     
  1187                           ;newmain.c: 354:     T5CONbits.T5PS1 = 1;
  1188  00128A  88B7               	bsf	183,4,c	;volatile
  1189                           
  1190                           ;newmain.c: 355:     T5CONbits.T5PS0 = 1;
  1191  00128C  86B7               	bsf	183,3,c	;volatile
  1192                           
  1193                           ;newmain.c: 356:     T5CONbits.T5MOD = 0;
  1194  00128E  9AB7               	bcf	183,5,c	;volatile
  1195                           
  1196                           ;newmain.c: 357:     T5CONbits.TMR5ON = 1;
  1197  001290  80B7               	bsf	183,0,c	;volatile
  1198                           
  1199                           ;newmain.c: 358:     PIE3bits.TMR5IE = 1;
  1200  001292  80A3               	bsf	163,0,c	;volatile
  1201                           
  1202                           ;newmain.c: 359:     TMR5 = timer5ReloadValue;
  1203  001294  C0D3  FF87         	movff	_timer5ReloadValue,3975	;volatile
  1204  001298  C0D4  FF88         	movff	_timer5ReloadValue+1,3976	;volatile
  1205  00129C  0012               	return		;funcret
  1206  00129E                     __end_of_configureTimer5:
  1207                           	opt callstack 0
  1208                           
  1209 ;; *************** function _configureTimer0 *****************
  1210 ;; Defined at:
  1211 ;;		line 325 in file "newmain.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		None
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1225 ;;      Params:         0       0       0       0
  1226 ;;      Locals:         0       0       0       0
  1227 ;;      Temps:          0       0       0       0
  1228 ;;      Totals:         0       0       0       0
  1229 ;;Total ram usage:        0 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    9
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text3
  1240  00126E                     __ptext3:
  1241                           	opt callstack 0
  1242  00126E                     _configureTimer0:
  1243                           	opt callstack 21
  1244  00126E                     
  1245                           ;newmain.c: 329:     T0CONbits.PSA = 0;
  1246  00126E  96D5               	bcf	213,3,c	;volatile
  1247                           
  1248                           ;newmain.c: 330:     T0CONbits.T0SE = 0;
  1249  001270  98D5               	bcf	213,4,c	;volatile
  1250                           
  1251                           ;newmain.c: 331:     T0CONbits.T0CS = 0;
  1252  001272  9AD5               	bcf	213,5,c	;volatile
  1253                           
  1254                           ;newmain.c: 332:     T0CONbits.T016BIT = 0;
  1255  001274  9CD5               	bcf	213,6,c	;volatile
  1256                           
  1257                           ;newmain.c: 333:     INTCONbits.TMR0IE = 1;
  1258  001276  8AF2               	bsf	242,5,c	;volatile
  1259                           
  1260                           ;newmain.c: 334:     T0CONbits.TMR0ON = 1;
  1261  001278  8ED5               	bsf	213,7,c	;volatile
  1262                           
  1263                           ;newmain.c: 335:     T0CONbits.T0PS0 = 0;
  1264  00127A  90D5               	bcf	213,0,c	;volatile
  1265                           
  1266                           ;newmain.c: 336:     T0CONbits.T0PS1 = 1;
  1267  00127C  82D5               	bsf	213,1,c	;volatile
  1268                           
  1269                           ;newmain.c: 337:     T0CONbits.T0PS2 = 0;
  1270  00127E  94D5               	bcf	213,2,c	;volatile
  1271                           
  1272                           ;newmain.c: 338:     TMR0 = timer0ReloadValue;
  1273  001280  C0D1  FFD6         	movff	_timer0ReloadValue,4054	;volatile
  1274  001284  C0D2  FFD7         	movff	_timer0ReloadValue+1,4055	;volatile
  1275  001288  0012               	return		;funcret
  1276  00128A                     __end_of_configureTimer0:
  1277                           	opt callstack 0
  1278                           
  1279 ;; *************** function _configurePWM *****************
  1280 ;; Defined at:
  1281 ;;		line 143 in file "newmain.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1295 ;;      Params:         0       0       0       0
  1296 ;;      Locals:         0       0       0       0
  1297 ;;      Temps:          0       0       0       0
  1298 ;;      Totals:         0       0       0       0
  1299 ;;Total ram usage:        0 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    9
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text4
  1310  0010EE                     __ptext4:
  1311                           	opt callstack 0
  1312  0010EE                     _configurePWM:
  1313                           	opt callstack 21
  1314  0010EE                     
  1315                           ;newmain.c: 144:     LATB = 0;
  1316  0010EE  0E00               	movlw	0
  1317  0010F0  6E8A               	movwf	138,c	;volatile
  1318                           
  1319                           ;newmain.c: 145:     TRISB = 0;
  1320  0010F2  0E00               	movlw	0
  1321  0010F4  6E93               	movwf	147,c	;volatile
  1322                           
  1323                           ;newmain.c: 146:     PORTB = 0;
  1324  0010F6  0E00               	movlw	0
  1325  0010F8  6E81               	movwf	129,c	;volatile
  1326  0010FA                     
  1327                           ;newmain.c: 156:     PTCON0bits.PTMOD0 = 0;
  1328  0010FA  907F               	bcf	127,0,c	;volatile
  1329  0010FC                     
  1330                           ;newmain.c: 157:     PTCON0bits.PTMOD1 = 0;
  1331  0010FC  927F               	bcf	127,1,c	;volatile
  1332  0010FE                     
  1333                           ;newmain.c: 170:     PTCON1bits.PTEN = 0;
  1334  0010FE  9E7E               	bcf	126,7,c	;volatile
  1335  001100                     
  1336                           ;newmain.c: 171:     PTCON1bits.PTDIR = 0;
  1337  001100  9C7E               	bcf	126,6,c	;volatile
  1338  001102                     
  1339                           ;newmain.c: 198:     PWMCON0bits.PWMEN2 = 1;
  1340  001102  8C6F               	bsf	111,6,c	;volatile
  1341  001104                     
  1342                           ;newmain.c: 199:     PWMCON0bits.PWMEN1 = 0;
  1343  001104  9A6F               	bcf	111,5,c	;volatile
  1344  001106                     
  1345                           ;newmain.c: 200:     PWMCON0bits.PWMEN0 = 0;
  1346  001106  986F               	bcf	111,4,c	;volatile
  1347  001108                     
  1348                           ;newmain.c: 202:     PWMCON0bits.PMOD0 = 0;
  1349  001108  906F               	bcf	111,0,c	;volatile
  1350  00110A                     
  1351                           ;newmain.c: 203:     PWMCON0bits.PMOD1 = 0;
  1352  00110A  926F               	bcf	111,1,c	;volatile
  1353  00110C                     
  1354                           ;newmain.c: 204:     PWMCON0bits.PMOD2 = 0;
  1355  00110C  946F               	bcf	111,2,c	;volatile
  1356  00110E                     
  1357                           ;newmain.c: 212:     PWMCON1bits.UDIS = 0;
  1358  00110E  926E               	bcf	110,1,c	;volatile
  1359  001110                     
  1360                           ;newmain.c: 213:     PWMCON1bits.OSYNC = 1;
  1361  001110  806E               	bsf	110,0,c	;volatile
  1362                           
  1363                           ;newmain.c: 218:     PTPERH = 0x01;
  1364  001112  0E01               	movlw	1
  1365  001114  6E7A               	movwf	122,c	;volatile
  1366                           
  1367                           ;newmain.c: 219:     PTPERL = 0xF3;
  1368  001116  0EF3               	movlw	243
  1369  001118  6E7B               	movwf	123,c	;volatile
  1370                           
  1371                           ;newmain.c: 225:     PDC0H = 0x00;
  1372  00111A  0E00               	movlw	0
  1373  00111C  6E78               	movwf	120,c	;volatile
  1374                           
  1375                           ;newmain.c: 226:     PDC0L = 0x13;
  1376  00111E  0E13               	movlw	19
  1377  001120  6E79               	movwf	121,c	;volatile
  1378  001122                     
  1379                           ;newmain.c: 227:     PIE3bits.PTIE = 1;
  1380  001122  88A3               	bsf	163,4,c	;volatile
  1381  001124                     
  1382                           ;newmain.c: 236:     OVDCOND = 0xff;
  1383  001124  686B               	setf	107,c	;volatile
  1384                           
  1385                           ;newmain.c: 246:     OVDCONS = 0;
  1386  001126  0E00               	movlw	0
  1387  001128  6E6A               	movwf	106,c	;volatile
  1388  00112A  0012               	return		;funcret
  1389  00112C                     __end_of_configurePWM:
  1390                           	opt callstack 0
  1391                           
  1392 ;; *************** function _configureInterrupts *****************
  1393 ;; Defined at:
  1394 ;;		line 261 in file "newmain.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		None
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1408 ;;      Params:         0       0       0       0
  1409 ;;      Locals:         0       0       0       0
  1410 ;;      Temps:          0       0       0       0
  1411 ;;      Totals:         0       0       0       0
  1412 ;;Total ram usage:        0 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; Hardware stack levels required when called:    9
  1415 ;; This function calls:
  1416 ;;		Nothing
  1417 ;; This function is called by:
  1418 ;;		_main
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text5
  1423  0012AE                     __ptext5:
  1424                           	opt callstack 0
  1425  0012AE                     _configureInterrupts:
  1426                           	opt callstack 21
  1427  0012AE                     
  1428                           ;newmain.c: 281:     INTCONbits.GIE = 1;
  1429  0012AE  8EF2               	bsf	242,7,c	;volatile
  1430                           
  1431                           ;newmain.c: 282:     INTCONbits.PEIE = 1;
  1432  0012B0  8CF2               	bsf	242,6,c	;volatile
  1433  0012B2  0012               	return		;funcret
  1434  0012B4                     __end_of_configureInterrupts:
  1435                           	opt callstack 0
  1436                           
  1437 ;; *************** function _LCD_Initialize *****************
  1438 ;; Defined at:
  1439 ;;		line 48 in file "lcd.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2, status,0, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1453 ;;      Params:         0       0       0       0
  1454 ;;      Locals:         0       0       0       0
  1455 ;;      Temps:          0       0       2       0
  1456 ;;      Totals:         0       0       2       0
  1457 ;;Total ram usage:        2 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:   11
  1460 ;; This function calls:
  1461 ;;		_LCDPutCmd
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text6
  1468  000F2E                     __ptext6:
  1469                           	opt callstack 0
  1470  000F2E                     _LCD_Initialize:
  1471                           	opt callstack 19
  1472  000F2E                     
  1473                           ;lcd.c: 51:     TRISCbits.RC0 = 0;
  1474  000F2E  9094               	bcf	148,0,c	;volatile
  1475                           
  1476                           ;lcd.c: 52:     TRISCbits.RC1 = 0;
  1477  000F30  9294               	bcf	148,1,c	;volatile
  1478                           
  1479                           ;lcd.c: 53:     TRISCbits.RC2 = 0;
  1480  000F32  9494               	bcf	148,2,c	;volatile
  1481                           
  1482                           ;lcd.c: 54:     TRISCbits.RC3 = 0;
  1483  000F34  9694               	bcf	148,3,c	;volatile
  1484                           
  1485                           ;lcd.c: 55:     TRISDbits.RD0 = 0;
  1486  000F36  9095               	bcf	149,0,c	;volatile
  1487                           
  1488                           ;lcd.c: 56:     TRISDbits.RD1 = 0;
  1489  000F38  9295               	bcf	149,1,c	;volatile
  1490                           
  1491                           ;lcd.c: 59:     PORTCbits.RC0 = 0;
  1492  000F3A  9082               	bcf	130,0,c	;volatile
  1493                           
  1494                           ;lcd.c: 60:     PORTCbits.RC1 = 0;
  1495  000F3C  9282               	bcf	130,1,c	;volatile
  1496                           
  1497                           ;lcd.c: 61:     PORTCbits.RC2 = 0;
  1498  000F3E  9482               	bcf	130,2,c	;volatile
  1499                           
  1500                           ;lcd.c: 62:     PORTCbits.RC3 = 0;
  1501  000F40  9682               	bcf	130,3,c	;volatile
  1502                           
  1503                           ;lcd.c: 63:     PORTDbits.RD0 = 0;
  1504  000F42  9083               	bcf	131,0,c	;volatile
  1505                           
  1506                           ;lcd.c: 64:     PORTDbits.RD1 = 0;
  1507  000F44  9283               	bcf	131,1,c	;volatile
  1508  000F46                     
  1509                           ;lcd.c: 71:     _delay((unsigned long)((20)*(40000000/4000.0)));
  1510  000F46  0E02               	movlw	2
  1511  000F48  0101               	movlb	1	; () banked
  1512  000F4A  6F06               	movwf	(??_LCD_Initialize+1)& (0+255),b
  1513  000F4C  0E04               	movlw	4
  1514  000F4E  6F05               	movwf	??_LCD_Initialize& (0+255),b
  1515  000F50  0EBA               	movlw	186
  1516  000F52                     u1497:
  1517  000F52  2EE8               	decfsz	wreg,f,c
  1518  000F54  D7FE               	bra	u1497
  1519  000F56  2F05               	decfsz	??_LCD_Initialize& (0+255),f,b
  1520  000F58  D7FC               	bra	u1497
  1521  000F5A  2F06               	decfsz	(??_LCD_Initialize+1)& (0+255),f,b
  1522  000F5C  D7FA               	bra	u1497
  1523  000F5E  F000               	nop	
  1524  000F60                     
  1525                           ;lcd.c: 74:     LCDPutCmd(0x32);
  1526  000F60  0E32               	movlw	50
  1527  000F62  EC0F  F008         	call	_LCDPutCmd
  1528  000F66                     
  1529                           ;lcd.c: 77:     LCDPutCmd(0x28);
  1530  000F66  0E28               	movlw	40
  1531  000F68  EC0F  F008         	call	_LCDPutCmd
  1532  000F6C                     
  1533                           ;lcd.c: 80:     LCDPutCmd(0x0C);
  1534  000F6C  0E0C               	movlw	12
  1535  000F6E  EC0F  F008         	call	_LCDPutCmd
  1536  000F72                     
  1537                           ;lcd.c: 82:     LCDPutCmd(0x01);
  1538  000F72  0E01               	movlw	1
  1539  000F74  EC0F  F008         	call	_LCDPutCmd
  1540  000F78                     
  1541                           ;lcd.c: 85:     LCDPutCmd(0x06);
  1542  000F78  0E06               	movlw	6
  1543  000F7A  EC0F  F008         	call	_LCDPutCmd
  1544  000F7E  0012               	return		;funcret
  1545  000F80                     __end_of_LCD_Initialize:
  1546                           	opt callstack 0
  1547                           
  1548 ;; *************** function _LCDPutCmd *****************
  1549 ;; Defined at:
  1550 ;;		line 132 in file "lcd.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  ch              1    wreg     unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  ch              1    4[BANK1 ] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1564 ;;      Params:         0       0       0       0
  1565 ;;      Locals:         0       0       1       0
  1566 ;;      Temps:          0       0       1       0
  1567 ;;      Totals:         0       0       2       0
  1568 ;;Total ram usage:        2 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:   10
  1571 ;; This function calls:
  1572 ;;		_LCDWriteNibble
  1573 ;; This function is called by:
  1574 ;;		_LCD_Initialize
  1575 ;;		_LCDGoto
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text7
  1580  00101E                     __ptext7:
  1581                           	opt callstack 0
  1582  00101E                     _LCDPutCmd:
  1583                           	opt callstack 19
  1584                           
  1585                           ;incstack = 0
  1586                           ;LCDPutCmd@ch stored from wreg
  1587  00101E  0101               	movlb	1	; () banked
  1588  001020  6F04               	movwf	LCDPutCmd@ch& (0+255),b
  1589  001022                     
  1590                           ;lcd.c: 133:     _delay((unsigned long)((5)*(40000000/4000.0)));
  1591  001022  0E41               	movlw	65
  1592  001024  0101               	movlb	1	; () banked
  1593  001026  6F03               	movwf	??_LCDPutCmd& (0+255),b
  1594  001028  0EEE               	movlw	238
  1595  00102A                     u1507:
  1596  00102A  2EE8               	decfsz	wreg,f,c
  1597  00102C  D7FE               	bra	u1507
  1598  00102E  2F03               	decfsz	??_LCDPutCmd& (0+255),f,b
  1599  001030  D7FC               	bra	u1507
  1600  001032  F000               	nop	
  1601  001034                     
  1602                           ;lcd.c: 136:     LCDWriteNibble(ch, 0);
  1603  001034  0E00               	movlw	0
  1604  001036  0101               	movlb	1	; () banked
  1605  001038  6F00               	movwf	LCDWriteNibble@rs& (0+255),b
  1606  00103A  5104               	movf	LCDPutCmd@ch& (0+255),w,b
  1607  00103C  EC66  F006         	call	_LCDWriteNibble
  1608  001040                     
  1609                           ;lcd.c: 139:     ch = (ch << 4);
  1610  001040  0101               	movlb	1	; () banked
  1611  001042  3904               	swapf	LCDPutCmd@ch& (0+255),w,b
  1612  001044  0BF0               	andlw	240
  1613  001046  6F04               	movwf	LCDPutCmd@ch& (0+255),b
  1614  001048                     
  1615                           ; BSR set to: 1
  1616                           ;lcd.c: 141:     _delay((unsigned long)((1)*(40000000/4000.0)));
  1617  001048  0E0D               	movlw	13
  1618  00104A  0101               	movlb	1	; () banked
  1619  00104C  6F03               	movwf	??_LCDPutCmd& (0+255),b
  1620  00104E  0EFB               	movlw	251
  1621  001050                     u1517:
  1622  001050  2EE8               	decfsz	wreg,f,c
  1623  001052  D7FE               	bra	u1517
  1624  001054  2F03               	decfsz	??_LCDPutCmd& (0+255),f,b
  1625  001056  D7FC               	bra	u1517
  1626  001058  F000 F000          	nop2	
  1627  00105C                     
  1628                           ;lcd.c: 144:     LCDWriteNibble(ch, 0);
  1629  00105C  0E00               	movlw	0
  1630  00105E  0101               	movlb	1	; () banked
  1631  001060  6F00               	movwf	LCDWriteNibble@rs& (0+255),b
  1632  001062  5104               	movf	LCDPutCmd@ch& (0+255),w,b
  1633  001064  EC66  F006         	call	_LCDWriteNibble
  1634  001068  0012               	return		;funcret
  1635  00106A                     __end_of_LCDPutCmd:
  1636                           	opt callstack 0
  1637                           
  1638 ;; *************** function _LCDPutChar *****************
  1639 ;; Defined at:
  1640 ;;		line 119 in file "lcd.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  ch              1    wreg     unsigned char 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  ch              1    4[BANK1 ] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1654 ;;      Params:         0       0       0       0
  1655 ;;      Locals:         0       0       1       0
  1656 ;;      Temps:          0       0       1       0
  1657 ;;      Totals:         0       0       2       0
  1658 ;;Total ram usage:        2 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:   10
  1661 ;; This function calls:
  1662 ;;		_LCDWriteNibble
  1663 ;; This function is called by:
  1664 ;;		_main
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text8
  1669  0011A4                     __ptext8:
  1670                           	opt callstack 0
  1671  0011A4                     _LCDPutChar:
  1672                           	opt callstack 20
  1673                           
  1674                           ;incstack = 0
  1675                           ;LCDPutChar@ch stored from wreg
  1676  0011A4  0101               	movlb	1	; () banked
  1677  0011A6  6F04               	movwf	LCDPutChar@ch& (0+255),b
  1678  0011A8                     
  1679                           ;lcd.c: 120:     _delay((unsigned long)((5)*(40000000/4000.0)));
  1680  0011A8  0E41               	movlw	65
  1681  0011AA  0101               	movlb	1	; () banked
  1682  0011AC  6F03               	movwf	??_LCDPutChar& (0+255),b
  1683  0011AE  0EEE               	movlw	238
  1684  0011B0                     u1527:
  1685  0011B0  2EE8               	decfsz	wreg,f,c
  1686  0011B2  D7FE               	bra	u1527
  1687  0011B4  2F03               	decfsz	??_LCDPutChar& (0+255),f,b
  1688  0011B6  D7FC               	bra	u1527
  1689  0011B8  F000               	nop	
  1690  0011BA                     
  1691                           ;lcd.c: 123:     LCDWriteNibble(ch, 1);
  1692  0011BA  0E01               	movlw	1
  1693  0011BC  0101               	movlb	1	; () banked
  1694  0011BE  6F00               	movwf	LCDWriteNibble@rs& (0+255),b
  1695  0011C0  5104               	movf	LCDPutChar@ch& (0+255),w,b
  1696  0011C2  EC66  F006         	call	_LCDWriteNibble
  1697  0011C6                     
  1698                           ;lcd.c: 126:     ch = (ch << 4);
  1699  0011C6  0101               	movlb	1	; () banked
  1700  0011C8  3904               	swapf	LCDPutChar@ch& (0+255),w,b
  1701  0011CA  0BF0               	andlw	240
  1702  0011CC  6F04               	movwf	LCDPutChar@ch& (0+255),b
  1703  0011CE                     
  1704                           ; BSR set to: 1
  1705                           ;lcd.c: 129:     LCDWriteNibble(ch, 1);
  1706  0011CE  0E01               	movlw	1
  1707  0011D0  6F00               	movwf	LCDWriteNibble@rs& (0+255),b
  1708  0011D2  5104               	movf	LCDPutChar@ch& (0+255),w,b
  1709  0011D4  EC66  F006         	call	_LCDWriteNibble
  1710  0011D8  0012               	return		;funcret
  1711  0011DA                     __end_of_LCDPutChar:
  1712                           	opt callstack 0
  1713                           
  1714 ;; *************** function _LCDWriteNibble *****************
  1715 ;; Defined at:
  1716 ;;		line 89 in file "lcd.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  ch              1    wreg     unsigned char 
  1719 ;;  rs              1    0[BANK1 ] unsigned char 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  ch              1    2[BANK1 ] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1731 ;;      Params:         0       0       1       0
  1732 ;;      Locals:         0       0       1       0
  1733 ;;      Temps:          0       0       1       0
  1734 ;;      Totals:         0       0       3       0
  1735 ;;Total ram usage:        3 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; Hardware stack levels required when called:    9
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_LCDPutChar
  1742 ;;		_LCDPutCmd
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text9
  1747  000CCC                     __ptext9:
  1748                           	opt callstack 0
  1749  000CCC                     _LCDWriteNibble:
  1750                           	opt callstack 19
  1751                           
  1752                           ;incstack = 0
  1753                           ;LCDWriteNibble@ch stored from wreg
  1754  000CCC  0101               	movlb	1	; () banked
  1755  000CCE  6F02               	movwf	LCDWriteNibble@ch& (0+255),b
  1756  000CD0                     
  1757                           ;lcd.c: 91:     ch = (ch >> 4);
  1758  000CD0  0101               	movlb	1	; () banked
  1759  000CD2  3902               	swapf	LCDWriteNibble@ch& (0+255),w,b
  1760  000CD4  0B0F               	andlw	15
  1761  000CD6  6F02               	movwf	LCDWriteNibble@ch& (0+255),b
  1762                           
  1763                           ;lcd.c: 94:     ch = (ch & 0x0F);
  1764  000CD8  5102               	movf	LCDWriteNibble@ch& (0+255),w,b
  1765  000CDA  0B0F               	andlw	15
  1766  000CDC  6F02               	movwf	LCDWriteNibble@ch& (0+255),b
  1767                           
  1768                           ;lcd.c: 95:     PORTCbits.RC2 = ch & 0xF1;
  1769  000CDE  C102  F101         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  1770  000CE2  0EF1               	movlw	241
  1771  000CE4  1701               	andwf	??_LCDWriteNibble& (0+255),f,b
  1772  000CE6  4701               	rlncf	??_LCDWriteNibble& (0+255),f,b
  1773  000CE8  4701               	rlncf	??_LCDWriteNibble& (0+255),f,b
  1774  000CEA  5082               	movf	130,w,c	;volatile
  1775  000CEC  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1776  000CEE  0BFB               	andlw	-5
  1777  000CF0  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1778  000CF2  6E82               	movwf	130,c	;volatile
  1779                           
  1780                           ;lcd.c: 96:     PORTCbits.RC3 = (ch & 0xF2) >> 1;
  1781  000CF4  C102  F101         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  1782  000CF8  90D8               	bcf	status,0,c
  1783  000CFA  3301               	rrcf	??_LCDWriteNibble& (0+255),f,b
  1784  000CFC  0E79               	movlw	121
  1785  000CFE  1701               	andwf	??_LCDWriteNibble& (0+255),f,b
  1786  000D00  4701               	rlncf	??_LCDWriteNibble& (0+255),f,b
  1787  000D02  4701               	rlncf	??_LCDWriteNibble& (0+255),f,b
  1788  000D04  4701               	rlncf	??_LCDWriteNibble& (0+255),f,b
  1789  000D06  5082               	movf	130,w,c	;volatile
  1790  000D08  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1791  000D0A  0BF7               	andlw	-9
  1792  000D0C  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1793  000D0E  6E82               	movwf	130,c	;volatile
  1794                           
  1795                           ;lcd.c: 97:     PORTDbits.RD0 = (ch & 0xF4) >> 2;
  1796  000D10  C102  F101         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  1797  000D14  90D8               	bcf	status,0,c
  1798  000D16  3301               	rrcf	??_LCDWriteNibble& (0+255),f,b
  1799  000D18  90D8               	bcf	status,0,c
  1800  000D1A  3301               	rrcf	??_LCDWriteNibble& (0+255),f,b
  1801  000D1C  0E3D               	movlw	61
  1802  000D1E  1701               	andwf	??_LCDWriteNibble& (0+255),f,b
  1803  000D20  5083               	movf	131,w,c	;volatile
  1804  000D22  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1805  000D24  0BFE               	andlw	-2
  1806  000D26  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1807  000D28  6E83               	movwf	131,c	;volatile
  1808                           
  1809                           ;lcd.c: 98:     PORTDbits.RD1 = (ch & 0xF8) >> 3;
  1810  000D2A  C102  F101         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  1811  000D2E  90D8               	bcf	status,0,c
  1812  000D30  3301               	rrcf	??_LCDWriteNibble& (0+255),f,b
  1813  000D32  90D8               	bcf	status,0,c
  1814  000D34  3301               	rrcf	??_LCDWriteNibble& (0+255),f,b
  1815  000D36  90D8               	bcf	status,0,c
  1816  000D38  3301               	rrcf	??_LCDWriteNibble& (0+255),f,b
  1817  000D3A  0E1F               	movlw	31
  1818  000D3C  1701               	andwf	??_LCDWriteNibble& (0+255),f,b
  1819  000D3E  4701               	rlncf	??_LCDWriteNibble& (0+255),f,b
  1820  000D40  5083               	movf	131,w,c	;volatile
  1821  000D42  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1822  000D44  0BFD               	andlw	-3
  1823  000D46  1901               	xorwf	??_LCDWriteNibble& (0+255),w,b
  1824  000D48  6E83               	movwf	131,c	;volatile
  1825  000D4A                     
  1826                           ; BSR set to: 1
  1827                           ;lcd.c: 107:     PORTCbits.RC0 = rs;
  1828  000D4A  B100               	btfsc	LCDWriteNibble@rs& (0+255),0,b
  1829  000D4C  D002               	bra	u1455
  1830  000D4E  9082               	bcf	130,0,c	;volatile
  1831  000D50  D001               	bra	u1456
  1832  000D52                     u1455:
  1833  000D52  8082               	bsf	130,0,c	;volatile
  1834  000D54                     u1456:
  1835  000D54                     
  1836                           ;lcd.c: 113:     PORTCbits.RC1 = 1;
  1837  000D54  8282               	bsf	130,1,c	;volatile
  1838  000D56                     
  1839                           ;lcd.c: 114:     _delay((unsigned long)((1)*(40000000/4000000.0)));
  1840  000D56  0E03               	movlw	3
  1841  000D58                     u1537:
  1842  000D58  2EE8               	decfsz	wreg,f,c
  1843  000D5A  D7FE               	bra	u1537
  1844  000D5C  F000               	nop	
  1845  000D5E                     
  1846                           ;lcd.c: 116:     PORTCbits.RC1 = 0;
  1847  000D5E  9282               	bcf	130,1,c	;volatile
  1848  000D60  0012               	return		;funcret
  1849  000D62                     __end_of_LCDWriteNibble:
  1850                           	opt callstack 0
  1851                           
  1852 ;; *************** function _tcInt *****************
  1853 ;; Defined at:
  1854 ;;		line 394 in file "newmain.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  i               2   60[BANK0 ] int 
  1859 ;;  str1           16   41[BANK0 ] unsigned char [16]
  1860 ;;  str2           16   25[BANK0 ] unsigned char [16]
  1861 ;;  timer0Reload    2   58[BANK0 ] unsigned int 
  1862 ;;  noDigits        1   57[BANK0 ] unsigned char 
  1863 ;;  duty            1   62[BANK0 ] unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1873 ;;      Params:         0       0       0       0
  1874 ;;      Locals:         0      38       0       0
  1875 ;;      Temps:          0      15       0       0
  1876 ;;      Totals:         0      53       0       0
  1877 ;;Total ram usage:       53 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    8
  1880 ;; This function calls:
  1881 ;;		_LCDPutStr
  1882 ;;		___lwdiv
  1883 ;;		___lwmod
  1884 ;;		_sprintf
  1885 ;;		i1_LCDPutChar
  1886 ;;		i1_LCDPutCmd
  1887 ;; This function is called by:
  1888 ;;		Interrupt level 1
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	intcodelo
  1893  000018                     __pintcodelo:
  1894                           	opt callstack 0
  1895  000018                     _tcInt:
  1896                           	opt callstack 19
  1897                           
  1898                           ;incstack = 0
  1899  000018  805F               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1900  00001A  CFD8 F06C          	movff	status,??_tcInt+2
  1901  00001E  CFE8 F06D          	movff	wreg,??_tcInt+3
  1902  000022  CFE0 F06E          	movff	bsr,??_tcInt+4
  1903  000026  CFE1 F06F          	movff	fsr1l,??_tcInt+5
  1904  00002A  CFE2 F070          	movff	fsr1h,??_tcInt+6
  1905  00002E  CFD9 F071          	movff	fsr2l,??_tcInt+7
  1906  000032  CFDA F072          	movff	fsr2h,??_tcInt+8
  1907  000036  CFF3 F073          	movff	prodl,??_tcInt+9
  1908  00003A  CFF4 F074          	movff	prodh,??_tcInt+10
  1909  00003E  CFF6 F075          	movff	tblptrl,??_tcInt+11
  1910  000042  CFF7 F076          	movff	tblptrh,??_tcInt+12
  1911  000046  CFF8 F077          	movff	tblptru,??_tcInt+13
  1912  00004A  CFF5 F078          	movff	tablat,??_tcInt+14
  1913  00004E                     
  1914                           ;newmain.c: 398:     if (PIR1bits.ADIF) {
  1915  00004E  AC9E               	btfss	158,6,c	;volatile
  1916  000050  EF2C  F000         	goto	i1u126_21
  1917  000054  EF2E  F000         	goto	i1u126_20
  1918  000058                     i1u126_21:
  1919  000058  EF33  F000         	goto	i1l159
  1920  00005C                     i1u126_20:
  1921  00005C                     
  1922                           ;newmain.c: 399:         PIR1bits.ADIF = 0;
  1923  00005C  9C9E               	bcf	158,6,c	;volatile
  1924  00005E                     
  1925                           ;newmain.c: 404:         if (PrevADRESH != ADRESH) {
  1926  00005E  50C4               	movf	196,w,c	;volatile
  1927  000060                     
  1928                           ;newmain.c: 408:         PrevADRESH = ADRESH;
  1929  000060  CFC4 F0DB          	movff	4036,_PrevADRESH	;volatile
  1930                           
  1931                           ;newmain.c: 414:         __nop();
  1932  000064  F000               	nop	
  1933  000066                     i1l159:
  1934                           
  1935                           ;newmain.c: 417:     if (INTCONbits.T0IF) {
  1936  000066  A4F2               	btfss	242,2,c	;volatile
  1937  000068  EF38  F000         	goto	i1u127_21
  1938  00006C  EF3A  F000         	goto	i1u127_20
  1939  000070                     i1u127_21:
  1940  000070  EFC7  F000         	goto	i1l2105
  1941  000074                     i1u127_20:
  1942  000074                     
  1943                           ;newmain.c: 418:         INTCONbits.T0IF = 0;
  1944  000074  94F2               	bcf	242,2,c	;volatile
  1945  000076                     
  1946                           ;newmain.c: 419:         if (sinusIndex1 == 255) {
  1947  000076  0100               	movlb	0	; () banked
  1948  000078  29AE               	incf	_sinusIndex1& (0+255),w,b	;volatile
  1949  00007A  A4D8               	btfss	status,2,c
  1950  00007C  EF42  F000         	goto	i1u128_21
  1951  000080  EF44  F000         	goto	i1u128_20
  1952  000084                     i1u128_21:
  1953  000084  EF46  F000         	goto	i1l2071
  1954  000088                     i1u128_20:
  1955  000088                     
  1956                           ; BSR set to: 0
  1957                           ;newmain.c: 420:             sinusIndex1 = 0;
  1958  000088  0E00               	movlw	0
  1959  00008A  6FAE               	movwf	_sinusIndex1& (0+255),b	;volatile
  1960  00008C                     i1l2071:
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;newmain.c: 422:         if (sinusIndex2 == 255) {
  1964  00008C  29DD               	incf	_sinusIndex2& (0+255),w,b	;volatile
  1965  00008E  A4D8               	btfss	status,2,c
  1966  000090  EF4C  F000         	goto	i1u129_21
  1967  000094  EF4E  F000         	goto	i1u129_20
  1968  000098                     i1u129_21:
  1969  000098  EF50  F000         	goto	i1l2075
  1970  00009C                     i1u129_20:
  1971  00009C                     
  1972                           ; BSR set to: 0
  1973                           ;newmain.c: 423:             sinusIndex2 = 0;
  1974  00009C  0E00               	movlw	0
  1975  00009E  6FDD               	movwf	_sinusIndex2& (0+255),b	;volatile
  1976  0000A0                     i1l2075:
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;newmain.c: 425:         if (sinusIndex3 == 255) {
  1980  0000A0  29DC               	incf	_sinusIndex3& (0+255),w,b	;volatile
  1981  0000A2  A4D8               	btfss	status,2,c
  1982  0000A4  EF56  F000         	goto	i1u130_21
  1983  0000A8  EF58  F000         	goto	i1u130_20
  1984  0000AC                     i1u130_21:
  1985  0000AC  EF5A  F000         	goto	i1l2079
  1986  0000B0                     i1u130_20:
  1987  0000B0                     
  1988                           ; BSR set to: 0
  1989                           ;newmain.c: 426:             sinusIndex3 = 0;
  1990  0000B0  0E00               	movlw	0
  1991  0000B2  6FDC               	movwf	_sinusIndex3& (0+255),b	;volatile
  1992  0000B4                     i1l2079:
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;newmain.c: 430:         unsigned char duty = (sinusValues[sinusIndex1] >> 8);
  1996  0000B4  51AE               	movf	_sinusIndex1& (0+255),w,b	;volatile
  1997  0000B6  0D02               	mullw	2
  1998  0000B8  0E29               	movlw	low _sinusValues
  1999  0000BA  24F3               	addwf	243,w,c
  2000  0000BC  6EF6               	movwf	tblptrl,c
  2001  0000BE  0E3D               	movlw	high _sinusValues
  2002  0000C0  20F4               	addwfc	244,w,c
  2003  0000C2  6EF7               	movwf	tblptrh,c
  2004  0000C4                     	if	0	;There are less than 3 active tblptr bytes
  2005  0000C4                     	endif
  2006  0000C4  0009               	tblrd		*+
  2007  0000C6  CFF5 F06A          	movff	tablat,??_tcInt
  2008  0000CA  0009               	tblrd		*+
  2009  0000CC  CFF5 F06B          	movff	tablat,??_tcInt+1
  2010  0000D0  C06B  F06A         	movff	??_tcInt+1,??_tcInt
  2011  0000D4  6B6B               	clrf	(??_tcInt+1)& (0+255),b
  2012  0000D6  BF6A               	btfsc	??_tcInt& (0+255),7,b
  2013  0000D8  696B               	setf	(??_tcInt+1)& (0+255),b
  2014  0000DA  516A               	movf	??_tcInt& (0+255),w,b
  2015  0000DC  6F9E               	movwf	tcInt@duty& (0+255),b
  2016  0000DE                     
  2017                           ; BSR set to: 0
  2018                           ;newmain.c: 431:         PDC0H = duty;
  2019  0000DE  C09E  FF78         	movff	tcInt@duty,3960	;volatile
  2020  0000E2                     
  2021                           ; BSR set to: 0
  2022                           ;newmain.c: 432:         PDC0L = sinusValues[sinusIndex1];
  2023  0000E2  51AE               	movf	_sinusIndex1& (0+255),w,b	;volatile
  2024  0000E4  0D02               	mullw	2
  2025  0000E6  0E29               	movlw	low _sinusValues
  2026  0000E8  24F3               	addwf	243,w,c
  2027  0000EA  6EF6               	movwf	tblptrl,c
  2028  0000EC  0E3D               	movlw	high _sinusValues
  2029  0000EE  20F4               	addwfc	244,w,c
  2030  0000F0  6EF7               	movwf	tblptrh,c
  2031  0000F2                     	if	0	;There are less than 3 active tblptr bytes
  2032  0000F2                     	endif
  2033  0000F2  0008               	tblrd		*
  2034  0000F4  CFF5 FF79          	movff	tablat,3961	;volatile
  2035  0000F8                     
  2036                           ; BSR set to: 0
  2037                           ;newmain.c: 434:         duty = (sinusValues[sinusIndex2] >> 8);
  2038  0000F8  51DD               	movf	_sinusIndex2& (0+255),w,b	;volatile
  2039  0000FA  0D02               	mullw	2
  2040  0000FC  0E29               	movlw	low _sinusValues
  2041  0000FE  24F3               	addwf	243,w,c
  2042  000100  6EF6               	movwf	tblptrl,c
  2043  000102  0E3D               	movlw	high _sinusValues
  2044  000104  20F4               	addwfc	244,w,c
  2045  000106  6EF7               	movwf	tblptrh,c
  2046  000108                     	if	0	;There are less than 3 active tblptr bytes
  2047  000108                     	endif
  2048  000108  0009               	tblrd		*+
  2049  00010A  CFF5 F06A          	movff	tablat,??_tcInt
  2050  00010E  0009               	tblrd		*+
  2051  000110  CFF5 F06B          	movff	tablat,??_tcInt+1
  2052  000114  C06B  F06A         	movff	??_tcInt+1,??_tcInt
  2053  000118  6B6B               	clrf	(??_tcInt+1)& (0+255),b
  2054  00011A  BF6A               	btfsc	??_tcInt& (0+255),7,b
  2055  00011C  696B               	setf	(??_tcInt+1)& (0+255),b
  2056  00011E  516A               	movf	??_tcInt& (0+255),w,b
  2057  000120  6F9E               	movwf	tcInt@duty& (0+255),b
  2058  000122                     
  2059                           ; BSR set to: 0
  2060                           ;newmain.c: 435:         PDC1H = duty;
  2061  000122  C09E  FF76         	movff	tcInt@duty,3958	;volatile
  2062  000126                     
  2063                           ; BSR set to: 0
  2064                           ;newmain.c: 436:         PDC1L = sinusValues[sinusIndex2];
  2065  000126  51DD               	movf	_sinusIndex2& (0+255),w,b	;volatile
  2066  000128  0D02               	mullw	2
  2067  00012A  0E29               	movlw	low _sinusValues
  2068  00012C  24F3               	addwf	243,w,c
  2069  00012E  6EF6               	movwf	tblptrl,c
  2070  000130  0E3D               	movlw	high _sinusValues
  2071  000132  20F4               	addwfc	244,w,c
  2072  000134  6EF7               	movwf	tblptrh,c
  2073  000136                     	if	0	;There are less than 3 active tblptr bytes
  2074  000136                     	endif
  2075  000136  0008               	tblrd		*
  2076  000138  CFF5 FF77          	movff	tablat,3959	;volatile
  2077  00013C                     
  2078                           ; BSR set to: 0
  2079                           ;newmain.c: 438:         duty = (sinusValues[sinusIndex3] >> 8);
  2080  00013C  51DC               	movf	_sinusIndex3& (0+255),w,b	;volatile
  2081  00013E  0D02               	mullw	2
  2082  000140  0E29               	movlw	low _sinusValues
  2083  000142  24F3               	addwf	243,w,c
  2084  000144  6EF6               	movwf	tblptrl,c
  2085  000146  0E3D               	movlw	high _sinusValues
  2086  000148  20F4               	addwfc	244,w,c
  2087  00014A  6EF7               	movwf	tblptrh,c
  2088  00014C                     	if	0	;There are less than 3 active tblptr bytes
  2089  00014C                     	endif
  2090  00014C  0009               	tblrd		*+
  2091  00014E  CFF5 F06A          	movff	tablat,??_tcInt
  2092  000152  0009               	tblrd		*+
  2093  000154  CFF5 F06B          	movff	tablat,??_tcInt+1
  2094  000158  C06B  F06A         	movff	??_tcInt+1,??_tcInt
  2095  00015C  6B6B               	clrf	(??_tcInt+1)& (0+255),b
  2096  00015E  BF6A               	btfsc	??_tcInt& (0+255),7,b
  2097  000160  696B               	setf	(??_tcInt+1)& (0+255),b
  2098  000162  516A               	movf	??_tcInt& (0+255),w,b
  2099  000164  6F9E               	movwf	tcInt@duty& (0+255),b
  2100  000166                     
  2101                           ; BSR set to: 0
  2102                           ;newmain.c: 439:         PDC2H = duty;
  2103  000166  C09E  FF74         	movff	tcInt@duty,3956	;volatile
  2104  00016A                     
  2105                           ; BSR set to: 0
  2106                           ;newmain.c: 440:         PDC2L = sinusValues[sinusIndex3];
  2107  00016A  51DC               	movf	_sinusIndex3& (0+255),w,b	;volatile
  2108  00016C  0D02               	mullw	2
  2109  00016E  0E29               	movlw	low _sinusValues
  2110  000170  24F3               	addwf	243,w,c
  2111  000172  6EF6               	movwf	tblptrl,c
  2112  000174  0E3D               	movlw	high _sinusValues
  2113  000176  20F4               	addwfc	244,w,c
  2114  000178  6EF7               	movwf	tblptrh,c
  2115  00017A                     	if	0	;There are less than 3 active tblptr bytes
  2116  00017A                     	endif
  2117  00017A  0008               	tblrd		*
  2118  00017C  CFF5 FF75          	movff	tablat,3957	;volatile
  2119  000180                     
  2120                           ; BSR set to: 0
  2121                           ;newmain.c: 443:         TMR0 = timer0ReloadValue;
  2122  000180  C0D1  FFD6         	movff	_timer0ReloadValue,4054	;volatile
  2123  000184  C0D2  FFD7         	movff	_timer0ReloadValue+1,4055	;volatile
  2124  000188                     
  2125                           ; BSR set to: 0
  2126                           ;newmain.c: 448:         sinusIndex1++;
  2127  000188  2BAE               	incf	_sinusIndex1& (0+255),f,b	;volatile
  2128  00018A                     
  2129                           ; BSR set to: 0
  2130                           ;newmain.c: 449:         sinusIndex2++;
  2131  00018A  2BDD               	incf	_sinusIndex2& (0+255),f,b	;volatile
  2132  00018C                     
  2133                           ; BSR set to: 0
  2134                           ;newmain.c: 450:         sinusIndex3++;
  2135  00018C  2BDC               	incf	_sinusIndex3& (0+255),f,b	;volatile
  2136  00018E                     i1l2105:
  2137                           
  2138                           ;newmain.c: 453:     if (PIR1bits.TMR1IF) {
  2139  00018E  A09E               	btfss	158,0,c	;volatile
  2140  000190  EFCC  F000         	goto	i1u131_21
  2141  000194  EFCE  F000         	goto	i1u131_20
  2142  000198                     i1u131_21:
  2143  000198  EF7B  F001         	goto	i1l165
  2144  00019C                     i1u131_20:
  2145  00019C                     
  2146                           ;newmain.c: 454:         PIR1bits.TMR1IF = 0;
  2147  00019C  909E               	bcf	158,0,c	;volatile
  2148  00019E                     
  2149                           ;newmain.c: 455:         TMR1 = 0;
  2150  00019E  0E00               	movlw	0
  2151  0001A0  6ECF               	movwf	207,c	;volatile
  2152  0001A2  0E00               	movlw	0
  2153  0001A4  6ECE               	movwf	206,c	;volatile
  2154  0001A6                     
  2155                           ;newmain.c: 456:         refreshTime++;
  2156  0001A6  0100               	movlb	0	; () banked
  2157  0001A8  2BAC               	incf	_refreshTime& (0+255),f,b	;volatile
  2158  0001AA                     
  2159                           ; BSR set to: 0
  2160                           ;newmain.c: 457:         if (refreshTime == 5) {
  2161  0001AA  0E05               	movlw	5
  2162  0001AC  19AC               	xorwf	_refreshTime& (0+255),w,b	;volatile
  2163  0001AE  A4D8               	btfss	status,2,c
  2164  0001B0  EFDC  F000         	goto	i1u132_21
  2165  0001B4  EFDE  F000         	goto	i1u132_20
  2166  0001B8                     i1u132_21:
  2167  0001B8  EF7B  F001         	goto	i1l165
  2168  0001BC                     i1u132_20:
  2169  0001BC                     
  2170                           ; BSR set to: 0
  2171                           ;newmain.c: 458:             refreshTime = 0;
  2172  0001BC  0E00               	movlw	0
  2173  0001BE  6FAC               	movwf	_refreshTime& (0+255),b	;volatile
  2174  0001C0                     
  2175                           ; BSR set to: 0
  2176                           ;newmain.c: 459:             if (prevAdcPercent != adcPercent || prevTimer0ReloadValue !
      +                          = timer0ReloadValue) {
  2177  0001C0  51D9               	movf	_adcPercent& (0+255),w,b	;volatile
  2178  0001C2  19D7               	xorwf	_prevAdcPercent& (0+255),w,b	;volatile
  2179  0001C4  E107               	bnz	i1u133_21
  2180  0001C6  51DA               	movf	(_adcPercent+1)& (0+255),w,b	;volatile
  2181  0001C8  19D8               	xorwf	(_prevAdcPercent+1)& (0+255),w,b	;volatile
  2182  0001CA  A4D8               	btfss	status,2,c
  2183  0001CC  EFEA  F000         	goto	i1u133_21
  2184  0001D0  EFEC  F000         	goto	i1u133_20
  2185  0001D4                     i1u133_21:
  2186  0001D4  EFF8  F000         	goto	i1l2121
  2187  0001D8                     i1u133_20:
  2188  0001D8                     
  2189                           ; BSR set to: 0
  2190  0001D8  51D1               	movf	_timer0ReloadValue& (0+255),w,b	;volatile
  2191  0001DA  19CF               	xorwf	_prevTimer0ReloadValue& (0+255),w,b	;volatile
  2192  0001DC  E109               	bnz	i1u134_20
  2193  0001DE  51D2               	movf	(_timer0ReloadValue+1)& (0+255),w,b	;volatile
  2194  0001E0  19D0               	xorwf	(_prevTimer0ReloadValue+1)& (0+255),w,b	;volatile
  2195  0001E2  B4D8               	btfsc	status,2,c
  2196  0001E4  EFF6  F000         	goto	i1u134_21
  2197  0001E8  EFF8  F000         	goto	i1u134_20
  2198  0001EC                     i1u134_21:
  2199  0001EC  EF73  F001         	goto	i1l167
  2200  0001F0                     i1u134_20:
  2201  0001F0                     i1l2121:
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;newmain.c: 461:                 char str1[16];;newmain.c: 462:                 char str
      +                          2[16];;newmain.c: 464:                 LCDPutCmd(0x01);
  2205  0001F0  0E01               	movlw	1
  2206  0001F2  EC96  F008         	call	i1_LCDPutCmd
  2207  0001F6                     
  2208                           ;newmain.c: 465:                 sprintf(str1, "%d", adcPercent);
  2209  0001F6  0E89               	movlw	low tcInt@str1
  2210  0001F8  6E58               	movwf	sprintf@s^0,c
  2211  0001FA  0E00               	movlw	high tcInt@str1
  2212  0001FC  6E59               	movwf	(sprintf@s+1)^0,c
  2213  0001FE  0EFB               	movlw	low STR_1
  2214  000200  6E5A               	movwf	sprintf@fmt^0,c
  2215  000202  0E3F               	movlw	high STR_1
  2216  000204  6E5B               	movwf	(sprintf@fmt+1)^0,c
  2217  000206  C0D9  F05C         	movff	_adcPercent,?_sprintf+4	;volatile
  2218  00020A  C0DA  F05D         	movff	_adcPercent+1,?_sprintf+5	;volatile
  2219  00020E  ECC0  F007         	call	_sprintf	;wreg free
  2220  000212                     
  2221                           ;newmain.c: 466:                 LCDPutStr(str1);
  2222  000212  0E89               	movlw	low tcInt@str1
  2223  000214  6E06               	movwf	LCDPutStr@str^0,c
  2224  000216  0E00               	movlw	high tcInt@str1
  2225  000218  6E07               	movwf	(LCDPutStr@str+1)^0,c
  2226  00021A  ECB5  F008         	call	_LCDPutStr	;wreg free
  2227  00021E                     
  2228                           ;newmain.c: 467:                 LCDPutChar(' ');
  2229  00021E  0E20               	movlw	32
  2230  000220  EC08  F009         	call	i1_LCDPutChar
  2231  000224                     
  2232                           ;newmain.c: 469:                 unsigned int timer0ReloadValueCopy = timer0ReloadValue;
  2233  000224  C0D1  F09A         	movff	_timer0ReloadValue,tcInt@timer0ReloadValueCopy	;volatile
  2234  000228  C0D2  F09B         	movff	_timer0ReloadValue+1,tcInt@timer0ReloadValueCopy+1	;volatile
  2235  00022C                     
  2236                           ;newmain.c: 470:                 char noDigits = 0;
  2237  00022C  0E00               	movlw	0
  2238  00022E  0100               	movlb	0	; () banked
  2239  000230  6F99               	movwf	tcInt@noDigits& (0+255),b
  2240                           
  2241                           ;newmain.c: 471:                 while (timer0ReloadValueCopy > 0) {
  2242  000232  EF3D  F001         	goto	i1l2139
  2243  000236                     i1l2133:
  2244                           
  2245                           ; BSR set to: 0
  2246                           ;newmain.c: 472:                     str2[noDigits] = timer0ReloadValueCopy % 10;
  2247  000236  0E79               	movlw	low tcInt@str2
  2248  000238  2599               	addwf	tcInt@noDigits& (0+255),w,b
  2249  00023A  6ED9               	movwf	fsr2l,c
  2250  00023C  6ADA               	clrf	fsr2h,c
  2251  00023E  0E00               	movlw	high tcInt@str2
  2252  000240  22DA               	addwfc	fsr2h,f,c
  2253  000242  C09A  F001         	movff	tcInt@timer0ReloadValueCopy,___lwmod@dividend
  2254  000246  C09B  F002         	movff	tcInt@timer0ReloadValueCopy+1,___lwmod@dividend+1
  2255  00024A  0E00               	movlw	0
  2256  00024C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2257  00024E  0E0A               	movlw	10
  2258  000250  6E03               	movwf	___lwmod@divisor^0,c
  2259  000252  EC34  F007         	call	___lwmod	;wreg free
  2260  000256  5001               	movf	?___lwmod^0,w,c
  2261  000258  6EDF               	movwf	indf2,c
  2262  00025A                     
  2263                           ;newmain.c: 473:                     timer0ReloadValueCopy /= 10;
  2264  00025A  C09A  F001         	movff	tcInt@timer0ReloadValueCopy,___lwdiv@dividend
  2265  00025E  C09B  F002         	movff	tcInt@timer0ReloadValueCopy+1,___lwdiv@dividend+1
  2266  000262  0E00               	movlw	0
  2267  000264  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2268  000266  0E0A               	movlw	10
  2269  000268  6E03               	movwf	___lwdiv@divisor^0,c
  2270  00026A  ECFA  F006         	call	___lwdiv	;wreg free
  2271  00026E  C001  F09A         	movff	?___lwdiv,tcInt@timer0ReloadValueCopy
  2272  000272  C002  F09B         	movff	?___lwdiv+1,tcInt@timer0ReloadValueCopy+1
  2273  000276                     
  2274                           ;newmain.c: 474:                     noDigits++;
  2275  000276  0100               	movlb	0	; () banked
  2276  000278  2B99               	incf	tcInt@noDigits& (0+255),f,b
  2277  00027A                     i1l2139:
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;newmain.c: 471:                 while (timer0ReloadValueCopy > 0) {
  2281  00027A  519A               	movf	tcInt@timer0ReloadValueCopy& (0+255),w,b
  2282  00027C  119B               	iorwf	(tcInt@timer0ReloadValueCopy+1)& (0+255),w,b
  2283  00027E  A4D8               	btfss	status,2,c
  2284  000280  EF44  F001         	goto	i1u135_21
  2285  000284  EF46  F001         	goto	i1u135_20
  2286  000288                     i1u135_21:
  2287  000288  EF1B  F001         	goto	i1l2133
  2288  00028C                     i1u135_20:
  2289  00028C                     
  2290                           ; BSR set to: 0
  2291                           ;newmain.c: 476:                 for (int i = noDigits - 1; i >= 0; i--) {
  2292  00028C  0EFF               	movlw	255
  2293  00028E  2599               	addwf	tcInt@noDigits& (0+255),w,b
  2294  000290  6F9C               	movwf	tcInt@i& (0+255),b
  2295  000292  6B9D               	clrf	(tcInt@i+1)& (0+255),b
  2296  000294  0EFF               	movlw	255
  2297  000296  239D               	addwfc	(tcInt@i+1)& (0+255),f,b
  2298  000298  BF9D               	btfsc	(tcInt@i+1)& (0+255),7,b
  2299  00029A  EF53  F001         	goto	i1u136_20
  2300  00029E  EF51  F001         	goto	i1u136_21
  2301  0002A2                     i1u136_21:
  2302  0002A2  EF55  F001         	goto	i1l2145
  2303  0002A6                     i1u136_20:
  2304  0002A6  EF73  F001         	goto	i1l167
  2305  0002AA                     i1l2145:
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;newmain.c: 477:                     LCDPutChar(digits[str2[i]]);
  2309  0002AA  0E79               	movlw	low tcInt@str2
  2310  0002AC  259C               	addwf	tcInt@i& (0+255),w,b
  2311  0002AE  6ED9               	movwf	fsr2l,c
  2312  0002B0  0E00               	movlw	high tcInt@str2
  2313  0002B2  219D               	addwfc	(tcInt@i+1)& (0+255),w,b
  2314  0002B4  6EDA               	movwf	fsr2h,c
  2315  0002B6  50DF               	movf	indf2,w,c
  2316  0002B8  6F6A               	movwf	??_tcInt& (0+255),b
  2317  0002BA  6B6B               	clrf	(??_tcInt+1)& (0+255),b
  2318  0002BC  0EF1               	movlw	low _digits
  2319  0002BE  256A               	addwf	??_tcInt& (0+255),w,b
  2320  0002C0  6EF6               	movwf	tblptrl,c
  2321  0002C2  0E3F               	movlw	high _digits
  2322  0002C4  216B               	addwfc	(??_tcInt+1)& (0+255),w,b
  2323  0002C6  6EF7               	movwf	tblptrh,c
  2324  0002C8                     	if	0	;There are less than 3 active tblptr bytes
  2325  0002C8                     	endif
  2326  0002C8  0008               	tblrd		*
  2327  0002CA  50F5               	movf	tablat,w,c
  2328  0002CC  EC08  F009         	call	i1_LCDPutChar
  2329  0002D0                     
  2330                           ;newmain.c: 478:                 }
  2331  0002D0  0100               	movlb	0	; () banked
  2332  0002D2  079C               	decf	tcInt@i& (0+255),f,b
  2333  0002D4  A0D8               	btfss	status,0,c
  2334  0002D6  079D               	decf	(tcInt@i+1)& (0+255),f,b
  2335  0002D8                     
  2336                           ; BSR set to: 0
  2337  0002D8  BF9D               	btfsc	(tcInt@i+1)& (0+255),7,b
  2338  0002DA  EF73  F001         	goto	i1u137_20
  2339  0002DE  EF71  F001         	goto	i1u137_21
  2340  0002E2                     i1u137_21:
  2341  0002E2  EF55  F001         	goto	i1l2145
  2342  0002E6                     i1u137_20:
  2343  0002E6                     i1l167:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;newmain.c: 482:             prevAdcPercent = adcPercent;
  2347  0002E6  C0D9  F0D7         	movff	_adcPercent,_prevAdcPercent	;volatile
  2348  0002EA  C0DA  F0D8         	movff	_adcPercent+1,_prevAdcPercent+1	;volatile
  2349                           
  2350                           ;newmain.c: 483:             prevTimer0ReloadValue = timer0ReloadValue;
  2351  0002EE  C0D1  F0CF         	movff	_timer0ReloadValue,_prevTimer0ReloadValue	;volatile
  2352  0002F2  C0D2  F0D0         	movff	_timer0ReloadValue+1,_prevTimer0ReloadValue+1	;volatile
  2353  0002F6                     i1l165:
  2354                           
  2355                           ;newmain.c: 487:     if (PIR3bits.TMR5IF) {
  2356  0002F6  A0A4               	btfss	164,0,c	;volatile
  2357  0002F8  EF80  F001         	goto	i1u138_21
  2358  0002FC  EF82  F001         	goto	i1u138_20
  2359  000300                     i1u138_21:
  2360  000300  EFBF  F001         	goto	i1l180
  2361  000304                     i1u138_20:
  2362  000304                     
  2363                           ;newmain.c: 488:         PIR3bits.TMR5IF = 0;
  2364  000304  90A4               	bcf	164,0,c	;volatile
  2365                           
  2366                           ;newmain.c: 489:         TMR5 = timer5ReloadValue;
  2367  000306  C0D3  FF87         	movff	_timer5ReloadValue,3975	;volatile
  2368  00030A  C0D4  FF88         	movff	_timer5ReloadValue+1,3976	;volatile
  2369  00030E                     
  2370                           ;newmain.c: 491:         if (timer5OverflowCount == 2) {
  2371  00030E  0E02               	movlw	2
  2372  000310  0100               	movlb	0	; () banked
  2373  000312  19AD               	xorwf	_timer5OverflowCount& (0+255),w,b	;volatile
  2374  000314  A4D8               	btfss	status,2,c
  2375  000316  EF8F  F001         	goto	i1u139_21
  2376  00031A  EF91  F001         	goto	i1u139_20
  2377  00031E                     i1u139_21:
  2378  00031E  EFBE  F001         	goto	i1l2167
  2379  000322                     i1u139_20:
  2380  000322                     
  2381                           ; BSR set to: 0
  2382                           ;newmain.c: 492:             timer5OverflowCount = 0;
  2383  000322  0E00               	movlw	0
  2384  000324  6FAD               	movwf	_timer5OverflowCount& (0+255),b	;volatile
  2385  000326                     
  2386                           ; BSR set to: 0
  2387                           ;newmain.c: 497:             if (currentPreloadIndex < adcPercent) {
  2388  000326  51AB               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  2389  000328  6F6A               	movwf	??_tcInt& (0+255),b
  2390  00032A  6B6B               	clrf	(??_tcInt+1)& (0+255),b
  2391  00032C  51D9               	movf	_adcPercent& (0+255),w,b	;volatile
  2392  00032E  5D6A               	subwf	??_tcInt& (0+255),w,b
  2393  000330  51DA               	movf	(_adcPercent+1)& (0+255),w,b	;volatile
  2394  000332  596B               	subwfb	(??_tcInt+1)& (0+255),w,b
  2395  000334  B0D8               	btfsc	status,0,c
  2396  000336  EF9F  F001         	goto	i1u140_21
  2397  00033A  EFA1  F001         	goto	i1u140_20
  2398  00033E                     i1u140_21:
  2399  00033E  EFA4  F001         	goto	i1l2161
  2400  000342                     i1u140_20:
  2401  000342                     
  2402                           ; BSR set to: 0
  2403                           ;newmain.c: 498:                 currentPreloadIndex++;
  2404  000342  2BAB               	incf	_currentPreloadIndex& (0+255),f,b	;volatile
  2405                           
  2406                           ;newmain.c: 499:             } else if (currentPreloadIndex > adcPercent) {
  2407  000344  EFB0  F001         	goto	i1l2165
  2408  000348                     i1l2161:
  2409                           
  2410                           ; BSR set to: 0
  2411  000348  51AB               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  2412  00034A  5DD9               	subwf	_adcPercent& (0+255),w,b	;volatile
  2413  00034C  0E00               	movlw	0
  2414  00034E  59DA               	subwfb	(_adcPercent+1)& (0+255),w,b	;volatile
  2415  000350  B0D8               	btfsc	status,0,c
  2416  000352  EFAD  F001         	goto	i1u141_21
  2417  000356  EFAF  F001         	goto	i1u141_20
  2418  00035A                     i1u141_21:
  2419  00035A  EFB0  F001         	goto	i1l2165
  2420  00035E                     i1u141_20:
  2421  00035E                     
  2422                           ; BSR set to: 0
  2423                           ;newmain.c: 500:                 currentPreloadIndex--;
  2424  00035E  07AB               	decf	_currentPreloadIndex& (0+255),f,b	;volatile
  2425  000360                     i1l2165:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;newmain.c: 502:             timer0ReloadValue = timer0PreloadValues[currentPreloadIndex
      +                          ];
  2429  000360  51AB               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  2430  000362  0D02               	mullw	2
  2431  000364  0E29               	movlw	low _timer0PreloadValues
  2432  000366  24F3               	addwf	243,w,c
  2433  000368  6EF6               	movwf	tblptrl,c
  2434  00036A  0E3F               	movlw	high _timer0PreloadValues
  2435  00036C  20F4               	addwfc	244,w,c
  2436  00036E  6EF7               	movwf	tblptrh,c
  2437  000370                     	if	0	;There are less than 3 active tblptr bytes
  2438  000370                     	endif
  2439  000370  0009               	tblrd		*+
  2440  000372  CFF5 F0D1          	movff	tablat,_timer0ReloadValue	;volatile
  2441  000376  000A               	tblrd		*-
  2442  000378  CFF5 F0D2          	movff	tablat,_timer0ReloadValue+1	;volatile
  2443  00037C                     i1l2167:
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;newmain.c: 504:         timer5OverflowCount++;
  2447  00037C  2BAD               	incf	_timer5OverflowCount& (0+255),f,b	;volatile
  2448  00037E                     i1l180:
  2449  00037E  C078  FFF5         	movff	??_tcInt+14,tablat
  2450  000382  C077  FFF8         	movff	??_tcInt+13,tblptru
  2451  000386  C076  FFF7         	movff	??_tcInt+12,tblptrh
  2452  00038A  C075  FFF6         	movff	??_tcInt+11,tblptrl
  2453  00038E  C074  FFF4         	movff	??_tcInt+10,prodh
  2454  000392  C073  FFF3         	movff	??_tcInt+9,prodl
  2455  000396  C072  FFDA         	movff	??_tcInt+8,fsr2h
  2456  00039A  C071  FFD9         	movff	??_tcInt+7,fsr2l
  2457  00039E  C070  FFE2         	movff	??_tcInt+6,fsr1h
  2458  0003A2  C06F  FFE1         	movff	??_tcInt+5,fsr1l
  2459  0003A6  C06E  FFE0         	movff	??_tcInt+4,bsr
  2460  0003AA  C06D  FFE8         	movff	??_tcInt+3,wreg
  2461  0003AE  C06C  FFD8         	movff	??_tcInt+2,status
  2462  0003B2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2463  0003B4  0010               	retfie	
  2464  0003B6                     __end_of_tcInt:
  2465                           	opt callstack 0
  2466                           
  2467 ;; *************** function i1_LCDPutCmd *****************
  2468 ;; Defined at:
  2469 ;;		line 132 in file "lcd.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  ch              1    wreg     unsigned char 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  ch              1    4[COMRAM] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2483 ;;      Params:         0       0       0       0
  2484 ;;      Locals:         1       0       0       0
  2485 ;;      Temps:          1       0       0       0
  2486 ;;      Totals:         2       0       0       0
  2487 ;;Total ram usage:        2 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    1
  2490 ;; This function calls:
  2491 ;;		i1_LCDWriteNibble
  2492 ;; This function is called by:
  2493 ;;		_tcInt
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text11
  2498  00112C                     __ptext11:
  2499                           	opt callstack 0
  2500  00112C                     i1_LCDPutCmd:
  2501                           	opt callstack 25
  2502                           
  2503                           ;incstack = 0
  2504                           ;i1LCDPutCmd@ch stored from wreg
  2505  00112C  6E05               	movwf	i1LCDPutCmd@ch^0,c
  2506  00112E                     
  2507                           ;lcd.c: 133:     _delay((unsigned long)((5)*(40000000/4000.0)));
  2508  00112E  0E41               	movlw	65
  2509  001130  6E04               	movwf	??i1_LCDPutCmd^0,c
  2510  001132  0EEE               	movlw	238
  2511  001134                     i1u154_27:
  2512  001134  2EE8               	decfsz	wreg,f,c
  2513  001136  D7FE               	bra	i1u154_27
  2514  001138  2E04               	decfsz	??i1_LCDPutCmd^0,f,c
  2515  00113A  D7FC               	bra	i1u154_27
  2516  00113C  F000 F000          	nop2	
  2517  001140                     
  2518                           ;lcd.c: 136:     LCDWriteNibble(ch, 0);
  2519  001140  0E00               	movlw	0
  2520  001142  6E01               	movwf	i1LCDWriteNibble@rs^0,c
  2521  001144  5005               	movf	i1LCDPutCmd@ch^0,w,c
  2522  001146  ECB1  F006         	call	i1_LCDWriteNibble
  2523  00114A                     
  2524                           ;lcd.c: 139:     ch = (ch << 4);
  2525  00114A  3805               	swapf	i1LCDPutCmd@ch^0,w,c
  2526  00114C  0BF0               	andlw	240
  2527  00114E  6E05               	movwf	i1LCDPutCmd@ch^0,c
  2528  001150                     
  2529                           ;lcd.c: 141:     _delay((unsigned long)((1)*(40000000/4000.0)));
  2530  001150  0E0D               	movlw	13
  2531  001152  6E04               	movwf	??i1_LCDPutCmd^0,c
  2532  001154  0EFC               	movlw	252
  2533  001156                     i1u155_27:
  2534  001156  2EE8               	decfsz	wreg,f,c
  2535  001158  D7FE               	bra	i1u155_27
  2536  00115A  2E04               	decfsz	??i1_LCDPutCmd^0,f,c
  2537  00115C  D7FC               	bra	i1u155_27
  2538  00115E                     
  2539                           ;lcd.c: 144:     LCDWriteNibble(ch, 0);
  2540  00115E  0E00               	movlw	0
  2541  001160  6E01               	movwf	i1LCDWriteNibble@rs^0,c
  2542  001162  5005               	movf	i1LCDPutCmd@ch^0,w,c
  2543  001164  ECB1  F006         	call	i1_LCDWriteNibble
  2544  001168  0012               	return		;funcret
  2545  00116A                     __end_ofi1_LCDPutCmd:
  2546                           	opt callstack 0
  2547                           
  2548 ;; *************** function _sprintf *****************
  2549 ;; Defined at:
  2550 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  s               2   87[COMRAM] PTR unsigned char 
  2553 ;;		 -> tcInt@str1(16), 
  2554 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  2555 ;;		 -> STR_1(3), 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  f               6    4[BANK0 ] struct _IO_FILE
  2558 ;;  ap              2    2[BANK0 ] PTR void [1]
  2559 ;;		 -> ?_sprintf(2), 
  2560 ;;  ret             2    0        int 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  2   87[COMRAM] int 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2570 ;;      Params:         6       0       0       0
  2571 ;;      Locals:         0      10       0       0
  2572 ;;      Temps:          0       0       0       0
  2573 ;;      Totals:         6      10       0       0
  2574 ;;Total ram usage:       16 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    7
  2577 ;; This function calls:
  2578 ;;		_vfprintf
  2579 ;; This function is called by:
  2580 ;;		_tcInt
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text12
  2585  000F80                     __ptext12:
  2586                           	opt callstack 0
  2587  000F80                     _sprintf:
  2588                           	opt callstack 19
  2589  000F80  0E5C               	movlw	low (?_sprintf+4)
  2590  000F82  0100               	movlb	0	; () banked
  2591  000F84  6F62               	movwf	sprintf@ap& (0+255),b
  2592  000F86  0E00               	movlw	high (?_sprintf+4)
  2593  000F88  6F63               	movwf	(sprintf@ap+1)& (0+255),b
  2594  000F8A  C058  F064         	movff	sprintf@s,sprintf@f
  2595  000F8E  C059  F065         	movff	sprintf@s+1,sprintf@f+1
  2596  000F92                     
  2597                           ; BSR set to: 0
  2598  000F92  0E00               	movlw	0
  2599  000F94  6F67               	movwf	(sprintf@f+3)& (0+255),b
  2600  000F96  0E00               	movlw	0
  2601  000F98  6F66               	movwf	(sprintf@f+2)& (0+255),b
  2602  000F9A                     
  2603                           ; BSR set to: 0
  2604  000F9A  0E00               	movlw	0
  2605  000F9C  6F69               	movwf	(sprintf@f+5)& (0+255),b
  2606  000F9E  0E00               	movlw	0
  2607  000FA0  6F68               	movwf	(sprintf@f+4)& (0+255),b
  2608  000FA2                     
  2609                           ; BSR set to: 0
  2610  000FA2  0E64               	movlw	low sprintf@f
  2611  000FA4  6E50               	movwf	vfprintf@fp^0,c
  2612  000FA6  0E00               	movlw	high sprintf@f
  2613  000FA8  6E51               	movwf	(vfprintf@fp+1)^0,c
  2614  000FAA  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  2615  000FAE  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2616  000FB2  0E62               	movlw	low sprintf@ap
  2617  000FB4  6E54               	movwf	vfprintf@ap^0,c
  2618  000FB6  0E00               	movlw	high sprintf@ap
  2619  000FB8  6E55               	movwf	(vfprintf@ap+1)^0,c
  2620  000FBA  EC66  F007         	call	_vfprintf	;wreg free
  2621  000FBE  0100               	movlb	0	; () banked
  2622  000FC0  5166               	movf	(sprintf@f+2)& (0+255),w,b
  2623  000FC2  2458               	addwf	sprintf@s^0,w,c
  2624  000FC4  6ED9               	movwf	fsr2l,c
  2625  000FC6  5167               	movf	(sprintf@f+3)& (0+255),w,b
  2626  000FC8  2059               	addwfc	(sprintf@s+1)^0,w,c
  2627  000FCA  6EDA               	movwf	fsr2h,c
  2628  000FCC  0E00               	movlw	0
  2629  000FCE  6EDF               	movwf	indf2,c
  2630  000FD0                     
  2631                           ; BSR set to: 0
  2632  000FD0  0012               	return		;funcret
  2633  000FD2                     __end_of_sprintf:
  2634                           	opt callstack 0
  2635                           
  2636 ;; *************** function _vfprintf *****************
  2637 ;; Defined at:
  2638 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  2641 ;;		 -> sprintf@f(6), 
  2642 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  2643 ;;		 -> STR_1(3), 
  2644 ;;  ap              2   83[COMRAM] PTR PTR void 
  2645 ;;		 -> sprintf@ap(2), 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  2648 ;;		 -> STR_1(3), 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  2   79[COMRAM] int 
  2651 ;; Registers used:
  2652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2658 ;;      Params:         6       0       0       0
  2659 ;;      Locals:         2       0       0       0
  2660 ;;      Temps:          0       0       0       0
  2661 ;;      Totals:         8       0       0       0
  2662 ;;Total ram usage:        8 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    6
  2665 ;; This function calls:
  2666 ;;		_vfpfcnvrt
  2667 ;; This function is called by:
  2668 ;;		_sprintf
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text13
  2673  000ECC                     __ptext13:
  2674                           	opt callstack 0
  2675  000ECC                     _vfprintf:
  2676                           	opt callstack 19
  2677  000ECC                     
  2678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2679  000ECC  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  2680  000ED0  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2681  000ED4                     
  2682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2683  000ED4  0E00               	movlw	0
  2684  000ED6  0100               	movlb	0	; () banked
  2685  000ED8  6FA4               	movwf	(_nout+1)& (0+255),b
  2686  000EDA  0E00               	movlw	0
  2687  000EDC  6FA3               	movwf	_nout& (0+255),b
  2688                           
  2689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2690  000EDE  EF84  F007         	goto	i1l1899
  2691  000EE2                     i1l1897:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2695  000EE2  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2696  000EE6  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2697  000EEA  0E56               	movlw	low vfprintf@cfmt
  2698  000EEC  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2699  000EEE  0E00               	movlw	high vfprintf@cfmt
  2700  000EF0  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2701  000EF2  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2702  000EF6  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2703  000EFA  EC4E  F003         	call	_vfpfcnvrt	;wreg free
  2704  000EFE  5040               	movf	?_vfpfcnvrt^0,w,c
  2705  000F00  0100               	movlb	0	; () banked
  2706  000F02  27A3               	addwf	_nout& (0+255),f,b
  2707  000F04  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  2708  000F06  23A4               	addwfc	(_nout+1)& (0+255),f,b
  2709  000F08                     i1l1899:
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2713  000F08  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  2714  000F0C  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2715  000F10                     	if	0	;tblptru may be non-zero
  2716  000F10                     	endif
  2717  000F10                     	if	0	;tblptru may be non-zero
  2718  000F10                     	endif
  2719  000F10  0008               	tblrd		*
  2720  000F12  50F5               	movf	tablat,w,c
  2721  000F14  0900               	iorlw	0
  2722  000F16  A4D8               	btfss	status,2,c
  2723  000F18  EF90  F007         	goto	i1u118_21
  2724  000F1C  EF92  F007         	goto	i1u118_20
  2725  000F20                     i1u118_21:
  2726  000F20  EF71  F007         	goto	i1l1897
  2727  000F24                     i1u118_20:
  2728  000F24                     
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2731  000F24  C0A3  F050         	movff	_nout,?_vfprintf
  2732  000F28  C0A4  F051         	movff	_nout+1,?_vfprintf+1
  2733  000F2C                     
  2734                           ; BSR set to: 0
  2735  000F2C  0012               	return		;funcret
  2736  000F2E                     __end_of_vfprintf:
  2737                           	opt callstack 0
  2738                           
  2739 ;; *************** function _vfpfcnvrt *****************
  2740 ;; Defined at:
  2741 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2744 ;;		 -> sprintf@f(6), 
  2745 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2746 ;;		 -> vfprintf@cfmt(2), 
  2747 ;;  ap              2   67[COMRAM] PTR PTR void 
  2748 ;;		 -> sprintf@ap(2), 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;  ll              8   71[COMRAM] long long 
  2751 ;;  llu             8    0        unsigned long long 
  2752 ;;  f               4    0        unsigned long long 
  2753 ;;  vp              3    0        PTR void 
  2754 ;;  ct              3    0        unsigned char [3]
  2755 ;;  cp              3    0        PTR unsigned char 
  2756 ;;  i               2    0        int 
  2757 ;;  done            2    0        int 
  2758 ;;  c               1    0        unsigned char 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  2   63[COMRAM] int 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2768 ;;      Params:         6       0       0       0
  2769 ;;      Locals:         8       0       0       0
  2770 ;;      Temps:          2       0       0       0
  2771 ;;      Totals:        16       0       0       0
  2772 ;;Total ram usage:       16 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    5
  2775 ;; This function calls:
  2776 ;;		_dtoa
  2777 ;;		_fputc
  2778 ;; This function is called by:
  2779 ;;		_vfprintf
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text14
  2784  00069C                     __ptext14:
  2785                           	opt callstack 0
  2786  00069C                     _vfpfcnvrt:
  2787                           	opt callstack 19
  2788  00069C                     
  2789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2790  00069C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2791  0006A0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2792  0006A4  CFDE FFF6          	movff	postinc2,tblptrl
  2793  0006A8  CFDD FFF7          	movff	postdec2,tblptrh
  2794  0006AC                     	if	0	;tblptru may be non-zero
  2795  0006AC                     	endif
  2796  0006AC                     	if	0	;tblptru may be non-zero
  2797  0006AC                     	endif
  2798  0006AC  0008               	tblrd		*
  2799  0006AE  50F5               	movf	tablat,w,c
  2800  0006B0  0A25               	xorlw	37
  2801  0006B2  A4D8               	btfss	status,2,c
  2802  0006B4  EF5E  F003         	goto	i1u113_21
  2803  0006B8  EF60  F003         	goto	i1u113_20
  2804  0006BC                     i1u113_21:
  2805  0006BC  EF0C  F004         	goto	i1l1865
  2806  0006C0                     i1u113_20:
  2807  0006C0                     
  2808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2809  0006C0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2810  0006C4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2811  0006C8  2ADE               	incf	postinc2,f,c
  2812  0006CA  0E00               	movlw	0
  2813  0006CC  22DD               	addwfc	postdec2,f,c
  2814  0006CE                     
  2815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2816  0006CE  0E00               	movlw	0
  2817  0006D0  0100               	movlb	0	; () banked
  2818  0006D2  6FA6               	movwf	(_width+1)& (0+255),b
  2819  0006D4  0E00               	movlw	0
  2820  0006D6  6FA5               	movwf	_width& (0+255),b
  2821  0006D8  C0A5  F0A9         	movff	_width,_flags
  2822  0006DC  C0A6  F0AA         	movff	_width+1,_flags+1
  2823  0006E0                     
  2824                           ; BSR set to: 0
  2825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2826  0006E0  69A7               	setf	_prec& (0+255),b
  2827  0006E2  69A8               	setf	(_prec+1)& (0+255),b
  2828  0006E4                     
  2829                           ; BSR set to: 0
  2830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2831  0006E4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2832  0006E8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2833  0006EC  CFDE FFF6          	movff	postinc2,tblptrl
  2834  0006F0  CFDD FFF7          	movff	postdec2,tblptrh
  2835  0006F4                     	if	0	;tblptru may be non-zero
  2836  0006F4                     	endif
  2837  0006F4                     	if	0	;tblptru may be non-zero
  2838  0006F4                     	endif
  2839  0006F4  0008               	tblrd		*
  2840  0006F6  50F5               	movf	tablat,w,c
  2841  0006F8  0A64               	xorlw	100
  2842  0006FA  B4D8               	btfsc	status,2,c
  2843  0006FC  EF82  F003         	goto	i1u114_21
  2844  000700  EF84  F003         	goto	i1u114_20
  2845  000704                     i1u114_21:
  2846  000704  EF96  F003         	goto	i1l1843
  2847  000708                     i1u114_20:
  2848  000708                     
  2849                           ; BSR set to: 0
  2850  000708  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2851  00070C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2852  000710  CFDE FFF6          	movff	postinc2,tblptrl
  2853  000714  CFDD FFF7          	movff	postdec2,tblptrh
  2854  000718                     	if	0	;tblptru may be non-zero
  2855  000718                     	endif
  2856  000718                     	if	0	;tblptru may be non-zero
  2857  000718                     	endif
  2858  000718  0008               	tblrd		*
  2859  00071A  50F5               	movf	tablat,w,c
  2860  00071C  0A69               	xorlw	105
  2861  00071E  A4D8               	btfss	status,2,c
  2862  000720  EF94  F003         	goto	i1u115_21
  2863  000724  EF96  F003         	goto	i1u115_20
  2864  000728                     i1u115_21:
  2865  000728  EFD6  F003         	goto	i1l1849
  2866  00072C                     i1u115_20:
  2867  00072C                     i1l1843:
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2871  00072C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2872  000730  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2873  000734  2ADE               	incf	postinc2,f,c
  2874  000736  0E00               	movlw	0
  2875  000738  22DD               	addwfc	postdec2,f,c
  2876                           
  2877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2878  00073A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2879  00073E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2880  000742  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2881  000746  0E02               	movlw	2
  2882  000748  26DE               	addwf	postinc2,f,c
  2883  00074A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2884  00074E  0E00               	movlw	0
  2885  000750  22DD               	addwfc	postdec2,f,c
  2886  000752  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2887  000756  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2888  00075A  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  2889  00075E  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  2890  000762  0E00               	movlw	0
  2891  000764  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2892  000766  0EFF               	movlw	-1
  2893  000768  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  2894  00076A  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  2895  00076C  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  2896  00076E  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  2897  000770  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  2898  000772  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  2899  000774                     
  2900                           ; BSR set to: 0
  2901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2902  000774  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2903  000778  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2904  00077C  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2905  000780  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2906  000784  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2907  000788  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2908  00078C  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2909  000790  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2910  000794  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2911  000798  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2912  00079C  ECDD  F001         	call	_dtoa	;wreg free
  2913  0007A0  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  2914  0007A4  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2915  0007A8  EF27  F004         	goto	i1l297
  2916  0007AC                     i1l1849:
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2920  0007AC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2921  0007B0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2922  0007B4  CFDE FFF6          	movff	postinc2,tblptrl
  2923  0007B8  CFDD FFF7          	movff	postdec2,tblptrh
  2924  0007BC                     	if	0	;tblptru may be non-zero
  2925  0007BC                     	endif
  2926  0007BC                     	if	0	;tblptru may be non-zero
  2927  0007BC                     	endif
  2928  0007BC  0008               	tblrd		*
  2929  0007BE  50F5               	movf	tablat,w,c
  2930  0007C0  0A25               	xorlw	37
  2931  0007C2  A4D8               	btfss	status,2,c
  2932  0007C4  EFE6  F003         	goto	i1u116_21
  2933  0007C8  EFE8  F003         	goto	i1u116_20
  2934  0007CC                     i1u116_21:
  2935  0007CC  EFFF  F003         	goto	i1l1859
  2936  0007D0                     i1u116_20:
  2937  0007D0                     
  2938                           ; BSR set to: 0
  2939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2940  0007D0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2941  0007D4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2942  0007D8  2ADE               	incf	postinc2,f,c
  2943  0007DA  0E00               	movlw	0
  2944  0007DC  22DD               	addwfc	postdec2,f,c
  2945  0007DE                     
  2946                           ; BSR set to: 0
  2947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2948  0007DE  0E00               	movlw	0
  2949  0007E0  6E02               	movwf	(fputc@c+1)^0,c
  2950  0007E2  0E25               	movlw	37
  2951  0007E4  6E01               	movwf	fputc@c^0,c
  2952  0007E6  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2953  0007EA  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2954  0007EE  EC9E  F005         	call	_fputc	;wreg free
  2955  0007F2                     i1l1855:
  2956                           
  2957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2958  0007F2  0E00               	movlw	0
  2959  0007F4  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2960  0007F6  0E01               	movlw	1
  2961  0007F8  6E40               	movwf	?_vfpfcnvrt^0,c
  2962  0007FA  EF27  F004         	goto	i1l297
  2963  0007FE                     i1l1859:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2967  0007FE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2968  000802  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2969  000806  2ADE               	incf	postinc2,f,c
  2970  000808  0E00               	movlw	0
  2971  00080A  22DD               	addwfc	postdec2,f,c
  2972  00080C                     
  2973                           ; BSR set to: 0
  2974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2975  00080C  0E00               	movlw	0
  2976  00080E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2977  000810  0E00               	movlw	0
  2978  000812  6E40               	movwf	?_vfpfcnvrt^0,c
  2979  000814  EF27  F004         	goto	i1l297
  2980  000818                     i1l1865:
  2981                           
  2982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2983  000818  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2984  00081C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2985  000820  CFDE FFF6          	movff	postinc2,tblptrl
  2986  000824  CFDD FFF7          	movff	postdec2,tblptrh
  2987  000828                     	if	0	;tblptru may be non-zero
  2988  000828                     	endif
  2989  000828                     	if	0	;tblptru may be non-zero
  2990  000828                     	endif
  2991  000828  0008               	tblrd		*
  2992  00082A  50F5               	movf	tablat,w,c
  2993  00082C  6E01               	movwf	fputc@c^0,c
  2994  00082E  6A02               	clrf	(fputc@c+1)^0,c
  2995  000830  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2996  000834  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2997  000838  EC9E  F005         	call	_fputc	;wreg free
  2998  00083C                     
  2999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3000  00083C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3001  000840  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3002  000844  2ADE               	incf	postinc2,f,c
  3003  000846  0E00               	movlw	0
  3004  000848  22DD               	addwfc	postdec2,f,c
  3005  00084A  EFF9  F003         	goto	i1l1855
  3006  00084E                     i1l297:
  3007  00084E  0012               	return		;funcret
  3008  000850                     __end_of_vfpfcnvrt:
  3009                           	opt callstack 0
  3010                           
  3011 ;; *************** function _dtoa *****************
  3012 ;; Defined at:
  3013 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3016 ;;		 -> sprintf@f(6), 
  3017 ;;  d               8   29[COMRAM] long long 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  n               8   53[COMRAM] long long 
  3020 ;;  i               2   61[COMRAM] int 
  3021 ;;  s               2   51[COMRAM] int 
  3022 ;;  w               2   49[COMRAM] int 
  3023 ;;  p               2   47[COMRAM] int 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  2   27[COMRAM] int 
  3026 ;; Registers used:
  3027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3033 ;;      Params:        10       0       0       0
  3034 ;;      Locals:        18       0       0       0
  3035 ;;      Temps:          8       0       0       0
  3036 ;;      Totals:        36       0       0       0
  3037 ;;Total ram usage:       36 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    4
  3040 ;; This function calls:
  3041 ;;		___aodiv
  3042 ;;		___aomod
  3043 ;;		_abs
  3044 ;;		_pad
  3045 ;; This function is called by:
  3046 ;;		_vfpfcnvrt
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text15
  3051  0003BA                     __ptext15:
  3052                           	opt callstack 0
  3053  0003BA                     _dtoa:
  3054                           	opt callstack 19
  3055  0003BA                     
  3056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  3057  0003BA  C01E  F036         	movff	dtoa@d,dtoa@n
  3058  0003BE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  3059  0003C2  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  3060  0003C6  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  3061  0003CA  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  3062  0003CE  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  3063  0003D2  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  3064  0003D6  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  3065  0003DA                     
  3066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  3067  0003DA  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  3068  0003DC  EFF2  F001         	goto	i1u97_21
  3069  0003E0  EFF5  F001         	goto	i1u97_20
  3070  0003E4                     i1u97_21:
  3071  0003E4  0E01               	movlw	1
  3072  0003E6  EFF6  F001         	goto	i1u98_20
  3073  0003EA                     i1u97_20:
  3074  0003EA  0E00               	movlw	0
  3075  0003EC                     i1u98_20:
  3076  0003EC  6E34               	movwf	dtoa@s^0,c
  3077  0003EE  6A35               	clrf	(dtoa@s+1)^0,c
  3078                           
  3079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  3080  0003F0  5034               	movf	dtoa@s^0,w,c
  3081  0003F2  1035               	iorwf	(dtoa@s+1)^0,w,c
  3082  0003F4  B4D8               	btfsc	status,2,c
  3083  0003F6  EFFF  F001         	goto	i1u99_21
  3084  0003FA  EF01  F002         	goto	i1u99_20
  3085  0003FE                     i1u99_21:
  3086  0003FE  EF11  F002         	goto	i1l1765
  3087  000402                     i1u99_20:
  3088  000402                     
  3089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  3090  000402  1E3D               	comf	(dtoa@n+7)^0,f,c
  3091  000404  1E3C               	comf	(dtoa@n+6)^0,f,c
  3092  000406  1E3B               	comf	(dtoa@n+5)^0,f,c
  3093  000408  1E3A               	comf	(dtoa@n+4)^0,f,c
  3094  00040A  1E39               	comf	(dtoa@n+3)^0,f,c
  3095  00040C  1E38               	comf	(dtoa@n+2)^0,f,c
  3096  00040E  1E37               	comf	(dtoa@n+1)^0,f,c
  3097  000410  6C36               	negf	dtoa@n^0,c
  3098  000412  0E00               	movlw	0
  3099  000414  2237               	addwfc	(dtoa@n+1)^0,f,c
  3100  000416  2238               	addwfc	(dtoa@n+2)^0,f,c
  3101  000418  2239               	addwfc	(dtoa@n+3)^0,f,c
  3102  00041A  223A               	addwfc	(dtoa@n+4)^0,f,c
  3103  00041C  223B               	addwfc	(dtoa@n+5)^0,f,c
  3104  00041E  223C               	addwfc	(dtoa@n+6)^0,f,c
  3105  000420  223D               	addwfc	(dtoa@n+7)^0,f,c
  3106  000422                     i1l1765:
  3107                           
  3108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  3109  000422  0100               	movlb	0	; () banked
  3110  000424  BFA8               	btfsc	(_prec+1)& (0+255),7,b
  3111  000426  EF17  F002         	goto	i1u100_21
  3112  00042A  EF19  F002         	goto	i1u100_20
  3113  00042E                     i1u100_21:
  3114  00042E  EF1A  F002         	goto	i1l1769
  3115  000432                     i1u100_20:
  3116  000432                     
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  3119  000432  93A9               	bcf	_flags& (0+255),1,b
  3120  000434                     i1l1769:
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  3124  000434  BFA8               	btfsc	(_prec+1)& (0+255),7,b
  3125  000436  EF27  F002         	goto	i1u101_20
  3126  00043A  51A8               	movf	(_prec+1)& (0+255),w,b
  3127  00043C  E106               	bnz	i1u101_21
  3128  00043E  05A7               	decf	_prec& (0+255),w,b
  3129  000440  B0D8               	btfsc	status,0,c
  3130  000442  EF25  F002         	goto	i1u101_21
  3131  000446  EF27  F002         	goto	i1u101_20
  3132  00044A                     i1u101_21:
  3133  00044A  EF2D  F002         	goto	i1l270
  3134  00044E                     i1u101_20:
  3135  00044E                     
  3136                           ; BSR set to: 0
  3137  00044E  0E00               	movlw	0
  3138  000450  6E31               	movwf	(dtoa@p+1)^0,c
  3139  000452  0E01               	movlw	1
  3140  000454  6E30               	movwf	dtoa@p^0,c
  3141  000456  EF31  F002         	goto	i1l272
  3142  00045A                     i1l270:
  3143                           
  3144                           ; BSR set to: 0
  3145  00045A  C0A7  F030         	movff	_prec,dtoa@p
  3146  00045E  C0A8  F031         	movff	_prec+1,dtoa@p+1
  3147  000462                     i1l272:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  3151  000462  C0A5  F032         	movff	_width,dtoa@w
  3152  000466  C0A6  F033         	movff	_width+1,dtoa@w+1
  3153  00046A                     
  3154                           ; BSR set to: 0
  3155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  3156  00046A  5034               	movf	dtoa@s^0,w,c
  3157  00046C  1035               	iorwf	(dtoa@s+1)^0,w,c
  3158  00046E  A4D8               	btfss	status,2,c
  3159  000470  EF3C  F002         	goto	i1u102_21
  3160  000474  EF3E  F002         	goto	i1u102_20
  3161  000478                     i1u102_21:
  3162  000478  EF45  F002         	goto	i1l1777
  3163  00047C                     i1u102_20:
  3164  00047C                     
  3165                           ; BSR set to: 0
  3166  00047C  A5A9               	btfss	_flags& (0+255),2,b
  3167  00047E  EF43  F002         	goto	i1u103_21
  3168  000482  EF45  F002         	goto	i1u103_20
  3169  000486                     i1u103_21:
  3170  000486  EF48  F002         	goto	i1l1779
  3171  00048A                     i1u103_20:
  3172  00048A                     i1l1777:
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  3176  00048A  0632               	decf	dtoa@w^0,f,c
  3177  00048C  A0D8               	btfss	status,0,c
  3178  00048E  0633               	decf	(dtoa@w+1)^0,f,c
  3179  000490                     i1l1779:
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  3183  000490  0E00               	movlw	0
  3184  000492  6E3F               	movwf	(dtoa@i+1)^0,c
  3185  000494  0E1F               	movlw	31
  3186  000496  6E3E               	movwf	dtoa@i^0,c
  3187  000498                     
  3188                           ; BSR set to: 0
  3189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  3190  000498  0E00               	movlw	0
  3191  00049A  6FCE               	movwf	(_dbuf+31)& (0+255),b
  3192                           
  3193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3194  00049C  EFCC  F002         	goto	i1l1793
  3195  0004A0                     i1l1783:
  3196                           
  3197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  3198  0004A0  063E               	decf	dtoa@i^0,f,c
  3199  0004A2  A0D8               	btfss	status,0,c
  3200  0004A4  063F               	decf	(dtoa@i+1)^0,f,c
  3201  0004A6                     
  3202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  3203  0004A6  0EAF               	movlw	low _dbuf
  3204  0004A8  243E               	addwf	dtoa@i^0,w,c
  3205  0004AA  6ED9               	movwf	fsr2l,c
  3206  0004AC  0E00               	movlw	high _dbuf
  3207  0004AE  203F               	addwfc	(dtoa@i+1)^0,w,c
  3208  0004B0  6EDA               	movwf	fsr2h,c
  3209  0004B2  C036  F001         	movff	dtoa@n,___aomod@dividend
  3210  0004B6  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3211  0004BA  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3212  0004BE  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3213  0004C2  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3214  0004C6  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3215  0004CA  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3216  0004CE  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3217  0004D2  0E0A               	movlw	10
  3218  0004D4  6E09               	movwf	___aomod@divisor^0,c
  3219  0004D6  0E00               	movlw	0
  3220  0004D8  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3221  0004DA  0E00               	movlw	0
  3222  0004DC  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3223  0004DE  0E00               	movlw	0
  3224  0004E0  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3225  0004E2  0E00               	movlw	0
  3226  0004E4  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3227  0004E6  0E00               	movlw	0
  3228  0004E8  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3229  0004EA  0E00               	movlw	0
  3230  0004EC  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3231  0004EE  0E00               	movlw	0
  3232  0004F0  6E10               	movwf	(___aomod@divisor+7)^0,c
  3233  0004F2  ECEC  F004         	call	___aomod	;wreg free
  3234  0004F6  C001  F026         	movff	?___aomod,??_dtoa
  3235  0004FA  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3236  0004FE  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3237  000502  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3238  000506  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3239  00050A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3240  00050E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3241  000512  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3242  000516  C026  F013         	movff	??_dtoa,abs@a
  3243  00051A  C028  F014         	movff	??_dtoa+2,abs@a+1
  3244  00051E  EC57  F008         	call	_abs	;wreg free
  3245  000522  5013               	movf	?_abs^0,w,c
  3246  000524  0F30               	addlw	48
  3247  000526  6EDF               	movwf	indf2,c
  3248  000528                     
  3249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  3250  000528  0630               	decf	dtoa@p^0,f,c
  3251  00052A  A0D8               	btfss	status,0,c
  3252  00052C  0631               	decf	(dtoa@p+1)^0,f,c
  3253  00052E                     
  3254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  3255  00052E  0632               	decf	dtoa@w^0,f,c
  3256  000530  A0D8               	btfss	status,0,c
  3257  000532  0633               	decf	(dtoa@w+1)^0,f,c
  3258  000534                     
  3259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  3260  000534  C036  F001         	movff	dtoa@n,___aodiv@dividend
  3261  000538  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3262  00053C  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3263  000540  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3264  000544  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3265  000548  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3266  00054C  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3267  000550  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3268  000554  0E0A               	movlw	10
  3269  000556  6E09               	movwf	___aodiv@divisor^0,c
  3270  000558  0E00               	movlw	0
  3271  00055A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3272  00055C  0E00               	movlw	0
  3273  00055E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3274  000560  0E00               	movlw	0
  3275  000562  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3276  000564  0E00               	movlw	0
  3277  000566  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3278  000568  0E00               	movlw	0
  3279  00056A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3280  00056C  0E00               	movlw	0
  3281  00056E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3282  000570  0E00               	movlw	0
  3283  000572  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3284  000574  EC28  F004         	call	___aodiv	;wreg free
  3285  000578  C001  F036         	movff	?___aodiv,dtoa@n
  3286  00057C  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  3287  000580  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  3288  000584  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  3289  000588  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  3290  00058C  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  3291  000590  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  3292  000594  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  3293  000598                     i1l1793:
  3294                           
  3295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3296  000598  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  3297  00059A  EFD7  F002         	goto	i1u104_21
  3298  00059E  503F               	movf	(dtoa@i+1)^0,w,c
  3299  0005A0  E108               	bnz	i1u104_20
  3300  0005A2  043E               	decf	dtoa@i^0,w,c
  3301  0005A4  A0D8               	btfss	status,0,c
  3302  0005A6  EFD7  F002         	goto	i1u104_21
  3303  0005AA  EFD9  F002         	goto	i1u104_20
  3304  0005AE                     i1u104_21:
  3305  0005AE  EF0A  F003         	goto	i1l1803
  3306  0005B2                     i1u104_20:
  3307  0005B2  5036               	movf	dtoa@n^0,w,c
  3308  0005B4  1037               	iorwf	(dtoa@n+1)^0,w,c
  3309  0005B6  1038               	iorwf	(dtoa@n+2)^0,w,c
  3310  0005B8  1039               	iorwf	(dtoa@n+3)^0,w,c
  3311  0005BA  103A               	iorwf	(dtoa@n+4)^0,w,c
  3312  0005BC  103B               	iorwf	(dtoa@n+5)^0,w,c
  3313  0005BE  103C               	iorwf	(dtoa@n+6)^0,w,c
  3314  0005C0  103D               	iorwf	(dtoa@n+7)^0,w,c
  3315  0005C2  A4D8               	btfss	status,2,c
  3316  0005C4  EFE6  F002         	goto	i1u105_21
  3317  0005C8  EFE8  F002         	goto	i1u105_20
  3318  0005CC                     i1u105_21:
  3319  0005CC  EF50  F002         	goto	i1l1783
  3320  0005D0                     i1u105_20:
  3321  0005D0  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3322  0005D2  EFF5  F002         	goto	i1u106_20
  3323  0005D6  5031               	movf	(dtoa@p+1)^0,w,c
  3324  0005D8  E106               	bnz	i1u106_21
  3325  0005DA  0430               	decf	dtoa@p^0,w,c
  3326  0005DC  B0D8               	btfsc	status,0,c
  3327  0005DE  EFF3  F002         	goto	i1u106_21
  3328  0005E2  EFF5  F002         	goto	i1u106_20
  3329  0005E6                     i1u106_21:
  3330  0005E6  EF50  F002         	goto	i1l1783
  3331  0005EA                     i1u106_20:
  3332  0005EA  BE33               	btfsc	(dtoa@w+1)^0,7,c
  3333  0005EC  EF00  F003         	goto	i1u107_21
  3334  0005F0  5033               	movf	(dtoa@w+1)^0,w,c
  3335  0005F2  E108               	bnz	i1u107_20
  3336  0005F4  0432               	decf	dtoa@w^0,w,c
  3337  0005F6  A0D8               	btfss	status,0,c
  3338  0005F8  EF00  F003         	goto	i1u107_21
  3339  0005FC  EF02  F003         	goto	i1u107_20
  3340  000600                     i1u107_21:
  3341  000600  EF0A  F003         	goto	i1l1803
  3342  000604                     i1u107_20:
  3343  000604  0100               	movlb	0	; () banked
  3344  000606  B3A9               	btfsc	_flags& (0+255),1,b
  3345  000608  EF08  F003         	goto	i1u108_21
  3346  00060C  EF0A  F003         	goto	i1u108_20
  3347  000610                     i1u108_21:
  3348  000610  EF50  F002         	goto	i1l1783
  3349  000614                     i1u108_20:
  3350  000614                     i1l1803:
  3351                           
  3352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  3353  000614  5034               	movf	dtoa@s^0,w,c
  3354  000616  1035               	iorwf	(dtoa@s+1)^0,w,c
  3355  000618  A4D8               	btfss	status,2,c
  3356  00061A  EF11  F003         	goto	i1u109_21
  3357  00061E  EF13  F003         	goto	i1u109_20
  3358  000622                     i1u109_21:
  3359  000622  EF1B  F003         	goto	i1l1807
  3360  000626                     i1u109_20:
  3361  000626  0100               	movlb	0	; () banked
  3362  000628  A5A9               	btfss	_flags& (0+255),2,b
  3363  00062A  EF19  F003         	goto	i1u110_21
  3364  00062E  EF1B  F003         	goto	i1u110_20
  3365  000632                     i1u110_21:
  3366  000632  EF39  F003         	goto	i1l1817
  3367  000636                     i1u110_20:
  3368  000636                     i1l1807:
  3369                           
  3370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  3371  000636  063E               	decf	dtoa@i^0,f,c
  3372  000638  A0D8               	btfss	status,0,c
  3373  00063A  063F               	decf	(dtoa@i+1)^0,f,c
  3374  00063C                     
  3375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  3376  00063C  5034               	movf	dtoa@s^0,w,c
  3377  00063E  1035               	iorwf	(dtoa@s+1)^0,w,c
  3378  000640  A4D8               	btfss	status,2,c
  3379  000642  EF25  F003         	goto	i1u111_21
  3380  000646  EF27  F003         	goto	i1u111_20
  3381  00064A                     i1u111_21:
  3382  00064A  EF2D  F003         	goto	i1l1813
  3383  00064E                     i1u111_20:
  3384  00064E  0E00               	movlw	0
  3385  000650  6E2F               	movwf	(_dtoa$1345+1)^0,c
  3386  000652  0E2B               	movlw	43
  3387  000654  6E2E               	movwf	_dtoa$1345^0,c
  3388  000656  EF31  F003         	goto	i1l1815
  3389  00065A                     i1l1813:
  3390  00065A  0E00               	movlw	0
  3391  00065C  6E2F               	movwf	(_dtoa$1345+1)^0,c
  3392  00065E  0E2D               	movlw	45
  3393  000660  6E2E               	movwf	_dtoa$1345^0,c
  3394  000662                     i1l1815:
  3395  000662  0EAF               	movlw	low _dbuf
  3396  000664  243E               	addwf	dtoa@i^0,w,c
  3397  000666  6ED9               	movwf	fsr2l,c
  3398  000668  0E00               	movlw	high _dbuf
  3399  00066A  203F               	addwfc	(dtoa@i+1)^0,w,c
  3400  00066C  6EDA               	movwf	fsr2h,c
  3401  00066E  C02E  FFDF         	movff	_dtoa$1345,indf2
  3402  000672                     i1l1817:
  3403                           
  3404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  3405  000672  C01C  F011         	movff	dtoa@fp,pad@fp
  3406  000676  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3407  00067A  0EAF               	movlw	low _dbuf
  3408  00067C  243E               	addwf	dtoa@i^0,w,c
  3409  00067E  6E13               	movwf	pad@buf^0,c
  3410  000680  0E00               	movlw	high _dbuf
  3411  000682  203F               	addwfc	(dtoa@i+1)^0,w,c
  3412  000684  6E14               	movwf	(pad@buf+1)^0,c
  3413  000686  C032  F015         	movff	dtoa@w,pad@p
  3414  00068A  C033  F016         	movff	dtoa@w+1,pad@p+1
  3415  00068E  EC03  F006         	call	_pad	;wreg free
  3416  000692  C011  F01C         	movff	?_pad,?_dtoa
  3417  000696  C012  F01D         	movff	?_pad+1,?_dtoa+1
  3418  00069A  0012               	return		;funcret
  3419  00069C                     __end_of_dtoa:
  3420                           	opt callstack 0
  3421                           
  3422 ;; *************** function _pad *****************
  3423 ;; Defined at:
  3424 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3427 ;;		 -> sprintf@f(6), 
  3428 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3429 ;;		 -> dbuf(32), 
  3430 ;;  p               2   20[COMRAM] int 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  w               2   25[COMRAM] int 
  3433 ;;  i               2   23[COMRAM] int 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  2   16[COMRAM] int 
  3436 ;; Registers used:
  3437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3443 ;;      Params:         6       0       0       0
  3444 ;;      Locals:         4       0       0       0
  3445 ;;      Temps:          1       0       0       0
  3446 ;;      Totals:        11       0       0       0
  3447 ;;Total ram usage:       11 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:    3
  3450 ;; This function calls:
  3451 ;;		_fputc
  3452 ;;		_fputs
  3453 ;;		_strlen
  3454 ;; This function is called by:
  3455 ;;		_dtoa
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           	psect	text16
  3460  000C06                     __ptext16:
  3461                           	opt callstack 0
  3462  000C06                     _pad:
  3463                           	opt callstack 19
  3464  000C06                     
  3465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3466  000C06  0100               	movlb	0	; () banked
  3467  000C08  A1A9               	btfss	_flags& (0+255),0,b
  3468  000C0A  EF09  F006         	goto	i1u79_21
  3469  000C0E  EF0B  F006         	goto	i1u79_20
  3470  000C12                     i1u79_21:
  3471  000C12  EF15  F006         	goto	i1l1657
  3472  000C16                     i1u79_20:
  3473  000C16                     
  3474                           ; BSR set to: 0
  3475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3476  000C16  C013  F00A         	movff	pad@buf,fputs@s
  3477  000C1A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3478  000C1E  C011  F00C         	movff	pad@fp,fputs@fp
  3479  000C22  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3480  000C26  EC35  F008         	call	_fputs	;wreg free
  3481  000C2A                     i1l1657:
  3482                           
  3483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3484  000C2A  BE16               	btfsc	(pad@p+1)^0,7,c
  3485  000C2C  EF1A  F006         	goto	i1u80_21
  3486  000C30  EF1C  F006         	goto	i1u80_20
  3487  000C34                     i1u80_21:
  3488  000C34  EF22  F006         	goto	i1l1661
  3489  000C38                     i1u80_20:
  3490  000C38  C015  F01A         	movff	pad@p,pad@w
  3491  000C3C  C016  F01B         	movff	pad@p+1,pad@w+1
  3492  000C40  EF26  F006         	goto	i1l259
  3493  000C44                     i1l1661:
  3494  000C44  0E00               	movlw	0
  3495  000C46  6E1B               	movwf	(pad@w+1)^0,c
  3496  000C48  0E00               	movlw	0
  3497  000C4A  6E1A               	movwf	pad@w^0,c
  3498  000C4C                     i1l259:
  3499                           
  3500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3501  000C4C  0E00               	movlw	0
  3502  000C4E  6E19               	movwf	(pad@i+1)^0,c
  3503  000C50  0E00               	movlw	0
  3504  000C52  6E18               	movwf	pad@i^0,c
  3505                           
  3506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3507  000C54  EF38  F006         	goto	i1l1667
  3508  000C58                     i1l1663:
  3509                           
  3510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3511  000C58  0E00               	movlw	0
  3512  000C5A  6E02               	movwf	(fputc@c+1)^0,c
  3513  000C5C  0E20               	movlw	32
  3514  000C5E  6E01               	movwf	fputc@c^0,c
  3515  000C60  C011  F003         	movff	pad@fp,fputc@fp
  3516  000C64  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3517  000C68  EC9E  F005         	call	_fputc	;wreg free
  3518  000C6C                     
  3519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3520  000C6C  4A18               	infsnz	pad@i^0,f,c
  3521  000C6E  2A19               	incf	(pad@i+1)^0,f,c
  3522  000C70                     i1l1667:
  3523                           
  3524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3525  000C70  501A               	movf	pad@w^0,w,c
  3526  000C72  5C18               	subwf	pad@i^0,w,c
  3527  000C74  5019               	movf	(pad@i+1)^0,w,c
  3528  000C76  0A80               	xorlw	128
  3529  000C78  6E17               	movwf	??_pad^0,c
  3530  000C7A  501B               	movf	(pad@w+1)^0,w,c
  3531  000C7C  0A80               	xorlw	128
  3532  000C7E  5817               	subwfb	??_pad^0,w,c
  3533  000C80  A0D8               	btfss	status,0,c
  3534  000C82  EF45  F006         	goto	i1u81_21
  3535  000C86  EF47  F006         	goto	i1u81_20
  3536  000C8A                     i1u81_21:
  3537  000C8A  EF2C  F006         	goto	i1l1663
  3538  000C8E                     i1u81_20:
  3539  000C8E                     
  3540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3541  000C8E  0100               	movlb	0	; () banked
  3542  000C90  B1A9               	btfsc	_flags& (0+255),0,b
  3543  000C92  EF4D  F006         	goto	i1u82_21
  3544  000C96  EF4F  F006         	goto	i1u82_20
  3545  000C9A                     i1u82_21:
  3546  000C9A  EF59  F006         	goto	i1l1671
  3547  000C9E                     i1u82_20:
  3548  000C9E                     
  3549                           ; BSR set to: 0
  3550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3551  000C9E  C013  F00A         	movff	pad@buf,fputs@s
  3552  000CA2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3553  000CA6  C011  F00C         	movff	pad@fp,fputs@fp
  3554  000CAA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3555  000CAE  EC35  F008         	call	_fputs	;wreg free
  3556  000CB2                     i1l1671:
  3557                           
  3558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3559  000CB2  C013  F001         	movff	pad@buf,strlen@s
  3560  000CB6  C014  F002         	movff	pad@buf+1,strlen@s+1
  3561  000CBA  ECED  F008         	call	_strlen	;wreg free
  3562  000CBE  501A               	movf	pad@w^0,w,c
  3563  000CC0  2401               	addwf	?_strlen^0,w,c
  3564  000CC2  6E11               	movwf	?_pad^0,c
  3565  000CC4  501B               	movf	(pad@w+1)^0,w,c
  3566  000CC6  2002               	addwfc	(?_strlen+1)^0,w,c
  3567  000CC8  6E12               	movwf	(?_pad+1)^0,c
  3568  000CCA  0012               	return		;funcret
  3569  000CCC                     __end_of_pad:
  3570                           	opt callstack 0
  3571                           
  3572 ;; *************** function _strlen *****************
  3573 ;; Defined at:
  3574 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3577 ;;		 -> dbuf(32), 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3580 ;;		 -> dbuf(32), 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  2    0[COMRAM] unsigned int 
  3583 ;; Registers used:
  3584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3590 ;;      Params:         2       0       0       0
  3591 ;;      Locals:         2       0       0       0
  3592 ;;      Temps:          0       0       0       0
  3593 ;;      Totals:         4       0       0       0
  3594 ;;Total ram usage:        4 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_pad
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text17
  3604  0011DA                     __ptext17:
  3605                           	opt callstack 0
  3606  0011DA                     _strlen:
  3607                           	opt callstack 21
  3608  0011DA  C001  F003         	movff	strlen@s,strlen@a
  3609  0011DE  C002  F004         	movff	strlen@s+1,strlen@a+1
  3610  0011E2  EFF5  F008         	goto	i1l1647
  3611  0011E6                     i1l1645:
  3612  0011E6  4A01               	infsnz	strlen@s^0,f,c
  3613  0011E8  2A02               	incf	(strlen@s+1)^0,f,c
  3614  0011EA                     i1l1647:
  3615  0011EA  C001  FFD9         	movff	strlen@s,fsr2l
  3616  0011EE  C002  FFDA         	movff	strlen@s+1,fsr2h
  3617  0011F2  50DF               	movf	indf2,w,c
  3618  0011F4  A4D8               	btfss	status,2,c
  3619  0011F6  EFFF  F008         	goto	i1u78_21
  3620  0011FA  EF01  F009         	goto	i1u78_20
  3621  0011FE                     i1u78_21:
  3622  0011FE  EFF3  F008         	goto	i1l1645
  3623  001202                     i1u78_20:
  3624  001202  5003               	movf	strlen@a^0,w,c
  3625  001204  5C01               	subwf	strlen@s^0,w,c
  3626  001206  6E01               	movwf	?_strlen^0,c
  3627  001208  5004               	movf	(strlen@a+1)^0,w,c
  3628  00120A  5802               	subwfb	(strlen@s+1)^0,w,c
  3629  00120C  6E02               	movwf	(?_strlen+1)^0,c
  3630  00120E  0012               	return		;funcret
  3631  001210                     __end_of_strlen:
  3632                           	opt callstack 0
  3633                           
  3634 ;; *************** function _fputs *****************
  3635 ;; Defined at:
  3636 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3639 ;;		 -> dbuf(32), 
  3640 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3641 ;;		 -> sprintf@f(6), 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  i               2   14[COMRAM] int 
  3644 ;;  c               1   13[COMRAM] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  2    9[COMRAM] int 
  3647 ;; Registers used:
  3648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3654 ;;      Params:         4       0       0       0
  3655 ;;      Locals:         3       0       0       0
  3656 ;;      Temps:          0       0       0       0
  3657 ;;      Totals:         7       0       0       0
  3658 ;;Total ram usage:        7 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    2
  3661 ;; This function calls:
  3662 ;;		_fputc
  3663 ;; This function is called by:
  3664 ;;		_pad
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text18
  3669  00106A                     __ptext18:
  3670                           	opt callstack 0
  3671  00106A                     _fputs:
  3672                           	opt callstack 19
  3673  00106A  0E00               	movlw	0
  3674  00106C  6E10               	movwf	(fputs@i+1)^0,c
  3675  00106E  0E00               	movlw	0
  3676  001070  6E0F               	movwf	fputs@i^0,c
  3677  001072  EF46  F008         	goto	i1l1641
  3678  001076                     i1l1637:
  3679  001076  C00E  F001         	movff	fputs@c,fputc@c
  3680  00107A  6A02               	clrf	(fputc@c+1)^0,c
  3681  00107C  C00C  F003         	movff	fputs@fp,fputc@fp
  3682  001080  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3683  001084  EC9E  F005         	call	_fputc	;wreg free
  3684  001088  4A0F               	infsnz	fputs@i^0,f,c
  3685  00108A  2A10               	incf	(fputs@i+1)^0,f,c
  3686  00108C                     i1l1641:
  3687  00108C  500F               	movf	fputs@i^0,w,c
  3688  00108E  240A               	addwf	fputs@s^0,w,c
  3689  001090  6ED9               	movwf	fsr2l,c
  3690  001092  5010               	movf	(fputs@i+1)^0,w,c
  3691  001094  200B               	addwfc	(fputs@s+1)^0,w,c
  3692  001096  6EDA               	movwf	fsr2h,c
  3693  001098  50DF               	movf	indf2,w,c
  3694  00109A  6E0E               	movwf	fputs@c^0,c
  3695  00109C  500E               	movf	fputs@c^0,w,c
  3696  00109E  A4D8               	btfss	status,2,c
  3697  0010A0  EF54  F008         	goto	i1u77_21
  3698  0010A4  EF56  F008         	goto	i1u77_20
  3699  0010A8                     i1u77_21:
  3700  0010A8  EF3B  F008         	goto	i1l1637
  3701  0010AC                     i1u77_20:
  3702  0010AC  0012               	return		;funcret
  3703  0010AE                     __end_of_fputs:
  3704                           	opt callstack 0
  3705                           
  3706 ;; *************** function _fputc *****************
  3707 ;; Defined at:
  3708 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  c               2    0[COMRAM] int 
  3711 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3712 ;;		 -> sprintf@f(6), 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  2    0[COMRAM] int 
  3717 ;; Registers used:
  3718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3724 ;;      Params:         4       0       0       0
  3725 ;;      Locals:         0       0       0       0
  3726 ;;      Temps:          5       0       0       0
  3727 ;;      Totals:         9       0       0       0
  3728 ;;Total ram usage:        9 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    1
  3731 ;; This function calls:
  3732 ;;		_putch
  3733 ;; This function is called by:
  3734 ;;		_pad
  3735 ;;		_vfpfcnvrt
  3736 ;;		_fputs
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text19
  3741  000B3C                     __ptext19:
  3742                           	opt callstack 0
  3743  000B3C                     _fputc:
  3744                           	opt callstack 22
  3745  000B3C  5003               	movf	fputc@fp^0,w,c
  3746  000B3E  1004               	iorwf	(fputc@fp+1)^0,w,c
  3747  000B40  B4D8               	btfsc	status,2,c
  3748  000B42  EFA5  F005         	goto	i1u73_21
  3749  000B46  EFA7  F005         	goto	i1u73_20
  3750  000B4A                     i1u73_21:
  3751  000B4A  EFB0  F005         	goto	i1l1625
  3752  000B4E                     i1u73_20:
  3753  000B4E  5003               	movf	fputc@fp^0,w,c
  3754  000B50  1004               	iorwf	(fputc@fp+1)^0,w,c
  3755  000B52  A4D8               	btfss	status,2,c
  3756  000B54  EFAE  F005         	goto	i1u74_21
  3757  000B58  EFB0  F005         	goto	i1u74_20
  3758  000B5C                     i1u74_21:
  3759  000B5C  EFB5  F005         	goto	i1l1627
  3760  000B60                     i1u74_20:
  3761  000B60                     i1l1625:
  3762  000B60  5001               	movf	fputc@c^0,w,c
  3763  000B62  EC5C  F009         	call	_putch
  3764  000B66  EF02  F006         	goto	i1l997
  3765  000B6A                     i1l1627:
  3766  000B6A  EE20 F004          	lfsr	2,4
  3767  000B6E  5003               	movf	fputc@fp^0,w,c
  3768  000B70  26D9               	addwf	fsr2l,f,c
  3769  000B72  5004               	movf	(fputc@fp+1)^0,w,c
  3770  000B74  22DA               	addwfc	fsr2h,f,c
  3771  000B76  50DE               	movf	postinc2,w,c
  3772  000B78  10DE               	iorwf	postinc2,w,c
  3773  000B7A  B4D8               	btfsc	status,2,c
  3774  000B7C  EFC2  F005         	goto	i1u75_21
  3775  000B80  EFC4  F005         	goto	i1u75_20
  3776  000B84                     i1u75_21:
  3777  000B84  EFDF  F005         	goto	i1l1631
  3778  000B88                     i1u75_20:
  3779  000B88  EE20 F004          	lfsr	2,4
  3780  000B8C  5003               	movf	fputc@fp^0,w,c
  3781  000B8E  26D9               	addwf	fsr2l,f,c
  3782  000B90  5004               	movf	(fputc@fp+1)^0,w,c
  3783  000B92  22DA               	addwfc	fsr2h,f,c
  3784  000B94  EE10 F002          	lfsr	1,2
  3785  000B98  5003               	movf	fputc@fp^0,w,c
  3786  000B9A  26E1               	addwf	fsr1l,f,c
  3787  000B9C  5004               	movf	(fputc@fp+1)^0,w,c
  3788  000B9E  22E2               	addwfc	fsr1h,f,c
  3789  000BA0  50DE               	movf	postinc2,w,c
  3790  000BA2  5CE6               	subwf	postinc1,w,c
  3791  000BA4  50E6               	movf	postinc1,w,c
  3792  000BA6  0A80               	xorlw	128
  3793  000BA8  6E09               	movwf	(??_fputc+4)^0,c
  3794  000BAA  50DE               	movf	postinc2,w,c
  3795  000BAC  0A80               	xorlw	128
  3796  000BAE  5809               	subwfb	(??_fputc+4)^0,w,c
  3797  000BB0  B0D8               	btfsc	status,0,c
  3798  000BB2  EFDD  F005         	goto	i1u76_21
  3799  000BB6  EFDF  F005         	goto	i1u76_20
  3800  000BBA                     i1u76_21:
  3801  000BBA  EF02  F006         	goto	i1l997
  3802  000BBE                     i1u76_20:
  3803  000BBE                     i1l1631:
  3804  000BBE  EE20 F002          	lfsr	2,2
  3805  000BC2  5003               	movf	fputc@fp^0,w,c
  3806  000BC4  26D9               	addwf	fsr2l,f,c
  3807  000BC6  5004               	movf	(fputc@fp+1)^0,w,c
  3808  000BC8  22DA               	addwfc	fsr2h,f,c
  3809  000BCA  CFDE F005          	movff	postinc2,??_fputc
  3810  000BCE  CFDD F006          	movff	postdec2,??_fputc+1
  3811  000BD2  C003  FFD9         	movff	fputc@fp,fsr2l
  3812  000BD6  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3813  000BDA  CFDE F007          	movff	postinc2,??_fputc+2
  3814  000BDE  CFDD F008          	movff	postdec2,??_fputc+3
  3815  000BE2  5005               	movf	??_fputc^0,w,c
  3816  000BE4  2407               	addwf	(??_fputc+2)^0,w,c
  3817  000BE6  6ED9               	movwf	fsr2l,c
  3818  000BE8  5006               	movf	(??_fputc+1)^0,w,c
  3819  000BEA  2008               	addwfc	(??_fputc+3)^0,w,c
  3820  000BEC  6EDA               	movwf	fsr2h,c
  3821  000BEE  C001  FFDF         	movff	fputc@c,indf2
  3822  000BF2  EE20 F002          	lfsr	2,2
  3823  000BF6  5003               	movf	fputc@fp^0,w,c
  3824  000BF8  26D9               	addwf	fsr2l,f,c
  3825  000BFA  5004               	movf	(fputc@fp+1)^0,w,c
  3826  000BFC  22DA               	addwfc	fsr2h,f,c
  3827  000BFE  2ADE               	incf	postinc2,f,c
  3828  000C00  0E00               	movlw	0
  3829  000C02  22DD               	addwfc	postdec2,f,c
  3830  000C04                     i1l997:
  3831  000C04  0012               	return		;funcret
  3832  000C06                     __end_of_fputc:
  3833                           	opt callstack 0
  3834                           
  3835 ;; *************** function _putch *****************
  3836 ;; Defined at:
  3837 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  c               1    wreg     unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  c               1    0[COMRAM] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3851 ;;      Params:         0       0       0       0
  3852 ;;      Locals:         0       0       0       0
  3853 ;;      Temps:          0       0       0       0
  3854 ;;      Totals:         0       0       0       0
  3855 ;;Total ram usage:        0 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_fputc
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text20
  3865  0012B8                     __ptext20:
  3866                           	opt callstack 0
  3867  0012B8                     _putch:
  3868                           	opt callstack 22
  3869  0012B8  0012               	return		;funcret
  3870  0012BA                     __end_of_putch:
  3871                           	opt callstack 0
  3872                           
  3873 ;; *************** function _abs *****************
  3874 ;; Defined at:
  3875 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  a               2   18[COMRAM] int 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  2   18[COMRAM] int 
  3882 ;; Registers used:
  3883 ;;		wreg, status,2, status,0
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3889 ;;      Params:         2       0       0       0
  3890 ;;      Locals:         0       0       0       0
  3891 ;;      Temps:          2       0       0       0
  3892 ;;      Totals:         4       0       0       0
  3893 ;;Total ram usage:        4 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; This function calls:
  3896 ;;		Nothing
  3897 ;; This function is called by:
  3898 ;;		_dtoa
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text21
  3903  0010AE                     __ptext21:
  3904                           	opt callstack 0
  3905  0010AE                     _abs:
  3906                           	opt callstack 22
  3907  0010AE  BE14               	btfsc	(abs@a+1)^0,7,c
  3908  0010B0  EF64  F008         	goto	i1u83_20
  3909  0010B4  5014               	movf	(abs@a+1)^0,w,c
  3910  0010B6  E106               	bnz	i1u83_21
  3911  0010B8  0413               	decf	abs@a^0,w,c
  3912  0010BA  B0D8               	btfsc	status,0,c
  3913  0010BC  EF62  F008         	goto	i1u83_21
  3914  0010C0  EF64  F008         	goto	i1u83_20
  3915  0010C4                     i1u83_21:
  3916  0010C4  EF72  F008         	goto	i1l982
  3917  0010C8                     i1u83_20:
  3918  0010C8  C013  F015         	movff	abs@a,??_abs
  3919  0010CC  C014  F016         	movff	abs@a+1,??_abs+1
  3920  0010D0  1E15               	comf	??_abs^0,f,c
  3921  0010D2  1E16               	comf	(??_abs+1)^0,f,c
  3922  0010D4  4A15               	infsnz	??_abs^0,f,c
  3923  0010D6  2A16               	incf	(??_abs+1)^0,f,c
  3924  0010D8  C015  F013         	movff	??_abs,?_abs
  3925  0010DC  C016  F014         	movff	??_abs+1,?_abs+1
  3926  0010E0  EF76  F008         	goto	i1l985
  3927  0010E4                     i1l982:
  3928  0010E4  C013  F013         	movff	abs@a,?_abs
  3929  0010E8  C014  F014         	movff	abs@a+1,?_abs+1
  3930  0010EC                     i1l985:
  3931  0010EC  0012               	return		;funcret
  3932  0010EE                     __end_of_abs:
  3933                           	opt callstack 0
  3934                           
  3935 ;; *************** function ___aomod *****************
  3936 ;; Defined at:
  3937 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;  dividend        8    0[COMRAM] long long 
  3940 ;;  divisor         8    8[COMRAM] long long 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  sign            1   17[COMRAM] unsigned char 
  3943 ;;  counter         1   16[COMRAM] unsigned char 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  8    0[COMRAM] long long 
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, status,0
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3953 ;;      Params:        16       0       0       0
  3954 ;;      Locals:         2       0       0       0
  3955 ;;      Temps:          0       0       0       0
  3956 ;;      Totals:        18       0       0       0
  3957 ;;Total ram usage:       18 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		_dtoa
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text22
  3967  0009D8                     __ptext22:
  3968                           	opt callstack 0
  3969  0009D8                     ___aomod:
  3970                           	opt callstack 22
  3971  0009D8  0E00               	movlw	0
  3972  0009DA  6E12               	movwf	___aomod@sign^0,c
  3973  0009DC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3974  0009DE  EFF5  F004         	goto	i1u91_20
  3975  0009E2  EFF3  F004         	goto	i1u91_21
  3976  0009E6                     i1u91_21:
  3977  0009E6  EF07  F005         	goto	i1l1731
  3978  0009EA                     i1u91_20:
  3979  0009EA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3980  0009EC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3981  0009EE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3982  0009F0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3983  0009F2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3984  0009F4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3985  0009F6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3986  0009F8  6C01               	negf	___aomod@dividend^0,c
  3987  0009FA  0E00               	movlw	0
  3988  0009FC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3989  0009FE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3990  000A00  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3991  000A02  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3992  000A04  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3993  000A06  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3994  000A08  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3995  000A0A  0E01               	movlw	1
  3996  000A0C  6E12               	movwf	___aomod@sign^0,c
  3997  000A0E                     i1l1731:
  3998  000A0E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3999  000A10  EF0E  F005         	goto	i1u92_20
  4000  000A14  EF0C  F005         	goto	i1u92_21
  4001  000A18                     i1u92_21:
  4002  000A18  EF1E  F005         	goto	i1l1735
  4003  000A1C                     i1u92_20:
  4004  000A1C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4005  000A1E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4006  000A20  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4007  000A22  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4008  000A24  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4009  000A26  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  4010  000A28  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  4011  000A2A  6C09               	negf	___aomod@divisor^0,c
  4012  000A2C  0E00               	movlw	0
  4013  000A2E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  4014  000A30  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  4015  000A32  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  4016  000A34  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  4017  000A36  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  4018  000A38  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  4019  000A3A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  4020  000A3C                     i1l1735:
  4021  000A3C  5009               	movf	___aomod@divisor^0,w,c
  4022  000A3E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  4023  000A40  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  4024  000A42  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  4025  000A44  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  4026  000A46  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  4027  000A48  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  4028  000A4A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  4029  000A4C  B4D8               	btfsc	status,2,c
  4030  000A4E  EF2B  F005         	goto	i1u93_21
  4031  000A52  EF2D  F005         	goto	i1u93_20
  4032  000A56                     i1u93_21:
  4033  000A56  EF75  F005         	goto	i1l1751
  4034  000A5A                     i1u93_20:
  4035  000A5A  0E01               	movlw	1
  4036  000A5C  6E11               	movwf	___aomod@counter^0,c
  4037  000A5E  EF3B  F005         	goto	i1l1741
  4038  000A62                     i1l1739:
  4039  000A62  90D8               	bcf	status,0,c
  4040  000A64  3609               	rlcf	___aomod@divisor^0,f,c
  4041  000A66  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  4042  000A68  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  4043  000A6A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  4044  000A6C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  4045  000A6E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  4046  000A70  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  4047  000A72  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  4048  000A74  2A11               	incf	___aomod@counter^0,f,c
  4049  000A76                     i1l1741:
  4050  000A76  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  4051  000A78  EF40  F005         	goto	i1u94_21
  4052  000A7C  EF42  F005         	goto	i1u94_20
  4053  000A80                     i1u94_21:
  4054  000A80  EF31  F005         	goto	i1l1739
  4055  000A84                     i1u94_20:
  4056  000A84                     i1l1743:
  4057  000A84  5009               	movf	___aomod@divisor^0,w,c
  4058  000A86  5C01               	subwf	___aomod@dividend^0,w,c
  4059  000A88  500A               	movf	(___aomod@divisor+1)^0,w,c
  4060  000A8A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  4061  000A8C  500B               	movf	(___aomod@divisor+2)^0,w,c
  4062  000A8E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  4063  000A90  500C               	movf	(___aomod@divisor+3)^0,w,c
  4064  000A92  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  4065  000A94  500D               	movf	(___aomod@divisor+4)^0,w,c
  4066  000A96  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  4067  000A98  500E               	movf	(___aomod@divisor+5)^0,w,c
  4068  000A9A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  4069  000A9C  500F               	movf	(___aomod@divisor+6)^0,w,c
  4070  000A9E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  4071  000AA0  5010               	movf	(___aomod@divisor+7)^0,w,c
  4072  000AA2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  4073  000AA4  A0D8               	btfss	status,0,c
  4074  000AA6  EF57  F005         	goto	i1u95_21
  4075  000AAA  EF59  F005         	goto	i1u95_20
  4076  000AAE                     i1u95_21:
  4077  000AAE  EF69  F005         	goto	i1l1747
  4078  000AB2                     i1u95_20:
  4079  000AB2  5009               	movf	___aomod@divisor^0,w,c
  4080  000AB4  5E01               	subwf	___aomod@dividend^0,f,c
  4081  000AB6  500A               	movf	(___aomod@divisor+1)^0,w,c
  4082  000AB8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  4083  000ABA  500B               	movf	(___aomod@divisor+2)^0,w,c
  4084  000ABC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  4085  000ABE  500C               	movf	(___aomod@divisor+3)^0,w,c
  4086  000AC0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  4087  000AC2  500D               	movf	(___aomod@divisor+4)^0,w,c
  4088  000AC4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  4089  000AC6  500E               	movf	(___aomod@divisor+5)^0,w,c
  4090  000AC8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  4091  000ACA  500F               	movf	(___aomod@divisor+6)^0,w,c
  4092  000ACC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  4093  000ACE  5010               	movf	(___aomod@divisor+7)^0,w,c
  4094  000AD0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  4095  000AD2                     i1l1747:
  4096  000AD2  90D8               	bcf	status,0,c
  4097  000AD4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  4098  000AD6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  4099  000AD8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  4100  000ADA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  4101  000ADC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  4102  000ADE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  4103  000AE0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  4104  000AE2  3209               	rrcf	___aomod@divisor^0,f,c
  4105  000AE4  2E11               	decfsz	___aomod@counter^0,f,c
  4106  000AE6  EF42  F005         	goto	i1l1743
  4107  000AEA                     i1l1751:
  4108  000AEA  5012               	movf	___aomod@sign^0,w,c
  4109  000AEC  B4D8               	btfsc	status,2,c
  4110  000AEE  EF7B  F005         	goto	i1u96_21
  4111  000AF2  EF7D  F005         	goto	i1u96_20
  4112  000AF6                     i1u96_21:
  4113  000AF6  EF8D  F005         	goto	i1l1755
  4114  000AFA                     i1u96_20:
  4115  000AFA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4116  000AFC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4117  000AFE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4118  000B00  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4119  000B02  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4120  000B04  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4121  000B06  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4122  000B08  6C01               	negf	___aomod@dividend^0,c
  4123  000B0A  0E00               	movlw	0
  4124  000B0C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4125  000B0E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4126  000B10  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4127  000B12  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4128  000B14  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4129  000B16  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4130  000B18  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4131  000B1A                     i1l1755:
  4132  000B1A  C001  F001         	movff	___aomod@dividend,?___aomod
  4133  000B1E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4134  000B22  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4135  000B26  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4136  000B2A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4137  000B2E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4138  000B32  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4139  000B36  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  4140  000B3A  0012               	return		;funcret
  4141  000B3C                     __end_of___aomod:
  4142                           	opt callstack 0
  4143                           
  4144 ;; *************** function ___aodiv *****************
  4145 ;; Defined at:
  4146 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  dividend        8    0[COMRAM] long long 
  4149 ;;  divisor         8    8[COMRAM] long long 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  quotient        8   18[COMRAM] long long 
  4152 ;;  sign            1   17[COMRAM] unsigned char 
  4153 ;;  counter         1   16[COMRAM] unsigned char 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  8    0[COMRAM] long long 
  4156 ;; Registers used:
  4157 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4163 ;;      Params:        16       0       0       0
  4164 ;;      Locals:        10       0       0       0
  4165 ;;      Temps:          0       0       0       0
  4166 ;;      Totals:        26       0       0       0
  4167 ;;Total ram usage:       26 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; This function calls:
  4170 ;;		Nothing
  4171 ;; This function is called by:
  4172 ;;		_dtoa
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text23
  4177  000850                     __ptext23:
  4178                           	opt callstack 0
  4179  000850                     ___aodiv:
  4180                           	opt callstack 22
  4181  000850  0E00               	movlw	0
  4182  000852  6E12               	movwf	___aodiv@sign^0,c
  4183  000854  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  4184  000856  EF31  F004         	goto	i1u84_20
  4185  00085A  EF2F  F004         	goto	i1u84_21
  4186  00085E                     i1u84_21:
  4187  00085E  EF43  F004         	goto	i1l1687
  4188  000862                     i1u84_20:
  4189  000862  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  4190  000864  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  4191  000866  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  4192  000868  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  4193  00086A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  4194  00086C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  4195  00086E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  4196  000870  6C09               	negf	___aodiv@divisor^0,c
  4197  000872  0E00               	movlw	0
  4198  000874  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  4199  000876  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  4200  000878  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  4201  00087A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  4202  00087C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  4203  00087E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  4204  000880  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  4205  000882  0E01               	movlw	1
  4206  000884  6E12               	movwf	___aodiv@sign^0,c
  4207  000886                     i1l1687:
  4208  000886  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  4209  000888  EF4A  F004         	goto	i1u85_20
  4210  00088C  EF48  F004         	goto	i1u85_21
  4211  000890                     i1u85_21:
  4212  000890  EF5C  F004         	goto	i1l1693
  4213  000894                     i1u85_20:
  4214  000894  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  4215  000896  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  4216  000898  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  4217  00089A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  4218  00089C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  4219  00089E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  4220  0008A0  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  4221  0008A2  6C01               	negf	___aodiv@dividend^0,c
  4222  0008A4  0E00               	movlw	0
  4223  0008A6  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  4224  0008A8  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  4225  0008AA  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  4226  0008AC  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  4227  0008AE  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  4228  0008B0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4229  0008B2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4230  0008B4  0E01               	movlw	1
  4231  0008B6  1A12               	xorwf	___aodiv@sign^0,f,c
  4232  0008B8                     i1l1693:
  4233  0008B8  EE20  F013         	lfsr	2,___aodiv@quotient
  4234  0008BC  0E07               	movlw	7
  4235  0008BE                     i1u86_21:
  4236  0008BE  6ADE               	clrf	postinc2,c
  4237  0008C0  06E8               	decf	wreg,f,c
  4238  0008C2  E2FD               	bc	i1u86_21
  4239  0008C4  5009               	movf	___aodiv@divisor^0,w,c
  4240  0008C6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4241  0008C8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4242  0008CA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4243  0008CC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4244  0008CE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4245  0008D0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4246  0008D2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4247  0008D4  B4D8               	btfsc	status,2,c
  4248  0008D6  EF6F  F004         	goto	i1u87_21
  4249  0008DA  EF71  F004         	goto	i1u87_20
  4250  0008DE                     i1u87_21:
  4251  0008DE  EFC3  F004         	goto	i1l1715
  4252  0008E2                     i1u87_20:
  4253  0008E2  0E01               	movlw	1
  4254  0008E4  6E11               	movwf	___aodiv@counter^0,c
  4255  0008E6  EF7F  F004         	goto	i1l1701
  4256  0008EA                     i1l1699:
  4257  0008EA  90D8               	bcf	status,0,c
  4258  0008EC  3609               	rlcf	___aodiv@divisor^0,f,c
  4259  0008EE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4260  0008F0  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4261  0008F2  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4262  0008F4  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4263  0008F6  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4264  0008F8  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4265  0008FA  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4266  0008FC  2A11               	incf	___aodiv@counter^0,f,c
  4267  0008FE                     i1l1701:
  4268  0008FE  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4269  000900  EF84  F004         	goto	i1u88_21
  4270  000904  EF86  F004         	goto	i1u88_20
  4271  000908                     i1u88_21:
  4272  000908  EF75  F004         	goto	i1l1699
  4273  00090C                     i1u88_20:
  4274  00090C                     i1l1703:
  4275  00090C  90D8               	bcf	status,0,c
  4276  00090E  3613               	rlcf	___aodiv@quotient^0,f,c
  4277  000910  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4278  000912  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4279  000914  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4280  000916  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4281  000918  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4282  00091A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4283  00091C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4284  00091E  5009               	movf	___aodiv@divisor^0,w,c
  4285  000920  5C01               	subwf	___aodiv@dividend^0,w,c
  4286  000922  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4287  000924  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4288  000926  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4289  000928  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4290  00092A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4291  00092C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4292  00092E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4293  000930  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4294  000932  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4295  000934  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4296  000936  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4297  000938  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4298  00093A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4299  00093C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4300  00093E  A0D8               	btfss	status,0,c
  4301  000940  EFA4  F004         	goto	i1u89_21
  4302  000944  EFA6  F004         	goto	i1u89_20
  4303  000948                     i1u89_21:
  4304  000948  EFB7  F004         	goto	i1l1711
  4305  00094C                     i1u89_20:
  4306  00094C  5009               	movf	___aodiv@divisor^0,w,c
  4307  00094E  5E01               	subwf	___aodiv@dividend^0,f,c
  4308  000950  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4309  000952  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4310  000954  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4311  000956  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4312  000958  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4313  00095A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4314  00095C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4315  00095E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4316  000960  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4317  000962  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4318  000964  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4319  000966  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4320  000968  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4321  00096A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4322  00096C  8013               	bsf	___aodiv@quotient^0,0,c
  4323  00096E                     i1l1711:
  4324  00096E  90D8               	bcf	status,0,c
  4325  000970  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4326  000972  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4327  000974  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4328  000976  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4329  000978  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4330  00097A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4331  00097C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4332  00097E  3209               	rrcf	___aodiv@divisor^0,f,c
  4333  000980  2E11               	decfsz	___aodiv@counter^0,f,c
  4334  000982  EF86  F004         	goto	i1l1703
  4335  000986                     i1l1715:
  4336  000986  5012               	movf	___aodiv@sign^0,w,c
  4337  000988  B4D8               	btfsc	status,2,c
  4338  00098A  EFC9  F004         	goto	i1u90_21
  4339  00098E  EFCB  F004         	goto	i1u90_20
  4340  000992                     i1u90_21:
  4341  000992  EFDB  F004         	goto	i1l1719
  4342  000996                     i1u90_20:
  4343  000996  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4344  000998  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4345  00099A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4346  00099C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4347  00099E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4348  0009A0  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4349  0009A2  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4350  0009A4  6C13               	negf	___aodiv@quotient^0,c
  4351  0009A6  0E00               	movlw	0
  4352  0009A8  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4353  0009AA  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4354  0009AC  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4355  0009AE  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4356  0009B0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4357  0009B2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4358  0009B4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4359  0009B6                     i1l1719:
  4360  0009B6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4361  0009BA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4362  0009BE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4363  0009C2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4364  0009C6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4365  0009CA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4366  0009CE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4367  0009D2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4368  0009D6  0012               	return		;funcret
  4369  0009D8                     __end_of___aodiv:
  4370                           	opt callstack 0
  4371                           
  4372 ;; *************** function ___lwmod *****************
  4373 ;; Defined at:
  4374 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  dividend        2    0[COMRAM] unsigned int 
  4377 ;;  divisor         2    2[COMRAM] unsigned int 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  counter         1    4[COMRAM] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  2    0[COMRAM] unsigned int 
  4382 ;; Registers used:
  4383 ;;		wreg, status,2, status,0
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4389 ;;      Params:         4       0       0       0
  4390 ;;      Locals:         1       0       0       0
  4391 ;;      Temps:          0       0       0       0
  4392 ;;      Totals:         5       0       0       0
  4393 ;;Total ram usage:        5 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_tcInt
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text24
  4403  000E68                     __ptext24:
  4404                           	opt callstack 0
  4405  000E68                     ___lwmod:
  4406                           	opt callstack 26
  4407  000E68  5003               	movf	___lwmod@divisor^0,w,c
  4408  000E6A  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  4409  000E6C  B4D8               	btfsc	status,2,c
  4410  000E6E  EF3B  F007         	goto	i1u123_21
  4411  000E72  EF3D  F007         	goto	i1u123_20
  4412  000E76                     i1u123_21:
  4413  000E76  EF61  F007         	goto	i1l808
  4414  000E7A                     i1u123_20:
  4415  000E7A  0E01               	movlw	1
  4416  000E7C  6E05               	movwf	___lwmod@counter^0,c
  4417  000E7E  EF45  F007         	goto	i1l2017
  4418  000E82                     i1l2015:
  4419  000E82  90D8               	bcf	status,0,c
  4420  000E84  3603               	rlcf	___lwmod@divisor^0,f,c
  4421  000E86  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  4422  000E88  2A05               	incf	___lwmod@counter^0,f,c
  4423  000E8A                     i1l2017:
  4424  000E8A  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  4425  000E8C  EF4A  F007         	goto	i1u124_21
  4426  000E90  EF4C  F007         	goto	i1u124_20
  4427  000E94                     i1u124_21:
  4428  000E94  EF41  F007         	goto	i1l2015
  4429  000E98                     i1u124_20:
  4430  000E98                     i1l2019:
  4431  000E98  5003               	movf	___lwmod@divisor^0,w,c
  4432  000E9A  5C01               	subwf	___lwmod@dividend^0,w,c
  4433  000E9C  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4434  000E9E  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  4435  000EA0  A0D8               	btfss	status,0,c
  4436  000EA2  EF55  F007         	goto	i1u125_21
  4437  000EA6  EF57  F007         	goto	i1u125_20
  4438  000EAA                     i1u125_21:
  4439  000EAA  EF5B  F007         	goto	i1l2023
  4440  000EAE                     i1u125_20:
  4441  000EAE  5003               	movf	___lwmod@divisor^0,w,c
  4442  000EB0  5E01               	subwf	___lwmod@dividend^0,f,c
  4443  000EB2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4444  000EB4  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  4445  000EB6                     i1l2023:
  4446  000EB6  90D8               	bcf	status,0,c
  4447  000EB8  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  4448  000EBA  3203               	rrcf	___lwmod@divisor^0,f,c
  4449  000EBC  2E05               	decfsz	___lwmod@counter^0,f,c
  4450  000EBE  EF4C  F007         	goto	i1l2019
  4451  000EC2                     i1l808:
  4452  000EC2  C001  F001         	movff	___lwmod@dividend,?___lwmod
  4453  000EC6  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  4454  000ECA  0012               	return		;funcret
  4455  000ECC                     __end_of___lwmod:
  4456                           	opt callstack 0
  4457                           
  4458 ;; *************** function ___lwdiv *****************
  4459 ;; Defined at:
  4460 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  dividend        2    0[COMRAM] unsigned int 
  4463 ;;  divisor         2    2[COMRAM] unsigned int 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  quotient        2    4[COMRAM] unsigned int 
  4466 ;;  counter         1    6[COMRAM] unsigned char 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  2    0[COMRAM] unsigned int 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4476 ;;      Params:         4       0       0       0
  4477 ;;      Locals:         3       0       0       0
  4478 ;;      Temps:          0       0       0       0
  4479 ;;      Totals:         7       0       0       0
  4480 ;;Total ram usage:        7 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_tcInt
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text25
  4490  000DF4                     __ptext25:
  4491                           	opt callstack 0
  4492  000DF4                     ___lwdiv:
  4493                           	opt callstack 26
  4494  000DF4  0E00               	movlw	0
  4495  000DF6  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  4496  000DF8  0E00               	movlw	0
  4497  000DFA  6E05               	movwf	___lwdiv@quotient^0,c
  4498  000DFC  5003               	movf	___lwdiv@divisor^0,w,c
  4499  000DFE  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4500  000E00  B4D8               	btfsc	status,2,c
  4501  000E02  EF05  F007         	goto	i1u120_21
  4502  000E06  EF07  F007         	goto	i1u120_20
  4503  000E0A                     i1u120_21:
  4504  000E0A  EF2F  F007         	goto	i1l798
  4505  000E0E                     i1u120_20:
  4506  000E0E  0E01               	movlw	1
  4507  000E10  6E07               	movwf	___lwdiv@counter^0,c
  4508  000E12  EF0F  F007         	goto	i1l1997
  4509  000E16                     i1l1995:
  4510  000E16  90D8               	bcf	status,0,c
  4511  000E18  3603               	rlcf	___lwdiv@divisor^0,f,c
  4512  000E1A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4513  000E1C  2A07               	incf	___lwdiv@counter^0,f,c
  4514  000E1E                     i1l1997:
  4515  000E1E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4516  000E20  EF14  F007         	goto	i1u121_21
  4517  000E24  EF16  F007         	goto	i1u121_20
  4518  000E28                     i1u121_21:
  4519  000E28  EF0B  F007         	goto	i1l1995
  4520  000E2C                     i1u121_20:
  4521  000E2C                     i1l1999:
  4522  000E2C  90D8               	bcf	status,0,c
  4523  000E2E  3605               	rlcf	___lwdiv@quotient^0,f,c
  4524  000E30  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4525  000E32  5003               	movf	___lwdiv@divisor^0,w,c
  4526  000E34  5C01               	subwf	___lwdiv@dividend^0,w,c
  4527  000E36  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4528  000E38  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4529  000E3A  A0D8               	btfss	status,0,c
  4530  000E3C  EF22  F007         	goto	i1u122_21
  4531  000E40  EF24  F007         	goto	i1u122_20
  4532  000E44                     i1u122_21:
  4533  000E44  EF29  F007         	goto	i1l2007
  4534  000E48                     i1u122_20:
  4535  000E48  5003               	movf	___lwdiv@divisor^0,w,c
  4536  000E4A  5E01               	subwf	___lwdiv@dividend^0,f,c
  4537  000E4C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4538  000E4E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4539  000E50  8005               	bsf	___lwdiv@quotient^0,0,c
  4540  000E52                     i1l2007:
  4541  000E52  90D8               	bcf	status,0,c
  4542  000E54  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4543  000E56  3203               	rrcf	___lwdiv@divisor^0,f,c
  4544  000E58  2E07               	decfsz	___lwdiv@counter^0,f,c
  4545  000E5A  EF16  F007         	goto	i1l1999
  4546  000E5E                     i1l798:
  4547  000E5E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4548  000E62  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4549  000E66  0012               	return		;funcret
  4550  000E68                     __end_of___lwdiv:
  4551                           	opt callstack 0
  4552                           
  4553 ;; *************** function _LCDPutStr *****************
  4554 ;; Defined at:
  4555 ;;		line 147 in file "lcd.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  str             2    5[COMRAM] PTR const unsigned char 
  4558 ;;		 -> tcInt@str1(16), 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  i               1    7[COMRAM] unsigned char 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4570 ;;      Params:         2       0       0       0
  4571 ;;      Locals:         1       0       0       0
  4572 ;;      Temps:          0       0       0       0
  4573 ;;      Totals:         3       0       0       0
  4574 ;;Total ram usage:        3 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    2
  4577 ;; This function calls:
  4578 ;;		i1_LCDPutChar
  4579 ;; This function is called by:
  4580 ;;		_tcInt
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text26
  4585  00116A                     __ptext26:
  4586                           	opt callstack 0
  4587  00116A                     _LCDPutStr:
  4588                           	opt callstack 24
  4589  00116A                     
  4590                           ;lcd.c: 148:     uint8_t i = 0;
  4591  00116A  0E00               	movlw	0
  4592  00116C  6E08               	movwf	LCDPutStr@i^0,c
  4593                           
  4594                           ;lcd.c: 151:     while (str[i]) {
  4595  00116E  EFC3  F008         	goto	i1l1987
  4596  001172                     i1l1983:
  4597                           
  4598                           ;lcd.c: 153:         LCDPutChar(str[i++]);
  4599  001172  5008               	movf	LCDPutStr@i^0,w,c
  4600  001174  2406               	addwf	LCDPutStr@str^0,w,c
  4601  001176  6ED9               	movwf	fsr2l,c
  4602  001178  0E00               	movlw	0
  4603  00117A  2007               	addwfc	(LCDPutStr@str+1)^0,w,c
  4604  00117C  6EDA               	movwf	fsr2h,c
  4605  00117E  50DF               	movf	indf2,w,c
  4606  001180  EC08  F009         	call	i1_LCDPutChar
  4607  001184  2A08               	incf	LCDPutStr@i^0,f,c
  4608  001186                     i1l1987:
  4609                           
  4610                           ;lcd.c: 151:     while (str[i]) {
  4611  001186  5008               	movf	LCDPutStr@i^0,w,c
  4612  001188  2406               	addwf	LCDPutStr@str^0,w,c
  4613  00118A  6ED9               	movwf	fsr2l,c
  4614  00118C  0E00               	movlw	0
  4615  00118E  2007               	addwfc	(LCDPutStr@str+1)^0,w,c
  4616  001190  6EDA               	movwf	fsr2h,c
  4617  001192  50DF               	movf	indf2,w,c
  4618  001194  A4D8               	btfss	status,2,c
  4619  001196  EFCF  F008         	goto	i1u119_21
  4620  00119A  EFD1  F008         	goto	i1u119_20
  4621  00119E                     i1u119_21:
  4622  00119E  EFB9  F008         	goto	i1l1983
  4623  0011A2                     i1u119_20:
  4624  0011A2  0012               	return		;funcret
  4625  0011A4                     __end_of_LCDPutStr:
  4626                           	opt callstack 0
  4627                           
  4628 ;; *************** function i1_LCDPutChar *****************
  4629 ;; Defined at:
  4630 ;;		line 119 in file "lcd.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  ch              1    wreg     unsigned char 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  ch              1    4[COMRAM] unsigned char 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4644 ;;      Params:         0       0       0       0
  4645 ;;      Locals:         1       0       0       0
  4646 ;;      Temps:          1       0       0       0
  4647 ;;      Totals:         2       0       0       0
  4648 ;;Total ram usage:        2 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    1
  4651 ;; This function calls:
  4652 ;;		i1_LCDWriteNibble
  4653 ;; This function is called by:
  4654 ;;		_tcInt
  4655 ;;		_LCDPutStr
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text27
  4660  001210                     __ptext27:
  4661                           	opt callstack 0
  4662  001210                     i1_LCDPutChar:
  4663                           	opt callstack 25
  4664                           
  4665                           ;incstack = 0
  4666                           ;i1LCDPutChar@ch stored from wreg
  4667  001210  6E05               	movwf	i1LCDPutChar@ch^0,c
  4668  001212                     
  4669                           ;lcd.c: 120:     _delay((unsigned long)((5)*(40000000/4000.0)));
  4670  001212  0E41               	movlw	65
  4671  001214  6E04               	movwf	??i1_LCDPutChar^0,c
  4672  001216  0EEE               	movlw	238
  4673  001218                     i1u156_27:
  4674  001218  2EE8               	decfsz	wreg,f,c
  4675  00121A  D7FE               	bra	i1u156_27
  4676  00121C  2E04               	decfsz	??i1_LCDPutChar^0,f,c
  4677  00121E  D7FC               	bra	i1u156_27
  4678  001220  F000 F000          	nop2	
  4679  001224                     
  4680                           ;lcd.c: 123:     LCDWriteNibble(ch, 1);
  4681  001224  0E01               	movlw	1
  4682  001226  6E01               	movwf	i1LCDWriteNibble@rs^0,c
  4683  001228  5005               	movf	i1LCDPutChar@ch^0,w,c
  4684  00122A  ECB1  F006         	call	i1_LCDWriteNibble
  4685  00122E                     
  4686                           ;lcd.c: 126:     ch = (ch << 4);
  4687  00122E  3805               	swapf	i1LCDPutChar@ch^0,w,c
  4688  001230  0BF0               	andlw	240
  4689  001232  6E05               	movwf	i1LCDPutChar@ch^0,c
  4690  001234                     
  4691                           ;lcd.c: 129:     LCDWriteNibble(ch, 1);
  4692  001234  0E01               	movlw	1
  4693  001236  6E01               	movwf	i1LCDWriteNibble@rs^0,c
  4694  001238  5005               	movf	i1LCDPutChar@ch^0,w,c
  4695  00123A  ECB1  F006         	call	i1_LCDWriteNibble
  4696  00123E  0012               	return		;funcret
  4697  001240                     __end_ofi1_LCDPutChar:
  4698                           	opt callstack 0
  4699                           
  4700 ;; *************** function i1_LCDWriteNibble *****************
  4701 ;; Defined at:
  4702 ;;		line 89 in file "lcd.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  ch              1    wreg     unsigned char 
  4705 ;;  rs              1    0[COMRAM] unsigned char 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  ch              1    2[COMRAM] unsigned char 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4717 ;;      Params:         1       0       0       0
  4718 ;;      Locals:         1       0       0       0
  4719 ;;      Temps:          1       0       0       0
  4720 ;;      Totals:         3       0       0       0
  4721 ;;Total ram usage:        3 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		i1_LCDPutChar
  4727 ;;		i1_LCDPutCmd
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text28
  4732  000D62                     __ptext28:
  4733                           	opt callstack 0
  4734  000D62                     i1_LCDWriteNibble:
  4735                           	opt callstack 25
  4736                           
  4737                           ;incstack = 0
  4738                           ;i1LCDWriteNibble@ch stored from wreg
  4739  000D62  6E03               	movwf	i1LCDWriteNibble@ch^0,c
  4740  000D64                     
  4741                           ;lcd.c: 91:     ch = (ch >> 4);
  4742  000D64  3803               	swapf	i1LCDWriteNibble@ch^0,w,c
  4743  000D66  0B0F               	andlw	15
  4744  000D68  6E03               	movwf	i1LCDWriteNibble@ch^0,c
  4745                           
  4746                           ;lcd.c: 94:     ch = (ch & 0x0F);
  4747  000D6A  5003               	movf	i1LCDWriteNibble@ch^0,w,c
  4748  000D6C  0B0F               	andlw	15
  4749  000D6E  6E03               	movwf	i1LCDWriteNibble@ch^0,c
  4750                           
  4751                           ;lcd.c: 95:     PORTCbits.RC2 = ch & 0xF1;
  4752  000D70  C003  F002         	movff	i1LCDWriteNibble@ch,??i1_LCDWriteNibble
  4753  000D74  0EF1               	movlw	241
  4754  000D76  1602               	andwf	??i1_LCDWriteNibble^0,f,c
  4755  000D78  4602               	rlncf	??i1_LCDWriteNibble^0,f,c
  4756  000D7A  4602               	rlncf	??i1_LCDWriteNibble^0,f,c
  4757  000D7C  5082               	movf	130,w,c	;volatile
  4758  000D7E  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4759  000D80  0BFB               	andlw	-5
  4760  000D82  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4761  000D84  6E82               	movwf	130,c	;volatile
  4762                           
  4763                           ;lcd.c: 96:     PORTCbits.RC3 = (ch & 0xF2) >> 1;
  4764  000D86  C003  F002         	movff	i1LCDWriteNibble@ch,??i1_LCDWriteNibble
  4765  000D8A  90D8               	bcf	status,0,c
  4766  000D8C  3202               	rrcf	??i1_LCDWriteNibble^0,f,c
  4767  000D8E  0E79               	movlw	121
  4768  000D90  1602               	andwf	??i1_LCDWriteNibble^0,f,c
  4769  000D92  4602               	rlncf	??i1_LCDWriteNibble^0,f,c
  4770  000D94  4602               	rlncf	??i1_LCDWriteNibble^0,f,c
  4771  000D96  4602               	rlncf	??i1_LCDWriteNibble^0,f,c
  4772  000D98  5082               	movf	130,w,c	;volatile
  4773  000D9A  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4774  000D9C  0BF7               	andlw	-9
  4775  000D9E  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4776  000DA0  6E82               	movwf	130,c	;volatile
  4777                           
  4778                           ;lcd.c: 97:     PORTDbits.RD0 = (ch & 0xF4) >> 2;
  4779  000DA2  C003  F002         	movff	i1LCDWriteNibble@ch,??i1_LCDWriteNibble
  4780  000DA6  90D8               	bcf	status,0,c
  4781  000DA8  3202               	rrcf	??i1_LCDWriteNibble^0,f,c
  4782  000DAA  90D8               	bcf	status,0,c
  4783  000DAC  3202               	rrcf	??i1_LCDWriteNibble^0,f,c
  4784  000DAE  0E3D               	movlw	61
  4785  000DB0  1602               	andwf	??i1_LCDWriteNibble^0,f,c
  4786  000DB2  5083               	movf	131,w,c	;volatile
  4787  000DB4  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4788  000DB6  0BFE               	andlw	-2
  4789  000DB8  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4790  000DBA  6E83               	movwf	131,c	;volatile
  4791                           
  4792                           ;lcd.c: 98:     PORTDbits.RD1 = (ch & 0xF8) >> 3;
  4793  000DBC  C003  F002         	movff	i1LCDWriteNibble@ch,??i1_LCDWriteNibble
  4794  000DC0  90D8               	bcf	status,0,c
  4795  000DC2  3202               	rrcf	??i1_LCDWriteNibble^0,f,c
  4796  000DC4  90D8               	bcf	status,0,c
  4797  000DC6  3202               	rrcf	??i1_LCDWriteNibble^0,f,c
  4798  000DC8  90D8               	bcf	status,0,c
  4799  000DCA  3202               	rrcf	??i1_LCDWriteNibble^0,f,c
  4800  000DCC  0E1F               	movlw	31
  4801  000DCE  1602               	andwf	??i1_LCDWriteNibble^0,f,c
  4802  000DD0  4602               	rlncf	??i1_LCDWriteNibble^0,f,c
  4803  000DD2  5083               	movf	131,w,c	;volatile
  4804  000DD4  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4805  000DD6  0BFD               	andlw	-3
  4806  000DD8  1802               	xorwf	??i1_LCDWriteNibble^0,w,c
  4807  000DDA  6E83               	movwf	131,c	;volatile
  4808  000DDC                     
  4809                           ;lcd.c: 107:     PORTCbits.RC0 = rs;
  4810  000DDC  B001               	btfsc	i1LCDWriteNibble@rs^0,0,c
  4811  000DDE  D002               	bra	i1u117_25
  4812  000DE0  9082               	bcf	130,0,c	;volatile
  4813  000DE2  D001               	bra	i1u117_26
  4814  000DE4                     i1u117_25:
  4815  000DE4  8082               	bsf	130,0,c	;volatile
  4816  000DE6                     i1u117_26:
  4817  000DE6                     
  4818                           ;lcd.c: 113:     PORTCbits.RC1 = 1;
  4819  000DE6  8282               	bsf	130,1,c	;volatile
  4820  000DE8                     
  4821                           ;lcd.c: 114:     _delay((unsigned long)((1)*(40000000/4000000.0)));
  4822  000DE8  0E03               	movlw	3
  4823  000DEA                     i1u157_27:
  4824  000DEA  2EE8               	decfsz	wreg,f,c
  4825  000DEC  D7FE               	bra	i1u157_27
  4826  000DEE  F000               	nop	
  4827  000DF0                     
  4828                           ;lcd.c: 116:     PORTCbits.RC1 = 0;
  4829  000DF0  9282               	bcf	130,1,c	;volatile
  4830  000DF2  0012               	return		;funcret
  4831  000DF4                     __end_ofi1_LCDWriteNibble:
  4832                           	opt callstack 0
  4833                           
  4834                           	psect	rparam
  4835  0000                     
  4836                           	psect	temp
  4837  00005F                     btemp:
  4838                           	opt callstack 0
  4839  00005F                     	ds	1
  4840  0000                     int$flags	set	btemp
  4841  0000                     wtemp8	set	btemp+1
  4842  0000                     ttemp5	set	btemp+1
  4843  0000                     ttemp6	set	btemp+4
  4844  0000                     ttemp7	set	btemp+8
  4845                           tosu	equ	0xFFF
  4846                           tosh	equ	0xFFE
  4847                           tosl	equ	0xFFD
  4848                           stkptr	equ	0xFFC
  4849                           pclatu	equ	0xFFB
  4850                           pclath	equ	0xFFA
  4851                           pcl	equ	0xFF9
  4852                           tblptru	equ	0xFF8
  4853                           tblptrh	equ	0xFF7
  4854                           tblptrl	equ	0xFF6
  4855                           tablat	equ	0xFF5
  4856                           prodh	equ	0xFF4
  4857                           prodl	equ	0xFF3
  4858                           indf0	equ	0xFEF
  4859                           postinc0	equ	0xFEE
  4860                           postdec0	equ	0xFED
  4861                           preinc0	equ	0xFEC
  4862                           plusw0	equ	0xFEB
  4863                           fsr0h	equ	0xFEA
  4864                           fsr0l	equ	0xFE9
  4865                           wreg	equ	0xFE8
  4866                           indf1	equ	0xFE7
  4867                           postinc1	equ	0xFE6
  4868                           postdec1	equ	0xFE5
  4869                           preinc1	equ	0xFE4
  4870                           plusw1	equ	0xFE3
  4871                           fsr1h	equ	0xFE2
  4872                           fsr1l	equ	0xFE1
  4873                           bsr	equ	0xFE0
  4874                           indf2	equ	0xFDF
  4875                           postinc2	equ	0xFDE
  4876                           postdec2	equ	0xFDD
  4877                           preinc2	equ	0xFDC
  4878                           plusw2	equ	0xFDB
  4879                           fsr2h	equ	0xFDA
  4880                           fsr2l	equ	0xFD9
  4881                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    722
    Data        16
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     63     126
    BANK1           256      7       7
    BANK2           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> tcInt@str1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> tcInt@str1(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1806_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> tcInt@str1(BANK0[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> tcInt@str1(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 16
		 -> tcInt@str1(BANK0[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _tcInt in COMRAM

    _tcInt->_sprintf
    i1_LCDPutCmd->i1_LCDWriteNibble
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCDPutStr->i1_LCDPutChar
    i1_LCDPutChar->i1_LCDWriteNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _tcInt in BANK0

    _tcInt->_sprintf

Critical Paths under _main in BANK1

    _main->_LCD_Initialize
    _LCD_Initialize->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble
    _LCDPutChar->_LCDWriteNibble

Critical Paths under _tcInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tcInt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1358
                         _LCDPutChar
                     _LCD_Initialize
                _configureInterrupts
                       _configurePWM
                    _configureTimer0
                    _configureTimer5
                           _startPWM
 ---------------------------------------------------------------------------------
 (1) _startPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer5                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurePWM                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       2     2      0     679
                                              5 BANK1      2     2      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            2     2      0     679
                                              3 BANK1      2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDPutChar                                           2     2      0     679
                                              3 BANK1      2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       3     2      1     583
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tcInt                                               53    53      0    8576
                                             10 BANK0     53    53      0
                          _LCDPutStr
                            ___lwdiv
                            ___lwmod
                            _sprintf
                       i1_LCDPutChar
                        i1_LCDPutCmd
 ---------------------------------------------------------------------------------
 (5) i1_LCDPutCmd                                          2     2      0     327
                                              3 COMRAM     2     2      0
                   i1_LCDWriteNibble
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             16    10      6    6456
                                             87 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (6) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (7) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (9) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (10) _strlen                                              4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _fputs                                               7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (9) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (9) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _LCDPutStr                                            3     1      2     493
                                              5 COMRAM     3     1      2
                       i1_LCDPutChar
 ---------------------------------------------------------------------------------
 (5) i1_LCDPutChar                                         2     2      0     327
                                              3 COMRAM     2     2      0
                   i1_LCDWriteNibble
 ---------------------------------------------------------------------------------
 (6) i1_LCDWriteNibble                                     3     2      1     260
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDPutChar
     _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
       _LCDWriteNibble
   _configureInterrupts
   _configurePWM
   _configureTimer0
   _configureTimer5
   _startPWM

 _tcInt (ROOT)
   _LCDPutStr
     i1_LCDPutChar
       i1_LCDWriteNibble
   ___lwdiv
   ___lwmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   i1_LCDPutChar
     i1_LCDWriteNibble
   i1_LCDPutCmd
     i1_LCDWriteNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      7       7       7        2.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3F      7E       5       78.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E3       3        0.0%
DATA                 0      0      E3      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jan 04 12:04:42 2020

               ?_configurePWM 0001                _LCD_Initialize 0F2E                   ?_LCDPutChar 0001  
                          _d1 005E                            bsr 000FE0                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                         l210 0D60                           l140 1288                           l213 11D8  
                         l125 112A                           l134 12B2                           l207 0F7E  
                         l151 1266                           l216 1068                           l128 12B6  
                         l152 1266                           l146 129C                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                           _abs 10AE                           _pad 0C06  
                         wreg 000FE8                  __CFG_LVP$OFF 000000                          ?_abs 0013  
                        l2201 105C                          l2211 1100                          l2203 10EE  
                        l2221 110A                          l2213 1102                          l2205 10FA  
                        l2231 1124                          l2223 110C                          l2215 1104  
                        l2207 10FC                          l2241 0F2E                          l2225 110E  
                        l2217 1106                          l2209 10FE                          l2233 12B4  
                        l2251 0F72                          l2243 0F46                          l2235 12AE  
                        l2227 1110                          l2219 1108                          l2261 11CE  
                        l2253 0F78                          l2245 0F60                          l2229 1122  
                        l2237 126E                          l2191 0D5E                          l2183 0CD0  
                        l2255 11A8                          l2247 0F66                          l2239 128A  
                        l2271 1250                          l2263 1240                          l2185 0D4A  
                        l2257 11BA                          l2193 1022                          l2249 0F6C  
                        l2281 125E                          l2273 1254                          l2265 1244  
                        l2187 0D54                          l2259 11C6                          l2195 1034  
                        l2283 1260                          l2275 1258                          l2267 1248  
                        l2189 0D56                          l2197 1040                          l2277 125A  
                        l2269 124C                          l2199 1048                          l2279 125C  
                        ?_pad 0011                          STR_1 3FFB                          _LATB 000F8A  
                        u1507 102A                          u1517 1050                          u1455 0D52  
                        u1527 11B0                          u1456 0D54                          u1537 0D58  
                        u1497 0F52                          _TMR0 000FD6                          _TMR1 000FCE  
                        _TMR5 000F87              ?_configureTimer0 0001              ?_configureTimer5 0001  
                        abs@a 0013                          _dbuf 00AF                          _main 1240  
                        _dtoa 03BA                          _prec 00A7                          _nout 00A3  
                        pad@i 0018                          pad@p 0015                          fsr1h 000FE2  
                        fsr2h 000FDA                          indf2 000FDF                          fsr1l 000FE1  
                        pad@w 001A                          fsr2l 000FD9                          btemp 005F  
          __size_of_LCDPutCmd 004C                          prodh 000FF4                          prodl 000FF3  
                        start 03B6            __size_of_LCDPutStr 003A                 __CFG_IESO$OFF 000000  
      __end_of_LCD_Initialize 0F80                ??_configurePWM 0100                 __CFG_HPOL$LOW 000000  
                ___param_bank 000000             _timer0ReloadValue 00D1                         ??_abs 0015  
               __CFG_LPOL$LOW 000000                         ??_pad 0017                   LCDPutCmd@ch 0104  
             __end_of___aodiv 09D8                         ?_main 0001                         ?_dtoa 001C  
             __end_of___aomod 0B3C                         _PDC0H 000F78                         _PDC1H 000F76  
                ?i1_LCDPutCmd 0001                         _PDC0L 000F79                         _PDC2H 000F74  
                       _PDC1L 000F77                         _PDC2L 000F75               __end_of___lwdiv 0E68  
                       i1l210 0DF2                         i1l213 123E                         i1l222 11A2  
                       i1l303 0F24                         i1l304 0F2C                         i1l216 1168  
                       i1l160 0060                         i1l180 037E                         i1l421 09D6  
                       i1l165 02F6                         i1l262 0C8E                         i1l270 045A  
                       i1l167 02E6                         i1l159 0066                         i1l264 0CCA  
                       i1l272 0462               __end_of___lwmod 0ECC                         i1l434 0B3A  
                       i1l290 069A                         i1l259 0C4C                         i1l297 084E  
                       i1l805 0E66                         i1l815 0ECA                         i1l808 0EC2  
                       i1l798 0E5E                         i1l982 10E4                         i1l985 10EC  
                       i1l997 0C04                  vfpfcnvrt@fmt 0042                         _PORTB 000F81  
                       _TRISB 000F93                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _flags 00A9  
                       _tcInt 0018                         _fputc 0B3C                         _fputs 106A  
                       pad@fp 0011                         _width 00A5                         _putch 12B8  
                       dtoa@d 001E                         dtoa@i 003E                         dtoa@n 0036  
                       dtoa@p 0030                         dtoa@s 0034                         dtoa@w 0032  
              __CFG_BOREN$OFF 000000                         tablat 000FF5           __size_of_LCDPutChar 0036  
                       ttemp5 0060                         ttemp6 0063                         ttemp7 0067  
                       status 000FD8                         wtemp8 0060               __end_of_sprintf 0FD2  
              __CFG_MCLRE$OFF 000000               ?_LCD_Initialize 0001               __initialization 0FD2  
                __end_of_main 126E                  __end_of_dtoa 069C   __end_of_configureInterrupts 12B4  
              __CFG_OSC$HSPLL 000000                        ??_main 0107                        ??_dtoa 0026  
               __activetblptr 000002             __end_of_LCDPutCmd 106A                  LCDPutChar@ch 0104  
           __end_of_LCDPutStr 11A4                        _ADCON1 000FC1                        ?_tcInt 0001  
                      ?_fputc 0001                        ?_fputs 000A                        _ADRESH 000FC4  
                      ?_putch 0001                 ?i1_LCDPutChar 0001                        i1l1012 0FD0  
                      i1l1005 10AC                        i1l1021 120E                        i1l1015 12B8  
                      i1l2001 0E32                        i1l2003 0E48                        i1l2011 0E68  
                      i1l2005 0E50                        i1l2021 0EAE                        i1l2013 0E7A  
                      i1l2101 018A                        i1l2007 0E52                        i1l2023 0EB6  
                      i1l2015 0E82                        i1l2031 114A                        i1l2111 01A6  
                      i1l2103 018C                        i1l2009 0E58                        i1l2025 0EBC  
                      i1l2017 0E8A                        i1l2033 1150                        i1l2121 01F0  
                      i1l2113 01AA                        i1l2105 018E                        i1l2019 0E98  
                      i1l2035 115E                        i1l2027 112E                        i1l2131 022C  
                      i1l2123 01F6                        i1l2115 01BC                        i1l2107 019C  
                  _PrevADRESH 00DB                        i1l2029 1140                        i1l2141 028C  
                      i1l2133 0236                        i1l2125 0212                        i1l2117 01C0  
                      i1l2109 019E                        i1l2061 005C                        i1l2151 0304  
                      i1l2135 025A                        i1l2127 021E                        i1l2119 01D8  
                      i1l2071 008C                        i1l2063 005E                        i1l2161 0348  
                      i1l2153 030E                        i1l2145 02AA                        i1l2137 0276  
                      i1l2129 0224                        i1l2081 00DE                        i1l2073 009C  
                      i1l2065 0074                        i1l2163 035E                        i1l2155 0322  
                      i1l2147 02D0                        i1l2139 027A                        i1l2091 013C  
                      i1l2083 00E2                        i1l2075 00A0                        i1l2067 0076  
                      i1l2059 004E                        i1l1701 08FE                        i1l1621 0B3C  
                      i1l2165 0360                        i1l2157 0326                        i1l2149 02D8  
                      i1l2093 0166                        i1l2085 00F8                        i1l2077 00B0  
                      i1l2069 0088                        i1l1711 096E                        i1l1703 090C  
                      i1l1631 0BBE                        i1l1623 0B4E                        i1l2159 0342  
                      i1l2167 037C                        i1l2095 016A                        i1l2087 0122  
                      i1l2079 00B4                        i1l1713 0980                        i1l1705 091E  
                      i1l1625 0B60                        i1l1641 108C                        i1l1801 0604  
                      i1l2097 0180                        i1l2089 0126                        i1l1707 094C  
                      i1l1715 0986                        i1l1731 0A0E                        i1l1723 09D8  
                      i1l1627 0B6A                        i1l1635 106A                        i1l1643 11DA  
                      i1l1811 064E                        i1l1803 0614                        i1l2099 0188  
                      i1l1901 1212                        i1l1717 0996                        i1l1709 096C  
                      i1l1741 0A76                        i1l1733 0A1C                        i1l1725 09DC  
                      i1l1629 0B88                        i1l1637 1076                        i1l1645 11E6  
                      i1l1661 0C44                        i1l1653 0C06                        i1l1813 065A  
                      i1l1805 0626                        i1l1903 1224                        i1l1719 09B6  
                      i1l1743 0A84                        i1l1751 0AEA                        i1l1735 0A3C  
                      i1l1727 09EA                        i1l1639 1088                        i1l1647 11EA  
                      i1l1671 0CB2                        i1l1663 0C58                        i1l1655 0C16  
                      i1l1815 0662                        i1l1807 0636                        i1l1831 069C  
                      i1l1905 122E                        i1l1681 0854                        i1l1753 0AFA  
                      i1l1745 0AB2                        i1l1737 0A5A                        i1l1729 0A0A  
                      i1l1649 1202                        i1l1665 0C6C                        i1l1657 0C2A  
                      i1l1809 063C                        i1l1817 0672                        i1l1761 03DA  
                      i1l1841 0708                        i1l1833 06C0                        i1l1907 1234  
                      i1l1691 08B4                        i1l1683 0862                        i1l1755 0B1A  
                      i1l1747 0AD2                        i1l1739 0A62                        i1l1675 10AE  
                      i1l1667 0C70                        i1l1659 0C38                        i1l1771 044E  
                      i1l1763 0402                        i1l1851 07D0                        i1l1843 072C  
                      i1l1835 06CE                        i1l1693 08B8                        i1l1685 0882  
                      i1l1749 0AE4                        i1l1677 10C8                        i1l1669 0C9E  
                      i1l1781 0498                        i1l1773 046A                        i1l1765 0422  
                      i1l1861 080C                        i1l1853 07DE                        i1l1845 0774  
                      i1l1837 06E0                        i1l1695 08C4                        i1l1687 0886  
                      i1l1679 0850                        i1l1791 0534                        i1l1783 04A0  
                      i1l1775 047C                        i1l1767 0432                        i1l1759 03BA  
                      i1l1855 07F2                        i1l1839 06E4                        i1l1881 0DF0  
                      i1l1873 0D64                        i1l1697 08E2                        i1l1689 0894  
                      i1l1785 04A6                        i1l1793 0598                        i1l1777 048A  
                      i1l1769 0434                        i1l1849 07AC                        i1l1865 0818  
                      i1l1875 0DDC                        i1l1699 08EA                        i1l1795 05B2  
                      i1l1787 0528                        i1l1779 0490                        i1l1867 083C  
                      i1l1859 07FE                        i1l1971 0F92                        i1l1877 0DE6  
                      i1l1981 116A                        i1l1797 05D0                        i1l1789 052E  
                      i1l1893 0ECC                        i1l1973 0F9A                        i1l1879 0DE8  
                      i1l1983 1172                        i1l1991 0DFC                        i1l1799 05EA  
                      i1l1895 0ED4                        i1l1975 0FA2                        i1l1985 1184  
                      i1l1993 0E0E                        i1l1897 0EE2                        i1l1977 0FBE  
                      i1l1969 0F80                        i1l1987 1186                        i1l1995 0E16  
                      i1l1899 0F08                        i1l1997 0E1E                        i1l1989 0DF4  
                      i1l1999 0E2C                __CFG_WDTEN$OFF 000000                __CFG_WINEN$OFF 000000  
                      _PTPERH 000F7A                  LCDPutStr@str 0006                        _PTPERL 000F7B  
              _LCDWriteNibble 0CCC                __CFG_SSPMX$RC7 000000                  vfprintf@cfmt 0056  
                   ??___aodiv 0011                     ??___aomod 0011                        _digits 3FF1  
                   ??___lwdiv 0005                     ??___lwmod 0005                        clear_0 100A  
                      pad@buf 0013                        dtoa@fp 001C                        _strlen 11DA  
                      tcInt@i 009C                        fputc@c 0001                        fputs@c 000E  
                      fputs@i 000F                  __pdataCOMRAM 005E                        fputs@s 000A  
                __mediumconst 3D28                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                i1LCDPutChar@ch 0005              __end_of_startPWM 12B8  
                      putch@c 0001              __end_of_vfprintf 0F2E          __end_of_configurePWM 112C  
           _timer5ReloadValue 00D3                     ??_sprintf 005E                ??i1_LCDPutChar 0004  
      __end_of_LCDWriteNibble 0D62                    __accesstop 0060       __end_of__initialization 1010  
             __CFG_FLTAMX$RC1 000000                    _adcPercent 00D9                 ___rparam_used 000001  
             __CFG_T1OSCMX$ON 000000                __pcstackCOMRAM 0001                  __pidataBANK0 129E  
               __end_of_tcInt 03B6                 __end_of_fputc 0C06                  ??_LCDPutChar 0103  
               __end_of_fputs 10AE                 __end_of_putch 12BA     __size_ofi1_LCDWriteNibble 0092  
        __size_ofi1_LCDPutCmd 003E           _timer5OverflowCount 00AD                       ??_tcInt 006A  
                     ??_fputc 0005                       ??_fputs 000E                       ??_putch 0001  
                  __pbssBANK0 009F               ?_LCDWriteNibble 0100            __end_of_LCDPutChar 11DA  
             __CFG_WDPS$32768 000000                       ?_strlen 0001               __CFG_PWM4MX$RB5 000000  
          __size_of_vfpfcnvrt 01B4                       i1u80_20 0C38                       i1u80_21 0C34  
                     _OVDCOND 000F6B                       i1u73_20 0B4E                       i1u81_20 0C8E  
                     i1u73_21 0B4A                       i1u81_21 0C8A                       i1u90_20 0996  
                     i1u74_20 0B60                       i1u82_20 0C9E                       i1u90_21 0992  
                     i1u74_21 0B5C                       i1u82_21 0C9A                       _OVDCONS 000F6A  
                     i1u91_20 09EA                       i1u83_20 10C8                       i1u75_20 0B88  
                     i1u91_21 09E6                       i1u83_21 10C4                       i1u75_21 0B84  
                     i1u84_20 0862                       i1u92_20 0A1C                       i1u76_20 0BBE  
                     i1u84_21 085E                       i1u92_21 0A18                       i1u76_21 0BBA  
                     i1u85_20 0894                       i1u93_20 0A5A                       i1u77_20 10AC  
                     i1u85_21 0890                       i1u93_21 0A56                       i1u77_21 10A8  
                     i1u94_20 0A84                       i1u78_20 1202                       i1u86_21 08BE  
                     i1u94_21 0A80                       i1u78_21 11FE                       i1u87_20 08E2  
                     i1u95_20 0AB2                       i1u79_20 0C16                       i1u87_21 08DE  
                     i1u95_21 0AAE                       i1u79_21 0C12                       i1u88_20 090C  
                     i1u96_20 0AFA                       i1u88_21 0908                       i1u96_21 0AF6  
                     i1u89_20 094C                       i1u97_20 03EA                       i1u89_21 0948  
                     i1u97_21 03E4                       i1u98_20 03EC                       i1u99_20 0402  
                     i1u99_21 03FE                     _ADCHSbits 000F99               __CFG_PWMPIN$OFF 000000  
            ??_LCD_Initialize 0105               __CFG_PWRTEN$OFF 000000                       __Hparam 0000  
                     __Lparam 0000      __size_of_configureTimer0 001C      __size_of_configureTimer5 0014  
                     ___aodiv 0850                       ___aomod 09D8                     ?_startPWM 0001  
                     ___lwdiv 0DF4                       ___lwmod 0E68                     ?_vfprintf 0050  
              _prevAdcPercent 00D7          __end_ofi1_LCDPutChar 1240               __CFG_STVREN$OFF 000000  
                     __pcinit 0FD2                       __ramtop 0300                       __ptext0 1240  
                     __ptext1 12B4                       __ptext2 128A                       __ptext3 126E  
                     __ptext4 10EE                       __ptext5 12AE                       __ptext6 0F2E  
                     __ptext7 101E                       __ptext8 11A4                       __ptext9 0CCC  
                   _T0CONbits 000FD5               __size_of_strlen 0036                     _T1CONbits 000FCD  
       __size_of_configurePWM 003E                  __size_of_abs 0040                  __size_of_pad 00C6  
                   _T5CONbits 000FB7                     _LCDPutCmd 101E                 tcInt@noDigits 0099  
                     _sprintf 0F80                     _LCDPutStr 116A          end_of_initialization 1010  
                     fputc@fp 0003                 __Lmediumconst 3D28                       fputs@fp 000C  
           __end_of_vfpfcnvrt 0850                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
                _configurePWM 10EE                    ??_startPWM 0100                    ??_vfprintf 0056  
                     strlen@a 0003                       strlen@s 0001                     _PORTAbits 000F80  
                   _PORTCbits 000F82              i1_LCDWriteNibble 0D62                     _PORTDbits 000F83  
                   _TRISAbits 000F92           _timer0PreloadValues 3F29                     _TRISCbits 000F94  
                   _TRISDbits 000F95  __size_of_configureInterrupts 0006                    ?_LCDPutCmd 0001  
                  ?_LCDPutStr 0006              __CFG_EXCLKMX$RC3 000000                   vfpfcnvrt@ap 0044  
                 vfpfcnvrt@fp 0040                    LCDPutStr@i 0008                   vfpfcnvrt@ll 0048  
               __pidataCOMRAM 12BA                __end_of_digits 3FFB             ??_configureTimer0 0100  
           ??_configureTimer5 0100                __end_of_strlen 1210           start_initialization 0FD2  
            ??_LCDWriteNibble 0101                   __end_of_abs 10EE                   __end_of_pad 0CCC  
       __size_ofi1_LCDPutChar 0030                   vfprintf@fmt 0052                   __pdataBANK0 00CF  
               i1LCDPutCmd@ch 0005                 ??i1_LCDPutCmd 0004                      ??_strlen 0003  
         _currentPreloadIndex 00AB                 __pcstackBANK0 0060                 __pcstackBANK1 0100  
            ___aodiv@dividend 0001                   ??_LCDPutCmd 0103                   ??_LCDPutStr 0008  
                i1_LCDPutChar 1210              ___lwdiv@dividend 0001                     _dtoa$1345 002E  
                   _maxADCVal 00D5                 __pmediumconst 3D28                      ?___aodiv 0001  
                    ?___aomod 0001              ___aodiv@quotient 0013                      ?___lwdiv 0001  
                    ?___lwmod 0001              LCDWriteNibble@ch 0102              LCDWriteNibble@rs 0100  
                 __pintcodelo 0018             __size_of_startPWM 0004             __size_of_vfprintf 0062  
            ___lwdiv@quotient 0005           __end_ofi1_LCDPutCmd 116A                      ?_sprintf 0058  
              __size_of_tcInt 039E                __size_of_fputc 00CA                __size_of_fputs 0044  
                   _dutyCycle 009F                __size_of_putch 0002      __end_ofi1_LCDWriteNibble 0DF4  
                    _PIE1bits 000F9D                      _PIE3bits 000FA3                      i1u100_20 0432  
                    i1u100_21 042E                      i1u101_20 044E                      i1u101_21 044A  
                    i1u110_20 0636                      i1u102_20 047C                      i1u110_21 0632  
                    i1u102_21 0478                      i1u111_20 064E                      i1u103_20 048A  
                    i1u111_21 064A                      i1u103_21 0486                      i1u120_20 0E0E  
                    i1u104_20 05B2                      i1u120_21 0E0A                      i1u104_21 05AE  
                    i1u121_20 0E2C                      i1u105_20 05D0                      i1u113_20 06C0  
                    i1u121_21 0E28                      i1u105_21 05CC                      i1u113_21 06BC  
                    i1u122_20 0E48                      i1u106_20 05EA                      i1u114_20 0708  
                    i1u130_20 00B0                      i1u122_21 0E44                      i1u106_21 05E6  
                    i1u114_21 0704                      i1u130_21 00AC                      i1u123_20 0E7A  
                    i1u107_20 0604                      i1u115_20 072C                      i1u131_20 019C  
                    i1u123_21 0E76                      i1u107_21 0600                      i1u115_21 0728  
                    i1u131_21 0198                      i1u124_20 0E98                      i1u108_20 0614  
                    i1u116_20 07D0                      i1u140_20 0342                      i1u132_20 01BC  
                    i1u124_21 0E94                      i1u108_21 0610                      i1u116_21 07CC  
                    i1u140_21 033E                      i1u132_21 01B8                      i1u125_20 0EAE  
                    i1u109_20 0626                      i1u141_20 035E                      i1u133_20 01D8  
                    i1u125_21 0EAA                      i1u109_21 0622                      i1u141_21 035A  
                    i1u133_21 01D4                      i1u117_25 0DE4                      i1u117_26 0DE6  
                    i1u118_20 0F24                      i1u134_20 01F0                      i1u126_20 005C  
                    i1u118_21 0F20                      i1u134_21 01EC                      i1u126_21 0058  
                    i1u119_20 11A2                      i1u135_20 028C                      i1u127_20 0074  
                    i1u119_21 119E                      i1u135_21 0288                      i1u127_21 0070  
                    i1u136_20 02A6                      i1u128_20 0088                      i1u136_21 02A2  
                    i1u128_21 0084                      i1u137_20 02E6                      i1u129_20 009C  
                    i1u137_21 02E2                      i1u129_21 0098                      i1u138_20 0304  
                    i1u138_21 0300                      i1u154_27 1134                      i1u139_20 0322  
                    i1u139_21 031E                      i1u155_27 1156                      i1u156_27 1218  
                    i1u157_27 0DEA                      _PIR1bits 000F9E                      _PIR3bits 000FA4  
         _configureInterrupts 12AE                     _vfpfcnvrt 069C                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0                    _ADCON3bits 000F9A          ?_configureInterrupts 0001  
       _prevTimer0ReloadValue 00CF                     copy_data0 0FE6                     tcInt@duty 009E  
                   tcInt@str1 0089                     tcInt@str2 0079                      __Hrparam 0000  
             _configureTimer0 126E               _configureTimer5 128A                    vfprintf@ap 0054  
                    __Lrparam 0000                    vfprintf@fp 0050       __size_of_LCD_Initialize 0052  
            __size_of___aodiv 0188              __size_of___aomod 0164                    ?_vfpfcnvrt 0040  
            __size_of___lwdiv 0074              __size_of___lwmod 0064                    _ANSEL0bits 000FB8  
             ___aodiv@divisor 0009               ___aodiv@counter 0011                   i1_LCDPutCmd 112C  
                  sprintf@fmt 005A         ??_configureInterrupts 0100    tcInt@timer0ReloadValueCopy 009A  
             ___lwdiv@divisor 0003               ___lwdiv@counter 0007                      __ptext11 112C  
                    __ptext20 12B8                      __ptext12 0F80                      __ptext21 10AE  
                    __ptext13 0ECC                      __ptext22 09D8                      __ptext14 069C  
                    __ptext23 0850                      __ptext15 03BA                      __ptext24 0E68  
                    __ptext16 0C06                      __ptext25 0DF4                      __ptext17 11DA  
                    __ptext26 116A                      __ptext18 106A                      __ptext27 1210  
                    __ptext19 0B3C                      __ptext28 0D62              __size_of_sprintf 0052  
               __size_of_main 002E                 __size_of_dtoa 02E2            i1LCDWriteNibble@ch 0003  
          i1LCDWriteNibble@rs 0001           __end_of_sinusValues 3F29                      int$flags 005F  
                    _startPWM 12B4                      _vfprintf 0ECC                    _LCDPutChar 11A4  
            ___aomod@dividend 0001                   _refreshTime 00AC                    _INTCONbits 000FF2  
                    intlevel1 0000                     sprintf@ap 0062   __end_of_timer0PreloadValues 3FF1  
     __end_of_configureTimer0 128A       __end_of_configureTimer5 129E              ___lwmod@dividend 0001  
                 _PWMCON0bits 000F6F                   _PWMCON1bits 000F6E               ___aomod@divisor 0009  
                 ??_vfpfcnvrt 0046               ___aomod@counter 0011                    _PTCON0bits 000F7F  
                  _PTCON1bits 000F7E                      sprintf@f 0064                      sprintf@s 0058  
             ___lwmod@divisor 0003               ___lwmod@counter 0005                  ___aodiv@sign 0012  
                 _sinusIndex1 00AE                   _sinusIndex2 00DD                   _sinusIndex3 00DC  
                 _sinusValues 3D29             ?i1_LCDWriteNibble 0001       __size_of_LCDWriteNibble 0096  
                ___aomod@sign 0012            ??i1_LCDWriteNibble 0002  
