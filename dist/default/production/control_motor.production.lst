

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jul 15 19:22:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 2.10
    56                           ; Generated 31/07/2019 GMT
    57                           ; 
    58                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4431 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  0014AA                     __pidataCOMRAM:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for _timer0ReloadValue
    95  0014AA  ECEC               	dw	60652
    96                           
    97                           ;initializer for _timer5ReloadValue
    98  0014AC  0BDB               	dw	3035
    99                           
   100                           ;initializer for _sinusValue3
   101  0014AE  00AA               	dw	170
   102                           
   103                           ;initializer for _sinusValue2
   104  0014B0  0055               	dw	85
   105                           
   106                           ;initializer for _PrevADRESH
   107  0014B2  41                 	db	65
   108                           
   109                           ;initializer for _d1
   110  0014B3  01                 	db	1
   111                           
   112                           ;initializer for _sinusIndex3
   113  0014B4  AA                 	db	170
   114                           
   115                           ;initializer for _sinusIndex2
   116  0014B5  55                 	db	85
   117                           
   118                           ;initializer for _skipValue
   119  0014B6  01                 	db	1
   120                           
   121                           ;initializer for _maxADCVal
   122  0014B7  00FF               	dw	255
   123                           
   124                           	psect	idataBANK0
   125  0014D2                     __pidataBANK0:
   126                           	opt callstack 0
   127                           
   128                           ;initializer for _prevTimer0ReloadValue
   129  0014D2  EC77               	dw	60535
   130                           
   131                           ;initializer for _prevAdcPercent
   132  0014D4  0065               	dw	101
   133                           
   134                           ;initializer for _adcPercent
   135  0014D6  0041               	dw	65
   136                           
   137                           	psect	mediumconst
   138  003CC4                     __pmediumconst:
   139                           	opt callstack 0
   140  003CC4  00                 	db	0
   141  003CC5                     _sinusValues:
   142                           	opt callstack 0
   143  003CC5  100F               	dw	4111
   144  003CC7  106F               	dw	4207
   145  003CC9  10D0               	dw	4304
   146  003CCB  1130               	dw	4400
   147  003CCD  1191               	dw	4497
   148  003CCF  11F1               	dw	4593
   149  003CD1  1251               	dw	4689
   150  003CD3  12B2               	dw	4786
   151  003CD5  1312               	dw	4882
   152  003CD7  1372               	dw	4978
   153  003CD9  13D3               	dw	5075
   154  003CDB  1453               	dw	5203
   155  003CDD  14B4               	dw	5300
   156  003CDF  14F4               	dw	5364
   157  003CE1  1554               	dw	5460
   158  003CE3  15B5               	dw	5557
   159  003CE5  1615               	dw	5653
   160  003CE7  1675               	dw	5749
   161  003CE9  16D6               	dw	5846
   162  003CEB  1736               	dw	5942
   163  003CED  1796               	dw	6038
   164  003CEF  17D7               	dw	6103
   165  003CF1  1837               	dw	6199
   166  003CF3  1897               	dw	6295
   167  003CF5  18D8               	dw	6360
   168  003CF7  1938               	dw	6456
   169  003CF9  1978               	dw	6520
   170  003CFB  19D9               	dw	6617
   171  003CFD  1A19               	dw	6681
   172  003CFF  1A79               	dw	6777
   173  003D01  1AB9               	dw	6841
   174  003D03  1AFA               	dw	6906
   175  003D05  1B5A               	dw	7002
   176  003D07  1B9A               	dw	7066
   177  003D09  1BDA               	dw	7130
   178  003D0B  1C1B               	dw	7195
   179  003D0D  1C5B               	dw	7259
   180  003D0F  1C9B               	dw	7323
   181  003D11  1CDB               	dw	7387
   182  003D13  1D1C               	dw	7452
   183  003D15  1D3C               	dw	7484
   184  003D17  1D7C               	dw	7548
   185  003D19  1DBC               	dw	7612
   186  003D1B  1DDC               	dw	7644
   187  003D1D  1E1D               	dw	7709
   188  003D1F  1E3D               	dw	7741
   189  003D21  1E7D               	dw	7805
   190  003D23  1E9D               	dw	7837
   191  003D25  1EBD               	dw	7869
   192  003D27  1EDD               	dw	7901
   193  003D29  1EFE               	dw	7934
   194  003D2B  1F1E               	dw	7966
   195  003D2D  1F3E               	dw	7998
   196  003D2F  1F5E               	dw	8030
   197  003D31  1F7E               	dw	8062
   198  003D33  1F9E               	dw	8094
   199  003D35  1F9E               	dw	8094
   200  003D37  1FBE               	dw	8126
   201  003D39  1FBE               	dw	8126
   202  003D3B  1FDE               	dw	8158
   203  003D3D  1FDE               	dw	8158
   204  003D3F  1FDE               	dw	8158
   205  003D41  1FDE               	dw	8158
   206  003D43  1FDE               	dw	8158
   207  003D45  1FDE               	dw	8158
   208  003D47  1FDE               	dw	8158
   209  003D49  1FDE               	dw	8158
   210  003D4B  1FDE               	dw	8158
   211  003D4D  1FDE               	dw	8158
   212  003D4F  1FBE               	dw	8126
   213  003D51  1FBE               	dw	8126
   214  003D53  1F9E               	dw	8094
   215  003D55  1F9E               	dw	8094
   216  003D57  1F7E               	dw	8062
   217  003D59  1F5E               	dw	8030
   218  003D5B  1F5E               	dw	8030
   219  003D5D  1F3E               	dw	7998
   220  003D5F  1F1E               	dw	7966
   221  003D61  1EFE               	dw	7934
   222  003D63  1EDD               	dw	7901
   223  003D65  1E9D               	dw	7837
   224  003D67  1E7D               	dw	7805
   225  003D69  1E5D               	dw	7773
   226  003D6B  1E1D               	dw	7709
   227  003D6D  1DFD               	dw	7677
   228  003D6F  1DBC               	dw	7612
   229  003D71  1D9C               	dw	7580
   230  003D73  1D5C               	dw	7516
   231  003D75  1D1C               	dw	7452
   232  003D77  1CFC               	dw	7420
   233  003D79  1CBB               	dw	7355
   234  003D7B  1C7B               	dw	7291
   235  003D7D  1C3B               	dw	7227
   236  003D7F  1BFB               	dw	7163
   237  003D81  1BBA               	dw	7098
   238  003D83  1B7A               	dw	7034
   239  003D85  1B1A               	dw	6938
   240  003D87  1ADA               	dw	6874
   241  003D89  1A99               	dw	6809
   242  003D8B  1A59               	dw	6745
   243  003D8D  19F9               	dw	6649
   244  003D8F  19B8               	dw	6584
   245  003D91  1958               	dw	6488
   246  003D93  1918               	dw	6424
   247  003D95  18B7               	dw	6327
   248  003D97  1857               	dw	6231
   249  003D99  1817               	dw	6167
   250  003D9B  17B6               	dw	6070
   251  003D9D  1756               	dw	5974
   252  003D9F  16F6               	dw	5878
   253  003DA1  16B6               	dw	5814
   254  003DA3  1655               	dw	5717
   255  003DA5  15F5               	dw	5621
   256  003DA7  1594               	dw	5524
   257  003DA9  1534               	dw	5428
   258  003DAB  14D4               	dw	5332
   259  003DAD  1473               	dw	5235
   260  003DAF  1413               	dw	5139
   261  003DB1  13B3               	dw	5043
   262  003DB3  1352               	dw	4946
   263  003DB5  12F2               	dw	4850
   264  003DB7  1291               	dw	4753
   265  003DB9  1231               	dw	4657
   266  003DBB  11D1               	dw	4561
   267  003DBD  1150               	dw	4432
   268  003DBF  10F0               	dw	4336
   269  003DC1  1090               	dw	4240
   270  003DC3  102F               	dw	4143
   271  003DC5  0FCF               	dw	4047
   272  003DC7  0F6E               	dw	3950
   273  003DC9  0F0E               	dw	3854
   274  003DCB  0EAE               	dw	3758
   275  003DCD  0E2D               	dw	3629
   276  003DCF  0DCD               	dw	3533
   277  003DD1  0D6D               	dw	3437
   278  003DD3  0D0C               	dw	3340
   279  003DD5  0CAC               	dw	3244
   280  003DD7  0C4B               	dw	3147
   281  003DD9  0BEB               	dw	3051
   282  003DDB  0B8B               	dw	2955
   283  003DDD  0B2A               	dw	2858
   284  003DDF  0ACA               	dw	2762
   285  003DE1  0A6A               	dw	2666
   286  003DE3  0A09               	dw	2569
   287  003DE5  09A9               	dw	2473
   288  003DE7  0948               	dw	2376
   289  003DE9  0908               	dw	2312
   290  003DEB  08A8               	dw	2216
   291  003DED  0848               	dw	2120
   292  003DEF  07E7               	dw	2023
   293  003DF1  07A7               	dw	1959
   294  003DF3  0747               	dw	1863
   295  003DF5  06E6               	dw	1766
   296  003DF7  06A6               	dw	1702
   297  003DF9  0646               	dw	1606
   298  003DFB  0605               	dw	1541
   299  003DFD  05A5               	dw	1445
   300  003DFF  0565               	dw	1381
   301  003E01  0524               	dw	1316
   302  003E03  04E4               	dw	1252
   303  003E05  0484               	dw	1156
   304  003E07  0444               	dw	1092
   305  003E09  0403               	dw	1027
   306  003E0B  03C3               	dw	963
   307  003E0D  0383               	dw	899
   308  003E0F  0343               	dw	835
   309  003E11  0302               	dw	770
   310  003E13  02E2               	dw	738
   311  003E15  02A2               	dw	674
   312  003E17  0262               	dw	610
   313  003E19  0242               	dw	578
   314  003E1B  0201               	dw	513
   315  003E1D  01E1               	dw	481
   316  003E1F  01A1               	dw	417
   317  003E21  0181               	dw	385
   318  003E23  0161               	dw	353
   319  003E25  0121               	dw	289
   320  003E27  0100               	dw	256
   321  003E29  00E0               	dw	224
   322  003E2B  00C0               	dw	192
   323  003E2D  00A0               	dw	160
   324  003E2F  00A0               	dw	160
   325  003E31  0080               	dw	128
   326  003E33  0060               	dw	96
   327  003E35  0060               	dw	96
   328  003E37  0040               	dw	64
   329  003E39  0040               	dw	64
   330  003E3B  0020               	dw	32
   331  003E3D  0020               	dw	32
   332  003E3F  0020               	dw	32
   333  003E41  0020               	dw	32
   334  003E43  0020               	dw	32
   335  003E45  0020               	dw	32
   336  003E47  0020               	dw	32
   337  003E49  0020               	dw	32
   338  003E4B  0020               	dw	32
   339  003E4D  0020               	dw	32
   340  003E4F  0040               	dw	64
   341  003E51  0040               	dw	64
   342  003E53  0060               	dw	96
   343  003E55  0060               	dw	96
   344  003E57  0080               	dw	128
   345  003E59  00A0               	dw	160
   346  003E5B  00C0               	dw	192
   347  003E5D  00E0               	dw	224
   348  003E5F  0100               	dw	256
   349  003E61  0121               	dw	289
   350  003E63  0141               	dw	321
   351  003E65  0161               	dw	353
   352  003E67  0181               	dw	385
   353  003E69  01C1               	dw	449
   354  003E6B  01E1               	dw	481
   355  003E6D  0222               	dw	546
   356  003E6F  0242               	dw	578
   357  003E71  0282               	dw	642
   358  003E73  02C2               	dw	706
   359  003E75  02E2               	dw	738
   360  003E77  0323               	dw	803
   361  003E79  0363               	dw	867
   362  003E7B  03A3               	dw	931
   363  003E7D  03E3               	dw	995
   364  003E7F  0424               	dw	1060
   365  003E81  0464               	dw	1124
   366  003E83  04A4               	dw	1188
   367  003E85  0504               	dw	1284
   368  003E87  0545               	dw	1349
   369  003E89  0585               	dw	1413
   370  003E8B  05E5               	dw	1509
   371  003E8D  0625               	dw	1573
   372  003E8F  0686               	dw	1670
   373  003E91  06C6               	dw	1734
   374  003E93  0726               	dw	1830
   375  003E95  0767               	dw	1895
   376  003E97  07C7               	dw	1991
   377  003E99  0827               	dw	2087
   378  003E9B  0868               	dw	2152
   379  003E9D  08C8               	dw	2248
   380  003E9F  0928               	dw	2344
   381  003EA1  0989               	dw	2441
   382  003EA3  09E9               	dw	2537
   383  003EA5  0A49               	dw	2633
   384  003EA7  0AAA               	dw	2730
   385  003EA9  0B0A               	dw	2826
   386  003EAB  0B4A               	dw	2890
   387  003EAD  0BAB               	dw	2987
   388  003EAF  0C2B               	dw	3115
   389  003EB1  0C8C               	dw	3212
   390  003EB3  0CEC               	dw	3308
   391  003EB5  0D4C               	dw	3404
   392  003EB7  0DAD               	dw	3501
   393  003EB9  0E0D               	dw	3597
   394  003EBB  0E6D               	dw	3693
   395  003EBD  0ECE               	dw	3790
   396  003EBF  0F2E               	dw	3886
   397  003EC1  0F8F               	dw	3983
   398  003EC3  0FEF               	dw	4079
   399  003EC5                     __end_of_sinusValues:
   400                           	opt callstack 0
   401  003EC5                     _timer0PreloadValues:
   402                           	opt callstack 0
   403  003EC5  D9D9               	dw	55769
   404  003EC7  ECEC               	dw	60652
   405  003EC9  F348               	dw	62280
   406  003ECB  F676               	dw	63094
   407  003ECD  F85E               	dw	63582
   408  003ECF  F9A3               	dw	63907
   409  003ED1  FA8C               	dw	64140
   410  003ED3  FB3A               	dw	64314
   411  003ED5  FBC2               	dw	64450
   412  003ED7  FC2E               	dw	64558
   413  003ED9  FC87               	dw	64647
   414  003EDB  FCD1               	dw	64721
   415  003EDD  FD10               	dw	64784
   416  003EDF  FD45               	dw	64837
   417  003EE1  FD74               	dw	64884
   418  003EE3  FD9D               	dw	64925
   419  003EE5  FDC1               	dw	64961
   420  003EE7  FDE0               	dw	64992
   421  003EE9  FDFD               	dw	65021
   422  003EEB  FE17               	dw	65047
   423  003EED  FE2E               	dw	65070
   424  003EEF  FE43               	dw	65091
   425  003EF1  FE56               	dw	65110
   426  003EF3  FE68               	dw	65128
   427  003EF5  FE78               	dw	65144
   428  003EF7  FE87               	dw	65159
   429  003EF9  FE95               	dw	65173
   430  003EFB  FEA2               	dw	65186
   431  003EFD  FEAE               	dw	65198
   432  003EFF  FEB9               	dw	65209
   433  003F01  FEC4               	dw	65220
   434  003F03  FECE               	dw	65230
   435  003F05  FED7               	dw	65239
   436  003F07  FEE0               	dw	65248
   437  003F09  FEE8               	dw	65256
   438  003F0B  FEF0               	dw	65264
   439  003F0D  FEF7               	dw	65271
   440  003F0F  FEFE               	dw	65278
   441  003F11  FF05               	dw	65285
   442  003F13  FF0B               	dw	65291
   443  003F15  FF11               	dw	65297
   444  003F17  FF16               	dw	65302
   445  003F19  FF1C               	dw	65308
   446  003F1B  FF21               	dw	65313
   447  003F1D  FF26               	dw	65318
   448  003F1F  FF2B               	dw	65323
   449  003F21  FF2F               	dw	65327
   450  003F23  FF34               	dw	65332
   451  003F25  FF38               	dw	65336
   452  003F27  FF3C               	dw	65340
   453  003F29  FF40               	dw	65344
   454  003F2B  FF43               	dw	65347
   455  003F2D  FF47               	dw	65351
   456  003F2F  FF4A               	dw	65354
   457  003F31  FF4D               	dw	65357
   458  003F33  FF51               	dw	65361
   459  003F35  FF54               	dw	65364
   460  003F37  FF57               	dw	65367
   461  003F39  FF59               	dw	65369
   462  003F3B  FF5C               	dw	65372
   463  003F3D  FF5F               	dw	65375
   464  003F3F  FF61               	dw	65377
   465  003F41  FF64               	dw	65380
   466  003F43  FF66               	dw	65382
   467  003F45  FF69               	dw	65385
   468  003F47  FF6B               	dw	65387
   469  003F49  FF6D               	dw	65389
   470  003F4B  FF6F               	dw	65391
   471  003F4D  FF71               	dw	65393
   472  003F4F  FF73               	dw	65395
   473  003F51  FF75               	dw	65397
   474  003F53  FF77               	dw	65399
   475  003F55  FF79               	dw	65401
   476  003F57  FF7B               	dw	65403
   477  003F59  FF7D               	dw	65405
   478  003F5B  FF7F               	dw	65407
   479  003F5D  FF80               	dw	65408
   480  003F5F  FF82               	dw	65410
   481  003F61  FF83               	dw	65411
   482  003F63  FF85               	dw	65413
   483  003F65  FF86               	dw	65414
   484  003F67  FF88               	dw	65416
   485  003F69  FF89               	dw	65417
   486  003F6B  FF8B               	dw	65419
   487  003F6D  FF8C               	dw	65420
   488  003F6F  FF8D               	dw	65421
   489  003F71  FF8F               	dw	65423
   490  003F73  FF90               	dw	65424
   491  003F75  FF91               	dw	65425
   492  003F77  FF92               	dw	65426
   493  003F79  FF94               	dw	65428
   494  003F7B  FF95               	dw	65429
   495  003F7D  FF96               	dw	65430
   496  003F7F  FF97               	dw	65431
   497  003F81  FF98               	dw	65432
   498  003F83  FF9C               	dw	65436
   499  003F85  FF9D               	dw	65437
   500  003F87  FF9E               	dw	65438
   501  003F89  FF9F               	dw	65439
   502  003F8B  FFA0               	dw	65440
   503  003F8D                     __end_of_timer0PreloadValues:
   504                           	opt callstack 0
   505  003F8D                     _scaleFactor:
   506                           	opt callstack 0
   507  003F8D  0040               	dw	64
   508  003F8F  003F               	dw	63
   509  003F91  003E               	dw	62
   510  003F93  003D               	dw	61
   511  003F95  003C               	dw	60
   512  003F97  003A               	dw	58
   513  003F99  0039               	dw	57
   514  003F9B  0038               	dw	56
   515  003F9D  0037               	dw	55
   516  003F9F  0036               	dw	54
   517  003FA1  0035               	dw	53
   518  003FA3  0034               	dw	52
   519  003FA5  0033               	dw	51
   520  003FA7  0032               	dw	50
   521  003FA9  0031               	dw	49
   522  003FAB  002F               	dw	47
   523  003FAD  002E               	dw	46
   524  003FAF  002D               	dw	45
   525  003FB1  002C               	dw	44
   526  003FB3  002B               	dw	43
   527  003FB5  002A               	dw	42
   528  003FB7  0029               	dw	41
   529  003FB9  0028               	dw	40
   530  003FBB  0027               	dw	39
   531  003FBD  0026               	dw	38
   532  003FBF  0024               	dw	36
   533  003FC1  0023               	dw	35
   534  003FC3  0022               	dw	34
   535  003FC5  0021               	dw	33
   536  003FC7  0020               	dw	32
   537  003FC9  001F               	dw	31
   538  003FCB  001E               	dw	30
   539  003FCD  001D               	dw	29
   540  003FCF  001C               	dw	28
   541  003FD1  001B               	dw	27
   542  003FD3  0019               	dw	25
   543  003FD5  0018               	dw	24
   544  003FD7  0017               	dw	23
   545  003FD9  0016               	dw	22
   546  003FDB  0015               	dw	21
   547  003FDD  0014               	dw	20
   548  003FDF  0013               	dw	19
   549  003FE1  0012               	dw	18
   550  003FE3  0011               	dw	17
   551  003FE5  0010               	dw	16
   552  003FE7  000E               	dw	14
   553  003FE9  000D               	dw	13
   554  003FEB  000C               	dw	12
   555  003FED  000B               	dw	11
   556  003FEF  000A               	dw	10
   557  003FF1                     __end_of_scaleFactor:
   558                           	opt callstack 0
   559  003FF1                     _digits:
   560                           	opt callstack 0
   561  003FF1  30                 	db	48
   562  003FF2  31                 	db	49
   563  003FF3  32                 	db	50
   564  003FF4  33                 	db	51
   565  003FF5  34                 	db	52
   566  003FF6  35                 	db	53
   567  003FF7  36                 	db	54
   568  003FF8  37                 	db	55
   569  003FF9  38                 	db	56
   570  003FFA  39                 	db	57
   571  003FFB                     __end_of_digits:
   572                           	opt callstack 0
   573  0000                     _TMR0	set	4054
   574  0000                     _TMR5	set	3975
   575  0000                     _TMR1	set	4046
   576  0000                     _PORTDbits	set	3971
   577  0000                     _PORTCbits	set	3970
   578  0000                     _TRISDbits	set	3989
   579  0000                     _TRISCbits	set	3988
   580  0000                     _ADRESH	set	4036
   581  0000                     _PIR3bits	set	4004
   582  0000                     _PIR1bits	set	3998
   583  0000                     _PDC2L	set	3957
   584  0000                     _PDC2H	set	3956
   585  0000                     _PDC1L	set	3959
   586  0000                     _PDC1H	set	3958
   587  0000                     _PDC0L	set	3961
   588  0000                     _PDC0H	set	3960
   589  0000                     _PORTAbits	set	3968
   590  0000                     _TMR2	set	4044
   591  0000                     _T2CONbits	set	4042
   592  0000                     _PIE3bits	set	4003
   593  0000                     _T5CONbits	set	4023
   594  0000                     _T1CONbits	set	4045
   595  0000                     _INTCON2bits	set	4081
   596  0000                     _T0CONbits	set	4053
   597  0000                     _PIE1bits	set	3997
   598  0000                     _TRISAbits	set	3986
   599  0000                     _ANSEL0bits	set	4024
   600  0000                     _ADCHSbits	set	3993
   601  0000                     _ADCON3bits	set	3994
   602  0000                     _ADCON2bits	set	4032
   603  0000                     _ADCON1	set	4033
   604  0000                     _ADCON0bits	set	4034
   605  0000                     _INTCONbits	set	4082
   606  0000                     _DTCON	set	3949
   607  0000                     _DTCONbits	set	3949
   608  0000                     _OVDCONS	set	3946
   609  0000                     _OVDCOND	set	3947
   610  0000                     _PTPERL	set	3963
   611  0000                     _PTPERH	set	3962
   612  0000                     _PWMCON1bits	set	3950
   613  0000                     _PWMCON0bits	set	3951
   614  0000                     _PTCON1bits	set	3966
   615  0000                     _PTCON0bits	set	3967
   616  0000                     _PORTB	set	3969
   617  0000                     _TRISB	set	3987
   618  0000                     _LATB	set	3978
   619  003FFB                     STR_1:
   620  003FFB  25                 	db	37
   621  003FFC  64                 	db	100	;'d'
   622  003FFD  00                 	db	0
   623  0000                     
   624                           ; #config settings
   625  003FFE  00                 	db	0	; dummy byte at the end
   626  0000                     
   627                           	psect	cinit
   628  001026                     __pcinit:
   629                           	opt callstack 0
   630  001026                     start_initialization:
   631                           	opt callstack 0
   632  001026                     __initialization:
   633                           	opt callstack 0
   634                           
   635                           ; Initialize objects allocated to BANK0 (6 bytes)
   636                           ; load TBLPTR registers with __pidataBANK0
   637  001026  0ED2               	movlw	low __pidataBANK0
   638  001028  6EF6               	movwf	tblptrl,c
   639  00102A  0E14               	movlw	high __pidataBANK0
   640  00102C  6EF7               	movwf	tblptrh,c
   641  00102E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   642  001030  6EF8               	movwf	tblptru,c
   643  001032  EE00  F0F8         	lfsr	0,__pdataBANK0
   644  001036  EE10 F006          	lfsr	1,6
   645  00103A                     copy_data0:
   646  00103A  0009               	tblrd		*+
   647  00103C  CFF5 FFEE          	movff	tablat,postinc0
   648  001040  50E5               	movf	postdec1,w,c
   649  001042  50E1               	movf	fsr1l,w,c
   650  001044  E1FA               	bnz	copy_data0
   651                           
   652                           ; Initialize objects allocated to COMRAM (15 bytes)
   653                           ; load TBLPTR registers with __pidataCOMRAM
   654  001046  0EAA               	movlw	low __pidataCOMRAM
   655  001048  6EF6               	movwf	tblptrl,c
   656  00104A  0E14               	movlw	high __pidataCOMRAM
   657  00104C  6EF7               	movwf	tblptrh,c
   658  00104E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   659  001050  6EF8               	movwf	tblptru,c
   660  001052  EE00  F02C         	lfsr	0,__pdataCOMRAM
   661  001056  EE10 F00F          	lfsr	1,15
   662  00105A                     copy_data1:
   663  00105A  0009               	tblrd		*+
   664  00105C  CFF5 FFEE          	movff	tablat,postinc0
   665  001060  50E5               	movf	postdec1,w,c
   666  001062  50E1               	movf	fsr1l,w,c
   667  001064  E1FA               	bnz	copy_data1
   668                           
   669                           ; Clear objects allocated to BANK1 (32 bytes)
   670  001066  EE01  F000         	lfsr	0,__pbssBANK1
   671  00106A  0E20               	movlw	32
   672  00106C                     clear_0:
   673  00106C  6AEE               	clrf	postinc0,c
   674  00106E  06E8               	decf	wreg,f,c
   675  001070  E1FD               	bnz	clear_0
   676                           
   677                           ; Clear objects allocated to BANK0 (11 bytes)
   678  001072  EE00  F0ED         	lfsr	0,__pbssBANK0
   679  001076  0E0B               	movlw	11
   680  001078                     clear_1:
   681  001078  6AEE               	clrf	postinc0,c
   682  00107A  06E8               	decf	wreg,f,c
   683  00107C  E1FD               	bnz	clear_1
   684                           
   685                           ; Clear objects allocated to COMRAM (11 bytes)
   686  00107E  EE00  F03B         	lfsr	0,__pbssCOMRAM
   687  001082  0E0B               	movlw	11
   688  001084                     clear_2:
   689  001084  6AEE               	clrf	postinc0,c
   690  001086  06E8               	decf	wreg,f,c
   691  001088  E1FD               	bnz	clear_2
   692  00108A                     end_of_initialization:
   693                           	opt callstack 0
   694  00108A                     __end_of__initialization:
   695                           	opt callstack 0
   696  00108A  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   697  00108C  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   698  00108E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   699  001090  6EF8               	movwf	tblptru,c
   700  001092  0100               	movlb	0
   701  001094  EF28  F009         	goto	_main	;jump to C main() function
   702                           
   703                           	psect	bssCOMRAM
   704  00003B                     __pbssCOMRAM:
   705                           	opt callstack 0
   706  00003B                     _prec:
   707                           	opt callstack 0
   708  00003B                     	ds	2
   709  00003D                     _flags:
   710                           	opt callstack 0
   711  00003D                     	ds	2
   712  00003F                     _sinusValue1:
   713                           	opt callstack 0
   714  00003F                     	ds	2
   715  000041                     _counter:
   716                           	opt callstack 0
   717  000041                     	ds	1
   718  000042                     _shouldUpdateTimer0Preload:
   719                           	opt callstack 0
   720  000042                     	ds	1
   721  000043                     _shouldUpdateDutyCycle:
   722                           	opt callstack 0
   723  000043                     	ds	1
   724  000044                     _timer5OverflowCount:
   725                           	opt callstack 0
   726  000044                     	ds	1
   727  000045                     _sinusIndex1:
   728                           	opt callstack 0
   729  000045                     	ds	1
   730                           
   731                           	psect	dataCOMRAM
   732  00002C                     __pdataCOMRAM:
   733                           	opt callstack 0
   734  00002C                     _timer0ReloadValue:
   735                           	opt callstack 0
   736  00002C                     	ds	2
   737  00002E                     _timer5ReloadValue:
   738                           	opt callstack 0
   739  00002E                     	ds	2
   740  000030                     _sinusValue3:
   741                           	opt callstack 0
   742  000030                     	ds	2
   743  000032                     _sinusValue2:
   744                           	opt callstack 0
   745  000032                     	ds	2
   746  000034                     _PrevADRESH:
   747                           	opt callstack 0
   748  000034                     	ds	1
   749  000035                     _d1:
   750                           	opt callstack 0
   751  000035                     	ds	1
   752  000036                     _sinusIndex3:
   753                           	opt callstack 0
   754  000036                     	ds	1
   755  000037                     _sinusIndex2:
   756                           	opt callstack 0
   757  000037                     	ds	1
   758  000038                     _skipValue:
   759                           	opt callstack 0
   760  000038                     	ds	1
   761  000039                     _maxADCVal:
   762                           	opt callstack 0
   763  000039                     	ds	2
   764                           
   765                           	psect	bssBANK0
   766  0000ED                     __pbssBANK0:
   767                           	opt callstack 0
   768  0000ED                     _dutyCycle:
   769                           	opt callstack 0
   770  0000ED                     	ds	4
   771  0000F1                     _nout:
   772                           	opt callstack 0
   773  0000F1                     	ds	2
   774  0000F3                     _width:
   775                           	opt callstack 0
   776  0000F3                     	ds	2
   777  0000F5                     _shouldDisplay:
   778                           	opt callstack 0
   779  0000F5                     	ds	1
   780  0000F6                     _currentPreloadIndex:
   781                           	opt callstack 0
   782  0000F6                     	ds	1
   783  0000F7                     _refreshTime:
   784                           	opt callstack 0
   785  0000F7                     	ds	1
   786                           
   787                           	psect	dataBANK0
   788  0000F8                     __pdataBANK0:
   789                           	opt callstack 0
   790  0000F8                     _prevTimer0ReloadValue:
   791                           	opt callstack 0
   792  0000F8                     	ds	2
   793  0000FA                     _prevAdcPercent:
   794                           	opt callstack 0
   795  0000FA                     	ds	2
   796  0000FC                     _adcPercent:
   797                           	opt callstack 0
   798  0000FC                     	ds	2
   799                           
   800                           	psect	bssBANK1
   801  000100                     __pbssBANK1:
   802                           	opt callstack 0
   803  000100                     _dbuf:
   804                           	opt callstack 0
   805  000100                     	ds	32
   806                           
   807                           	psect	cstackBANK0
   808  000060                     __pcstackBANK0:
   809                           	opt callstack 0
   810  000060                     ?_abs:
   811                           	opt callstack 0
   812  000060                     ?_pad:
   813                           	opt callstack 0
   814  000060                     ___aodiv@counter:
   815                           	opt callstack 0
   816  000060                     pad@fp:
   817                           	opt callstack 0
   818  000060                     abs@a:
   819                           	opt callstack 0
   820                           
   821                           ; 2 bytes @ 0x0
   822  000060                     	ds	1
   823  000061                     ___aodiv@sign:
   824                           	opt callstack 0
   825                           
   826                           ; 1 bytes @ 0x1
   827  000061                     	ds	1
   828  000062                     ??_abs:
   829  000062                     pad@buf:
   830                           	opt callstack 0
   831  000062                     ___aodiv@quotient:
   832                           	opt callstack 0
   833                           
   834                           ; 8 bytes @ 0x2
   835  000062                     	ds	2
   836  000064                     pad@p:
   837                           	opt callstack 0
   838                           
   839                           ; 2 bytes @ 0x4
   840  000064                     	ds	2
   841  000066                     pad@i:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x6
   845  000066                     	ds	2
   846  000068                     pad@w:
   847                           	opt callstack 0
   848                           
   849                           ; 2 bytes @ 0x8
   850  000068                     	ds	2
   851  00006A                     ?_dtoa:
   852                           	opt callstack 0
   853  00006A                     dtoa@fp:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0xA
   857  00006A                     	ds	2
   858  00006C                     dtoa@d:
   859                           	opt callstack 0
   860                           
   861                           ; 8 bytes @ 0xC
   862  00006C                     	ds	8
   863  000074                     ??_dtoa:
   864                           
   865                           ; 1 bytes @ 0x14
   866  000074                     	ds	8
   867  00007C                     _dtoa$1539:
   868                           	opt callstack 0
   869                           
   870                           ; 2 bytes @ 0x1C
   871  00007C                     	ds	2
   872  00007E                     dtoa@p:
   873                           	opt callstack 0
   874                           
   875                           ; 2 bytes @ 0x1E
   876  00007E                     	ds	2
   877  000080                     dtoa@w:
   878                           	opt callstack 0
   879                           
   880                           ; 2 bytes @ 0x20
   881  000080                     	ds	2
   882  000082                     dtoa@s:
   883                           	opt callstack 0
   884                           
   885                           ; 2 bytes @ 0x22
   886  000082                     	ds	2
   887  000084                     dtoa@n:
   888                           	opt callstack 0
   889                           
   890                           ; 8 bytes @ 0x24
   891  000084                     	ds	8
   892  00008C                     dtoa@i:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0x2C
   896  00008C                     	ds	2
   897  00008E                     ?_vfpfcnvrt:
   898                           	opt callstack 0
   899  00008E                     vfpfcnvrt@fp:
   900                           	opt callstack 0
   901                           
   902                           ; 2 bytes @ 0x2E
   903  00008E                     	ds	2
   904  000090                     vfpfcnvrt@fmt:
   905                           	opt callstack 0
   906                           
   907                           ; 2 bytes @ 0x30
   908  000090                     	ds	2
   909  000092                     vfpfcnvrt@ap:
   910                           	opt callstack 0
   911                           
   912                           ; 2 bytes @ 0x32
   913  000092                     	ds	2
   914  000094                     ??_vfpfcnvrt:
   915                           
   916                           ; 1 bytes @ 0x34
   917  000094                     	ds	2
   918  000096                     vfpfcnvrt@ll:
   919                           	opt callstack 0
   920                           
   921                           ; 8 bytes @ 0x36
   922  000096                     	ds	8
   923  00009E                     ?_vfprintf:
   924                           	opt callstack 0
   925  00009E                     vfprintf@fp:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0x3E
   929  00009E                     	ds	2
   930  0000A0                     vfprintf@fmt:
   931                           	opt callstack 0
   932                           
   933                           ; 2 bytes @ 0x40
   934  0000A0                     	ds	2
   935  0000A2                     vfprintf@ap:
   936                           	opt callstack 0
   937                           
   938                           ; 2 bytes @ 0x42
   939  0000A2                     	ds	2
   940  0000A4                     vfprintf@cfmt:
   941                           	opt callstack 0
   942                           
   943                           ; 2 bytes @ 0x44
   944  0000A4                     	ds	2
   945  0000A6                     ?_sprintf:
   946                           	opt callstack 0
   947  0000A6                     sprintf@s:
   948                           	opt callstack 0
   949                           
   950                           ; 2 bytes @ 0x46
   951  0000A6                     	ds	2
   952  0000A8                     sprintf@fmt:
   953                           	opt callstack 0
   954                           
   955                           ; 2 bytes @ 0x48
   956  0000A8                     	ds	6
   957  0000AE                     sprintf@ap:
   958                           	opt callstack 0
   959                           
   960                           ; 2 bytes @ 0x4E
   961  0000AE                     	ds	2
   962  0000B0                     sprintf@f:
   963                           	opt callstack 0
   964                           
   965                           ; 6 bytes @ 0x50
   966  0000B0                     	ds	6
   967  0000B6                     ??_display:
   968                           
   969                           ; 1 bytes @ 0x56
   970  0000B6                     	ds	2
   971  0000B8                     display@str2:
   972                           	opt callstack 0
   973                           
   974                           ; 16 bytes @ 0x58
   975  0000B8                     	ds	16
   976  0000C8                     display@str1:
   977                           	opt callstack 0
   978                           
   979                           ; 16 bytes @ 0x68
   980  0000C8                     	ds	16
   981  0000D8                     display@str3:
   982                           	opt callstack 0
   983                           
   984                           ; 16 bytes @ 0x78
   985  0000D8                     	ds	16
   986  0000E8                     display@noDigits:
   987                           	opt callstack 0
   988                           
   989                           ; 1 bytes @ 0x88
   990  0000E8                     	ds	1
   991  0000E9                     display@timer0ReloadValueCopy:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x89
   995  0000E9                     	ds	2
   996  0000EB                     display@i:
   997                           	opt callstack 0
   998                           
   999                           ; 2 bytes @ 0x8B
  1000  0000EB                     	ds	2
  1001                           
  1002                           	psect	cstackCOMRAM
  1003  000001                     __pcstackCOMRAM:
  1004                           	opt callstack 0
  1005  000001                     ?i1___lwdiv:
  1006                           	opt callstack 0
  1007  000001                     i1___lwdiv@dividend:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x0
  1011  000001                     	ds	2
  1012  000003                     i1___lwdiv@divisor:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x2
  1016  000003                     	ds	2
  1017  000005                     i1___lwdiv@quotient:
  1018                           	opt callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x4
  1021  000005                     	ds	2
  1022  000007                     i1___lwdiv@counter:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 1 bytes @ 0x6
  1026  000007                     	ds	1
  1027  000008                     ??_updateSinusIndexes:
  1028                           
  1029                           ; 1 bytes @ 0x7
  1030  000008                     	ds	2
  1031  00000A                     updateSinusIndexes@currentScalefactor:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x9
  1035  00000A                     	ds	6
  1036  000010                     ??_tcInt:
  1037                           
  1038                           ; 1 bytes @ 0xF
  1039  000010                     	ds	9
  1040  000019                     tcInt@duty:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x18
  1044  000019                     	ds	1
  1045  00001A                     ??_updateTMR0PreloadValue:
  1046  00001A                     ?_strlen:
  1047                           	opt callstack 0
  1048  00001A                     ?___lwdiv:
  1049                           	opt callstack 0
  1050  00001A                     ?___lwmod:
  1051                           	opt callstack 0
  1052  00001A                     ?___aodiv:
  1053                           	opt callstack 0
  1054  00001A                     ?___aomod:
  1055                           	opt callstack 0
  1056  00001A                     LCDWriteNibble@rs:
  1057                           	opt callstack 0
  1058  00001A                     ___lwdiv@dividend:
  1059                           	opt callstack 0
  1060  00001A                     ___lwmod@dividend:
  1061                           	opt callstack 0
  1062  00001A                     fputc@c:
  1063                           	opt callstack 0
  1064  00001A                     strlen@s:
  1065                           	opt callstack 0
  1066  00001A                     ___aodiv@dividend:
  1067                           	opt callstack 0
  1068  00001A                     ___aomod@dividend:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 8 bytes @ 0x19
  1072  00001A                     	ds	1
  1073  00001B                     ??_LCDWriteNibble:
  1074                           
  1075                           ; 1 bytes @ 0x1A
  1076  00001B                     	ds	1
  1077  00001C                     LCDWriteNibble@ch:
  1078                           	opt callstack 0
  1079  00001C                     ___lwdiv@divisor:
  1080                           	opt callstack 0
  1081  00001C                     ___lwmod@divisor:
  1082                           	opt callstack 0
  1083  00001C                     fputc@fp:
  1084                           	opt callstack 0
  1085  00001C                     strlen@a:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x1B
  1089  00001C                     	ds	1
  1090  00001D                     ??_LCDPutCmd:
  1091  00001D                     ??_LCDPutChar:
  1092                           
  1093                           ; 1 bytes @ 0x1C
  1094  00001D                     	ds	1
  1095  00001E                     ??_fputc:
  1096  00001E                     LCDPutChar@ch:
  1097                           	opt callstack 0
  1098  00001E                     LCDPutCmd@ch:
  1099                           	opt callstack 0
  1100  00001E                     ___lwmod@counter:
  1101                           	opt callstack 0
  1102  00001E                     ___lwdiv@quotient:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x1D
  1106  00001E                     	ds	1
  1107  00001F                     ??_LCD_Initialize:
  1108  00001F                     LCDPutStr@str:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x1E
  1112  00001F                     	ds	1
  1113  000020                     ___lwdiv@counter:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 1 bytes @ 0x1F
  1117  000020                     	ds	1
  1118  000021                     ??_readADC:
  1119  000021                     LCDPutStr@i:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 1 bytes @ 0x20
  1123  000021                     	ds	1
  1124  000022                     ___aodiv@divisor:
  1125                           	opt callstack 0
  1126  000022                     ___aomod@divisor:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 8 bytes @ 0x21
  1130  000022                     	ds	1
  1131  000023                     fputs@s:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x22
  1135  000023                     	ds	2
  1136  000025                     fputs@fp:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x24
  1140  000025                     	ds	2
  1141  000027                     fputs@c:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x26
  1145  000027                     	ds	1
  1146  000028                     fputs@i:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x27
  1150  000028                     	ds	2
  1151  00002A                     ??_pad:
  1152  00002A                     ___aomod@counter:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 1 bytes @ 0x29
  1156  00002A                     	ds	1
  1157  00002B                     ___aomod@sign:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 1 bytes @ 0x2A
  1161  00002B                     	ds	1
  1162  00002C                     
  1163                           ; 1 bytes @ 0x2B
  1164 ;;
  1165 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1166 ;;
  1167 ;; *************** function _main *****************
  1168 ;; Defined at:
  1169 ;;		line 318 in file "newmain.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1183 ;;      Params:         0       0       0       0
  1184 ;;      Locals:         0       0       0       0
  1185 ;;      Temps:          0       0       0       0
  1186 ;;      Totals:         0       0       0       0
  1187 ;;Total ram usage:        0 bytes
  1188 ;; Hardware stack levels required when called:   12
  1189 ;; This function calls:
  1190 ;;		_LCD_Initialize
  1191 ;;		_configureADC
  1192 ;;		_configureInputs
  1193 ;;		_configureInterrupts
  1194 ;;		_configurePWM
  1195 ;;		_configureTimer0
  1196 ;;		_configureTimer1
  1197 ;;		_configureTimer2
  1198 ;;		_configureTimer5
  1199 ;;		_display
  1200 ;;		_readADC
  1201 ;;		_startPWM
  1202 ;;		_updateTMR0PreloadValue
  1203 ;; This function is called by:
  1204 ;;		Startup code after reset
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text0
  1209  001250                     __ptext0:
  1210                           	opt callstack 0
  1211  001250                     _main:
  1212                           	opt callstack 19
  1213  001250                     
  1214                           ;newmain.c: 319:     LCD_Initialize();
  1215  001250  ECD8  F008         	call	_LCD_Initialize	;wreg free
  1216  001254                     
  1217                           ;newmain.c: 320:     configureInterrupts();
  1218  001254  EC6C  F00A         	call	_configureInterrupts	;wreg free
  1219  001258                     
  1220                           ;newmain.c: 321:     configurePWM();
  1221  001258  EC4D  F009         	call	_configurePWM	;wreg free
  1222  00125C                     
  1223                           ;newmain.c: 322:     configureADC();
  1224  00125C  EC22  F00A         	call	_configureADC	;wreg free
  1225  001260                     
  1226                           ;newmain.c: 323:     configureTimer0();
  1227  001260  EC36  F00A         	call	_configureTimer0	;wreg free
  1228                           
  1229                           ;newmain.c: 324:     configureTimer1();
  1230  001264  EC4B  F00A         	call	_configureTimer1	;wreg free
  1231                           
  1232                           ;newmain.c: 325:     configureTimer2();
  1233  001268  EC5D  F00A         	call	_configureTimer2	;wreg free
  1234  00126C                     
  1235                           ;newmain.c: 326:     configureTimer5();
  1236  00126C  EC41  F00A         	call	_configureTimer5	;wreg free
  1237  001270                     
  1238                           ;newmain.c: 327:     configureInputs();
  1239  001270  EC64  F00A         	call	_configureInputs	;wreg free
  1240  001274                     
  1241                           ;newmain.c: 328:     startPWM();
  1242  001274  EC6F  F00A         	call	_startPWM	;wreg free
  1243  001278                     
  1244                           ;newmain.c: 330:     TRISAbits.TRISA2 = 0;
  1245  001278  9492               	bcf	146,2,c	;volatile
  1246  00127A                     
  1247                           ;newmain.c: 331:     TRISAbits.RA2 = 0;
  1248  00127A  9492               	bcf	146,2,c	;volatile
  1249  00127C                     
  1250                           ;newmain.c: 332:     ANSEL0bits.ANS2 = 0;
  1251  00127C  94B8               	bcf	184,2,c	;volatile
  1252  00127E                     
  1253                           ;newmain.c: 333:     PORTAbits.RA2 = 0;
  1254  00127E  9480               	bcf	128,2,c	;volatile
  1255  001280                     
  1256                           ;newmain.c: 336:     __nop();
  1257  001280  F000               	nop	
  1258  001282                     l2689:
  1259                           
  1260                           ;newmain.c: 338:         __nop();
  1261  001282  F000               	nop	
  1262  001284                     
  1263                           ;newmain.c: 345:         display();
  1264  001284  ECFA  F003         	call	_display	;wreg free
  1265  001288                     
  1266                           ;newmain.c: 346:         updateTMR0PreloadValue();
  1267  001288  EC5D  F007         	call	_updateTMR0PreloadValue	;wreg free
  1268  00128C                     
  1269                           ;newmain.c: 347:         readADC();
  1270  00128C  EC01  F009         	call	_readADC	;wreg free
  1271  001290                     
  1272                           ;newmain.c: 356:         if (PORTAbits.RA3 == 1) {
  1273  001290  5080               	movf	128,w,c	;volatile
  1274  001292  EF41  F009         	goto	l2689
  1275  001296  EF92  F000         	goto	start
  1276  00129A                     __end_of_main:
  1277                           	opt callstack 0
  1278                           
  1279 ;; *************** function _updateTMR0PreloadValue *****************
  1280 ;; Defined at:
  1281 ;;		line 485 in file "newmain.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1295 ;;      Params:         0       0       0       0
  1296 ;;      Locals:         0       0       0       0
  1297 ;;      Temps:          2       0       0       0
  1298 ;;      Totals:         2       0       0       0
  1299 ;;Total ram usage:        2 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    3
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text1
  1310  000EBA                     __ptext1:
  1311                           	opt callstack 0
  1312  000EBA                     _updateTMR0PreloadValue:
  1313                           	opt callstack 27
  1314  000EBA                     
  1315                           ;newmain.c: 486:     if (shouldUpdateTimer0Preload) {
  1316  000EBA  5042               	movf	_shouldUpdateTimer0Preload^0,w,c	;volatile
  1317  000EBC  B4D8               	btfsc	status,2,c
  1318  000EBE  EF63  F007         	goto	u1501
  1319  000EC2  EF65  F007         	goto	u1500
  1320  000EC6                     u1501:
  1321  000EC6  EF9E  F007         	goto	l228
  1322  000ECA                     u1500:
  1323  000ECA                     
  1324                           ;newmain.c: 487:         if (timer5OverflowCount == 1) {
  1325  000ECA  0444               	decf	_timer5OverflowCount^0,w,c	;volatile
  1326  000ECC  A4D8               	btfss	status,2,c
  1327  000ECE  EF6B  F007         	goto	u1511
  1328  000ED2  EF6D  F007         	goto	u1510
  1329  000ED6                     u1511:
  1330  000ED6  EF9B  F007         	goto	l2229
  1331  000EDA                     u1510:
  1332  000EDA                     
  1333                           ;newmain.c: 488:             timer5OverflowCount = 0;
  1334  000EDA  0E00               	movlw	0
  1335  000EDC  6E44               	movwf	_timer5OverflowCount^0,c	;volatile
  1336  000EDE                     
  1337                           ;newmain.c: 489:             if (currentPreloadIndex < adcPercent) {
  1338  000EDE  0100               	movlb	0	; () banked
  1339  000EE0  51F6               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  1340  000EE2  6E1A               	movwf	??_updateTMR0PreloadValue^0,c
  1341  000EE4  6A1B               	clrf	(??_updateTMR0PreloadValue+1)^0,c
  1342  000EE6  51FC               	movf	_adcPercent& (0+255),w,b	;volatile
  1343  000EE8  5C1A               	subwf	??_updateTMR0PreloadValue^0,w,c
  1344  000EEA  51FD               	movf	(_adcPercent+1)& (0+255),w,b	;volatile
  1345  000EEC  581B               	subwfb	(??_updateTMR0PreloadValue+1)^0,w,c
  1346  000EEE  B0D8               	btfsc	status,0,c
  1347  000EF0  EF7C  F007         	goto	u1521
  1348  000EF4  EF7E  F007         	goto	u1520
  1349  000EF8                     u1521:
  1350  000EF8  EF81  F007         	goto	l2223
  1351  000EFC                     u1520:
  1352  000EFC                     
  1353                           ; BSR set to: 0
  1354                           ;newmain.c: 490:                 currentPreloadIndex++;
  1355  000EFC  2BF6               	incf	_currentPreloadIndex& (0+255),f,b	;volatile
  1356                           
  1357                           ;newmain.c: 491:             } else if (currentPreloadIndex > adcPercent) {
  1358  000EFE  EF8D  F007         	goto	l2227
  1359  000F02                     l2223:
  1360                           
  1361                           ; BSR set to: 0
  1362  000F02  51F6               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  1363  000F04  5DFC               	subwf	_adcPercent& (0+255),w,b	;volatile
  1364  000F06  0E00               	movlw	0
  1365  000F08  59FD               	subwfb	(_adcPercent+1)& (0+255),w,b	;volatile
  1366  000F0A  B0D8               	btfsc	status,0,c
  1367  000F0C  EF8A  F007         	goto	u1531
  1368  000F10  EF8C  F007         	goto	u1530
  1369  000F14                     u1531:
  1370  000F14  EF8D  F007         	goto	l2227
  1371  000F18                     u1530:
  1372  000F18                     
  1373                           ; BSR set to: 0
  1374                           ;newmain.c: 492:                 currentPreloadIndex--;
  1375  000F18  07F6               	decf	_currentPreloadIndex& (0+255),f,b	;volatile
  1376  000F1A                     l2227:
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;newmain.c: 494:             timer0ReloadValue = timer0PreloadValues[currentPreloadIndex
      +                          ];
  1380  000F1A  51F6               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  1381  000F1C  0D02               	mullw	2
  1382  000F1E  0EC5               	movlw	low _timer0PreloadValues
  1383  000F20  24F3               	addwf	243,w,c
  1384  000F22  6EF6               	movwf	tblptrl,c
  1385  000F24  0E3E               	movlw	high _timer0PreloadValues
  1386  000F26  20F4               	addwfc	244,w,c
  1387  000F28  6EF7               	movwf	tblptrh,c
  1388  000F2A                     	if	0	;There are less than 3 active tblptr bytes
  1389  000F2A                     	endif
  1390  000F2A  0009               	tblrd		*+
  1391  000F2C  CFF5 F02C          	movff	tablat,_timer0ReloadValue	;volatile
  1392  000F30  000A               	tblrd		*-
  1393  000F32  CFF5 F02D          	movff	tablat,_timer0ReloadValue+1	;volatile
  1394  000F36                     l2229:
  1395                           
  1396                           ;newmain.c: 496:         timer5OverflowCount++;
  1397  000F36  2A44               	incf	_timer5OverflowCount^0,f,c	;volatile
  1398  000F38                     
  1399                           ;newmain.c: 497:         shouldUpdateTimer0Preload = 0;
  1400  000F38  0E00               	movlw	0
  1401  000F3A  6E42               	movwf	_shouldUpdateTimer0Preload^0,c	;volatile
  1402  000F3C                     l228:
  1403  000F3C  0012               	return		;funcret
  1404  000F3E                     __end_of_updateTMR0PreloadValue:
  1405                           	opt callstack 0
  1406                           
  1407 ;; *************** function _startPWM *****************
  1408 ;; Defined at:
  1409 ;;		line 215 in file "newmain.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		None
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1423 ;;      Params:         0       0       0       0
  1424 ;;      Locals:         0       0       0       0
  1425 ;;      Temps:          0       0       0       0
  1426 ;;      Totals:         0       0       0       0
  1427 ;;Total ram usage:        0 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:    3
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_main
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text2
  1438  0014DE                     __ptext2:
  1439                           	opt callstack 0
  1440  0014DE                     _startPWM:
  1441                           	opt callstack 27
  1442  0014DE                     
  1443                           ;newmain.c: 216:     PTCON1bits.PTEN = 1;
  1444  0014DE  8E7E               	bsf	126,7,c	;volatile
  1445  0014E0  0012               	return		;funcret
  1446  0014E2                     __end_of_startPWM:
  1447                           	opt callstack 0
  1448                           
  1449 ;; *************** function _readADC *****************
  1450 ;; Defined at:
  1451 ;;		line 501 in file "newmain.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1465 ;;      Params:         0       0       0       0
  1466 ;;      Locals:         0       0       0       0
  1467 ;;      Temps:          1       0       0       0
  1468 ;;      Totals:         1       0       0       0
  1469 ;;Total ram usage:        1 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    4
  1472 ;; This function calls:
  1473 ;;		___lwdiv
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text3
  1480  001202                     __ptext3:
  1481                           	opt callstack 0
  1482  001202                     _readADC:
  1483                           	opt callstack 26
  1484  001202                     
  1485                           ;newmain.c: 502:     if (PIR1bits.ADIF == 1) {
  1486  001202  AC9E               	btfss	158,6,c	;volatile
  1487  001204  EF06  F009         	goto	u1541
  1488  001208  EF08  F009         	goto	u1540
  1489  00120C                     u1541:
  1490  00120C  EF27  F009         	goto	l233
  1491  001210                     u1540:
  1492  001210                     
  1493                           ;newmain.c: 503:         if (PrevADRESH != ADRESH) {
  1494  001210  50C4               	movf	196,w,c	;volatile
  1495  001212  1834               	xorwf	_PrevADRESH^0,w,c	;volatile
  1496  001214  B4D8               	btfsc	status,2,c
  1497  001216  EF0F  F009         	goto	u1551
  1498  00121A  EF11  F009         	goto	u1550
  1499  00121E                     u1551:
  1500  00121E  EF24  F009         	goto	l2239
  1501  001222                     u1550:
  1502  001222                     
  1503                           ;newmain.c: 504:             adcPercent = (255 - ADRESH) * 99 / maxADCVal;
  1504  001222  50C4               	movf	196,w,c	;volatile
  1505  001224  0AFF               	xorlw	255
  1506  001226  6E21               	movwf	??_readADC^0,c
  1507  001228  5021               	movf	??_readADC^0,w,c
  1508  00122A  0D63               	mullw	99
  1509  00122C  CFF3 F01A          	movff	prodl,___lwdiv@dividend
  1510  001230  CFF4 F01B          	movff	prodh,___lwdiv@dividend+1
  1511  001234  C039  F01C         	movff	_maxADCVal,___lwdiv@divisor
  1512  001238  C03A  F01D         	movff	_maxADCVal+1,___lwdiv@divisor+1
  1513  00123C  EC9F  F007         	call	___lwdiv	;wreg free
  1514  001240  C01A  F0FC         	movff	?___lwdiv,_adcPercent	;volatile
  1515  001244  C01B  F0FD         	movff	?___lwdiv+1,_adcPercent+1	;volatile
  1516  001248                     l2239:
  1517                           
  1518                           ;newmain.c: 507:         PrevADRESH = ADRESH;
  1519  001248  CFC4 F034          	movff	4036,_PrevADRESH	;volatile
  1520  00124C                     
  1521                           ;newmain.c: 508:         PIR1bits.ADIF = 0;
  1522  00124C  9C9E               	bcf	158,6,c	;volatile
  1523  00124E                     l233:
  1524  00124E  0012               	return		;funcret
  1525  001250                     __end_of_readADC:
  1526                           	opt callstack 0
  1527                           
  1528 ;; *************** function _display *****************
  1529 ;; Defined at:
  1530 ;;		line 446 in file "newmain.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;  i               2  139[BANK0 ] int 
  1535 ;;  str3           16  120[BANK0 ] unsigned char [16]
  1536 ;;  str1           16  104[BANK0 ] unsigned char [16]
  1537 ;;  str2           16   88[BANK0 ] unsigned char [16]
  1538 ;;  timer0Reload    2  137[BANK0 ] unsigned int 
  1539 ;;  noDigits        1  136[BANK0 ] unsigned char 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1549 ;;      Params:         0       0       0       0
  1550 ;;      Locals:         0      53       0       0
  1551 ;;      Temps:          0       2       0       0
  1552 ;;      Totals:         0      55       0       0
  1553 ;;Total ram usage:       55 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:   11
  1556 ;; This function calls:
  1557 ;;		_LCDPutChar
  1558 ;;		_LCDPutCmd
  1559 ;;		_LCDPutStr
  1560 ;;		___lwdiv
  1561 ;;		___lwmod
  1562 ;;		_sprintf
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text4
  1569  0007F4                     __ptext4:
  1570                           	opt callstack 0
  1571  0007F4                     _display:
  1572                           	opt callstack 19
  1573  0007F4                     
  1574                           ;newmain.c: 447:     if (shouldDisplay) {
  1575  0007F4  0100               	movlb	0	; () banked
  1576  0007F6  51F5               	movf	_shouldDisplay& (0+255),w,b	;volatile
  1577  0007F8  B4D8               	btfsc	status,2,c
  1578  0007FA  EF01  F004         	goto	u2111
  1579  0007FE  EF03  F004         	goto	u2110
  1580  000802                     u2111:
  1581  000802  EFD3  F004         	goto	l220
  1582  000806                     u2110:
  1583  000806                     
  1584                           ; BSR set to: 0
  1585                           ;newmain.c: 448:         if (refreshTime == 10) {
  1586  000806  0E0A               	movlw	10
  1587  000808  19F7               	xorwf	_refreshTime& (0+255),w,b	;volatile
  1588  00080A  A4D8               	btfss	status,2,c
  1589  00080C  EF0A  F004         	goto	u2121
  1590  000810  EF0C  F004         	goto	u2120
  1591  000814                     u2121:
  1592  000814  EFD0  F004         	goto	l2659
  1593  000818                     u2120:
  1594  000818                     
  1595                           ; BSR set to: 0
  1596                           ;newmain.c: 449:             if (currentPreloadIndex != adcPercent || prevTimer0ReloadVa
      +                          lue != timer0ReloadValue || prevAdcPercent != adcPercent) {
  1597  000818  51F6               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  1598  00081A  6FB6               	movwf	??_display& (0+255),b
  1599  00081C  6BB7               	clrf	(??_display+1)& (0+255),b
  1600  00081E  51FC               	movf	_adcPercent& (0+255),w,b	;volatile
  1601  000820  19B6               	xorwf	??_display& (0+255),w,b
  1602  000822  E107               	bnz	u2131
  1603  000824  51FD               	movf	(_adcPercent+1)& (0+255),w,b	;volatile
  1604  000826  19B7               	xorwf	(??_display+1)& (0+255),w,b
  1605  000828  A4D8               	btfss	status,2,c
  1606  00082A  EF19  F004         	goto	u2131
  1607  00082E  EF1B  F004         	goto	u2130
  1608  000832                     u2131:
  1609  000832  EF33  F004         	goto	l2619
  1610  000836                     u2130:
  1611  000836                     
  1612                           ; BSR set to: 0
  1613  000836  502C               	movf	_timer0ReloadValue^0,w,c	;volatile
  1614  000838  19F8               	xorwf	_prevTimer0ReloadValue& (0+255),w,b	;volatile
  1615  00083A  E107               	bnz	u2141
  1616  00083C  502D               	movf	(_timer0ReloadValue+1)^0,w,c	;volatile
  1617  00083E  19F9               	xorwf	(_prevTimer0ReloadValue+1)& (0+255),w,b	;volatile
  1618  000840  A4D8               	btfss	status,2,c
  1619  000842  EF25  F004         	goto	u2141
  1620  000846  EF27  F004         	goto	u2140
  1621  00084A                     u2141:
  1622  00084A  EF33  F004         	goto	l2619
  1623  00084E                     u2140:
  1624  00084E                     
  1625                           ; BSR set to: 0
  1626  00084E  51FC               	movf	_adcPercent& (0+255),w,b	;volatile
  1627  000850  19FA               	xorwf	_prevAdcPercent& (0+255),w,b	;volatile
  1628  000852  E109               	bnz	u2150
  1629  000854  51FD               	movf	(_adcPercent+1)& (0+255),w,b	;volatile
  1630  000856  19FB               	xorwf	(_prevAdcPercent+1)& (0+255),w,b	;volatile
  1631  000858  B4D8               	btfsc	status,2,c
  1632  00085A  EF31  F004         	goto	u2151
  1633  00085E  EF33  F004         	goto	u2150
  1634  000862                     u2151:
  1635  000862  EFC6  F004         	goto	l2653
  1636  000866                     u2150:
  1637  000866                     l2619:
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;newmain.c: 451:                 char str1[16];;newmain.c: 452:                 char str
      +                          2[16];;newmain.c: 453:                 char str3[16];;newmain.c: 455:                 LC
      +                          DPutCmd(0x01);
  1641  000866  0E01               	movlw	1
  1642  000868  ECB3  F009         	call	_LCDPutCmd
  1643  00086C                     
  1644                           ;newmain.c: 456:                 sprintf(str3, "%d", currentPreloadIndex);
  1645  00086C  0ED8               	movlw	low display@str3
  1646  00086E  0100               	movlb	0	; () banked
  1647  000870  6FA6               	movwf	sprintf@s& (0+255),b
  1648  000872  0E00               	movlw	high display@str3
  1649  000874  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  1650  000876  0EFB               	movlw	low STR_1
  1651  000878  6FA8               	movwf	sprintf@fmt& (0+255),b
  1652  00087A  0E3F               	movlw	high STR_1
  1653  00087C  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  1654  00087E  C0F6  F0AA         	movff	_currentPreloadIndex,?_sprintf+4	;volatile
  1655  000882  6BAB               	clrf	(?_sprintf+5)& (0+255),b
  1656  000884  ECAF  F008         	call	_sprintf	;wreg free
  1657  000888                     
  1658                           ;newmain.c: 457:                 LCDPutStr(str3);
  1659  000888  0ED8               	movlw	low display@str3
  1660  00088A  6E1F               	movwf	LCDPutStr@str^0,c
  1661  00088C  0E00               	movlw	high display@str3
  1662  00088E  6E20               	movwf	(LCDPutStr@str+1)^0,c
  1663  000890  ECD2  F009         	call	_LCDPutStr	;wreg free
  1664  000894                     
  1665                           ;newmain.c: 458:                 LCDPutChar(' ');
  1666  000894  0E20               	movlw	32
  1667  000896  EC0A  F00A         	call	_LCDPutChar
  1668  00089A                     
  1669                           ;newmain.c: 459:                 sprintf(str1, "%d", adcPercent);
  1670  00089A  0EC8               	movlw	low display@str1
  1671  00089C  0100               	movlb	0	; () banked
  1672  00089E  6FA6               	movwf	sprintf@s& (0+255),b
  1673  0008A0  0E00               	movlw	high display@str1
  1674  0008A2  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  1675  0008A4  0EFB               	movlw	low STR_1
  1676  0008A6  6FA8               	movwf	sprintf@fmt& (0+255),b
  1677  0008A8  0E3F               	movlw	high STR_1
  1678  0008AA  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  1679  0008AC  C0FC  F0AA         	movff	_adcPercent,?_sprintf+4	;volatile
  1680  0008B0  C0FD  F0AB         	movff	_adcPercent+1,?_sprintf+5	;volatile
  1681  0008B4  ECAF  F008         	call	_sprintf	;wreg free
  1682                           
  1683                           ;newmain.c: 460:                 LCDPutStr(str1);
  1684  0008B8  0EC8               	movlw	low display@str1
  1685  0008BA  6E1F               	movwf	LCDPutStr@str^0,c
  1686  0008BC  0E00               	movlw	high display@str1
  1687  0008BE  6E20               	movwf	(LCDPutStr@str+1)^0,c
  1688  0008C0  ECD2  F009         	call	_LCDPutStr	;wreg free
  1689  0008C4                     
  1690                           ;newmain.c: 461:                 LCDPutChar(' ');
  1691  0008C4  0E20               	movlw	32
  1692  0008C6  EC0A  F00A         	call	_LCDPutChar
  1693  0008CA                     
  1694                           ;newmain.c: 463:                 unsigned int timer0ReloadValueCopy = timer0ReloadValue;
  1695  0008CA  C02C  F0E9         	movff	_timer0ReloadValue,display@timer0ReloadValueCopy	;volatile
  1696  0008CE  C02D  F0EA         	movff	_timer0ReloadValue+1,display@timer0ReloadValueCopy+1	;volatile
  1697  0008D2                     
  1698                           ;newmain.c: 464:                 char noDigits = 0;
  1699  0008D2  0E00               	movlw	0
  1700  0008D4  0100               	movlb	0	; () banked
  1701  0008D6  6FE8               	movwf	display@noDigits& (0+255),b
  1702                           
  1703                           ;newmain.c: 465:                 while (timer0ReloadValueCopy > 0) {
  1704  0008D8  EF90  F004         	goto	l2641
  1705  0008DC                     l2635:
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;newmain.c: 466:                     str2[noDigits] = timer0ReloadValueCopy % 10;
  1709  0008DC  0EB8               	movlw	low display@str2
  1710  0008DE  25E8               	addwf	display@noDigits& (0+255),w,b
  1711  0008E0  6ED9               	movwf	fsr2l,c
  1712  0008E2  6ADA               	clrf	fsr2h,c
  1713  0008E4  0E00               	movlw	high display@str2
  1714  0008E6  22DA               	addwfc	fsr2h,f,c
  1715  0008E8  C0E9  F01A         	movff	display@timer0ReloadValueCopy,___lwmod@dividend
  1716  0008EC  C0EA  F01B         	movff	display@timer0ReloadValueCopy+1,___lwmod@dividend+1
  1717  0008F0  0E00               	movlw	0
  1718  0008F2  6E1D               	movwf	(___lwmod@divisor+1)^0,c
  1719  0008F4  0E0A               	movlw	10
  1720  0008F6  6E1C               	movwf	___lwmod@divisor^0,c
  1721  0008F8  EC4C  F008         	call	___lwmod	;wreg free
  1722  0008FC  501A               	movf	?___lwmod^0,w,c
  1723  0008FE  6EDF               	movwf	indf2,c
  1724  000900                     
  1725                           ;newmain.c: 467:                     timer0ReloadValueCopy /= 10;
  1726  000900  C0E9  F01A         	movff	display@timer0ReloadValueCopy,___lwdiv@dividend
  1727  000904  C0EA  F01B         	movff	display@timer0ReloadValueCopy+1,___lwdiv@dividend+1
  1728  000908  0E00               	movlw	0
  1729  00090A  6E1D               	movwf	(___lwdiv@divisor+1)^0,c
  1730  00090C  0E0A               	movlw	10
  1731  00090E  6E1C               	movwf	___lwdiv@divisor^0,c
  1732  000910  EC9F  F007         	call	___lwdiv	;wreg free
  1733  000914  C01A  F0E9         	movff	?___lwdiv,display@timer0ReloadValueCopy
  1734  000918  C01B  F0EA         	movff	?___lwdiv+1,display@timer0ReloadValueCopy+1
  1735  00091C                     
  1736                           ;newmain.c: 468:                     noDigits++;
  1737  00091C  0100               	movlb	0	; () banked
  1738  00091E  2BE8               	incf	display@noDigits& (0+255),f,b
  1739  000920                     l2641:
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;newmain.c: 465:                 while (timer0ReloadValueCopy > 0) {
  1743  000920  51E9               	movf	display@timer0ReloadValueCopy& (0+255),w,b
  1744  000922  11EA               	iorwf	(display@timer0ReloadValueCopy+1)& (0+255),w,b
  1745  000924  A4D8               	btfss	status,2,c
  1746  000926  EF97  F004         	goto	u2161
  1747  00092A  EF99  F004         	goto	u2160
  1748  00092E                     u2161:
  1749  00092E  EF6E  F004         	goto	l2635
  1750  000932                     u2160:
  1751  000932                     
  1752                           ; BSR set to: 0
  1753                           ;newmain.c: 470:                 for (int i = noDigits - 1; i >= 0; i--) {
  1754  000932  0EFF               	movlw	255
  1755  000934  25E8               	addwf	display@noDigits& (0+255),w,b
  1756  000936  6FEB               	movwf	display@i& (0+255),b
  1757  000938  6BEC               	clrf	(display@i+1)& (0+255),b
  1758  00093A  0EFF               	movlw	255
  1759  00093C  23EC               	addwfc	(display@i+1)& (0+255),f,b
  1760  00093E  BFEC               	btfsc	(display@i+1)& (0+255),7,b
  1761  000940  EFA6  F004         	goto	u2170
  1762  000944  EFA4  F004         	goto	u2171
  1763  000948                     u2171:
  1764  000948  EFA8  F004         	goto	l2647
  1765  00094C                     u2170:
  1766  00094C  EFC6  F004         	goto	l2653
  1767  000950                     l2647:
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;newmain.c: 471:                     LCDPutChar(digits[str2[i]]);
  1771  000950  0EB8               	movlw	low display@str2
  1772  000952  25EB               	addwf	display@i& (0+255),w,b
  1773  000954  6ED9               	movwf	fsr2l,c
  1774  000956  0E00               	movlw	high display@str2
  1775  000958  21EC               	addwfc	(display@i+1)& (0+255),w,b
  1776  00095A  6EDA               	movwf	fsr2h,c
  1777  00095C  50DF               	movf	indf2,w,c
  1778  00095E  6FB6               	movwf	??_display& (0+255),b
  1779  000960  6BB7               	clrf	(??_display+1)& (0+255),b
  1780  000962  0EF1               	movlw	low _digits
  1781  000964  25B6               	addwf	??_display& (0+255),w,b
  1782  000966  6EF6               	movwf	tblptrl,c
  1783  000968  0E3F               	movlw	high _digits
  1784  00096A  21B7               	addwfc	(??_display+1)& (0+255),w,b
  1785  00096C  6EF7               	movwf	tblptrh,c
  1786  00096E                     	if	0	;There are less than 3 active tblptr bytes
  1787  00096E                     	endif
  1788  00096E  0008               	tblrd		*
  1789  000970  50F5               	movf	tablat,w,c
  1790  000972  EC0A  F00A         	call	_LCDPutChar
  1791  000976                     
  1792                           ;newmain.c: 472:                 }
  1793  000976  0100               	movlb	0	; () banked
  1794  000978  07EB               	decf	display@i& (0+255),f,b
  1795  00097A  A0D8               	btfss	status,0,c
  1796  00097C  07EC               	decf	(display@i+1)& (0+255),f,b
  1797  00097E                     
  1798                           ; BSR set to: 0
  1799  00097E  BFEC               	btfsc	(display@i+1)& (0+255),7,b
  1800  000980  EFC6  F004         	goto	u2180
  1801  000984  EFC4  F004         	goto	u2181
  1802  000988                     u2181:
  1803  000988  EFA8  F004         	goto	l2647
  1804  00098C                     u2180:
  1805  00098C                     l2653:
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;newmain.c: 475:             refreshTime = 0;
  1809  00098C  0E00               	movlw	0
  1810  00098E  6FF7               	movwf	_refreshTime& (0+255),b	;volatile
  1811  000990                     
  1812                           ; BSR set to: 0
  1813                           ;newmain.c: 476:             prevAdcPercent = adcPercent;
  1814  000990  C0FC  F0FA         	movff	_adcPercent,_prevAdcPercent	;volatile
  1815  000994  C0FD  F0FB         	movff	_adcPercent+1,_prevAdcPercent+1	;volatile
  1816  000998                     
  1817                           ; BSR set to: 0
  1818                           ;newmain.c: 477:             prevTimer0ReloadValue = timer0ReloadValue;
  1819  000998  C02C  F0F8         	movff	_timer0ReloadValue,_prevTimer0ReloadValue	;volatile
  1820  00099C  C02D  F0F9         	movff	_timer0ReloadValue+1,_prevTimer0ReloadValue+1	;volatile
  1821  0009A0                     l2659:
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;newmain.c: 479:         refreshTime++;
  1825  0009A0  2BF7               	incf	_refreshTime& (0+255),f,b	;volatile
  1826  0009A2                     
  1827                           ; BSR set to: 0
  1828                           ;newmain.c: 481:         shouldDisplay = 0;
  1829  0009A2  0E00               	movlw	0
  1830  0009A4  6FF5               	movwf	_shouldDisplay& (0+255),b	;volatile
  1831  0009A6                     l220:
  1832                           
  1833                           ; BSR set to: 0
  1834  0009A6  0012               	return		;funcret
  1835  0009A8                     __end_of_display:
  1836                           	opt callstack 0
  1837                           
  1838 ;; *************** function _sprintf *****************
  1839 ;; Defined at:
  1840 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  s               2   70[BANK0 ] PTR unsigned char 
  1843 ;;		 -> display@str1(16), display@str3(16), 
  1844 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  1845 ;;		 -> STR_2(3), STR_1(3), 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  f               6   80[BANK0 ] struct _IO_FILE
  1848 ;;  ap              2   78[BANK0 ] PTR void [1]
  1849 ;;		 -> ?_sprintf(2), 
  1850 ;;  ret             2    0        int 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  2   70[BANK0 ] int 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1860 ;;      Params:         0       6       0       0
  1861 ;;      Locals:         0      10       0       0
  1862 ;;      Temps:          0       0       0       0
  1863 ;;      Totals:         0      16       0       0
  1864 ;;Total ram usage:       16 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:   10
  1867 ;; This function calls:
  1868 ;;		_vfprintf
  1869 ;; This function is called by:
  1870 ;;		_display
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text5
  1875  00115E                     __ptext5:
  1876                           	opt callstack 0
  1877  00115E                     _sprintf:
  1878                           	opt callstack 19
  1879  00115E  0EAA               	movlw	low (?_sprintf+4)
  1880  001160  0100               	movlb	0	; () banked
  1881  001162  6FAE               	movwf	sprintf@ap& (0+255),b
  1882  001164  0E00               	movlw	high (?_sprintf+4)
  1883  001166  6FAF               	movwf	(sprintf@ap+1)& (0+255),b
  1884  001168  C0A6  F0B0         	movff	sprintf@s,sprintf@f
  1885  00116C  C0A7  F0B1         	movff	sprintf@s+1,sprintf@f+1
  1886  001170                     
  1887                           ; BSR set to: 0
  1888  001170  0E00               	movlw	0
  1889  001172  6FB3               	movwf	(sprintf@f+3)& (0+255),b
  1890  001174  0E00               	movlw	0
  1891  001176  6FB2               	movwf	(sprintf@f+2)& (0+255),b
  1892  001178                     
  1893                           ; BSR set to: 0
  1894  001178  0E00               	movlw	0
  1895  00117A  6FB5               	movwf	(sprintf@f+5)& (0+255),b
  1896  00117C  0E00               	movlw	0
  1897  00117E  6FB4               	movwf	(sprintf@f+4)& (0+255),b
  1898  001180                     
  1899                           ; BSR set to: 0
  1900  001180  0EB0               	movlw	low sprintf@f
  1901  001182  6F9E               	movwf	vfprintf@fp& (0+255),b
  1902  001184  0E00               	movlw	high sprintf@f
  1903  001186  6F9F               	movwf	(vfprintf@fp+1)& (0+255),b
  1904  001188  C0A8  F0A0         	movff	sprintf@fmt,vfprintf@fmt
  1905  00118C  C0A9  F0A1         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1906  001190  0EAE               	movlw	low sprintf@ap
  1907  001192  6FA2               	movwf	vfprintf@ap& (0+255),b
  1908  001194  0E00               	movlw	high sprintf@ap
  1909  001196  6FA3               	movwf	(vfprintf@ap+1)& (0+255),b
  1910  001198  EC7E  F008         	call	_vfprintf	;wreg free
  1911  00119C  0100               	movlb	0	; () banked
  1912  00119E  51B2               	movf	(sprintf@f+2)& (0+255),w,b
  1913  0011A0  25A6               	addwf	sprintf@s& (0+255),w,b
  1914  0011A2  6ED9               	movwf	fsr2l,c
  1915  0011A4  51B3               	movf	(sprintf@f+3)& (0+255),w,b
  1916  0011A6  21A7               	addwfc	(sprintf@s+1)& (0+255),w,b
  1917  0011A8  6EDA               	movwf	fsr2h,c
  1918  0011AA  0E00               	movlw	0
  1919  0011AC  6EDF               	movwf	indf2,c
  1920  0011AE                     
  1921                           ; BSR set to: 0
  1922  0011AE  0012               	return		;funcret
  1923  0011B0                     __end_of_sprintf:
  1924                           	opt callstack 0
  1925                           
  1926 ;; *************** function _vfprintf *****************
  1927 ;; Defined at:
  1928 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  fp              2   62[BANK0 ] PTR struct _IO_FILE
  1931 ;;		 -> sprintf@f(6), 
  1932 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  1933 ;;		 -> STR_2(3), STR_1(3), 
  1934 ;;  ap              2   66[BANK0 ] PTR PTR void 
  1935 ;;		 -> sprintf@ap(2), 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  1938 ;;		 -> STR_2(3), STR_1(3), 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  2   62[BANK0 ] int 
  1941 ;; Registers used:
  1942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1948 ;;      Params:         0       6       0       0
  1949 ;;      Locals:         0       2       0       0
  1950 ;;      Temps:          0       0       0       0
  1951 ;;      Totals:         0       8       0       0
  1952 ;;Total ram usage:        8 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    9
  1955 ;; This function calls:
  1956 ;;		_vfpfcnvrt
  1957 ;; This function is called by:
  1958 ;;		_sprintf
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text6
  1963  0010FC                     __ptext6:
  1964                           	opt callstack 0
  1965  0010FC                     _vfprintf:
  1966                           	opt callstack 19
  1967  0010FC                     
  1968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1969  0010FC  C0A0  F0A4         	movff	vfprintf@fmt,vfprintf@cfmt
  1970  001100  C0A1  F0A5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1971  001104                     
  1972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1973  001104  0E00               	movlw	0
  1974  001106  0100               	movlb	0	; () banked
  1975  001108  6FF2               	movwf	(_nout+1)& (0+255),b
  1976  00110A  0E00               	movlw	0
  1977  00110C  6FF1               	movwf	_nout& (0+255),b
  1978                           
  1979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1980  00110E  EF9C  F008         	goto	l2595
  1981  001112                     l2593:
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1985  001112  C09E  F08E         	movff	vfprintf@fp,vfpfcnvrt@fp
  1986  001116  C09F  F08F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1987  00111A  0EA4               	movlw	low vfprintf@cfmt
  1988  00111C  6F90               	movwf	vfpfcnvrt@fmt& (0+255),b
  1989  00111E  0E00               	movlw	high vfprintf@cfmt
  1990  001120  6F91               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1991  001122  C0A2  F092         	movff	vfprintf@ap,vfpfcnvrt@ap
  1992  001126  C0A3  F093         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1993  00112A  EC1F  F003         	call	_vfpfcnvrt	;wreg free
  1994  00112E  0100               	movlb	0	; () banked
  1995  001130  518E               	movf	?_vfpfcnvrt& (0+255),w,b
  1996  001132  27F1               	addwf	_nout& (0+255),f,b
  1997  001134  518F               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1998  001136  23F2               	addwfc	(_nout+1)& (0+255),f,b
  1999  001138                     l2595:
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2003  001138  C0A4  FFF6         	movff	vfprintf@cfmt,tblptrl
  2004  00113C  C0A5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2005  001140                     	if	0	;tblptru may be non-zero
  2006  001140                     	endif
  2007  001140                     	if	0	;tblptru may be non-zero
  2008  001140                     	endif
  2009  001140  0008               	tblrd		*
  2010  001142  50F5               	movf	tablat,w,c
  2011  001144  0900               	iorlw	0
  2012  001146  A4D8               	btfss	status,2,c
  2013  001148  EFA8  F008         	goto	u2101
  2014  00114C  EFAA  F008         	goto	u2100
  2015  001150                     u2101:
  2016  001150  EF89  F008         	goto	l2593
  2017  001154                     u2100:
  2018  001154                     
  2019                           ; BSR set to: 0
  2020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2021  001154  C0F1  F09E         	movff	_nout,?_vfprintf
  2022  001158  C0F2  F09F         	movff	_nout+1,?_vfprintf+1
  2023  00115C                     
  2024                           ; BSR set to: 0
  2025  00115C  0012               	return		;funcret
  2026  00115E                     __end_of_vfprintf:
  2027                           	opt callstack 0
  2028                           
  2029 ;; *************** function _vfpfcnvrt *****************
  2030 ;; Defined at:
  2031 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  fp              2   46[BANK0 ] PTR struct _IO_FILE
  2034 ;;		 -> sprintf@f(6), 
  2035 ;;  fmt             2   48[BANK0 ] PTR PTR unsigned char 
  2036 ;;		 -> vfprintf@cfmt(2), 
  2037 ;;  ap              2   50[BANK0 ] PTR PTR void 
  2038 ;;		 -> sprintf@ap(2), 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  ll              8   54[BANK0 ] long long 
  2041 ;;  llu             8    0        unsigned long long 
  2042 ;;  f               4    0        unsigned long long 
  2043 ;;  vp              3    0        PTR void 
  2044 ;;  ct              3    0        unsigned char [3]
  2045 ;;  cp              3    0        PTR unsigned char 
  2046 ;;  i               2    0        int 
  2047 ;;  done            2    0        int 
  2048 ;;  c               1    0        unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2   46[BANK0 ] int 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2058 ;;      Params:         0       6       0       0
  2059 ;;      Locals:         0       8       0       0
  2060 ;;      Temps:          0       2       0       0
  2061 ;;      Totals:         0      16       0       0
  2062 ;;Total ram usage:       16 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    8
  2065 ;; This function calls:
  2066 ;;		_dtoa
  2067 ;;		_fputc
  2068 ;; This function is called by:
  2069 ;;		_vfprintf
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text7
  2074  00063E                     __ptext7:
  2075                           	opt callstack 0
  2076  00063E                     _vfpfcnvrt:
  2077                           	opt callstack 19
  2078  00063E                     
  2079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2080  00063E  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2081  000642  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2082  000646  CFDE FFF6          	movff	postinc2,tblptrl
  2083  00064A  CFDD FFF7          	movff	postdec2,tblptrh
  2084  00064E                     	if	0	;tblptru may be non-zero
  2085  00064E                     	endif
  2086  00064E                     	if	0	;tblptru may be non-zero
  2087  00064E                     	endif
  2088  00064E  0008               	tblrd		*
  2089  000650  50F5               	movf	tablat,w,c
  2090  000652  0A25               	xorlw	37
  2091  000654  A4D8               	btfss	status,2,c
  2092  000656  EF2F  F003         	goto	u2061
  2093  00065A  EF31  F003         	goto	u2060
  2094  00065E                     u2061:
  2095  00065E  EFDE  F003         	goto	l2581
  2096  000662                     u2060:
  2097  000662                     
  2098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2099  000662  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2100  000666  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2101  00066A  2ADE               	incf	postinc2,f,c
  2102  00066C  0E00               	movlw	0
  2103  00066E  22DD               	addwfc	postdec2,f,c
  2104  000670                     
  2105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2106  000670  0E00               	movlw	0
  2107  000672  0100               	movlb	0	; () banked
  2108  000674  6FF4               	movwf	(_width+1)& (0+255),b
  2109  000676  0E00               	movlw	0
  2110  000678  6FF3               	movwf	_width& (0+255),b
  2111  00067A  C0F3  F03D         	movff	_width,_flags
  2112  00067E  C0F4  F03E         	movff	_width+1,_flags+1
  2113  000682                     
  2114                           ; BSR set to: 0
  2115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2116  000682  683B               	setf	_prec^0,c
  2117  000684  683C               	setf	(_prec+1)^0,c
  2118  000686                     
  2119                           ; BSR set to: 0
  2120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2121  000686  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2122  00068A  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2123  00068E  CFDE FFF6          	movff	postinc2,tblptrl
  2124  000692  CFDD FFF7          	movff	postdec2,tblptrh
  2125  000696                     	if	0	;tblptru may be non-zero
  2126  000696                     	endif
  2127  000696                     	if	0	;tblptru may be non-zero
  2128  000696                     	endif
  2129  000696  0008               	tblrd		*
  2130  000698  50F5               	movf	tablat,w,c
  2131  00069A  0A64               	xorlw	100
  2132  00069C  B4D8               	btfsc	status,2,c
  2133  00069E  EF53  F003         	goto	u2071
  2134  0006A2  EF55  F003         	goto	u2070
  2135  0006A6                     u2071:
  2136  0006A6  EF67  F003         	goto	l2559
  2137  0006AA                     u2070:
  2138  0006AA                     
  2139                           ; BSR set to: 0
  2140  0006AA  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2141  0006AE  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2142  0006B2  CFDE FFF6          	movff	postinc2,tblptrl
  2143  0006B6  CFDD FFF7          	movff	postdec2,tblptrh
  2144  0006BA                     	if	0	;tblptru may be non-zero
  2145  0006BA                     	endif
  2146  0006BA                     	if	0	;tblptru may be non-zero
  2147  0006BA                     	endif
  2148  0006BA  0008               	tblrd		*
  2149  0006BC  50F5               	movf	tablat,w,c
  2150  0006BE  0A69               	xorlw	105
  2151  0006C0  A4D8               	btfss	status,2,c
  2152  0006C2  EF65  F003         	goto	u2081
  2153  0006C6  EF67  F003         	goto	u2080
  2154  0006CA                     u2081:
  2155  0006CA  EFA7  F003         	goto	l2565
  2156  0006CE                     u2080:
  2157  0006CE                     l2559:
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2161  0006CE  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2162  0006D2  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2163  0006D6  2ADE               	incf	postinc2,f,c
  2164  0006D8  0E00               	movlw	0
  2165  0006DA  22DD               	addwfc	postdec2,f,c
  2166                           
  2167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2168  0006DC  C092  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2169  0006E0  C093  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2170  0006E4  CFDF F094          	movff	indf2,??_vfpfcnvrt
  2171  0006E8  0E02               	movlw	2
  2172  0006EA  26DE               	addwf	postinc2,f,c
  2173  0006EC  CFDF F095          	movff	indf2,??_vfpfcnvrt+1
  2174  0006F0  0E00               	movlw	0
  2175  0006F2  22DD               	addwfc	postdec2,f,c
  2176  0006F4  C094  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2177  0006F8  C095  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2178  0006FC  CFDE F096          	movff	postinc2,vfpfcnvrt@ll
  2179  000700  CFDD F097          	movff	postdec2,vfpfcnvrt@ll+1
  2180  000704  0E00               	movlw	0
  2181  000706  BF97               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2182  000708  0EFF               	movlw	-1
  2183  00070A  6F98               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2184  00070C  6F99               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2185  00070E  6F9A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2186  000710  6F9B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2187  000712  6F9C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2188  000714  6F9D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2189  000716                     
  2190                           ; BSR set to: 0
  2191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2192  000716  C08E  F06A         	movff	vfpfcnvrt@fp,dtoa@fp
  2193  00071A  C08F  F06B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2194  00071E  C096  F06C         	movff	vfpfcnvrt@ll,dtoa@d
  2195  000722  C097  F06D         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2196  000726  C098  F06E         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2197  00072A  C099  F06F         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2198  00072E  C09A  F070         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2199  000732  C09B  F071         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2200  000736  C09C  F072         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2201  00073A  C09D  F073         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2202  00073E  EC94  F000         	call	_dtoa	;wreg free
  2203  000742  C06A  F08E         	movff	?_dtoa,?_vfpfcnvrt
  2204  000746  C06B  F08F         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2205  00074A  EFF9  F003         	goto	l367
  2206  00074E                     l2565:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2210  00074E  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2211  000752  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2212  000756  CFDE FFF6          	movff	postinc2,tblptrl
  2213  00075A  CFDD FFF7          	movff	postdec2,tblptrh
  2214  00075E                     	if	0	;tblptru may be non-zero
  2215  00075E                     	endif
  2216  00075E                     	if	0	;tblptru may be non-zero
  2217  00075E                     	endif
  2218  00075E  0008               	tblrd		*
  2219  000760  50F5               	movf	tablat,w,c
  2220  000762  0A25               	xorlw	37
  2221  000764  A4D8               	btfss	status,2,c
  2222  000766  EFB7  F003         	goto	u2091
  2223  00076A  EFB9  F003         	goto	u2090
  2224  00076E                     u2091:
  2225  00076E  EFD1  F003         	goto	l2575
  2226  000772                     u2090:
  2227  000772                     
  2228                           ; BSR set to: 0
  2229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2230  000772  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2231  000776  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2232  00077A  2ADE               	incf	postinc2,f,c
  2233  00077C  0E00               	movlw	0
  2234  00077E  22DD               	addwfc	postdec2,f,c
  2235  000780                     
  2236                           ; BSR set to: 0
  2237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2238  000780  0E00               	movlw	0
  2239  000782  6E1B               	movwf	(fputc@c+1)^0,c
  2240  000784  0E25               	movlw	37
  2241  000786  6E1A               	movwf	fputc@c^0,c
  2242  000788  C08E  F01C         	movff	vfpfcnvrt@fp,fputc@fp
  2243  00078C  C08F  F01D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2244  000790  EC4B  F006         	call	_fputc	;wreg free
  2245  000794                     l2571:
  2246                           
  2247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2248  000794  0E00               	movlw	0
  2249  000796  0100               	movlb	0	; () banked
  2250  000798  6F8F               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2251  00079A  0E01               	movlw	1
  2252  00079C  6F8E               	movwf	?_vfpfcnvrt& (0+255),b
  2253  00079E  EFF9  F003         	goto	l367
  2254  0007A2                     l2575:
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2258  0007A2  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2259  0007A6  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2260  0007AA  2ADE               	incf	postinc2,f,c
  2261  0007AC  0E00               	movlw	0
  2262  0007AE  22DD               	addwfc	postdec2,f,c
  2263  0007B0                     
  2264                           ; BSR set to: 0
  2265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2266  0007B0  0E00               	movlw	0
  2267  0007B2  6F8F               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2268  0007B4  0E00               	movlw	0
  2269  0007B6  6F8E               	movwf	?_vfpfcnvrt& (0+255),b
  2270  0007B8  EFF9  F003         	goto	l367
  2271  0007BC                     l2581:
  2272                           
  2273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2274  0007BC  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2275  0007C0  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2276  0007C4  CFDE FFF6          	movff	postinc2,tblptrl
  2277  0007C8  CFDD FFF7          	movff	postdec2,tblptrh
  2278  0007CC                     	if	0	;tblptru may be non-zero
  2279  0007CC                     	endif
  2280  0007CC                     	if	0	;tblptru may be non-zero
  2281  0007CC                     	endif
  2282  0007CC  0008               	tblrd		*
  2283  0007CE  50F5               	movf	tablat,w,c
  2284  0007D0  6E1A               	movwf	fputc@c^0,c
  2285  0007D2  6A1B               	clrf	(fputc@c+1)^0,c
  2286  0007D4  C08E  F01C         	movff	vfpfcnvrt@fp,fputc@fp
  2287  0007D8  C08F  F01D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2288  0007DC  EC4B  F006         	call	_fputc	;wreg free
  2289  0007E0                     
  2290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2291  0007E0  C090  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2292  0007E4  C091  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2293  0007E8  2ADE               	incf	postinc2,f,c
  2294  0007EA  0E00               	movlw	0
  2295  0007EC  22DD               	addwfc	postdec2,f,c
  2296  0007EE  EFCA  F003         	goto	l2571
  2297  0007F2                     l367:
  2298  0007F2  0012               	return		;funcret
  2299  0007F4                     __end_of_vfpfcnvrt:
  2300                           	opt callstack 0
  2301                           
  2302 ;; *************** function _dtoa *****************
  2303 ;; Defined at:
  2304 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  2307 ;;		 -> sprintf@f(6), 
  2308 ;;  d               8   12[BANK0 ] long long 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  n               8   36[BANK0 ] long long 
  2311 ;;  i               2   44[BANK0 ] int 
  2312 ;;  s               2   34[BANK0 ] int 
  2313 ;;  w               2   32[BANK0 ] int 
  2314 ;;  p               2   30[BANK0 ] int 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  2   10[BANK0 ] int 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2324 ;;      Params:         0      10       0       0
  2325 ;;      Locals:         0      18       0       0
  2326 ;;      Temps:          0       8       0       0
  2327 ;;      Totals:         0      36       0       0
  2328 ;;Total ram usage:       36 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    7
  2331 ;; This function calls:
  2332 ;;		___aodiv
  2333 ;;		___aomod
  2334 ;;		_abs
  2335 ;;		_pad
  2336 ;; This function is called by:
  2337 ;;		_vfpfcnvrt
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text8
  2342  000128                     __ptext8:
  2343                           	opt callstack 0
  2344  000128                     _dtoa:
  2345                           	opt callstack 19
  2346  000128                     
  2347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2348  000128  C06C  F084         	movff	dtoa@d,dtoa@n
  2349  00012C  C06D  F085         	movff	dtoa@d+1,dtoa@n+1
  2350  000130  C06E  F086         	movff	dtoa@d+2,dtoa@n+2
  2351  000134  C06F  F087         	movff	dtoa@d+3,dtoa@n+3
  2352  000138  C070  F088         	movff	dtoa@d+4,dtoa@n+4
  2353  00013C  C071  F089         	movff	dtoa@d+5,dtoa@n+5
  2354  000140  C072  F08A         	movff	dtoa@d+6,dtoa@n+6
  2355  000144  C073  F08B         	movff	dtoa@d+7,dtoa@n+7
  2356  000148                     
  2357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2358  000148  0100               	movlb	0	; () banked
  2359  00014A  BF8B               	btfsc	(dtoa@n+7)& (0+255),7,b
  2360  00014C  EFAA  F000         	goto	u1911
  2361  000150  EFAD  F000         	goto	u1910
  2362  000154                     u1911:
  2363  000154  0E01               	movlw	1
  2364  000156  EFAE  F000         	goto	u1920
  2365  00015A                     u1910:
  2366  00015A  0E00               	movlw	0
  2367  00015C                     u1920:
  2368  00015C  6F82               	movwf	dtoa@s& (0+255),b
  2369  00015E  6B83               	clrf	(dtoa@s+1)& (0+255),b
  2370                           
  2371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2372  000160  5182               	movf	dtoa@s& (0+255),w,b
  2373  000162  1183               	iorwf	(dtoa@s+1)& (0+255),w,b
  2374  000164  B4D8               	btfsc	status,2,c
  2375  000166  EFB7  F000         	goto	u1931
  2376  00016A  EFB9  F000         	goto	u1930
  2377  00016E                     u1931:
  2378  00016E  EFC9  F000         	goto	l2491
  2379  000172                     u1930:
  2380  000172                     
  2381                           ; BSR set to: 0
  2382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2383  000172  1F8B               	comf	(dtoa@n+7)& (0+255),f,b
  2384  000174  1F8A               	comf	(dtoa@n+6)& (0+255),f,b
  2385  000176  1F89               	comf	(dtoa@n+5)& (0+255),f,b
  2386  000178  1F88               	comf	(dtoa@n+4)& (0+255),f,b
  2387  00017A  1F87               	comf	(dtoa@n+3)& (0+255),f,b
  2388  00017C  1F86               	comf	(dtoa@n+2)& (0+255),f,b
  2389  00017E  1F85               	comf	(dtoa@n+1)& (0+255),f,b
  2390  000180  6D84               	negf	dtoa@n& (0+255),b
  2391  000182  0E00               	movlw	0
  2392  000184  2385               	addwfc	(dtoa@n+1)& (0+255),f,b
  2393  000186  2386               	addwfc	(dtoa@n+2)& (0+255),f,b
  2394  000188  2387               	addwfc	(dtoa@n+3)& (0+255),f,b
  2395  00018A  2388               	addwfc	(dtoa@n+4)& (0+255),f,b
  2396  00018C  2389               	addwfc	(dtoa@n+5)& (0+255),f,b
  2397  00018E  238A               	addwfc	(dtoa@n+6)& (0+255),f,b
  2398  000190  238B               	addwfc	(dtoa@n+7)& (0+255),f,b
  2399  000192                     l2491:
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2403  000192  BE3C               	btfsc	(_prec+1)^0,7,c
  2404  000194  EFCE  F000         	goto	u1941
  2405  000198  EFD0  F000         	goto	u1940
  2406  00019C                     u1941:
  2407  00019C  EFD1  F000         	goto	l2495
  2408  0001A0                     u1940:
  2409  0001A0                     
  2410                           ; BSR set to: 0
  2411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2412  0001A0  923D               	bcf	_flags^0,1,c
  2413  0001A2                     l2495:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2417  0001A2  BE3C               	btfsc	(_prec+1)^0,7,c
  2418  0001A4  EFDE  F000         	goto	u1950
  2419  0001A8  503C               	movf	(_prec+1)^0,w,c
  2420  0001AA  E106               	bnz	u1951
  2421  0001AC  043B               	decf	_prec^0,w,c
  2422  0001AE  B0D8               	btfsc	status,0,c
  2423  0001B0  EFDC  F000         	goto	u1951
  2424  0001B4  EFDE  F000         	goto	u1950
  2425  0001B8                     u1951:
  2426  0001B8  EFE4  F000         	goto	l340
  2427  0001BC                     u1950:
  2428  0001BC                     
  2429                           ; BSR set to: 0
  2430  0001BC  0E00               	movlw	0
  2431  0001BE  6F7F               	movwf	(dtoa@p+1)& (0+255),b
  2432  0001C0  0E01               	movlw	1
  2433  0001C2  6F7E               	movwf	dtoa@p& (0+255),b
  2434  0001C4  EFE8  F000         	goto	l342
  2435  0001C8                     l340:
  2436                           
  2437                           ; BSR set to: 0
  2438  0001C8  C03B  F07E         	movff	_prec,dtoa@p
  2439  0001CC  C03C  F07F         	movff	_prec+1,dtoa@p+1
  2440  0001D0                     l342:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2444  0001D0  C0F3  F080         	movff	_width,dtoa@w
  2445  0001D4  C0F4  F081         	movff	_width+1,dtoa@w+1
  2446  0001D8                     
  2447                           ; BSR set to: 0
  2448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2449  0001D8  5182               	movf	dtoa@s& (0+255),w,b
  2450  0001DA  1183               	iorwf	(dtoa@s+1)& (0+255),w,b
  2451  0001DC  A4D8               	btfss	status,2,c
  2452  0001DE  EFF3  F000         	goto	u1961
  2453  0001E2  EFF5  F000         	goto	u1960
  2454  0001E6                     u1961:
  2455  0001E6  EFFC  F000         	goto	l2503
  2456  0001EA                     u1960:
  2457  0001EA                     
  2458                           ; BSR set to: 0
  2459  0001EA  A43D               	btfss	_flags^0,2,c
  2460  0001EC  EFFA  F000         	goto	u1971
  2461  0001F0  EFFC  F000         	goto	u1970
  2462  0001F4                     u1971:
  2463  0001F4  EFFF  F000         	goto	l2505
  2464  0001F8                     u1970:
  2465  0001F8                     l2503:
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2469  0001F8  0780               	decf	dtoa@w& (0+255),f,b
  2470  0001FA  A0D8               	btfss	status,0,c
  2471  0001FC  0781               	decf	(dtoa@w+1)& (0+255),f,b
  2472  0001FE                     l2505:
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2476  0001FE  0E00               	movlw	0
  2477  000200  6F8D               	movwf	(dtoa@i+1)& (0+255),b
  2478  000202  0E1F               	movlw	31
  2479  000204  6F8C               	movwf	dtoa@i& (0+255),b
  2480  000206                     
  2481                           ; BSR set to: 0
  2482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2483  000206  0E00               	movlw	0
  2484  000208  0101               	movlb	1	; () banked
  2485  00020A  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2486                           
  2487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2488  00020C  EF85  F001         	goto	l2519
  2489  000210                     l2509:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2493  000210  078C               	decf	dtoa@i& (0+255),f,b
  2494  000212  A0D8               	btfss	status,0,c
  2495  000214  078D               	decf	(dtoa@i+1)& (0+255),f,b
  2496  000216                     
  2497                           ; BSR set to: 0
  2498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2499  000216  0E00               	movlw	low _dbuf
  2500  000218  258C               	addwf	dtoa@i& (0+255),w,b
  2501  00021A  6ED9               	movwf	fsr2l,c
  2502  00021C  0E01               	movlw	high _dbuf
  2503  00021E  218D               	addwfc	(dtoa@i+1)& (0+255),w,b
  2504  000220  6EDA               	movwf	fsr2h,c
  2505  000222  C084  F01A         	movff	dtoa@n,___aomod@dividend
  2506  000226  C085  F01B         	movff	dtoa@n+1,___aomod@dividend+1
  2507  00022A  C086  F01C         	movff	dtoa@n+2,___aomod@dividend+2
  2508  00022E  C087  F01D         	movff	dtoa@n+3,___aomod@dividend+3
  2509  000232  C088  F01E         	movff	dtoa@n+4,___aomod@dividend+4
  2510  000236  C089  F01F         	movff	dtoa@n+5,___aomod@dividend+5
  2511  00023A  C08A  F020         	movff	dtoa@n+6,___aomod@dividend+6
  2512  00023E  C08B  F021         	movff	dtoa@n+7,___aomod@dividend+7
  2513  000242  0E0A               	movlw	10
  2514  000244  6E22               	movwf	___aomod@divisor^0,c
  2515  000246  0E00               	movlw	0
  2516  000248  6E23               	movwf	(___aomod@divisor+1)^0,c
  2517  00024A  0E00               	movlw	0
  2518  00024C  6E24               	movwf	(___aomod@divisor+2)^0,c
  2519  00024E  0E00               	movlw	0
  2520  000250  6E25               	movwf	(___aomod@divisor+3)^0,c
  2521  000252  0E00               	movlw	0
  2522  000254  6E26               	movwf	(___aomod@divisor+4)^0,c
  2523  000256  0E00               	movlw	0
  2524  000258  6E27               	movwf	(___aomod@divisor+5)^0,c
  2525  00025A  0E00               	movlw	0
  2526  00025C  6E28               	movwf	(___aomod@divisor+6)^0,c
  2527  00025E  0E00               	movlw	0
  2528  000260  6E29               	movwf	(___aomod@divisor+7)^0,c
  2529  000262  EC99  F005         	call	___aomod	;wreg free
  2530  000266  C01A  F074         	movff	?___aomod,??_dtoa
  2531  00026A  C01B  F075         	movff	?___aomod+1,??_dtoa+1
  2532  00026E  C01C  F076         	movff	?___aomod+2,??_dtoa+2
  2533  000272  C01D  F077         	movff	?___aomod+3,??_dtoa+3
  2534  000276  C01E  F078         	movff	?___aomod+4,??_dtoa+4
  2535  00027A  C01F  F079         	movff	?___aomod+5,??_dtoa+5
  2536  00027E  C020  F07A         	movff	?___aomod+6,??_dtoa+6
  2537  000282  C021  F07B         	movff	?___aomod+7,??_dtoa+7
  2538  000286  C074  F060         	movff	??_dtoa,abs@a
  2539  00028A  C076  F061         	movff	??_dtoa+2,abs@a+1
  2540  00028E  EC92  F009         	call	_abs	;wreg free
  2541  000292  0100               	movlb	0	; () banked
  2542  000294  5160               	movf	?_abs& (0+255),w,b
  2543  000296  0F30               	addlw	48
  2544  000298  6EDF               	movwf	indf2,c
  2545  00029A                     
  2546                           ; BSR set to: 0
  2547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2548  00029A  077E               	decf	dtoa@p& (0+255),f,b
  2549  00029C  A0D8               	btfss	status,0,c
  2550  00029E  077F               	decf	(dtoa@p+1)& (0+255),f,b
  2551  0002A0                     
  2552                           ; BSR set to: 0
  2553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2554  0002A0  0780               	decf	dtoa@w& (0+255),f,b
  2555  0002A2  A0D8               	btfss	status,0,c
  2556  0002A4  0781               	decf	(dtoa@w+1)& (0+255),f,b
  2557  0002A6                     
  2558                           ; BSR set to: 0
  2559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2560  0002A6  C084  F01A         	movff	dtoa@n,___aodiv@dividend
  2561  0002AA  C085  F01B         	movff	dtoa@n+1,___aodiv@dividend+1
  2562  0002AE  C086  F01C         	movff	dtoa@n+2,___aodiv@dividend+2
  2563  0002B2  C087  F01D         	movff	dtoa@n+3,___aodiv@dividend+3
  2564  0002B6  C088  F01E         	movff	dtoa@n+4,___aodiv@dividend+4
  2565  0002BA  C089  F01F         	movff	dtoa@n+5,___aodiv@dividend+5
  2566  0002BE  C08A  F020         	movff	dtoa@n+6,___aodiv@dividend+6
  2567  0002C2  C08B  F021         	movff	dtoa@n+7,___aodiv@dividend+7
  2568  0002C6  0E0A               	movlw	10
  2569  0002C8  6E22               	movwf	___aodiv@divisor^0,c
  2570  0002CA  0E00               	movlw	0
  2571  0002CC  6E23               	movwf	(___aodiv@divisor+1)^0,c
  2572  0002CE  0E00               	movlw	0
  2573  0002D0  6E24               	movwf	(___aodiv@divisor+2)^0,c
  2574  0002D2  0E00               	movlw	0
  2575  0002D4  6E25               	movwf	(___aodiv@divisor+3)^0,c
  2576  0002D6  0E00               	movlw	0
  2577  0002D8  6E26               	movwf	(___aodiv@divisor+4)^0,c
  2578  0002DA  0E00               	movlw	0
  2579  0002DC  6E27               	movwf	(___aodiv@divisor+5)^0,c
  2580  0002DE  0E00               	movlw	0
  2581  0002E0  6E28               	movwf	(___aodiv@divisor+6)^0,c
  2582  0002E2  0E00               	movlw	0
  2583  0002E4  6E29               	movwf	(___aodiv@divisor+7)^0,c
  2584  0002E6  ECD4  F004         	call	___aodiv	;wreg free
  2585  0002EA  C01A  F084         	movff	?___aodiv,dtoa@n
  2586  0002EE  C01B  F085         	movff	?___aodiv+1,dtoa@n+1
  2587  0002F2  C01C  F086         	movff	?___aodiv+2,dtoa@n+2
  2588  0002F6  C01D  F087         	movff	?___aodiv+3,dtoa@n+3
  2589  0002FA  C01E  F088         	movff	?___aodiv+4,dtoa@n+4
  2590  0002FE  C01F  F089         	movff	?___aodiv+5,dtoa@n+5
  2591  000302  C020  F08A         	movff	?___aodiv+6,dtoa@n+6
  2592  000306  C021  F08B         	movff	?___aodiv+7,dtoa@n+7
  2593  00030A                     l2519:
  2594                           
  2595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2596  00030A  0100               	movlb	0	; () banked
  2597  00030C  BF8D               	btfsc	(dtoa@i+1)& (0+255),7,b
  2598  00030E  EF91  F001         	goto	u1981
  2599  000312  518D               	movf	(dtoa@i+1)& (0+255),w,b
  2600  000314  E108               	bnz	u1980
  2601  000316  058C               	decf	dtoa@i& (0+255),w,b
  2602  000318  A0D8               	btfss	status,0,c
  2603  00031A  EF91  F001         	goto	u1981
  2604  00031E  EF93  F001         	goto	u1980
  2605  000322                     u1981:
  2606  000322  EFC3  F001         	goto	l2529
  2607  000326                     u1980:
  2608  000326                     
  2609                           ; BSR set to: 0
  2610  000326  5184               	movf	dtoa@n& (0+255),w,b
  2611  000328  1185               	iorwf	(dtoa@n+1)& (0+255),w,b
  2612  00032A  1186               	iorwf	(dtoa@n+2)& (0+255),w,b
  2613  00032C  1187               	iorwf	(dtoa@n+3)& (0+255),w,b
  2614  00032E  1188               	iorwf	(dtoa@n+4)& (0+255),w,b
  2615  000330  1189               	iorwf	(dtoa@n+5)& (0+255),w,b
  2616  000332  118A               	iorwf	(dtoa@n+6)& (0+255),w,b
  2617  000334  118B               	iorwf	(dtoa@n+7)& (0+255),w,b
  2618  000336  A4D8               	btfss	status,2,c
  2619  000338  EFA0  F001         	goto	u1991
  2620  00033C  EFA2  F001         	goto	u1990
  2621  000340                     u1991:
  2622  000340  EF08  F001         	goto	l2509
  2623  000344                     u1990:
  2624  000344                     
  2625                           ; BSR set to: 0
  2626  000344  BF7F               	btfsc	(dtoa@p+1)& (0+255),7,b
  2627  000346  EFAF  F001         	goto	u2000
  2628  00034A  517F               	movf	(dtoa@p+1)& (0+255),w,b
  2629  00034C  E106               	bnz	u2001
  2630  00034E  057E               	decf	dtoa@p& (0+255),w,b
  2631  000350  B0D8               	btfsc	status,0,c
  2632  000352  EFAD  F001         	goto	u2001
  2633  000356  EFAF  F001         	goto	u2000
  2634  00035A                     u2001:
  2635  00035A  EF08  F001         	goto	l2509
  2636  00035E                     u2000:
  2637  00035E                     
  2638                           ; BSR set to: 0
  2639  00035E  BF81               	btfsc	(dtoa@w+1)& (0+255),7,b
  2640  000360  EFBA  F001         	goto	u2011
  2641  000364  5181               	movf	(dtoa@w+1)& (0+255),w,b
  2642  000366  E108               	bnz	u2010
  2643  000368  0580               	decf	dtoa@w& (0+255),w,b
  2644  00036A  A0D8               	btfss	status,0,c
  2645  00036C  EFBA  F001         	goto	u2011
  2646  000370  EFBC  F001         	goto	u2010
  2647  000374                     u2011:
  2648  000374  EFC3  F001         	goto	l2529
  2649  000378                     u2010:
  2650  000378                     
  2651                           ; BSR set to: 0
  2652  000378  B23D               	btfsc	_flags^0,1,c
  2653  00037A  EFC1  F001         	goto	u2021
  2654  00037E  EFC3  F001         	goto	u2020
  2655  000382                     u2021:
  2656  000382  EF08  F001         	goto	l2509
  2657  000386                     u2020:
  2658  000386                     l2529:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2662  000386  5182               	movf	dtoa@s& (0+255),w,b
  2663  000388  1183               	iorwf	(dtoa@s+1)& (0+255),w,b
  2664  00038A  A4D8               	btfss	status,2,c
  2665  00038C  EFCA  F001         	goto	u2031
  2666  000390  EFCC  F001         	goto	u2030
  2667  000394                     u2031:
  2668  000394  EFD3  F001         	goto	l2533
  2669  000398                     u2030:
  2670  000398                     
  2671                           ; BSR set to: 0
  2672  000398  A43D               	btfss	_flags^0,2,c
  2673  00039A  EFD1  F001         	goto	u2041
  2674  00039E  EFD3  F001         	goto	u2040
  2675  0003A2                     u2041:
  2676  0003A2  EFF1  F001         	goto	l2543
  2677  0003A6                     u2040:
  2678  0003A6                     l2533:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2682  0003A6  078C               	decf	dtoa@i& (0+255),f,b
  2683  0003A8  A0D8               	btfss	status,0,c
  2684  0003AA  078D               	decf	(dtoa@i+1)& (0+255),f,b
  2685  0003AC                     
  2686                           ; BSR set to: 0
  2687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2688  0003AC  5182               	movf	dtoa@s& (0+255),w,b
  2689  0003AE  1183               	iorwf	(dtoa@s+1)& (0+255),w,b
  2690  0003B0  A4D8               	btfss	status,2,c
  2691  0003B2  EFDD  F001         	goto	u2051
  2692  0003B6  EFDF  F001         	goto	u2050
  2693  0003BA                     u2051:
  2694  0003BA  EFE5  F001         	goto	l2539
  2695  0003BE                     u2050:
  2696  0003BE                     
  2697                           ; BSR set to: 0
  2698  0003BE  0E00               	movlw	0
  2699  0003C0  6F7D               	movwf	(_dtoa$1539+1)& (0+255),b
  2700  0003C2  0E2B               	movlw	43
  2701  0003C4  6F7C               	movwf	_dtoa$1539& (0+255),b
  2702  0003C6  EFE9  F001         	goto	l2541
  2703  0003CA                     l2539:
  2704                           
  2705                           ; BSR set to: 0
  2706  0003CA  0E00               	movlw	0
  2707  0003CC  6F7D               	movwf	(_dtoa$1539+1)& (0+255),b
  2708  0003CE  0E2D               	movlw	45
  2709  0003D0  6F7C               	movwf	_dtoa$1539& (0+255),b
  2710  0003D2                     l2541:
  2711                           
  2712                           ; BSR set to: 0
  2713  0003D2  0E00               	movlw	low _dbuf
  2714  0003D4  258C               	addwf	dtoa@i& (0+255),w,b
  2715  0003D6  6ED9               	movwf	fsr2l,c
  2716  0003D8  0E01               	movlw	high _dbuf
  2717  0003DA  218D               	addwfc	(dtoa@i+1)& (0+255),w,b
  2718  0003DC  6EDA               	movwf	fsr2h,c
  2719  0003DE  C07C  FFDF         	movff	_dtoa$1539,indf2
  2720  0003E2                     l2543:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2724  0003E2  C06A  F060         	movff	dtoa@fp,pad@fp
  2725  0003E6  C06B  F061         	movff	dtoa@fp+1,pad@fp+1
  2726  0003EA  0E00               	movlw	low _dbuf
  2727  0003EC  258C               	addwf	dtoa@i& (0+255),w,b
  2728  0003EE  6F62               	movwf	pad@buf& (0+255),b
  2729  0003F0  0E01               	movlw	high _dbuf
  2730  0003F2  218D               	addwfc	(dtoa@i+1)& (0+255),w,b
  2731  0003F4  6F63               	movwf	(pad@buf+1)& (0+255),b
  2732  0003F6  C080  F064         	movff	dtoa@w,pad@p
  2733  0003FA  C081  F065         	movff	dtoa@w+1,pad@p+1
  2734  0003FE  ECB0  F006         	call	_pad	;wreg free
  2735  000402  C060  F06A         	movff	?_pad,?_dtoa
  2736  000406  C061  F06B         	movff	?_pad+1,?_dtoa+1
  2737  00040A  0012               	return		;funcret
  2738  00040C                     __end_of_dtoa:
  2739                           	opt callstack 0
  2740                           
  2741 ;; *************** function _pad *****************
  2742 ;; Defined at:
  2743 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2746 ;;		 -> sprintf@f(6), 
  2747 ;;  buf             2    2[BANK0 ] PTR unsigned char 
  2748 ;;		 -> dbuf(32), 
  2749 ;;  p               2    4[BANK0 ] int 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  w               2    8[BANK0 ] int 
  2752 ;;  i               2    6[BANK0 ] int 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  2    0[BANK0 ] int 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2762 ;;      Params:         0       6       0       0
  2763 ;;      Locals:         0       4       0       0
  2764 ;;      Temps:          1       0       0       0
  2765 ;;      Totals:         1      10       0       0
  2766 ;;Total ram usage:       11 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    6
  2769 ;; This function calls:
  2770 ;;		_fputc
  2771 ;;		_fputs
  2772 ;;		_strlen
  2773 ;; This function is called by:
  2774 ;;		_dtoa
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text9
  2779  000D60                     __ptext9:
  2780                           	opt callstack 0
  2781  000D60                     _pad:
  2782                           	opt callstack 19
  2783  000D60                     
  2784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2785  000D60  A03D               	btfss	_flags^0,0,c
  2786  000D62  EFB5  F006         	goto	u1791
  2787  000D66  EFB7  F006         	goto	u1790
  2788  000D6A                     u1791:
  2789  000D6A  EFC1  F006         	goto	l2419
  2790  000D6E                     u1790:
  2791  000D6E                     
  2792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2793  000D6E  C062  F023         	movff	pad@buf,fputs@s
  2794  000D72  C063  F024         	movff	pad@buf+1,fputs@s+1
  2795  000D76  C060  F025         	movff	pad@fp,fputs@fp
  2796  000D7A  C061  F026         	movff	pad@fp+1,fputs@fp+1
  2797  000D7E  EC70  F009         	call	_fputs	;wreg free
  2798  000D82                     l2419:
  2799                           
  2800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2801  000D82  0100               	movlb	0	; () banked
  2802  000D84  BF65               	btfsc	(pad@p+1)& (0+255),7,b
  2803  000D86  EFC7  F006         	goto	u1801
  2804  000D8A  EFC9  F006         	goto	u1800
  2805  000D8E                     u1801:
  2806  000D8E  EFCF  F006         	goto	l2423
  2807  000D92                     u1800:
  2808  000D92                     
  2809                           ; BSR set to: 0
  2810  000D92  C064  F068         	movff	pad@p,pad@w
  2811  000D96  C065  F069         	movff	pad@p+1,pad@w+1
  2812  000D9A  EFD3  F006         	goto	l329
  2813  000D9E                     l2423:
  2814                           
  2815                           ; BSR set to: 0
  2816  000D9E  0E00               	movlw	0
  2817  000DA0  6F69               	movwf	(pad@w+1)& (0+255),b
  2818  000DA2  0E00               	movlw	0
  2819  000DA4  6F68               	movwf	pad@w& (0+255),b
  2820  000DA6                     l329:
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2824  000DA6  0E00               	movlw	0
  2825  000DA8  6F67               	movwf	(pad@i+1)& (0+255),b
  2826  000DAA  0E00               	movlw	0
  2827  000DAC  6F66               	movwf	pad@i& (0+255),b
  2828                           
  2829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2830  000DAE  EFE6  F006         	goto	l2429
  2831  000DB2                     l2425:
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2835  000DB2  0E00               	movlw	0
  2836  000DB4  6E1B               	movwf	(fputc@c+1)^0,c
  2837  000DB6  0E20               	movlw	32
  2838  000DB8  6E1A               	movwf	fputc@c^0,c
  2839  000DBA  C060  F01C         	movff	pad@fp,fputc@fp
  2840  000DBE  C061  F01D         	movff	pad@fp+1,fputc@fp+1
  2841  000DC2  EC4B  F006         	call	_fputc	;wreg free
  2842  000DC6                     
  2843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2844  000DC6  0100               	movlb	0	; () banked
  2845  000DC8  4B66               	infsnz	pad@i& (0+255),f,b
  2846  000DCA  2B67               	incf	(pad@i+1)& (0+255),f,b
  2847  000DCC                     l2429:
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2851  000DCC  5168               	movf	pad@w& (0+255),w,b
  2852  000DCE  5D66               	subwf	pad@i& (0+255),w,b
  2853  000DD0  5167               	movf	(pad@i+1)& (0+255),w,b
  2854  000DD2  0A80               	xorlw	128
  2855  000DD4  6E2A               	movwf	??_pad^0,c
  2856  000DD6  5169               	movf	(pad@w+1)& (0+255),w,b
  2857  000DD8  0A80               	xorlw	128
  2858  000DDA  582A               	subwfb	??_pad^0,w,c
  2859  000DDC  A0D8               	btfss	status,0,c
  2860  000DDE  EFF3  F006         	goto	u1811
  2861  000DE2  EFF5  F006         	goto	u1810
  2862  000DE6                     u1811:
  2863  000DE6  EFD9  F006         	goto	l2425
  2864  000DEA                     u1810:
  2865  000DEA                     
  2866                           ; BSR set to: 0
  2867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2868  000DEA  B03D               	btfsc	_flags^0,0,c
  2869  000DEC  EFFA  F006         	goto	u1821
  2870  000DF0  EFFC  F006         	goto	u1820
  2871  000DF4                     u1821:
  2872  000DF4  EF06  F007         	goto	l2433
  2873  000DF8                     u1820:
  2874  000DF8                     
  2875                           ; BSR set to: 0
  2876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2877  000DF8  C062  F023         	movff	pad@buf,fputs@s
  2878  000DFC  C063  F024         	movff	pad@buf+1,fputs@s+1
  2879  000E00  C060  F025         	movff	pad@fp,fputs@fp
  2880  000E04  C061  F026         	movff	pad@fp+1,fputs@fp+1
  2881  000E08  EC70  F009         	call	_fputs	;wreg free
  2882  000E0C                     l2433:
  2883                           
  2884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2885  000E0C  C062  F01A         	movff	pad@buf,strlen@s
  2886  000E10  C063  F01B         	movff	pad@buf+1,strlen@s+1
  2887  000E14  ECEF  F009         	call	_strlen	;wreg free
  2888  000E18  0100               	movlb	0	; () banked
  2889  000E1A  5168               	movf	pad@w& (0+255),w,b
  2890  000E1C  241A               	addwf	?_strlen^0,w,c
  2891  000E1E  6F60               	movwf	?_pad& (0+255),b
  2892  000E20  5169               	movf	(pad@w+1)& (0+255),w,b
  2893  000E22  201B               	addwfc	(?_strlen+1)^0,w,c
  2894  000E24  6F61               	movwf	(?_pad+1)& (0+255),b
  2895  000E26                     
  2896                           ; BSR set to: 0
  2897  000E26  0012               	return		;funcret
  2898  000E28                     __end_of_pad:
  2899                           	opt callstack 0
  2900                           
  2901 ;; *************** function _strlen *****************
  2902 ;; Defined at:
  2903 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  s               2   25[COMRAM] PTR const unsigned char 
  2906 ;;		 -> dbuf(32), 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  a               2   27[COMRAM] PTR const unsigned char 
  2909 ;;		 -> dbuf(32), 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  2   25[COMRAM] unsigned int 
  2912 ;; Registers used:
  2913 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2919 ;;      Params:         2       0       0       0
  2920 ;;      Locals:         2       0       0       0
  2921 ;;      Temps:          0       0       0       0
  2922 ;;      Totals:         4       0       0       0
  2923 ;;Total ram usage:        4 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:    3
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_pad
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text10
  2934  0013DE                     __ptext10:
  2935                           	opt callstack 0
  2936  0013DE                     _strlen:
  2937                           	opt callstack 21
  2938  0013DE  C01A  F01C         	movff	strlen@s,strlen@a
  2939  0013E2  C01B  F01D         	movff	strlen@s+1,strlen@a+1
  2940  0013E6  EFF7  F009         	goto	l2409
  2941  0013EA                     l2407:
  2942  0013EA  4A1A               	infsnz	strlen@s^0,f,c
  2943  0013EC  2A1B               	incf	(strlen@s+1)^0,f,c
  2944  0013EE                     l2409:
  2945  0013EE  C01A  FFD9         	movff	strlen@s,fsr2l
  2946  0013F2  C01B  FFDA         	movff	strlen@s+1,fsr2h
  2947  0013F6  50DF               	movf	indf2,w,c
  2948  0013F8  A4D8               	btfss	status,2,c
  2949  0013FA  EF01  F00A         	goto	u1781
  2950  0013FE  EF03  F00A         	goto	u1780
  2951  001402                     u1781:
  2952  001402  EFF5  F009         	goto	l2407
  2953  001406                     u1780:
  2954  001406  501C               	movf	strlen@a^0,w,c
  2955  001408  5C1A               	subwf	strlen@s^0,w,c
  2956  00140A  6E1A               	movwf	?_strlen^0,c
  2957  00140C  501D               	movf	(strlen@a+1)^0,w,c
  2958  00140E  581B               	subwfb	(strlen@s+1)^0,w,c
  2959  001410  6E1B               	movwf	(?_strlen+1)^0,c
  2960  001412  0012               	return		;funcret
  2961  001414                     __end_of_strlen:
  2962                           	opt callstack 0
  2963                           
  2964 ;; *************** function _fputs *****************
  2965 ;; Defined at:
  2966 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  s               2   34[COMRAM] PTR const unsigned char 
  2969 ;;		 -> dbuf(32), 
  2970 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  2971 ;;		 -> sprintf@f(6), 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  i               2   39[COMRAM] int 
  2974 ;;  c               1   38[COMRAM] unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  2   34[COMRAM] int 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2984 ;;      Params:         4       0       0       0
  2985 ;;      Locals:         3       0       0       0
  2986 ;;      Temps:          0       0       0       0
  2987 ;;      Totals:         7       0       0       0
  2988 ;;Total ram usage:        7 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    5
  2991 ;; This function calls:
  2992 ;;		_fputc
  2993 ;; This function is called by:
  2994 ;;		_pad
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text11
  2999  0012E0                     __ptext11:
  3000                           	opt callstack 0
  3001  0012E0                     _fputs:
  3002                           	opt callstack 19
  3003  0012E0  0E00               	movlw	0
  3004  0012E2  6E29               	movwf	(fputs@i+1)^0,c
  3005  0012E4  0E00               	movlw	0
  3006  0012E6  6E28               	movwf	fputs@i^0,c
  3007  0012E8  EF81  F009         	goto	l2403
  3008  0012EC                     l2399:
  3009  0012EC  C027  F01A         	movff	fputs@c,fputc@c
  3010  0012F0  6A1B               	clrf	(fputc@c+1)^0,c
  3011  0012F2  C025  F01C         	movff	fputs@fp,fputc@fp
  3012  0012F6  C026  F01D         	movff	fputs@fp+1,fputc@fp+1
  3013  0012FA  EC4B  F006         	call	_fputc	;wreg free
  3014  0012FE  4A28               	infsnz	fputs@i^0,f,c
  3015  001300  2A29               	incf	(fputs@i+1)^0,f,c
  3016  001302                     l2403:
  3017  001302  5028               	movf	fputs@i^0,w,c
  3018  001304  2423               	addwf	fputs@s^0,w,c
  3019  001306  6ED9               	movwf	fsr2l,c
  3020  001308  5029               	movf	(fputs@i+1)^0,w,c
  3021  00130A  2024               	addwfc	(fputs@s+1)^0,w,c
  3022  00130C  6EDA               	movwf	fsr2h,c
  3023  00130E  50DF               	movf	indf2,w,c
  3024  001310  6E27               	movwf	fputs@c^0,c
  3025  001312  5027               	movf	fputs@c^0,w,c
  3026  001314  A4D8               	btfss	status,2,c
  3027  001316  EF8F  F009         	goto	u1771
  3028  00131A  EF91  F009         	goto	u1770
  3029  00131E                     u1771:
  3030  00131E  EF76  F009         	goto	l2399
  3031  001322                     u1770:
  3032  001322  0012               	return		;funcret
  3033  001324                     __end_of_fputs:
  3034                           	opt callstack 0
  3035                           
  3036 ;; *************** function _fputc *****************
  3037 ;; Defined at:
  3038 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  c               2   25[COMRAM] int 
  3041 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3042 ;;		 -> sprintf@f(6), 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  2   25[COMRAM] int 
  3047 ;; Registers used:
  3048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3054 ;;      Params:         4       0       0       0
  3055 ;;      Locals:         0       0       0       0
  3056 ;;      Temps:          5       0       0       0
  3057 ;;      Totals:         9       0       0       0
  3058 ;;Total ram usage:        9 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    4
  3061 ;; This function calls:
  3062 ;;		_putch
  3063 ;; This function is called by:
  3064 ;;		_pad
  3065 ;;		_vfpfcnvrt
  3066 ;;		_fputs
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text12
  3071  000C96                     __ptext12:
  3072                           	opt callstack 0
  3073  000C96                     _fputc:
  3074                           	opt callstack 22
  3075  000C96  501C               	movf	fputc@fp^0,w,c
  3076  000C98  101D               	iorwf	(fputc@fp+1)^0,w,c
  3077  000C9A  B4D8               	btfsc	status,2,c
  3078  000C9C  EF52  F006         	goto	u1731
  3079  000CA0  EF54  F006         	goto	u1730
  3080  000CA4                     u1731:
  3081  000CA4  EF5D  F006         	goto	l2387
  3082  000CA8                     u1730:
  3083  000CA8  501C               	movf	fputc@fp^0,w,c
  3084  000CAA  101D               	iorwf	(fputc@fp+1)^0,w,c
  3085  000CAC  A4D8               	btfss	status,2,c
  3086  000CAE  EF5B  F006         	goto	u1741
  3087  000CB2  EF5D  F006         	goto	u1740
  3088  000CB6                     u1741:
  3089  000CB6  EF62  F006         	goto	l2389
  3090  000CBA                     u1740:
  3091  000CBA                     l2387:
  3092  000CBA  501A               	movf	fputc@c^0,w,c
  3093  000CBC  EC71  F00A         	call	_putch
  3094  000CC0  EFAF  F006         	goto	l1067
  3095  000CC4                     l2389:
  3096  000CC4  EE20 F004          	lfsr	2,4
  3097  000CC8  501C               	movf	fputc@fp^0,w,c
  3098  000CCA  26D9               	addwf	fsr2l,f,c
  3099  000CCC  501D               	movf	(fputc@fp+1)^0,w,c
  3100  000CCE  22DA               	addwfc	fsr2h,f,c
  3101  000CD0  50DE               	movf	postinc2,w,c
  3102  000CD2  10DE               	iorwf	postinc2,w,c
  3103  000CD4  B4D8               	btfsc	status,2,c
  3104  000CD6  EF6F  F006         	goto	u1751
  3105  000CDA  EF71  F006         	goto	u1750
  3106  000CDE                     u1751:
  3107  000CDE  EF8C  F006         	goto	l2393
  3108  000CE2                     u1750:
  3109  000CE2  EE20 F004          	lfsr	2,4
  3110  000CE6  501C               	movf	fputc@fp^0,w,c
  3111  000CE8  26D9               	addwf	fsr2l,f,c
  3112  000CEA  501D               	movf	(fputc@fp+1)^0,w,c
  3113  000CEC  22DA               	addwfc	fsr2h,f,c
  3114  000CEE  EE10 F002          	lfsr	1,2
  3115  000CF2  501C               	movf	fputc@fp^0,w,c
  3116  000CF4  26E1               	addwf	fsr1l,f,c
  3117  000CF6  501D               	movf	(fputc@fp+1)^0,w,c
  3118  000CF8  22E2               	addwfc	fsr1h,f,c
  3119  000CFA  50DE               	movf	postinc2,w,c
  3120  000CFC  5CE6               	subwf	postinc1,w,c
  3121  000CFE  50E6               	movf	postinc1,w,c
  3122  000D00  0A80               	xorlw	128
  3123  000D02  6E22               	movwf	(??_fputc+4)^0,c
  3124  000D04  50DE               	movf	postinc2,w,c
  3125  000D06  0A80               	xorlw	128
  3126  000D08  5822               	subwfb	(??_fputc+4)^0,w,c
  3127  000D0A  B0D8               	btfsc	status,0,c
  3128  000D0C  EF8A  F006         	goto	u1761
  3129  000D10  EF8C  F006         	goto	u1760
  3130  000D14                     u1761:
  3131  000D14  EFAF  F006         	goto	l1067
  3132  000D18                     u1760:
  3133  000D18                     l2393:
  3134  000D18  EE20 F002          	lfsr	2,2
  3135  000D1C  501C               	movf	fputc@fp^0,w,c
  3136  000D1E  26D9               	addwf	fsr2l,f,c
  3137  000D20  501D               	movf	(fputc@fp+1)^0,w,c
  3138  000D22  22DA               	addwfc	fsr2h,f,c
  3139  000D24  CFDE F01E          	movff	postinc2,??_fputc
  3140  000D28  CFDD F01F          	movff	postdec2,??_fputc+1
  3141  000D2C  C01C  FFD9         	movff	fputc@fp,fsr2l
  3142  000D30  C01D  FFDA         	movff	fputc@fp+1,fsr2h
  3143  000D34  CFDE F020          	movff	postinc2,??_fputc+2
  3144  000D38  CFDD F021          	movff	postdec2,??_fputc+3
  3145  000D3C  501E               	movf	??_fputc^0,w,c
  3146  000D3E  2420               	addwf	(??_fputc+2)^0,w,c
  3147  000D40  6ED9               	movwf	fsr2l,c
  3148  000D42  501F               	movf	(??_fputc+1)^0,w,c
  3149  000D44  2021               	addwfc	(??_fputc+3)^0,w,c
  3150  000D46  6EDA               	movwf	fsr2h,c
  3151  000D48  C01A  FFDF         	movff	fputc@c,indf2
  3152  000D4C  EE20 F002          	lfsr	2,2
  3153  000D50  501C               	movf	fputc@fp^0,w,c
  3154  000D52  26D9               	addwf	fsr2l,f,c
  3155  000D54  501D               	movf	(fputc@fp+1)^0,w,c
  3156  000D56  22DA               	addwfc	fsr2h,f,c
  3157  000D58  2ADE               	incf	postinc2,f,c
  3158  000D5A  0E00               	movlw	0
  3159  000D5C  22DD               	addwfc	postdec2,f,c
  3160  000D5E                     l1067:
  3161  000D5E  0012               	return		;funcret
  3162  000D60                     __end_of_fputc:
  3163                           	opt callstack 0
  3164                           
  3165 ;; *************** function _putch *****************
  3166 ;; Defined at:
  3167 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  c               1    wreg     unsigned char 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  c               1    0[COMRAM] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3181 ;;      Params:         0       0       0       0
  3182 ;;      Locals:         0       0       0       0
  3183 ;;      Temps:          0       0       0       0
  3184 ;;      Totals:         0       0       0       0
  3185 ;;Total ram usage:        0 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    3
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_fputc
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text13
  3196  0014E2                     __ptext13:
  3197                           	opt callstack 0
  3198  0014E2                     _putch:
  3199                           	opt callstack 22
  3200  0014E2  0012               	return		;funcret
  3201  0014E4                     __end_of_putch:
  3202                           	opt callstack 0
  3203                           
  3204 ;; *************** function _abs *****************
  3205 ;; Defined at:
  3206 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  a               2    0[BANK0 ] int 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  2    0[BANK0 ] int 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3220 ;;      Params:         0       2       0       0
  3221 ;;      Locals:         0       0       0       0
  3222 ;;      Temps:          0       2       0       0
  3223 ;;      Totals:         0       4       0       0
  3224 ;;Total ram usage:        4 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    3
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_dtoa
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text14
  3235  001324                     __ptext14:
  3236                           	opt callstack 0
  3237  001324                     _abs:
  3238                           	opt callstack 22
  3239  001324  0100               	movlb	0	; () banked
  3240  001326  BF61               	btfsc	(abs@a+1)& (0+255),7,b
  3241  001328  EFA0  F009         	goto	u1830
  3242  00132C  5161               	movf	(abs@a+1)& (0+255),w,b
  3243  00132E  E106               	bnz	u1831
  3244  001330  0560               	decf	abs@a& (0+255),w,b
  3245  001332  B0D8               	btfsc	status,0,c
  3246  001334  EF9E  F009         	goto	u1831
  3247  001338  EFA0  F009         	goto	u1830
  3248  00133C                     u1831:
  3249  00133C  EFAE  F009         	goto	l1052
  3250  001340                     u1830:
  3251  001340                     
  3252                           ; BSR set to: 0
  3253  001340  C060  F062         	movff	abs@a,??_abs
  3254  001344  C061  F063         	movff	abs@a+1,??_abs+1
  3255  001348  1F62               	comf	??_abs& (0+255),f,b
  3256  00134A  1F63               	comf	(??_abs+1)& (0+255),f,b
  3257  00134C  4B62               	infsnz	??_abs& (0+255),f,b
  3258  00134E  2B63               	incf	(??_abs+1)& (0+255),f,b
  3259  001350  C062  F060         	movff	??_abs,?_abs
  3260  001354  C063  F061         	movff	??_abs+1,?_abs+1
  3261  001358  EFB2  F009         	goto	l1055
  3262  00135C                     l1052:
  3263                           
  3264                           ; BSR set to: 0
  3265  00135C  C060  F060         	movff	abs@a,?_abs
  3266  001360  C061  F061         	movff	abs@a+1,?_abs+1
  3267  001364                     l1055:
  3268                           
  3269                           ; BSR set to: 0
  3270  001364  0012               	return		;funcret
  3271  001366                     __end_of_abs:
  3272                           	opt callstack 0
  3273                           
  3274 ;; *************** function ___aomod *****************
  3275 ;; Defined at:
  3276 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  dividend        8   25[COMRAM] long long 
  3279 ;;  divisor         8   33[COMRAM] long long 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  sign            1   42[COMRAM] unsigned char 
  3282 ;;  counter         1   41[COMRAM] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  8   25[COMRAM] long long 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3292 ;;      Params:        16       0       0       0
  3293 ;;      Locals:         2       0       0       0
  3294 ;;      Temps:          0       0       0       0
  3295 ;;      Totals:        18       0       0       0
  3296 ;;Total ram usage:       18 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    3
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_dtoa
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text15
  3307  000B32                     __ptext15:
  3308                           	opt callstack 0
  3309  000B32                     ___aomod:
  3310                           	opt callstack 22
  3311  000B32  0E00               	movlw	0
  3312  000B34  6E2B               	movwf	___aomod@sign^0,c
  3313  000B36  BE21               	btfsc	(___aomod@dividend+7)^0,7,c
  3314  000B38  EFA2  F005         	goto	u1050
  3315  000B3C  EFA0  F005         	goto	u1051
  3316  000B40                     u1051:
  3317  000B40  EFB4  F005         	goto	l1897
  3318  000B44                     u1050:
  3319  000B44  1E21               	comf	(___aomod@dividend+7)^0,f,c
  3320  000B46  1E20               	comf	(___aomod@dividend+6)^0,f,c
  3321  000B48  1E1F               	comf	(___aomod@dividend+5)^0,f,c
  3322  000B4A  1E1E               	comf	(___aomod@dividend+4)^0,f,c
  3323  000B4C  1E1D               	comf	(___aomod@dividend+3)^0,f,c
  3324  000B4E  1E1C               	comf	(___aomod@dividend+2)^0,f,c
  3325  000B50  1E1B               	comf	(___aomod@dividend+1)^0,f,c
  3326  000B52  6C1A               	negf	___aomod@dividend^0,c
  3327  000B54  0E00               	movlw	0
  3328  000B56  221B               	addwfc	(___aomod@dividend+1)^0,f,c
  3329  000B58  221C               	addwfc	(___aomod@dividend+2)^0,f,c
  3330  000B5A  221D               	addwfc	(___aomod@dividend+3)^0,f,c
  3331  000B5C  221E               	addwfc	(___aomod@dividend+4)^0,f,c
  3332  000B5E  221F               	addwfc	(___aomod@dividend+5)^0,f,c
  3333  000B60  2220               	addwfc	(___aomod@dividend+6)^0,f,c
  3334  000B62  2221               	addwfc	(___aomod@dividend+7)^0,f,c
  3335  000B64  0E01               	movlw	1
  3336  000B66  6E2B               	movwf	___aomod@sign^0,c
  3337  000B68                     l1897:
  3338  000B68  BE29               	btfsc	(___aomod@divisor+7)^0,7,c
  3339  000B6A  EFBB  F005         	goto	u1060
  3340  000B6E  EFB9  F005         	goto	u1061
  3341  000B72                     u1061:
  3342  000B72  EFCB  F005         	goto	l1901
  3343  000B76                     u1060:
  3344  000B76  1E29               	comf	(___aomod@divisor+7)^0,f,c
  3345  000B78  1E28               	comf	(___aomod@divisor+6)^0,f,c
  3346  000B7A  1E27               	comf	(___aomod@divisor+5)^0,f,c
  3347  000B7C  1E26               	comf	(___aomod@divisor+4)^0,f,c
  3348  000B7E  1E25               	comf	(___aomod@divisor+3)^0,f,c
  3349  000B80  1E24               	comf	(___aomod@divisor+2)^0,f,c
  3350  000B82  1E23               	comf	(___aomod@divisor+1)^0,f,c
  3351  000B84  6C22               	negf	___aomod@divisor^0,c
  3352  000B86  0E00               	movlw	0
  3353  000B88  2223               	addwfc	(___aomod@divisor+1)^0,f,c
  3354  000B8A  2224               	addwfc	(___aomod@divisor+2)^0,f,c
  3355  000B8C  2225               	addwfc	(___aomod@divisor+3)^0,f,c
  3356  000B8E  2226               	addwfc	(___aomod@divisor+4)^0,f,c
  3357  000B90  2227               	addwfc	(___aomod@divisor+5)^0,f,c
  3358  000B92  2228               	addwfc	(___aomod@divisor+6)^0,f,c
  3359  000B94  2229               	addwfc	(___aomod@divisor+7)^0,f,c
  3360  000B96                     l1901:
  3361  000B96  5022               	movf	___aomod@divisor^0,w,c
  3362  000B98  1023               	iorwf	(___aomod@divisor+1)^0,w,c
  3363  000B9A  1024               	iorwf	(___aomod@divisor+2)^0,w,c
  3364  000B9C  1025               	iorwf	(___aomod@divisor+3)^0,w,c
  3365  000B9E  1026               	iorwf	(___aomod@divisor+4)^0,w,c
  3366  000BA0  1027               	iorwf	(___aomod@divisor+5)^0,w,c
  3367  000BA2  1028               	iorwf	(___aomod@divisor+6)^0,w,c
  3368  000BA4  1029               	iorwf	(___aomod@divisor+7)^0,w,c
  3369  000BA6  B4D8               	btfsc	status,2,c
  3370  000BA8  EFD8  F005         	goto	u1071
  3371  000BAC  EFDA  F005         	goto	u1070
  3372  000BB0                     u1071:
  3373  000BB0  EF22  F006         	goto	l1917
  3374  000BB4                     u1070:
  3375  000BB4  0E01               	movlw	1
  3376  000BB6  6E2A               	movwf	___aomod@counter^0,c
  3377  000BB8  EFE8  F005         	goto	l1907
  3378  000BBC                     l1905:
  3379  000BBC  90D8               	bcf	status,0,c
  3380  000BBE  3622               	rlcf	___aomod@divisor^0,f,c
  3381  000BC0  3623               	rlcf	(___aomod@divisor+1)^0,f,c
  3382  000BC2  3624               	rlcf	(___aomod@divisor+2)^0,f,c
  3383  000BC4  3625               	rlcf	(___aomod@divisor+3)^0,f,c
  3384  000BC6  3626               	rlcf	(___aomod@divisor+4)^0,f,c
  3385  000BC8  3627               	rlcf	(___aomod@divisor+5)^0,f,c
  3386  000BCA  3628               	rlcf	(___aomod@divisor+6)^0,f,c
  3387  000BCC  3629               	rlcf	(___aomod@divisor+7)^0,f,c
  3388  000BCE  2A2A               	incf	___aomod@counter^0,f,c
  3389  000BD0                     l1907:
  3390  000BD0  AE29               	btfss	(___aomod@divisor+7)^0,7,c
  3391  000BD2  EFED  F005         	goto	u1081
  3392  000BD6  EFEF  F005         	goto	u1080
  3393  000BDA                     u1081:
  3394  000BDA  EFDE  F005         	goto	l1905
  3395  000BDE                     u1080:
  3396  000BDE                     l1909:
  3397  000BDE  5022               	movf	___aomod@divisor^0,w,c
  3398  000BE0  5C1A               	subwf	___aomod@dividend^0,w,c
  3399  000BE2  5023               	movf	(___aomod@divisor+1)^0,w,c
  3400  000BE4  581B               	subwfb	(___aomod@dividend+1)^0,w,c
  3401  000BE6  5024               	movf	(___aomod@divisor+2)^0,w,c
  3402  000BE8  581C               	subwfb	(___aomod@dividend+2)^0,w,c
  3403  000BEA  5025               	movf	(___aomod@divisor+3)^0,w,c
  3404  000BEC  581D               	subwfb	(___aomod@dividend+3)^0,w,c
  3405  000BEE  5026               	movf	(___aomod@divisor+4)^0,w,c
  3406  000BF0  581E               	subwfb	(___aomod@dividend+4)^0,w,c
  3407  000BF2  5027               	movf	(___aomod@divisor+5)^0,w,c
  3408  000BF4  581F               	subwfb	(___aomod@dividend+5)^0,w,c
  3409  000BF6  5028               	movf	(___aomod@divisor+6)^0,w,c
  3410  000BF8  5820               	subwfb	(___aomod@dividend+6)^0,w,c
  3411  000BFA  5029               	movf	(___aomod@divisor+7)^0,w,c
  3412  000BFC  5821               	subwfb	(___aomod@dividend+7)^0,w,c
  3413  000BFE  A0D8               	btfss	status,0,c
  3414  000C00  EF04  F006         	goto	u1091
  3415  000C04  EF06  F006         	goto	u1090
  3416  000C08                     u1091:
  3417  000C08  EF16  F006         	goto	l1913
  3418  000C0C                     u1090:
  3419  000C0C  5022               	movf	___aomod@divisor^0,w,c
  3420  000C0E  5E1A               	subwf	___aomod@dividend^0,f,c
  3421  000C10  5023               	movf	(___aomod@divisor+1)^0,w,c
  3422  000C12  5A1B               	subwfb	(___aomod@dividend+1)^0,f,c
  3423  000C14  5024               	movf	(___aomod@divisor+2)^0,w,c
  3424  000C16  5A1C               	subwfb	(___aomod@dividend+2)^0,f,c
  3425  000C18  5025               	movf	(___aomod@divisor+3)^0,w,c
  3426  000C1A  5A1D               	subwfb	(___aomod@dividend+3)^0,f,c
  3427  000C1C  5026               	movf	(___aomod@divisor+4)^0,w,c
  3428  000C1E  5A1E               	subwfb	(___aomod@dividend+4)^0,f,c
  3429  000C20  5027               	movf	(___aomod@divisor+5)^0,w,c
  3430  000C22  5A1F               	subwfb	(___aomod@dividend+5)^0,f,c
  3431  000C24  5028               	movf	(___aomod@divisor+6)^0,w,c
  3432  000C26  5A20               	subwfb	(___aomod@dividend+6)^0,f,c
  3433  000C28  5029               	movf	(___aomod@divisor+7)^0,w,c
  3434  000C2A  5A21               	subwfb	(___aomod@dividend+7)^0,f,c
  3435  000C2C                     l1913:
  3436  000C2C  90D8               	bcf	status,0,c
  3437  000C2E  3229               	rrcf	(___aomod@divisor+7)^0,f,c
  3438  000C30  3228               	rrcf	(___aomod@divisor+6)^0,f,c
  3439  000C32  3227               	rrcf	(___aomod@divisor+5)^0,f,c
  3440  000C34  3226               	rrcf	(___aomod@divisor+4)^0,f,c
  3441  000C36  3225               	rrcf	(___aomod@divisor+3)^0,f,c
  3442  000C38  3224               	rrcf	(___aomod@divisor+2)^0,f,c
  3443  000C3A  3223               	rrcf	(___aomod@divisor+1)^0,f,c
  3444  000C3C  3222               	rrcf	___aomod@divisor^0,f,c
  3445  000C3E  2E2A               	decfsz	___aomod@counter^0,f,c
  3446  000C40  EFEF  F005         	goto	l1909
  3447  000C44                     l1917:
  3448  000C44  502B               	movf	___aomod@sign^0,w,c
  3449  000C46  B4D8               	btfsc	status,2,c
  3450  000C48  EF28  F006         	goto	u1101
  3451  000C4C  EF2A  F006         	goto	u1100
  3452  000C50                     u1101:
  3453  000C50  EF3A  F006         	goto	l1921
  3454  000C54                     u1100:
  3455  000C54  1E21               	comf	(___aomod@dividend+7)^0,f,c
  3456  000C56  1E20               	comf	(___aomod@dividend+6)^0,f,c
  3457  000C58  1E1F               	comf	(___aomod@dividend+5)^0,f,c
  3458  000C5A  1E1E               	comf	(___aomod@dividend+4)^0,f,c
  3459  000C5C  1E1D               	comf	(___aomod@dividend+3)^0,f,c
  3460  000C5E  1E1C               	comf	(___aomod@dividend+2)^0,f,c
  3461  000C60  1E1B               	comf	(___aomod@dividend+1)^0,f,c
  3462  000C62  6C1A               	negf	___aomod@dividend^0,c
  3463  000C64  0E00               	movlw	0
  3464  000C66  221B               	addwfc	(___aomod@dividend+1)^0,f,c
  3465  000C68  221C               	addwfc	(___aomod@dividend+2)^0,f,c
  3466  000C6A  221D               	addwfc	(___aomod@dividend+3)^0,f,c
  3467  000C6C  221E               	addwfc	(___aomod@dividend+4)^0,f,c
  3468  000C6E  221F               	addwfc	(___aomod@dividend+5)^0,f,c
  3469  000C70  2220               	addwfc	(___aomod@dividend+6)^0,f,c
  3470  000C72  2221               	addwfc	(___aomod@dividend+7)^0,f,c
  3471  000C74                     l1921:
  3472  000C74  C01A  F01A         	movff	___aomod@dividend,?___aomod
  3473  000C78  C01B  F01B         	movff	___aomod@dividend+1,?___aomod+1
  3474  000C7C  C01C  F01C         	movff	___aomod@dividend+2,?___aomod+2
  3475  000C80  C01D  F01D         	movff	___aomod@dividend+3,?___aomod+3
  3476  000C84  C01E  F01E         	movff	___aomod@dividend+4,?___aomod+4
  3477  000C88  C01F  F01F         	movff	___aomod@dividend+5,?___aomod+5
  3478  000C8C  C020  F020         	movff	___aomod@dividend+6,?___aomod+6
  3479  000C90  C021  F021         	movff	___aomod@dividend+7,?___aomod+7
  3480  000C94  0012               	return		;funcret
  3481  000C96                     __end_of___aomod:
  3482                           	opt callstack 0
  3483                           
  3484 ;; *************** function ___aodiv *****************
  3485 ;; Defined at:
  3486 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  dividend        8   25[COMRAM] long long 
  3489 ;;  divisor         8   33[COMRAM] long long 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  quotient        8    2[BANK0 ] long long 
  3492 ;;  sign            1    1[BANK0 ] unsigned char 
  3493 ;;  counter         1    0[BANK0 ] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  8   25[COMRAM] long long 
  3496 ;; Registers used:
  3497 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3503 ;;      Params:        16       0       0       0
  3504 ;;      Locals:         0      10       0       0
  3505 ;;      Temps:          0       0       0       0
  3506 ;;      Totals:        16      10       0       0
  3507 ;;Total ram usage:       26 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    3
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_dtoa
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text16
  3518  0009A8                     __ptext16:
  3519                           	opt callstack 0
  3520  0009A8                     ___aodiv:
  3521                           	opt callstack 22
  3522  0009A8  0E00               	movlw	0
  3523  0009AA  0100               	movlb	0	; () banked
  3524  0009AC  6F61               	movwf	___aodiv@sign& (0+255),b
  3525  0009AE                     
  3526                           ; BSR set to: 0
  3527  0009AE  BE29               	btfsc	(___aodiv@divisor+7)^0,7,c
  3528  0009B0  EFDE  F004         	goto	u1840
  3529  0009B4  EFDC  F004         	goto	u1841
  3530  0009B8                     u1841:
  3531  0009B8  EFF0  F004         	goto	l2449
  3532  0009BC                     u1840:
  3533  0009BC                     
  3534                           ; BSR set to: 0
  3535  0009BC  1E29               	comf	(___aodiv@divisor+7)^0,f,c
  3536  0009BE  1E28               	comf	(___aodiv@divisor+6)^0,f,c
  3537  0009C0  1E27               	comf	(___aodiv@divisor+5)^0,f,c
  3538  0009C2  1E26               	comf	(___aodiv@divisor+4)^0,f,c
  3539  0009C4  1E25               	comf	(___aodiv@divisor+3)^0,f,c
  3540  0009C6  1E24               	comf	(___aodiv@divisor+2)^0,f,c
  3541  0009C8  1E23               	comf	(___aodiv@divisor+1)^0,f,c
  3542  0009CA  6C22               	negf	___aodiv@divisor^0,c
  3543  0009CC  0E00               	movlw	0
  3544  0009CE  2223               	addwfc	(___aodiv@divisor+1)^0,f,c
  3545  0009D0  2224               	addwfc	(___aodiv@divisor+2)^0,f,c
  3546  0009D2  2225               	addwfc	(___aodiv@divisor+3)^0,f,c
  3547  0009D4  2226               	addwfc	(___aodiv@divisor+4)^0,f,c
  3548  0009D6  2227               	addwfc	(___aodiv@divisor+5)^0,f,c
  3549  0009D8  2228               	addwfc	(___aodiv@divisor+6)^0,f,c
  3550  0009DA  2229               	addwfc	(___aodiv@divisor+7)^0,f,c
  3551  0009DC                     
  3552                           ; BSR set to: 0
  3553  0009DC  0E01               	movlw	1
  3554  0009DE  6F61               	movwf	___aodiv@sign& (0+255),b
  3555  0009E0                     l2449:
  3556                           
  3557                           ; BSR set to: 0
  3558  0009E0  BE21               	btfsc	(___aodiv@dividend+7)^0,7,c
  3559  0009E2  EFF7  F004         	goto	u1850
  3560  0009E6  EFF5  F004         	goto	u1851
  3561  0009EA                     u1851:
  3562  0009EA  EF09  F005         	goto	l2455
  3563  0009EE                     u1850:
  3564  0009EE                     
  3565                           ; BSR set to: 0
  3566  0009EE  1E21               	comf	(___aodiv@dividend+7)^0,f,c
  3567  0009F0  1E20               	comf	(___aodiv@dividend+6)^0,f,c
  3568  0009F2  1E1F               	comf	(___aodiv@dividend+5)^0,f,c
  3569  0009F4  1E1E               	comf	(___aodiv@dividend+4)^0,f,c
  3570  0009F6  1E1D               	comf	(___aodiv@dividend+3)^0,f,c
  3571  0009F8  1E1C               	comf	(___aodiv@dividend+2)^0,f,c
  3572  0009FA  1E1B               	comf	(___aodiv@dividend+1)^0,f,c
  3573  0009FC  6C1A               	negf	___aodiv@dividend^0,c
  3574  0009FE  0E00               	movlw	0
  3575  000A00  221B               	addwfc	(___aodiv@dividend+1)^0,f,c
  3576  000A02  221C               	addwfc	(___aodiv@dividend+2)^0,f,c
  3577  000A04  221D               	addwfc	(___aodiv@dividend+3)^0,f,c
  3578  000A06  221E               	addwfc	(___aodiv@dividend+4)^0,f,c
  3579  000A08  221F               	addwfc	(___aodiv@dividend+5)^0,f,c
  3580  000A0A  2220               	addwfc	(___aodiv@dividend+6)^0,f,c
  3581  000A0C  2221               	addwfc	(___aodiv@dividend+7)^0,f,c
  3582  000A0E                     
  3583                           ; BSR set to: 0
  3584  000A0E  0E01               	movlw	1
  3585  000A10  1B61               	xorwf	___aodiv@sign& (0+255),f,b
  3586  000A12                     l2455:
  3587                           
  3588                           ; BSR set to: 0
  3589  000A12  EE20  F062         	lfsr	2,___aodiv@quotient
  3590  000A16  0E07               	movlw	7
  3591  000A18                     u1861:
  3592  000A18  6ADE               	clrf	postinc2,c
  3593  000A1A  06E8               	decf	wreg,f,c
  3594  000A1C  E2FD               	bc	u1861
  3595  000A1E                     
  3596                           ; BSR set to: 0
  3597  000A1E  5022               	movf	___aodiv@divisor^0,w,c
  3598  000A20  1023               	iorwf	(___aodiv@divisor+1)^0,w,c
  3599  000A22  1024               	iorwf	(___aodiv@divisor+2)^0,w,c
  3600  000A24  1025               	iorwf	(___aodiv@divisor+3)^0,w,c
  3601  000A26  1026               	iorwf	(___aodiv@divisor+4)^0,w,c
  3602  000A28  1027               	iorwf	(___aodiv@divisor+5)^0,w,c
  3603  000A2A  1028               	iorwf	(___aodiv@divisor+6)^0,w,c
  3604  000A2C  1029               	iorwf	(___aodiv@divisor+7)^0,w,c
  3605  000A2E  B4D8               	btfsc	status,2,c
  3606  000A30  EF1C  F005         	goto	u1871
  3607  000A34  EF1E  F005         	goto	u1870
  3608  000A38                     u1871:
  3609  000A38  EF70  F005         	goto	l2477
  3610  000A3C                     u1870:
  3611  000A3C                     
  3612                           ; BSR set to: 0
  3613  000A3C  0E01               	movlw	1
  3614  000A3E  6F60               	movwf	___aodiv@counter& (0+255),b
  3615  000A40  EF2C  F005         	goto	l2463
  3616  000A44                     l2461:
  3617                           
  3618                           ; BSR set to: 0
  3619  000A44  90D8               	bcf	status,0,c
  3620  000A46  3622               	rlcf	___aodiv@divisor^0,f,c
  3621  000A48  3623               	rlcf	(___aodiv@divisor+1)^0,f,c
  3622  000A4A  3624               	rlcf	(___aodiv@divisor+2)^0,f,c
  3623  000A4C  3625               	rlcf	(___aodiv@divisor+3)^0,f,c
  3624  000A4E  3626               	rlcf	(___aodiv@divisor+4)^0,f,c
  3625  000A50  3627               	rlcf	(___aodiv@divisor+5)^0,f,c
  3626  000A52  3628               	rlcf	(___aodiv@divisor+6)^0,f,c
  3627  000A54  3629               	rlcf	(___aodiv@divisor+7)^0,f,c
  3628  000A56  2B60               	incf	___aodiv@counter& (0+255),f,b
  3629  000A58                     l2463:
  3630                           
  3631                           ; BSR set to: 0
  3632  000A58  AE29               	btfss	(___aodiv@divisor+7)^0,7,c
  3633  000A5A  EF31  F005         	goto	u1881
  3634  000A5E  EF33  F005         	goto	u1880
  3635  000A62                     u1881:
  3636  000A62  EF22  F005         	goto	l2461
  3637  000A66                     u1880:
  3638  000A66                     l2465:
  3639                           
  3640                           ; BSR set to: 0
  3641  000A66  90D8               	bcf	status,0,c
  3642  000A68  3762               	rlcf	___aodiv@quotient& (0+255),f,b
  3643  000A6A  3763               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3644  000A6C  3764               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3645  000A6E  3765               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3646  000A70  3766               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3647  000A72  3767               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3648  000A74  3768               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3649  000A76  3769               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3650  000A78                     
  3651                           ; BSR set to: 0
  3652  000A78  5022               	movf	___aodiv@divisor^0,w,c
  3653  000A7A  5C1A               	subwf	___aodiv@dividend^0,w,c
  3654  000A7C  5023               	movf	(___aodiv@divisor+1)^0,w,c
  3655  000A7E  581B               	subwfb	(___aodiv@dividend+1)^0,w,c
  3656  000A80  5024               	movf	(___aodiv@divisor+2)^0,w,c
  3657  000A82  581C               	subwfb	(___aodiv@dividend+2)^0,w,c
  3658  000A84  5025               	movf	(___aodiv@divisor+3)^0,w,c
  3659  000A86  581D               	subwfb	(___aodiv@dividend+3)^0,w,c
  3660  000A88  5026               	movf	(___aodiv@divisor+4)^0,w,c
  3661  000A8A  581E               	subwfb	(___aodiv@dividend+4)^0,w,c
  3662  000A8C  5027               	movf	(___aodiv@divisor+5)^0,w,c
  3663  000A8E  581F               	subwfb	(___aodiv@dividend+5)^0,w,c
  3664  000A90  5028               	movf	(___aodiv@divisor+6)^0,w,c
  3665  000A92  5820               	subwfb	(___aodiv@dividend+6)^0,w,c
  3666  000A94  5029               	movf	(___aodiv@divisor+7)^0,w,c
  3667  000A96  5821               	subwfb	(___aodiv@dividend+7)^0,w,c
  3668  000A98  A0D8               	btfss	status,0,c
  3669  000A9A  EF51  F005         	goto	u1891
  3670  000A9E  EF53  F005         	goto	u1890
  3671  000AA2                     u1891:
  3672  000AA2  EF64  F005         	goto	l2473
  3673  000AA6                     u1890:
  3674  000AA6                     
  3675                           ; BSR set to: 0
  3676  000AA6  5022               	movf	___aodiv@divisor^0,w,c
  3677  000AA8  5E1A               	subwf	___aodiv@dividend^0,f,c
  3678  000AAA  5023               	movf	(___aodiv@divisor+1)^0,w,c
  3679  000AAC  5A1B               	subwfb	(___aodiv@dividend+1)^0,f,c
  3680  000AAE  5024               	movf	(___aodiv@divisor+2)^0,w,c
  3681  000AB0  5A1C               	subwfb	(___aodiv@dividend+2)^0,f,c
  3682  000AB2  5025               	movf	(___aodiv@divisor+3)^0,w,c
  3683  000AB4  5A1D               	subwfb	(___aodiv@dividend+3)^0,f,c
  3684  000AB6  5026               	movf	(___aodiv@divisor+4)^0,w,c
  3685  000AB8  5A1E               	subwfb	(___aodiv@dividend+4)^0,f,c
  3686  000ABA  5027               	movf	(___aodiv@divisor+5)^0,w,c
  3687  000ABC  5A1F               	subwfb	(___aodiv@dividend+5)^0,f,c
  3688  000ABE  5028               	movf	(___aodiv@divisor+6)^0,w,c
  3689  000AC0  5A20               	subwfb	(___aodiv@dividend+6)^0,f,c
  3690  000AC2  5029               	movf	(___aodiv@divisor+7)^0,w,c
  3691  000AC4  5A21               	subwfb	(___aodiv@dividend+7)^0,f,c
  3692  000AC6                     
  3693                           ; BSR set to: 0
  3694  000AC6  8162               	bsf	___aodiv@quotient& (0+255),0,b
  3695  000AC8                     l2473:
  3696                           
  3697                           ; BSR set to: 0
  3698  000AC8  90D8               	bcf	status,0,c
  3699  000ACA  3229               	rrcf	(___aodiv@divisor+7)^0,f,c
  3700  000ACC  3228               	rrcf	(___aodiv@divisor+6)^0,f,c
  3701  000ACE  3227               	rrcf	(___aodiv@divisor+5)^0,f,c
  3702  000AD0  3226               	rrcf	(___aodiv@divisor+4)^0,f,c
  3703  000AD2  3225               	rrcf	(___aodiv@divisor+3)^0,f,c
  3704  000AD4  3224               	rrcf	(___aodiv@divisor+2)^0,f,c
  3705  000AD6  3223               	rrcf	(___aodiv@divisor+1)^0,f,c
  3706  000AD8  3222               	rrcf	___aodiv@divisor^0,f,c
  3707  000ADA                     
  3708                           ; BSR set to: 0
  3709  000ADA  2F60               	decfsz	___aodiv@counter& (0+255),f,b
  3710  000ADC  EF33  F005         	goto	l2465
  3711  000AE0                     l2477:
  3712                           
  3713                           ; BSR set to: 0
  3714  000AE0  5161               	movf	___aodiv@sign& (0+255),w,b
  3715  000AE2  B4D8               	btfsc	status,2,c
  3716  000AE4  EF76  F005         	goto	u1901
  3717  000AE8  EF78  F005         	goto	u1900
  3718  000AEC                     u1901:
  3719  000AEC  EF88  F005         	goto	l2481
  3720  000AF0                     u1900:
  3721  000AF0                     
  3722                           ; BSR set to: 0
  3723  000AF0  1F69               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3724  000AF2  1F68               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3725  000AF4  1F67               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3726  000AF6  1F66               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3727  000AF8  1F65               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3728  000AFA  1F64               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3729  000AFC  1F63               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3730  000AFE  6D62               	negf	___aodiv@quotient& (0+255),b
  3731  000B00  0E00               	movlw	0
  3732  000B02  2363               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3733  000B04  2364               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3734  000B06  2365               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3735  000B08  2366               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3736  000B0A  2367               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3737  000B0C  2368               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3738  000B0E  2369               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3739  000B10                     l2481:
  3740                           
  3741                           ; BSR set to: 0
  3742  000B10  C062  F01A         	movff	___aodiv@quotient,?___aodiv
  3743  000B14  C063  F01B         	movff	___aodiv@quotient+1,?___aodiv+1
  3744  000B18  C064  F01C         	movff	___aodiv@quotient+2,?___aodiv+2
  3745  000B1C  C065  F01D         	movff	___aodiv@quotient+3,?___aodiv+3
  3746  000B20  C066  F01E         	movff	___aodiv@quotient+4,?___aodiv+4
  3747  000B24  C067  F01F         	movff	___aodiv@quotient+5,?___aodiv+5
  3748  000B28  C068  F020         	movff	___aodiv@quotient+6,?___aodiv+6
  3749  000B2C  C069  F021         	movff	___aodiv@quotient+7,?___aodiv+7
  3750  000B30                     
  3751                           ; BSR set to: 0
  3752  000B30  0012               	return		;funcret
  3753  000B32                     __end_of___aodiv:
  3754                           	opt callstack 0
  3755                           
  3756 ;; *************** function ___lwmod *****************
  3757 ;; Defined at:
  3758 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  dividend        2   25[COMRAM] unsigned int 
  3761 ;;  divisor         2   27[COMRAM] unsigned int 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  counter         1   29[COMRAM] unsigned char 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  2   25[COMRAM] unsigned int 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3773 ;;      Params:         4       0       0       0
  3774 ;;      Locals:         1       0       0       0
  3775 ;;      Temps:          0       0       0       0
  3776 ;;      Totals:         5       0       0       0
  3777 ;;Total ram usage:        5 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:    3
  3780 ;; This function calls:
  3781 ;;		Nothing
  3782 ;; This function is called by:
  3783 ;;		_display
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text17
  3788  001098                     __ptext17:
  3789                           	opt callstack 0
  3790  001098                     ___lwmod:
  3791                           	opt callstack 26
  3792  001098  501C               	movf	___lwmod@divisor^0,w,c
  3793  00109A  101D               	iorwf	(___lwmod@divisor+1)^0,w,c
  3794  00109C  B4D8               	btfsc	status,2,c
  3795  00109E  EF53  F008         	goto	u1361
  3796  0010A2  EF55  F008         	goto	u1360
  3797  0010A6                     u1361:
  3798  0010A6  EF79  F008         	goto	l878
  3799  0010AA                     u1360:
  3800  0010AA  0E01               	movlw	1
  3801  0010AC  6E1E               	movwf	___lwmod@counter^0,c
  3802  0010AE  EF5D  F008         	goto	l2113
  3803  0010B2                     l2111:
  3804  0010B2  90D8               	bcf	status,0,c
  3805  0010B4  361C               	rlcf	___lwmod@divisor^0,f,c
  3806  0010B6  361D               	rlcf	(___lwmod@divisor+1)^0,f,c
  3807  0010B8  2A1E               	incf	___lwmod@counter^0,f,c
  3808  0010BA                     l2113:
  3809  0010BA  AE1D               	btfss	(___lwmod@divisor+1)^0,7,c
  3810  0010BC  EF62  F008         	goto	u1371
  3811  0010C0  EF64  F008         	goto	u1370
  3812  0010C4                     u1371:
  3813  0010C4  EF59  F008         	goto	l2111
  3814  0010C8                     u1370:
  3815  0010C8                     l2115:
  3816  0010C8  501C               	movf	___lwmod@divisor^0,w,c
  3817  0010CA  5C1A               	subwf	___lwmod@dividend^0,w,c
  3818  0010CC  501D               	movf	(___lwmod@divisor+1)^0,w,c
  3819  0010CE  581B               	subwfb	(___lwmod@dividend+1)^0,w,c
  3820  0010D0  A0D8               	btfss	status,0,c
  3821  0010D2  EF6D  F008         	goto	u1381
  3822  0010D6  EF6F  F008         	goto	u1380
  3823  0010DA                     u1381:
  3824  0010DA  EF73  F008         	goto	l2119
  3825  0010DE                     u1380:
  3826  0010DE  501C               	movf	___lwmod@divisor^0,w,c
  3827  0010E0  5E1A               	subwf	___lwmod@dividend^0,f,c
  3828  0010E2  501D               	movf	(___lwmod@divisor+1)^0,w,c
  3829  0010E4  5A1B               	subwfb	(___lwmod@dividend+1)^0,f,c
  3830  0010E6                     l2119:
  3831  0010E6  90D8               	bcf	status,0,c
  3832  0010E8  321D               	rrcf	(___lwmod@divisor+1)^0,f,c
  3833  0010EA  321C               	rrcf	___lwmod@divisor^0,f,c
  3834  0010EC  2E1E               	decfsz	___lwmod@counter^0,f,c
  3835  0010EE  EF64  F008         	goto	l2115
  3836  0010F2                     l878:
  3837  0010F2  C01A  F01A         	movff	___lwmod@dividend,?___lwmod
  3838  0010F6  C01B  F01B         	movff	___lwmod@dividend+1,?___lwmod+1
  3839  0010FA  0012               	return		;funcret
  3840  0010FC                     __end_of___lwmod:
  3841                           	opt callstack 0
  3842                           
  3843 ;; *************** function ___lwdiv *****************
  3844 ;; Defined at:
  3845 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  dividend        2   25[COMRAM] unsigned int 
  3848 ;;  divisor         2   27[COMRAM] unsigned int 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  quotient        2   29[COMRAM] unsigned int 
  3851 ;;  counter         1   31[COMRAM] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  2   25[COMRAM] unsigned int 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3861 ;;      Params:         4       0       0       0
  3862 ;;      Locals:         3       0       0       0
  3863 ;;      Temps:          0       0       0       0
  3864 ;;      Totals:         7       0       0       0
  3865 ;;Total ram usage:        7 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    3
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_display
  3872 ;;		_readADC
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text18
  3877  000F3E                     __ptext18:
  3878                           	opt callstack 0
  3879  000F3E                     ___lwdiv:
  3880                           	opt callstack 26
  3881  000F3E  0E00               	movlw	0
  3882  000F40  6E1F               	movwf	(___lwdiv@quotient+1)^0,c
  3883  000F42  0E00               	movlw	0
  3884  000F44  6E1E               	movwf	___lwdiv@quotient^0,c
  3885  000F46  501C               	movf	___lwdiv@divisor^0,w,c
  3886  000F48  101D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3887  000F4A  B4D8               	btfsc	status,2,c
  3888  000F4C  EFAA  F007         	goto	u1331
  3889  000F50  EFAC  F007         	goto	u1330
  3890  000F54                     u1331:
  3891  000F54  EFD4  F007         	goto	l868
  3892  000F58                     u1330:
  3893  000F58  0E01               	movlw	1
  3894  000F5A  6E20               	movwf	___lwdiv@counter^0,c
  3895  000F5C  EFB4  F007         	goto	l2093
  3896  000F60                     l2091:
  3897  000F60  90D8               	bcf	status,0,c
  3898  000F62  361C               	rlcf	___lwdiv@divisor^0,f,c
  3899  000F64  361D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3900  000F66  2A20               	incf	___lwdiv@counter^0,f,c
  3901  000F68                     l2093:
  3902  000F68  AE1D               	btfss	(___lwdiv@divisor+1)^0,7,c
  3903  000F6A  EFB9  F007         	goto	u1341
  3904  000F6E  EFBB  F007         	goto	u1340
  3905  000F72                     u1341:
  3906  000F72  EFB0  F007         	goto	l2091
  3907  000F76                     u1340:
  3908  000F76                     l2095:
  3909  000F76  90D8               	bcf	status,0,c
  3910  000F78  361E               	rlcf	___lwdiv@quotient^0,f,c
  3911  000F7A  361F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3912  000F7C  501C               	movf	___lwdiv@divisor^0,w,c
  3913  000F7E  5C1A               	subwf	___lwdiv@dividend^0,w,c
  3914  000F80  501D               	movf	(___lwdiv@divisor+1)^0,w,c
  3915  000F82  581B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3916  000F84  A0D8               	btfss	status,0,c
  3917  000F86  EFC7  F007         	goto	u1351
  3918  000F8A  EFC9  F007         	goto	u1350
  3919  000F8E                     u1351:
  3920  000F8E  EFCE  F007         	goto	l2103
  3921  000F92                     u1350:
  3922  000F92  501C               	movf	___lwdiv@divisor^0,w,c
  3923  000F94  5E1A               	subwf	___lwdiv@dividend^0,f,c
  3924  000F96  501D               	movf	(___lwdiv@divisor+1)^0,w,c
  3925  000F98  5A1B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3926  000F9A  801E               	bsf	___lwdiv@quotient^0,0,c
  3927  000F9C                     l2103:
  3928  000F9C  90D8               	bcf	status,0,c
  3929  000F9E  321D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3930  000FA0  321C               	rrcf	___lwdiv@divisor^0,f,c
  3931  000FA2  2E20               	decfsz	___lwdiv@counter^0,f,c
  3932  000FA4  EFBB  F007         	goto	l2095
  3933  000FA8                     l868:
  3934  000FA8  C01E  F01A         	movff	___lwdiv@quotient,?___lwdiv
  3935  000FAC  C01F  F01B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3936  000FB0  0012               	return		;funcret
  3937  000FB2                     __end_of___lwdiv:
  3938                           	opt callstack 0
  3939                           
  3940 ;; *************** function _LCDPutStr *****************
  3941 ;; Defined at:
  3942 ;;		line 147 in file "lcd.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  str             2   30[COMRAM] PTR const unsigned char 
  3945 ;;		 -> display@str1(16), display@str3(16), 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  i               1   32[COMRAM] unsigned char 
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      void 
  3950 ;; Registers used:
  3951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3957 ;;      Params:         2       0       0       0
  3958 ;;      Locals:         1       0       0       0
  3959 ;;      Temps:          0       0       0       0
  3960 ;;      Totals:         3       0       0       0
  3961 ;;Total ram usage:        3 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    5
  3964 ;; This function calls:
  3965 ;;		_LCDPutChar
  3966 ;; This function is called by:
  3967 ;;		_display
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text19
  3972  0013A4                     __ptext19:
  3973                           	opt callstack 0
  3974  0013A4                     _LCDPutStr:
  3975                           	opt callstack 24
  3976  0013A4                     
  3977                           ;lcd.c: 148:     uint8_t i = 0;
  3978  0013A4  0E00               	movlw	0
  3979  0013A6  6E21               	movwf	LCDPutStr@i^0,c
  3980                           
  3981                           ;lcd.c: 151:     while (str[i]) {
  3982  0013A8  EFE0  F009         	goto	l2083
  3983  0013AC                     l2079:
  3984                           
  3985                           ;lcd.c: 153:         LCDPutChar(str[i++]);
  3986  0013AC  5021               	movf	LCDPutStr@i^0,w,c
  3987  0013AE  241F               	addwf	LCDPutStr@str^0,w,c
  3988  0013B0  6ED9               	movwf	fsr2l,c
  3989  0013B2  0E00               	movlw	0
  3990  0013B4  2020               	addwfc	(LCDPutStr@str+1)^0,w,c
  3991  0013B6  6EDA               	movwf	fsr2h,c
  3992  0013B8  50DF               	movf	indf2,w,c
  3993  0013BA  EC0A  F00A         	call	_LCDPutChar
  3994  0013BE  2A21               	incf	LCDPutStr@i^0,f,c
  3995  0013C0                     l2083:
  3996                           
  3997                           ;lcd.c: 151:     while (str[i]) {
  3998  0013C0  5021               	movf	LCDPutStr@i^0,w,c
  3999  0013C2  241F               	addwf	LCDPutStr@str^0,w,c
  4000  0013C4  6ED9               	movwf	fsr2l,c
  4001  0013C6  0E00               	movlw	0
  4002  0013C8  2020               	addwfc	(LCDPutStr@str+1)^0,w,c
  4003  0013CA  6EDA               	movwf	fsr2h,c
  4004  0013CC  50DF               	movf	indf2,w,c
  4005  0013CE  A4D8               	btfss	status,2,c
  4006  0013D0  EFEC  F009         	goto	u1321
  4007  0013D4  EFEE  F009         	goto	u1320
  4008  0013D8                     u1321:
  4009  0013D8  EFD6  F009         	goto	l2079
  4010  0013DC                     u1320:
  4011  0013DC  0012               	return		;funcret
  4012  0013DE                     __end_of_LCDPutStr:
  4013                           	opt callstack 0
  4014                           
  4015 ;; *************** function _LCDPutChar *****************
  4016 ;; Defined at:
  4017 ;;		line 119 in file "lcd.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  ch              1    wreg     unsigned char 
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  ch              1   29[COMRAM] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4031 ;;      Params:         0       0       0       0
  4032 ;;      Locals:         1       0       0       0
  4033 ;;      Temps:          1       0       0       0
  4034 ;;      Totals:         2       0       0       0
  4035 ;;Total ram usage:        2 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    4
  4038 ;; This function calls:
  4039 ;;		_LCDWriteNibble
  4040 ;; This function is called by:
  4041 ;;		_display
  4042 ;;		_LCDPutStr
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text20
  4047  001414                     __ptext20:
  4048                           	opt callstack 0
  4049  001414                     _LCDPutChar:
  4050                           	opt callstack 24
  4051                           
  4052                           ;incstack = 0
  4053                           ;LCDPutChar@ch stored from wreg
  4054  001414  6E1E               	movwf	LCDPutChar@ch^0,c
  4055  001416                     
  4056                           ;lcd.c: 120:     _delay((unsigned long)((5)*(40000000/4000.0)));
  4057  001416  0E41               	movlw	65
  4058  001418  6E1D               	movwf	??_LCDPutChar^0,c
  4059  00141A  0EEE               	movlw	238
  4060  00141C                     u2197:
  4061  00141C  2EE8               	decfsz	wreg,f,c
  4062  00141E  D7FE               	bra	u2197
  4063  001420  2E1D               	decfsz	??_LCDPutChar^0,f,c
  4064  001422  D7FC               	bra	u2197
  4065  001424  F000 F000          	nop2	
  4066  001428                     
  4067                           ;lcd.c: 123:     LCDWriteNibble(ch, 1);
  4068  001428  0E01               	movlw	1
  4069  00142A  6E1A               	movwf	LCDWriteNibble@rs^0,c
  4070  00142C  501E               	movf	LCDPutChar@ch^0,w,c
  4071  00142E  EC14  F007         	call	_LCDWriteNibble
  4072  001432                     
  4073                           ;lcd.c: 126:     ch = (ch << 4);
  4074  001432  381E               	swapf	LCDPutChar@ch^0,w,c
  4075  001434  0BF0               	andlw	240
  4076  001436  6E1E               	movwf	LCDPutChar@ch^0,c
  4077  001438                     
  4078                           ;lcd.c: 129:     LCDWriteNibble(ch, 1);
  4079  001438  0E01               	movlw	1
  4080  00143A  6E1A               	movwf	LCDWriteNibble@rs^0,c
  4081  00143C  501E               	movf	LCDPutChar@ch^0,w,c
  4082  00143E  EC14  F007         	call	_LCDWriteNibble
  4083  001442  0012               	return		;funcret
  4084  001444                     __end_of_LCDPutChar:
  4085                           	opt callstack 0
  4086                           
  4087 ;; *************** function _configureTimer5 *****************
  4088 ;; Defined at:
  4089 ;;		line 291 in file "newmain.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;		None
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		None
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4103 ;;      Params:         0       0       0       0
  4104 ;;      Locals:         0       0       0       0
  4105 ;;      Temps:          0       0       0       0
  4106 ;;      Totals:         0       0       0       0
  4107 ;;Total ram usage:        0 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; Hardware stack levels required when called:    3
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_main
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text21
  4118  001482                     __ptext21:
  4119                           	opt callstack 0
  4120  001482                     _configureTimer5:
  4121                           	opt callstack 27
  4122  001482                     
  4123                           ;newmain.c: 292:     T5CONbits.T5PS1 = 1;
  4124  001482  88B7               	bsf	183,4,c	;volatile
  4125                           
  4126                           ;newmain.c: 293:     T5CONbits.T5PS0 = 1;
  4127  001484  86B7               	bsf	183,3,c	;volatile
  4128                           
  4129                           ;newmain.c: 294:     T5CONbits.T5MOD = 0;
  4130  001486  9AB7               	bcf	183,5,c	;volatile
  4131                           
  4132                           ;newmain.c: 295:     T5CONbits.TMR5ON = 1;
  4133  001488  80B7               	bsf	183,0,c	;volatile
  4134                           
  4135                           ;newmain.c: 296:     PIE3bits.TMR5IE = 1;
  4136  00148A  80A3               	bsf	163,0,c	;volatile
  4137                           
  4138                           ;newmain.c: 297:     TMR5 = timer5ReloadValue;
  4139  00148C  C02E  FF87         	movff	_timer5ReloadValue,3975	;volatile
  4140  001490  C02F  FF88         	movff	_timer5ReloadValue+1,3976	;volatile
  4141  001494  0012               	return		;funcret
  4142  001496                     __end_of_configureTimer5:
  4143                           	opt callstack 0
  4144                           
  4145 ;; *************** function _configureTimer2 *****************
  4146 ;; Defined at:
  4147 ;;		line 308 in file "newmain.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;		None
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4161 ;;      Params:         0       0       0       0
  4162 ;;      Locals:         0       0       0       0
  4163 ;;      Temps:          0       0       0       0
  4164 ;;      Totals:         0       0       0       0
  4165 ;;Total ram usage:        0 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    3
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_main
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text22
  4176  0014BA                     __ptext22:
  4177                           	opt callstack 0
  4178  0014BA                     _configureTimer2:
  4179                           	opt callstack 27
  4180  0014BA                     
  4181                           ;newmain.c: 309:     T2CONbits.T2CKPS1 = 0;
  4182  0014BA  92CA               	bcf	202,1,c	;volatile
  4183                           
  4184                           ;newmain.c: 310:     T2CONbits.T2CKPS1 = 1;
  4185  0014BC  82CA               	bsf	202,1,c	;volatile
  4186                           
  4187                           ;newmain.c: 312:     T2CONbits.TMR2ON = 1;
  4188  0014BE  84CA               	bsf	202,2,c	;volatile
  4189                           
  4190                           ;newmain.c: 313:     PIE1bits.TMR2IE = 1;
  4191  0014C0  829D               	bsf	157,1,c	;volatile
  4192  0014C2                     
  4193                           ;newmain.c: 314:     TMR2 = 230;
  4194  0014C2  0EE6               	movlw	230
  4195  0014C4  6ECC               	movwf	204,c	;volatile
  4196  0014C6  0012               	return		;funcret
  4197  0014C8                     __end_of_configureTimer2:
  4198                           	opt callstack 0
  4199                           
  4200 ;; *************** function _configureTimer1 *****************
  4201 ;; Defined at:
  4202 ;;		line 280 in file "newmain.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;		None
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;		None
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      void 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4216 ;;      Params:         0       0       0       0
  4217 ;;      Locals:         0       0       0       0
  4218 ;;      Temps:          0       0       0       0
  4219 ;;      Totals:         0       0       0       0
  4220 ;;Total ram usage:        0 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    3
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_main
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text23
  4231  001496                     __ptext23:
  4232                           	opt callstack 0
  4233  001496                     _configureTimer1:
  4234                           	opt callstack 27
  4235  001496                     
  4236                           ;newmain.c: 282:     T1CONbits.T1CKPS1 = 1;
  4237  001496  8ACD               	bsf	205,5,c	;volatile
  4238                           
  4239                           ;newmain.c: 283:     T1CONbits.T1CKPS0 = 1;
  4240  001498  88CD               	bsf	205,4,c	;volatile
  4241                           
  4242                           ;newmain.c: 285:     T1CONbits.TMR1CS = 0;
  4243  00149A  92CD               	bcf	205,1,c	;volatile
  4244                           
  4245                           ;newmain.c: 286:     T1CONbits.TMR1ON = 1;
  4246  00149C  80CD               	bsf	205,0,c	;volatile
  4247                           
  4248                           ;newmain.c: 287:     PIE1bits.TMR1IE = 1;
  4249  00149E  809D               	bsf	157,0,c	;volatile
  4250  0014A0                     
  4251                           ;newmain.c: 288:     TMR1 = 0;
  4252  0014A0  0E00               	movlw	0
  4253  0014A2  6ECF               	movwf	207,c	;volatile
  4254  0014A4  0E00               	movlw	0
  4255  0014A6  6ECE               	movwf	206,c	;volatile
  4256  0014A8  0012               	return		;funcret
  4257  0014AA                     __end_of_configureTimer1:
  4258                           	opt callstack 0
  4259                           
  4260 ;; *************** function _configureTimer0 *****************
  4261 ;; Defined at:
  4262 ;;		line 262 in file "newmain.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;		None
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;		None
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      void 
  4269 ;; Registers used:
  4270 ;;		None
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4276 ;;      Params:         0       0       0       0
  4277 ;;      Locals:         0       0       0       0
  4278 ;;      Temps:          0       0       0       0
  4279 ;;      Totals:         0       0       0       0
  4280 ;;Total ram usage:        0 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; Hardware stack levels required when called:    3
  4283 ;; This function calls:
  4284 ;;		Nothing
  4285 ;; This function is called by:
  4286 ;;		_main
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text24
  4291  00146C                     __ptext24:
  4292                           	opt callstack 0
  4293  00146C                     _configureTimer0:
  4294                           	opt callstack 27
  4295  00146C                     
  4296                           ;newmain.c: 266:     T0CONbits.PSA = 0;
  4297  00146C  96D5               	bcf	213,3,c	;volatile
  4298                           
  4299                           ;newmain.c: 267:     T0CONbits.T0SE = 0;
  4300  00146E  98D5               	bcf	213,4,c	;volatile
  4301                           
  4302                           ;newmain.c: 268:     T0CONbits.T0CS = 0;
  4303  001470  9AD5               	bcf	213,5,c	;volatile
  4304                           
  4305                           ;newmain.c: 269:     T0CONbits.T016BIT = 0;
  4306  001472  9CD5               	bcf	213,6,c	;volatile
  4307                           
  4308                           ;newmain.c: 270:     T0CONbits.TMR0ON = 1;
  4309  001474  8ED5               	bsf	213,7,c	;volatile
  4310                           
  4311                           ;newmain.c: 271:     T0CONbits.T0PS0 = 1;
  4312  001476  80D5               	bsf	213,0,c	;volatile
  4313                           
  4314                           ;newmain.c: 272:     T0CONbits.T0PS1 = 1;
  4315  001478  82D5               	bsf	213,1,c	;volatile
  4316                           
  4317                           ;newmain.c: 273:     T0CONbits.T0PS2 = 0;
  4318  00147A  94D5               	bcf	213,2,c	;volatile
  4319                           
  4320                           ;newmain.c: 274:     INTCONbits.TMR0IE = 1;
  4321  00147C  8AF2               	bsf	242,5,c	;volatile
  4322                           
  4323                           ;newmain.c: 275:     INTCON2bits.TMR0IP = 0;
  4324  00147E  94F1               	bcf	241,2,c	;volatile
  4325  001480  0012               	return		;funcret
  4326  001482                     __end_of_configureTimer0:
  4327                           	opt callstack 0
  4328                           
  4329 ;; *************** function _configurePWM *****************
  4330 ;; Defined at:
  4331 ;;		line 130 in file "newmain.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;		None
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;		None
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      void 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4345 ;;      Params:         0       0       0       0
  4346 ;;      Locals:         0       0       0       0
  4347 ;;      Temps:          0       0       0       0
  4348 ;;      Totals:         0       0       0       0
  4349 ;;Total ram usage:        0 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    3
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_main
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text25
  4360  00129A                     __ptext25:
  4361                           	opt callstack 0
  4362  00129A                     _configurePWM:
  4363                           	opt callstack 27
  4364  00129A                     
  4365                           ;newmain.c: 131:     LATB = 0;
  4366  00129A  0E00               	movlw	0
  4367  00129C  6E8A               	movwf	138,c	;volatile
  4368                           
  4369                           ;newmain.c: 132:     TRISB = 0;
  4370  00129E  0E00               	movlw	0
  4371  0012A0  6E93               	movwf	147,c	;volatile
  4372                           
  4373                           ;newmain.c: 133:     PORTB = 0;
  4374  0012A2  0E00               	movlw	0
  4375  0012A4  6E81               	movwf	129,c	;volatile
  4376  0012A6                     
  4377                           ;newmain.c: 136:     PTCON0bits.PTMOD0 = 0;
  4378  0012A6  907F               	bcf	127,0,c	;volatile
  4379  0012A8                     
  4380                           ;newmain.c: 137:     PTCON0bits.PTMOD1 = 0;
  4381  0012A8  927F               	bcf	127,1,c	;volatile
  4382  0012AA                     
  4383                           ;newmain.c: 138:     PTCON0bits.PTCKPS1 = 0;
  4384  0012AA  967F               	bcf	127,3,c	;volatile
  4385  0012AC                     
  4386                           ;newmain.c: 139:     PTCON0bits.PTCKPS0 = 0;
  4387  0012AC  947F               	bcf	127,2,c	;volatile
  4388  0012AE                     
  4389                           ;newmain.c: 140:     PTCON0bits.PTOPS0 = 0;
  4390  0012AE  987F               	bcf	127,4,c	;volatile
  4391  0012B0                     
  4392                           ;newmain.c: 141:     PTCON0bits.PTOPS1 = 0;
  4393  0012B0  9A7F               	bcf	127,5,c	;volatile
  4394  0012B2                     
  4395                           ;newmain.c: 142:     PTCON0bits.PTOPS2 = 0;
  4396  0012B2  9C7F               	bcf	127,6,c	;volatile
  4397  0012B4                     
  4398                           ;newmain.c: 143:     PTCON0bits.PTOPS3 = 0;
  4399  0012B4  9E7F               	bcf	127,7,c	;volatile
  4400  0012B6                     
  4401                           ;newmain.c: 156:     PTCON1bits.PTEN = 0;
  4402  0012B6  9E7E               	bcf	126,7,c	;volatile
  4403  0012B8                     
  4404                           ;newmain.c: 157:     PTCON1bits.PTDIR = 0;
  4405  0012B8  9C7E               	bcf	126,6,c	;volatile
  4406  0012BA                     
  4407                           ;newmain.c: 159:     PWMCON0bits.PWMEN2 = 1;
  4408  0012BA  8C6F               	bsf	111,6,c	;volatile
  4409  0012BC                     
  4410                           ;newmain.c: 160:     PWMCON0bits.PWMEN1 = 0;
  4411  0012BC  9A6F               	bcf	111,5,c	;volatile
  4412  0012BE                     
  4413                           ;newmain.c: 161:     PWMCON0bits.PWMEN0 = 0;
  4414  0012BE  986F               	bcf	111,4,c	;volatile
  4415  0012C0                     
  4416                           ;newmain.c: 163:     PWMCON0bits.PMOD0 = 0;
  4417  0012C0  906F               	bcf	111,0,c	;volatile
  4418  0012C2                     
  4419                           ;newmain.c: 164:     PWMCON0bits.PMOD1 = 0;
  4420  0012C2  926F               	bcf	111,1,c	;volatile
  4421  0012C4                     
  4422                           ;newmain.c: 165:     PWMCON0bits.PMOD2 = 0;
  4423  0012C4  946F               	bcf	111,2,c	;volatile
  4424  0012C6                     
  4425                           ;newmain.c: 173:     PWMCON1bits.UDIS = 0;
  4426  0012C6  926E               	bcf	110,1,c	;volatile
  4427  0012C8                     
  4428                           ;newmain.c: 174:     PWMCON1bits.OSYNC = 1;
  4429  0012C8  806E               	bsf	110,0,c	;volatile
  4430                           
  4431                           ;newmain.c: 184:     PTPERH = 0x07;
  4432  0012CA  0E07               	movlw	7
  4433  0012CC  6E7A               	movwf	122,c	;volatile
  4434  0012CE                     
  4435                           ;newmain.c: 185:     PTPERL = 0xFF;
  4436  0012CE  687B               	setf	123,c	;volatile
  4437  0012D0                     
  4438                           ;newmain.c: 196:     OVDCOND = 0xff;
  4439  0012D0  686B               	setf	107,c	;volatile
  4440                           
  4441                           ;newmain.c: 206:     OVDCONS = 0;
  4442  0012D2  0E00               	movlw	0
  4443  0012D4  6E6A               	movwf	106,c	;volatile
  4444  0012D6                     
  4445                           ;newmain.c: 209:     DTCONbits.DTPS1 = 0;
  4446  0012D6  9E6D               	bcf	109,7,c	;volatile
  4447  0012D8                     
  4448                           ;newmain.c: 210:     DTCONbits.DTPS0 = 1;
  4449  0012D8  8C6D               	bsf	109,6,c	;volatile
  4450  0012DA                     
  4451                           ;newmain.c: 211:     DTCON |= 50;
  4452  0012DA  0E32               	movlw	50
  4453  0012DC  126D               	iorwf	109,f,c	;volatile
  4454  0012DE  0012               	return		;funcret
  4455  0012E0                     __end_of_configurePWM:
  4456                           	opt callstack 0
  4457                           
  4458 ;; *************** function _configureInterrupts *****************
  4459 ;; Defined at:
  4460 ;;		line 223 in file "newmain.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;		None
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		None
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4474 ;;      Params:         0       0       0       0
  4475 ;;      Locals:         0       0       0       0
  4476 ;;      Temps:          0       0       0       0
  4477 ;;      Totals:         0       0       0       0
  4478 ;;Total ram usage:        0 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:    3
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_main
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text26
  4489  0014D8                     __ptext26:
  4490                           	opt callstack 0
  4491  0014D8                     _configureInterrupts:
  4492                           	opt callstack 27
  4493  0014D8                     
  4494                           ;newmain.c: 224:     INTCONbits.GIE = 1;
  4495  0014D8  8EF2               	bsf	242,7,c	;volatile
  4496                           
  4497                           ;newmain.c: 225:     INTCONbits.PEIE = 1;
  4498  0014DA  8CF2               	bsf	242,6,c	;volatile
  4499  0014DC  0012               	return		;funcret
  4500  0014DE                     __end_of_configureInterrupts:
  4501                           	opt callstack 0
  4502                           
  4503 ;; *************** function _configureInputs *****************
  4504 ;; Defined at:
  4505 ;;		line 300 in file "newmain.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;		None
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;		None
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  1    wreg      void 
  4512 ;; Registers used:
  4513 ;;		None
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4519 ;;      Params:         0       0       0       0
  4520 ;;      Locals:         0       0       0       0
  4521 ;;      Temps:          0       0       0       0
  4522 ;;      Totals:         0       0       0       0
  4523 ;;Total ram usage:        0 bytes
  4524 ;; Hardware stack levels used:    1
  4525 ;; Hardware stack levels required when called:    3
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_main
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text27
  4534  0014C8                     __ptext27:
  4535                           	opt callstack 0
  4536  0014C8                     _configureInputs:
  4537                           	opt callstack 27
  4538  0014C8                     
  4539                           ;newmain.c: 301:     TRISAbits.TRISA1 = 1;
  4540  0014C8  8292               	bsf	146,1,c	;volatile
  4541                           
  4542                           ;newmain.c: 302:     ANSEL0bits.ANS1 = 0;
  4543  0014CA  92B8               	bcf	184,1,c	;volatile
  4544                           
  4545                           ;newmain.c: 304:     TRISAbits.TRISA3 = 1;
  4546  0014CC  8692               	bsf	146,3,c	;volatile
  4547                           
  4548                           ;newmain.c: 305:     ANSEL0bits.ANS3 = 0;
  4549  0014CE  96B8               	bcf	184,3,c	;volatile
  4550  0014D0  0012               	return		;funcret
  4551  0014D2                     __end_of_configureInputs:
  4552                           	opt callstack 0
  4553                           
  4554 ;; *************** function _configureADC *****************
  4555 ;; Defined at:
  4556 ;;		line 228 in file "newmain.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		wreg, status,2
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4570 ;;      Params:         0       0       0       0
  4571 ;;      Locals:         0       0       0       0
  4572 ;;      Temps:          0       0       0       0
  4573 ;;      Totals:         0       0       0       0
  4574 ;;Total ram usage:        0 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    3
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_main
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text28
  4585  001444                     __ptext28:
  4586                           	opt callstack 0
  4587  001444                     _configureADC:
  4588                           	opt callstack 27
  4589  001444                     
  4590                           ;newmain.c: 230:     ADCON0bits.ACONV = 1;
  4591  001444  8AC2               	bsf	194,5,c	;volatile
  4592                           
  4593                           ;newmain.c: 231:     ADCON0bits.ACSCH = 0;
  4594  001446  98C2               	bcf	194,4,c	;volatile
  4595                           
  4596                           ;newmain.c: 232:     ADCON0bits.ACMOD1 = 0;
  4597  001448  96C2               	bcf	194,3,c	;volatile
  4598                           
  4599                           ;newmain.c: 233:     ADCON0bits.ACMOD0 = 0;
  4600  00144A  94C2               	bcf	194,2,c	;volatile
  4601  00144C                     
  4602                           ;newmain.c: 235:     ADCON1 = 0;
  4603  00144C  0E00               	movlw	0
  4604  00144E  6EC1               	movwf	193,c	;volatile
  4605  001450                     
  4606                           ;newmain.c: 237:     ADCON2bits.ACQT2 = 1;
  4607  001450  8AC0               	bsf	192,5,c	;volatile
  4608  001452                     
  4609                           ;newmain.c: 238:     ADCON2bits.ACQT1 = 1;
  4610  001452  88C0               	bsf	192,4,c	;volatile
  4611  001454                     
  4612                           ;newmain.c: 241:     ADCON2bits.ADCS2 = 1;
  4613  001454  84C0               	bsf	192,2,c	;volatile
  4614  001456                     
  4615                           ;newmain.c: 242:     ADCON2bits.ADCS1 = 1;
  4616  001456  82C0               	bsf	192,1,c	;volatile
  4617  001458                     
  4618                           ;newmain.c: 243:     ADCON2bits.ADFM = 0;
  4619  001458  9EC0               	bcf	192,7,c	;volatile
  4620  00145A                     
  4621                           ;newmain.c: 246:     ADCON3bits.ADRS1 = 1;
  4622  00145A  8E9A               	bsf	154,7,c	;volatile
  4623  00145C                     
  4624                           ;newmain.c: 248:     ADCHSbits.GASEL1 = 0;
  4625  00145C  9299               	bcf	153,1,c	;volatile
  4626  00145E                     
  4627                           ;newmain.c: 249:     ADCHSbits.GASEL0 = 0;
  4628  00145E  9099               	bcf	153,0,c	;volatile
  4629  001460                     
  4630                           ;newmain.c: 251:     ANSEL0bits.ANS0 = 1;
  4631  001460  80B8               	bsf	184,0,c	;volatile
  4632  001462                     
  4633                           ;newmain.c: 252:     TRISAbits.TRISA0 = 1;
  4634  001462  8092               	bsf	146,0,c	;volatile
  4635  001464                     
  4636                           ;newmain.c: 255:     PIE1bits.ADIE = 0;
  4637  001464  9C9D               	bcf	157,6,c	;volatile
  4638  001466                     
  4639                           ;newmain.c: 257:     ADCON0bits.ADON = 1;
  4640  001466  80C2               	bsf	194,0,c	;volatile
  4641  001468                     
  4642                           ;newmain.c: 259:     ADCON0bits.GODONE = 1;
  4643  001468  82C2               	bsf	194,1,c	;volatile
  4644  00146A  0012               	return		;funcret
  4645  00146C                     __end_of_configureADC:
  4646                           	opt callstack 0
  4647                           
  4648 ;; *************** function _LCD_Initialize *****************
  4649 ;; Defined at:
  4650 ;;		line 48 in file "lcd.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, status,2, status,0, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4664 ;;      Params:         0       0       0       0
  4665 ;;      Locals:         0       0       0       0
  4666 ;;      Temps:          2       0       0       0
  4667 ;;      Totals:         2       0       0       0
  4668 ;;Total ram usage:        2 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    5
  4671 ;; This function calls:
  4672 ;;		_LCDPutCmd
  4673 ;; This function is called by:
  4674 ;;		_main
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text29
  4679  0011B0                     __ptext29:
  4680                           	opt callstack 0
  4681  0011B0                     _LCD_Initialize:
  4682                           	opt callstack 25
  4683  0011B0                     
  4684                           ;lcd.c: 51:     TRISCbits.RC0 = 0;
  4685  0011B0  9094               	bcf	148,0,c	;volatile
  4686                           
  4687                           ;lcd.c: 52:     TRISCbits.RC1 = 0;
  4688  0011B2  9294               	bcf	148,1,c	;volatile
  4689                           
  4690                           ;lcd.c: 53:     TRISCbits.RC2 = 0;
  4691  0011B4  9494               	bcf	148,2,c	;volatile
  4692                           
  4693                           ;lcd.c: 54:     TRISCbits.RC3 = 0;
  4694  0011B6  9694               	bcf	148,3,c	;volatile
  4695                           
  4696                           ;lcd.c: 55:     TRISDbits.RD0 = 0;
  4697  0011B8  9095               	bcf	149,0,c	;volatile
  4698                           
  4699                           ;lcd.c: 56:     TRISDbits.RD1 = 0;
  4700  0011BA  9295               	bcf	149,1,c	;volatile
  4701                           
  4702                           ;lcd.c: 59:     PORTCbits.RC0 = 0;
  4703  0011BC  9082               	bcf	130,0,c	;volatile
  4704                           
  4705                           ;lcd.c: 60:     PORTCbits.RC1 = 0;
  4706  0011BE  9282               	bcf	130,1,c	;volatile
  4707                           
  4708                           ;lcd.c: 61:     PORTCbits.RC2 = 0;
  4709  0011C0  9482               	bcf	130,2,c	;volatile
  4710                           
  4711                           ;lcd.c: 62:     PORTCbits.RC3 = 0;
  4712  0011C2  9682               	bcf	130,3,c	;volatile
  4713                           
  4714                           ;lcd.c: 63:     PORTDbits.RD0 = 0;
  4715  0011C4  9083               	bcf	131,0,c	;volatile
  4716                           
  4717                           ;lcd.c: 64:     PORTDbits.RD1 = 0;
  4718  0011C6  9283               	bcf	131,1,c	;volatile
  4719  0011C8                     
  4720                           ;lcd.c: 71:     _delay((unsigned long)((20)*(40000000/4000.0)));
  4721  0011C8  0E02               	movlw	2
  4722  0011CA  6E20               	movwf	(??_LCD_Initialize+1)^0,c
  4723  0011CC  0E04               	movlw	4
  4724  0011CE  6E1F               	movwf	??_LCD_Initialize^0,c
  4725  0011D0  0EBA               	movlw	186
  4726  0011D2                     u2207:
  4727  0011D2  2EE8               	decfsz	wreg,f,c
  4728  0011D4  D7FE               	bra	u2207
  4729  0011D6  2E1F               	decfsz	??_LCD_Initialize^0,f,c
  4730  0011D8  D7FC               	bra	u2207
  4731  0011DA  2E20               	decfsz	(??_LCD_Initialize+1)^0,f,c
  4732  0011DC  D7FA               	bra	u2207
  4733  0011DE  F000 F000          	nop2	
  4734  0011E2                     
  4735                           ;lcd.c: 74:     LCDPutCmd(0x32);
  4736  0011E2  0E32               	movlw	50
  4737  0011E4  ECB3  F009         	call	_LCDPutCmd
  4738  0011E8                     
  4739                           ;lcd.c: 77:     LCDPutCmd(0x28);
  4740  0011E8  0E28               	movlw	40
  4741  0011EA  ECB3  F009         	call	_LCDPutCmd
  4742  0011EE                     
  4743                           ;lcd.c: 80:     LCDPutCmd(0x0C);
  4744  0011EE  0E0C               	movlw	12
  4745  0011F0  ECB3  F009         	call	_LCDPutCmd
  4746  0011F4                     
  4747                           ;lcd.c: 82:     LCDPutCmd(0x01);
  4748  0011F4  0E01               	movlw	1
  4749  0011F6  ECB3  F009         	call	_LCDPutCmd
  4750  0011FA                     
  4751                           ;lcd.c: 85:     LCDPutCmd(0x06);
  4752  0011FA  0E06               	movlw	6
  4753  0011FC  ECB3  F009         	call	_LCDPutCmd
  4754  001200  0012               	return		;funcret
  4755  001202                     __end_of_LCD_Initialize:
  4756                           	opt callstack 0
  4757                           
  4758 ;; *************** function _LCDPutCmd *****************
  4759 ;; Defined at:
  4760 ;;		line 132 in file "lcd.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  ch              1    wreg     unsigned char 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  ch              1   29[COMRAM] unsigned char 
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  1    wreg      void 
  4767 ;; Registers used:
  4768 ;;		wreg, status,2, status,0, cstack
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4774 ;;      Params:         0       0       0       0
  4775 ;;      Locals:         1       0       0       0
  4776 ;;      Temps:          1       0       0       0
  4777 ;;      Totals:         2       0       0       0
  4778 ;;Total ram usage:        2 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:    4
  4781 ;; This function calls:
  4782 ;;		_LCDWriteNibble
  4783 ;; This function is called by:
  4784 ;;		_display
  4785 ;;		_LCD_Initialize
  4786 ;;		_LCDGoto
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text30
  4791  001366                     __ptext30:
  4792                           	opt callstack 0
  4793  001366                     _LCDPutCmd:
  4794                           	opt callstack 25
  4795                           
  4796                           ;incstack = 0
  4797                           ;LCDPutCmd@ch stored from wreg
  4798  001366  6E1E               	movwf	LCDPutCmd@ch^0,c
  4799  001368                     
  4800                           ;lcd.c: 133:     _delay((unsigned long)((5)*(40000000/4000.0)));
  4801  001368  0E41               	movlw	65
  4802  00136A  6E1D               	movwf	??_LCDPutCmd^0,c
  4803  00136C  0EEE               	movlw	238
  4804  00136E                     u2217:
  4805  00136E  2EE8               	decfsz	wreg,f,c
  4806  001370  D7FE               	bra	u2217
  4807  001372  2E1D               	decfsz	??_LCDPutCmd^0,f,c
  4808  001374  D7FC               	bra	u2217
  4809  001376  F000 F000          	nop2	
  4810  00137A                     
  4811                           ;lcd.c: 136:     LCDWriteNibble(ch, 0);
  4812  00137A  0E00               	movlw	0
  4813  00137C  6E1A               	movwf	LCDWriteNibble@rs^0,c
  4814  00137E  501E               	movf	LCDPutCmd@ch^0,w,c
  4815  001380  EC14  F007         	call	_LCDWriteNibble
  4816  001384                     
  4817                           ;lcd.c: 139:     ch = (ch << 4);
  4818  001384  381E               	swapf	LCDPutCmd@ch^0,w,c
  4819  001386  0BF0               	andlw	240
  4820  001388  6E1E               	movwf	LCDPutCmd@ch^0,c
  4821  00138A                     
  4822                           ;lcd.c: 141:     _delay((unsigned long)((1)*(40000000/4000.0)));
  4823  00138A  0E0D               	movlw	13
  4824  00138C  6E1D               	movwf	??_LCDPutCmd^0,c
  4825  00138E  0EFC               	movlw	252
  4826  001390                     u2227:
  4827  001390  2EE8               	decfsz	wreg,f,c
  4828  001392  D7FE               	bra	u2227
  4829  001394  2E1D               	decfsz	??_LCDPutCmd^0,f,c
  4830  001396  D7FC               	bra	u2227
  4831  001398                     
  4832                           ;lcd.c: 144:     LCDWriteNibble(ch, 0);
  4833  001398  0E00               	movlw	0
  4834  00139A  6E1A               	movwf	LCDWriteNibble@rs^0,c
  4835  00139C  501E               	movf	LCDPutCmd@ch^0,w,c
  4836  00139E  EC14  F007         	call	_LCDWriteNibble
  4837  0013A2  0012               	return		;funcret
  4838  0013A4                     __end_of_LCDPutCmd:
  4839                           	opt callstack 0
  4840                           
  4841 ;; *************** function _LCDWriteNibble *****************
  4842 ;; Defined at:
  4843 ;;		line 89 in file "lcd.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  ch              1    wreg     unsigned char 
  4846 ;;  rs              1   25[COMRAM] unsigned char 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  ch              1   27[COMRAM] unsigned char 
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		wreg, status,2, status,0
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4858 ;;      Params:         1       0       0       0
  4859 ;;      Locals:         1       0       0       0
  4860 ;;      Temps:          1       0       0       0
  4861 ;;      Totals:         3       0       0       0
  4862 ;;Total ram usage:        3 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    3
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_LCDPutChar
  4869 ;;		_LCDPutCmd
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text31
  4874  000E28                     __ptext31:
  4875                           	opt callstack 0
  4876  000E28                     _LCDWriteNibble:
  4877                           	opt callstack 24
  4878                           
  4879                           ;incstack = 0
  4880                           ;LCDWriteNibble@ch stored from wreg
  4881  000E28  6E1C               	movwf	LCDWriteNibble@ch^0,c
  4882  000E2A                     
  4883                           ;lcd.c: 91:     ch = (ch >> 4);
  4884  000E2A  381C               	swapf	LCDWriteNibble@ch^0,w,c
  4885  000E2C  0B0F               	andlw	15
  4886  000E2E  6E1C               	movwf	LCDWriteNibble@ch^0,c
  4887                           
  4888                           ;lcd.c: 94:     ch = (ch & 0x0F);
  4889  000E30  501C               	movf	LCDWriteNibble@ch^0,w,c
  4890  000E32  0B0F               	andlw	15
  4891  000E34  6E1C               	movwf	LCDWriteNibble@ch^0,c
  4892                           
  4893                           ;lcd.c: 95:     PORTCbits.RC2 = ch & 0xF1;
  4894  000E36  C01C  F01B         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  4895  000E3A  0EF1               	movlw	241
  4896  000E3C  161B               	andwf	??_LCDWriteNibble^0,f,c
  4897  000E3E  461B               	rlncf	??_LCDWriteNibble^0,f,c
  4898  000E40  461B               	rlncf	??_LCDWriteNibble^0,f,c
  4899  000E42  5082               	movf	130,w,c	;volatile
  4900  000E44  181B               	xorwf	??_LCDWriteNibble^0,w,c
  4901  000E46  0BFB               	andlw	-5
  4902  000E48  181B               	xorwf	??_LCDWriteNibble^0,w,c
  4903  000E4A  6E82               	movwf	130,c	;volatile
  4904                           
  4905                           ;lcd.c: 96:     PORTCbits.RC3 = (ch & 0xF2) >> 1;
  4906  000E4C  C01C  F01B         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  4907  000E50  90D8               	bcf	status,0,c
  4908  000E52  321B               	rrcf	??_LCDWriteNibble^0,f,c
  4909  000E54  0E79               	movlw	121
  4910  000E56  161B               	andwf	??_LCDWriteNibble^0,f,c
  4911  000E58  461B               	rlncf	??_LCDWriteNibble^0,f,c
  4912  000E5A  461B               	rlncf	??_LCDWriteNibble^0,f,c
  4913  000E5C  461B               	rlncf	??_LCDWriteNibble^0,f,c
  4914  000E5E  5082               	movf	130,w,c	;volatile
  4915  000E60  181B               	xorwf	??_LCDWriteNibble^0,w,c
  4916  000E62  0BF7               	andlw	-9
  4917  000E64  181B               	xorwf	??_LCDWriteNibble^0,w,c
  4918  000E66  6E82               	movwf	130,c	;volatile
  4919                           
  4920                           ;lcd.c: 97:     PORTDbits.RD0 = (ch & 0xF4) >> 2;
  4921  000E68  C01C  F01B         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  4922  000E6C  90D8               	bcf	status,0,c
  4923  000E6E  321B               	rrcf	??_LCDWriteNibble^0,f,c
  4924  000E70  90D8               	bcf	status,0,c
  4925  000E72  321B               	rrcf	??_LCDWriteNibble^0,f,c
  4926  000E74  0E3D               	movlw	61
  4927  000E76  161B               	andwf	??_LCDWriteNibble^0,f,c
  4928  000E78  5083               	movf	131,w,c	;volatile
  4929  000E7A  181B               	xorwf	??_LCDWriteNibble^0,w,c
  4930  000E7C  0BFE               	andlw	-2
  4931  000E7E  181B               	xorwf	??_LCDWriteNibble^0,w,c
  4932  000E80  6E83               	movwf	131,c	;volatile
  4933                           
  4934                           ;lcd.c: 98:     PORTDbits.RD1 = (ch & 0xF8) >> 3;
  4935  000E82  C01C  F01B         	movff	LCDWriteNibble@ch,??_LCDWriteNibble
  4936  000E86  90D8               	bcf	status,0,c
  4937  000E88  321B               	rrcf	??_LCDWriteNibble^0,f,c
  4938  000E8A  90D8               	bcf	status,0,c
  4939  000E8C  321B               	rrcf	??_LCDWriteNibble^0,f,c
  4940  000E8E  90D8               	bcf	status,0,c
  4941  000E90  321B               	rrcf	??_LCDWriteNibble^0,f,c
  4942  000E92  0E1F               	movlw	31
  4943  000E94  161B               	andwf	??_LCDWriteNibble^0,f,c
  4944  000E96  461B               	rlncf	??_LCDWriteNibble^0,f,c
  4945  000E98  5083               	movf	131,w,c	;volatile
  4946  000E9A  181B               	xorwf	??_LCDWriteNibble^0,w,c
  4947  000E9C  0BFD               	andlw	-3
  4948  000E9E  181B               	xorwf	??_LCDWriteNibble^0,w,c
  4949  000EA0  6E83               	movwf	131,c	;volatile
  4950  000EA2                     
  4951                           ;lcd.c: 107:     PORTCbits.RC0 = rs;
  4952  000EA2  B01A               	btfsc	LCDWriteNibble@rs^0,0,c
  4953  000EA4  D002               	bra	u1265
  4954  000EA6  9082               	bcf	130,0,c	;volatile
  4955  000EA8  D001               	bra	u1266
  4956  000EAA                     u1265:
  4957  000EAA  8082               	bsf	130,0,c	;volatile
  4958  000EAC                     u1266:
  4959  000EAC                     
  4960                           ;lcd.c: 113:     PORTCbits.RC1 = 1;
  4961  000EAC  8282               	bsf	130,1,c	;volatile
  4962  000EAE                     
  4963                           ;lcd.c: 114:     _delay((unsigned long)((1)*(40000000/4000000.0)));
  4964  000EAE  0E03               	movlw	3
  4965  000EB0                     u2237:
  4966  000EB0  2EE8               	decfsz	wreg,f,c
  4967  000EB2  D7FE               	bra	u2237
  4968  000EB4  F000               	nop	
  4969  000EB6                     
  4970                           ;lcd.c: 116:     PORTCbits.RC1 = 0;
  4971  000EB6  9282               	bcf	130,1,c	;volatile
  4972  000EB8  0012               	return		;funcret
  4973  000EBA                     __end_of_LCDWriteNibble:
  4974                           	opt callstack 0
  4975                           
  4976 ;; *************** function _tcInt *****************
  4977 ;; Defined at:
  4978 ;;		line 370 in file "newmain.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;		None
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;  duty            1   24[COMRAM] unsigned char 
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  1    wreg      void 
  4985 ;; Registers used:
  4986 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4992 ;;      Params:         0       0       0       0
  4993 ;;      Locals:         1       0       0       0
  4994 ;;      Temps:          9       0       0       0
  4995 ;;      Totals:        10       0       0       0
  4996 ;;Total ram usage:       10 bytes
  4997 ;; Hardware stack levels used:    1
  4998 ;; Hardware stack levels required when called:    2
  4999 ;; This function calls:
  5000 ;;		_updateSinusIndexes
  5001 ;; This function is called by:
  5002 ;;		Interrupt level 1
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006                           	psect	intcodelo
  5007  000018                     __pintcodelo:
  5008                           	opt callstack 0
  5009  000018                     _tcInt:
  5010                           	opt callstack 19
  5011                           
  5012                           ;incstack = 0
  5013  000018  8046               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5014  00001A  CFD8 F010          	movff	status,??_tcInt
  5015  00001E  CFE8 F011          	movff	wreg,??_tcInt+1
  5016  000022  CFE0 F012          	movff	bsr,??_tcInt+2
  5017  000026  CFF3 F013          	movff	prodl,??_tcInt+3
  5018  00002A  CFF4 F014          	movff	prodh,??_tcInt+4
  5019  00002E  CFF6 F015          	movff	tblptrl,??_tcInt+5
  5020  000032  CFF7 F016          	movff	tblptrh,??_tcInt+6
  5021  000036  CFF8 F017          	movff	tblptru,??_tcInt+7
  5022  00003A  CFF5 F018          	movff	tablat,??_tcInt+8
  5023  00003E                     
  5024                           ;newmain.c: 377:     if (INTCONbits.TMR0IF) {
  5025  00003E  A4F2               	btfss	242,2,c	;volatile
  5026  000040  EF24  F000         	goto	i1u163_21
  5027  000044  EF26  F000         	goto	i1u163_20
  5028  000048                     i1u163_21:
  5029  000048  EF45  F000         	goto	i1l2345
  5030  00004C                     i1u163_20:
  5031  00004C                     
  5032                           ;newmain.c: 388:         INTCONbits.TMR0IF = 0;
  5033  00004C  94F2               	bcf	242,2,c	;volatile
  5034                           
  5035                           ;newmain.c: 390:         PWMCON1bits.UDIS = 1;
  5036  00004E  826E               	bsf	110,1,c	;volatile
  5037  000050                     
  5038                           ;newmain.c: 391:         unsigned char duty = (sinusValue1 >> 8);
  5039  000050  5040               	movf	(_sinusValue1+1)^0,w,c	;volatile
  5040  000052  6E19               	movwf	tcInt@duty^0,c
  5041  000054                     
  5042                           ;newmain.c: 392:         PDC0H = duty;
  5043  000054  C019  FF78         	movff	tcInt@duty,3960	;volatile
  5044  000058                     
  5045                           ;newmain.c: 393:         PDC0L = sinusValue1;
  5046  000058  C03F  FF79         	movff	_sinusValue1,3961	;volatile
  5047                           
  5048                           ;newmain.c: 395:         duty = (sinusValue2 >> 8);
  5049  00005C  5033               	movf	(_sinusValue2+1)^0,w,c	;volatile
  5050  00005E  6E19               	movwf	tcInt@duty^0,c
  5051  000060                     
  5052                           ;newmain.c: 396:         PDC1H = duty;
  5053  000060  C019  FF76         	movff	tcInt@duty,3958	;volatile
  5054  000064                     
  5055                           ;newmain.c: 397:         PDC1L = sinusValue2;
  5056  000064  C032  FF77         	movff	_sinusValue2,3959	;volatile
  5057                           
  5058                           ;newmain.c: 399:         duty = (sinusValue3 >> 8);
  5059  000068  5031               	movf	(_sinusValue3+1)^0,w,c	;volatile
  5060  00006A  6E19               	movwf	tcInt@duty^0,c
  5061  00006C                     
  5062                           ;newmain.c: 400:         PDC2H = duty;
  5063  00006C  C019  FF74         	movff	tcInt@duty,3956	;volatile
  5064  000070                     
  5065                           ;newmain.c: 401:         PDC2L = sinusValue3;
  5066  000070  C030  FF75         	movff	_sinusValue3,3957	;volatile
  5067  000074                     
  5068                           ;newmain.c: 402:         PWMCON1bits.UDIS = 0;
  5069  000074  926E               	bcf	110,1,c	;volatile
  5070  000076                     
  5071                           ;newmain.c: 404:         sinusIndex1 += 4;
  5072  000076  0E04               	movlw	4
  5073  000078  2645               	addwf	_sinusIndex1^0,f,c	;volatile
  5074  00007A                     
  5075                           ;newmain.c: 405:         sinusIndex2 += 4;
  5076  00007A  0E04               	movlw	4
  5077  00007C  2637               	addwf	_sinusIndex2^0,f,c	;volatile
  5078  00007E                     
  5079                           ;newmain.c: 406:         sinusIndex3 += 4;
  5080  00007E  0E04               	movlw	4
  5081  000080  2636               	addwf	_sinusIndex3^0,f,c	;volatile
  5082  000082                     
  5083                           ;newmain.c: 408:         TMR0 = timer0ReloadValue;
  5084  000082  C02C  FFD6         	movff	_timer0ReloadValue,4054	;volatile
  5085  000086  C02D  FFD7         	movff	_timer0ReloadValue+1,4055	;volatile
  5086  00008A                     i1l2345:
  5087                           
  5088                           ;newmain.c: 413:     if (PIR1bits.TMR1IF) {
  5089  00008A  A09E               	btfss	158,0,c	;volatile
  5090  00008C  EF4A  F000         	goto	i1u164_21
  5091  000090  EF4C  F000         	goto	i1u164_20
  5092  000094                     i1u164_21:
  5093  000094  EF54  F000         	goto	i1l2351
  5094  000098                     i1u164_20:
  5095  000098                     
  5096                           ;newmain.c: 415:         PIR1bits.TMR1IF = 0;
  5097  000098  909E               	bcf	158,0,c	;volatile
  5098  00009A                     
  5099                           ;newmain.c: 416:         TMR1 = 0;
  5100  00009A  0E00               	movlw	0
  5101  00009C  6ECF               	movwf	207,c	;volatile
  5102  00009E  0E00               	movlw	0
  5103  0000A0  6ECE               	movwf	206,c	;volatile
  5104                           
  5105                           ;newmain.c: 418:         shouldDisplay = 1;
  5106  0000A2  0E01               	movlw	1
  5107  0000A4  0100               	movlb	0	; () banked
  5108  0000A6  6FF5               	movwf	_shouldDisplay& (0+255),b	;volatile
  5109  0000A8                     i1l2351:
  5110                           
  5111                           ;newmain.c: 424:     if (PIR3bits.TMR5IF) {
  5112  0000A8  A0A4               	btfss	164,0,c	;volatile
  5113  0000AA  EF59  F000         	goto	i1u165_21
  5114  0000AE  EF5B  F000         	goto	i1u165_20
  5115  0000B2                     i1u165_21:
  5116  0000B2  EF62  F000         	goto	i1l2357
  5117  0000B6                     i1u165_20:
  5118  0000B6                     
  5119                           ;newmain.c: 425:         PIR3bits.TMR5IF = 0;
  5120  0000B6  90A4               	bcf	164,0,c	;volatile
  5121                           
  5122                           ;newmain.c: 426:         TMR5 = timer5ReloadValue;
  5123  0000B8  C02E  FF87         	movff	_timer5ReloadValue,3975	;volatile
  5124  0000BC  C02F  FF88         	movff	_timer5ReloadValue+1,3976	;volatile
  5125  0000C0                     
  5126                           ;newmain.c: 427:         shouldUpdateTimer0Preload = 1;
  5127  0000C0  0E01               	movlw	1
  5128  0000C2  6E42               	movwf	_shouldUpdateTimer0Preload^0,c	;volatile
  5129  0000C4                     i1l2357:
  5130                           
  5131                           ;newmain.c: 432:     if (PIR1bits.TMR2IF) {
  5132  0000C4  A29E               	btfss	158,1,c	;volatile
  5133  0000C6  EF67  F000         	goto	i1u166_21
  5134  0000CA  EF69  F000         	goto	i1u166_20
  5135  0000CE                     i1u166_21:
  5136  0000CE  EF7E  F000         	goto	i1l207
  5137  0000D2                     i1u166_20:
  5138  0000D2                     
  5139                           ;newmain.c: 433:         PORTAbits.RA2 = d1;
  5140  0000D2  B035               	btfsc	_d1^0,0,c	;volatile
  5141  0000D4  D002               	bra	i1u167_25
  5142  0000D6  9480               	bcf	128,2,c	;volatile
  5143  0000D8  D001               	bra	i1u167_26
  5144  0000DA                     i1u167_25:
  5145  0000DA  8480               	bsf	128,2,c	;volatile
  5146  0000DC                     i1u167_26:
  5147  0000DC                     
  5148                           ;newmain.c: 434:         d1 = !d1;
  5149  0000DC  5035               	movf	_d1^0,w,c	;volatile
  5150  0000DE  B4D8               	btfsc	status,2,c
  5151  0000E0  EF74  F000         	goto	i1u168_21
  5152  0000E4  EF77  F000         	goto	i1u168_20
  5153  0000E8                     i1u168_21:
  5154  0000E8  0E01               	movlw	1
  5155  0000EA  EF78  F000         	goto	i1u169_20
  5156  0000EE                     i1u168_20:
  5157  0000EE  0E00               	movlw	0
  5158  0000F0                     i1u169_20:
  5159  0000F0  6E35               	movwf	_d1^0,c	;volatile
  5160  0000F2                     
  5161                           ;newmain.c: 435:         updateSinusIndexes();
  5162  0000F2  EC06  F002         	call	_updateSinusIndexes	;wreg free
  5163  0000F6                     
  5164                           ;newmain.c: 436:         PIR1bits.TMR2IF = 0;
  5165  0000F6  929E               	bcf	158,1,c	;volatile
  5166  0000F8                     
  5167                           ;newmain.c: 437:         TMR2 = 230;
  5168  0000F8  0EE6               	movlw	230
  5169  0000FA  6ECC               	movwf	204,c	;volatile
  5170  0000FC                     i1l207:
  5171  0000FC  C018  FFF5         	movff	??_tcInt+8,tablat
  5172  000100  C017  FFF8         	movff	??_tcInt+7,tblptru
  5173  000104  C016  FFF7         	movff	??_tcInt+6,tblptrh
  5174  000108  C015  FFF6         	movff	??_tcInt+5,tblptrl
  5175  00010C  C014  FFF4         	movff	??_tcInt+4,prodh
  5176  000110  C013  FFF3         	movff	??_tcInt+3,prodl
  5177  000114  C012  FFE0         	movff	??_tcInt+2,bsr
  5178  000118  C011  FFE8         	movff	??_tcInt+1,wreg
  5179  00011C  C010  FFD8         	movff	??_tcInt,status
  5180  000120  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5181  000122  0010               	retfie	
  5182  000124                     __end_of_tcInt:
  5183                           	opt callstack 0
  5184                           
  5185 ;; *************** function _updateSinusIndexes *****************
  5186 ;; Defined at:
  5187 ;;		line 512 in file "newmain.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;		None
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;  upperLimit      2    0        unsigned int 
  5192 ;;  lowerLimit      2    0        unsigned int 
  5193 ;;  currentScale    2    9[COMRAM] int 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      void 
  5196 ;; Registers used:
  5197 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5203 ;;      Params:         0       0       0       0
  5204 ;;      Locals:         6       0       0       0
  5205 ;;      Temps:          2       0       0       0
  5206 ;;      Totals:         8       0       0       0
  5207 ;;Total ram usage:        8 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:    1
  5210 ;; This function calls:
  5211 ;;		i1___lwdiv
  5212 ;; This function is called by:
  5213 ;;		_tcInt
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text33
  5218  00040C                     __ptext33:
  5219                           	opt callstack 0
  5220  00040C                     _updateSinusIndexes:
  5221                           	opt callstack 19
  5222  00040C                     
  5223                           ;newmain.c: 513:     int currentScalefactor = scaleFactor[currentPreloadIndex];
  5224  00040C  0100               	movlb	0	; () banked
  5225  00040E  51F6               	movf	_currentPreloadIndex& (0+255),w,b	;volatile
  5226  000410  0D02               	mullw	2
  5227  000412  0E8D               	movlw	low _scaleFactor
  5228  000414  24F3               	addwf	243,w,c
  5229  000416  6EF6               	movwf	tblptrl,c
  5230  000418  0E3F               	movlw	high _scaleFactor
  5231  00041A  20F4               	addwfc	244,w,c
  5232  00041C  6EF7               	movwf	tblptrh,c
  5233  00041E                     	if	0	;There are less than 3 active tblptr bytes
  5234  00041E                     	endif
  5235  00041E  0009               	tblrd		*+
  5236  000420  CFF5 F00A          	movff	tablat,updateSinusIndexes@currentScalefactor
  5237  000424  000A               	tblrd		*-
  5238  000426  CFF5 F00B          	movff	tablat,updateSinusIndexes@currentScalefactor+1
  5239  00042A                     
  5240                           ; BSR set to: 0
  5241                           ;newmain.c: 519:     if (currentPreloadIndex < 50) {
  5242  00042A  0E32               	movlw	50
  5243  00042C  61F6               	cpfslt	_currentPreloadIndex& (0+255),b	;volatile
  5244  00042E  EF1B  F002         	goto	i1u156_21
  5245  000432  EF1D  F002         	goto	i1u156_20
  5246  000436                     i1u156_21:
  5247  000436  EF8E  F002         	goto	i1l2253
  5248  00043A                     i1u156_20:
  5249  00043A                     
  5250                           ; BSR set to: 0
  5251                           ;newmain.c: 520:         sinusValue1 = (sinusValues[sinusIndex1] << 3) / currentScalefac
      +                          tor;
  5252  00043A  5045               	movf	_sinusIndex1^0,w,c	;volatile
  5253  00043C  0D02               	mullw	2
  5254  00043E  0EC5               	movlw	low _sinusValues
  5255  000440  24F3               	addwf	243,w,c
  5256  000442  6EF6               	movwf	tblptrl,c
  5257  000444  0E3C               	movlw	high _sinusValues
  5258  000446  20F4               	addwfc	244,w,c
  5259  000448  6EF7               	movwf	tblptrh,c
  5260  00044A                     	if	0	;There are less than 3 active tblptr bytes
  5261  00044A                     	endif
  5262  00044A  0009               	tblrd		*+
  5263  00044C  CFF5 F008          	movff	tablat,??_updateSinusIndexes
  5264  000450  0009               	tblrd		*+
  5265  000452  CFF5 F009          	movff	tablat,??_updateSinusIndexes+1
  5266  000456  90D8               	bcf	status,0,c
  5267  000458  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5268  00045A  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5269  00045C  90D8               	bcf	status,0,c
  5270  00045E  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5271  000460  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5272  000462  90D8               	bcf	status,0,c
  5273  000464  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5274  000466  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5275  000468  C008  F001         	movff	??_updateSinusIndexes,i1___lwdiv@dividend
  5276  00046C  C009  F002         	movff	??_updateSinusIndexes+1,i1___lwdiv@dividend+1
  5277  000470  C00A  F003         	movff	updateSinusIndexes@currentScalefactor,i1___lwdiv@divisor
  5278  000474  C00B  F004         	movff	updateSinusIndexes@currentScalefactor+1,i1___lwdiv@divisor+1
  5279  000478  ECD9  F007         	call	i1___lwdiv	;wreg free
  5280  00047C  C001  F03F         	movff	?i1___lwdiv,_sinusValue1	;volatile
  5281  000480  C002  F040         	movff	?i1___lwdiv+1,_sinusValue1+1	;volatile
  5282                           
  5283                           ;newmain.c: 521:         sinusValue2 = (sinusValues[sinusIndex2] << 3) / currentScalefac
      +                          tor;
  5284  000484  5037               	movf	_sinusIndex2^0,w,c	;volatile
  5285  000486  0D02               	mullw	2
  5286  000488  0EC5               	movlw	low _sinusValues
  5287  00048A  24F3               	addwf	243,w,c
  5288  00048C  6EF6               	movwf	tblptrl,c
  5289  00048E  0E3C               	movlw	high _sinusValues
  5290  000490  20F4               	addwfc	244,w,c
  5291  000492  6EF7               	movwf	tblptrh,c
  5292  000494                     	if	0	;There are less than 3 active tblptr bytes
  5293  000494                     	endif
  5294  000494  0009               	tblrd		*+
  5295  000496  CFF5 F008          	movff	tablat,??_updateSinusIndexes
  5296  00049A  0009               	tblrd		*+
  5297  00049C  CFF5 F009          	movff	tablat,??_updateSinusIndexes+1
  5298  0004A0  90D8               	bcf	status,0,c
  5299  0004A2  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5300  0004A4  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5301  0004A6  90D8               	bcf	status,0,c
  5302  0004A8  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5303  0004AA  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5304  0004AC  90D8               	bcf	status,0,c
  5305  0004AE  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5306  0004B0  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5307  0004B2  C008  F001         	movff	??_updateSinusIndexes,i1___lwdiv@dividend
  5308  0004B6  C009  F002         	movff	??_updateSinusIndexes+1,i1___lwdiv@dividend+1
  5309  0004BA  C00A  F003         	movff	updateSinusIndexes@currentScalefactor,i1___lwdiv@divisor
  5310  0004BE  C00B  F004         	movff	updateSinusIndexes@currentScalefactor+1,i1___lwdiv@divisor+1
  5311  0004C2  ECD9  F007         	call	i1___lwdiv	;wreg free
  5312  0004C6  C001  F032         	movff	?i1___lwdiv,_sinusValue2	;volatile
  5313  0004CA  C002  F033         	movff	?i1___lwdiv+1,_sinusValue2+1	;volatile
  5314                           
  5315                           ;newmain.c: 522:         sinusValue3 = (sinusValues[sinusIndex3] << 3) / currentScalefac
      +                          tor;
  5316  0004CE  5036               	movf	_sinusIndex3^0,w,c	;volatile
  5317  0004D0  0D02               	mullw	2
  5318  0004D2  0EC5               	movlw	low _sinusValues
  5319  0004D4  24F3               	addwf	243,w,c
  5320  0004D6  6EF6               	movwf	tblptrl,c
  5321  0004D8  0E3C               	movlw	high _sinusValues
  5322  0004DA  20F4               	addwfc	244,w,c
  5323  0004DC  6EF7               	movwf	tblptrh,c
  5324  0004DE                     	if	0	;There are less than 3 active tblptr bytes
  5325  0004DE                     	endif
  5326  0004DE  0009               	tblrd		*+
  5327  0004E0  CFF5 F008          	movff	tablat,??_updateSinusIndexes
  5328  0004E4  0009               	tblrd		*+
  5329  0004E6  CFF5 F009          	movff	tablat,??_updateSinusIndexes+1
  5330  0004EA  90D8               	bcf	status,0,c
  5331  0004EC  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5332  0004EE  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5333  0004F0  90D8               	bcf	status,0,c
  5334  0004F2  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5335  0004F4  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5336  0004F6  90D8               	bcf	status,0,c
  5337  0004F8  3608               	rlcf	??_updateSinusIndexes^0,f,c
  5338  0004FA  3609               	rlcf	(??_updateSinusIndexes+1)^0,f,c
  5339  0004FC  C008  F001         	movff	??_updateSinusIndexes,i1___lwdiv@dividend
  5340  000500  C009  F002         	movff	??_updateSinusIndexes+1,i1___lwdiv@dividend+1
  5341  000504  C00A  F003         	movff	updateSinusIndexes@currentScalefactor,i1___lwdiv@divisor
  5342  000508  C00B  F004         	movff	updateSinusIndexes@currentScalefactor+1,i1___lwdiv@divisor+1
  5343  00050C  ECD9  F007         	call	i1___lwdiv	;wreg free
  5344  000510  C001  F030         	movff	?i1___lwdiv,_sinusValue3	;volatile
  5345  000514  C002  F031         	movff	?i1___lwdiv+1,_sinusValue3+1	;volatile
  5346                           
  5347                           ;newmain.c: 524:     } else {
  5348  000518  EFB8  F002         	goto	i1l2255
  5349  00051C                     i1l2253:
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;newmain.c: 525:         sinusValue1 = sinusValues[sinusIndex1];
  5353  00051C  5045               	movf	_sinusIndex1^0,w,c	;volatile
  5354  00051E  0D02               	mullw	2
  5355  000520  0EC5               	movlw	low _sinusValues
  5356  000522  24F3               	addwf	243,w,c
  5357  000524  6EF6               	movwf	tblptrl,c
  5358  000526  0E3C               	movlw	high _sinusValues
  5359  000528  20F4               	addwfc	244,w,c
  5360  00052A  6EF7               	movwf	tblptrh,c
  5361  00052C                     	if	0	;There are less than 3 active tblptr bytes
  5362  00052C                     	endif
  5363  00052C  0009               	tblrd		*+
  5364  00052E  CFF5 F03F          	movff	tablat,_sinusValue1	;volatile
  5365  000532  000A               	tblrd		*-
  5366  000534  CFF5 F040          	movff	tablat,_sinusValue1+1	;volatile
  5367                           
  5368                           ;newmain.c: 526:         sinusValue2 = sinusValues[sinusIndex2];
  5369  000538  5037               	movf	_sinusIndex2^0,w,c	;volatile
  5370  00053A  0D02               	mullw	2
  5371  00053C  0EC5               	movlw	low _sinusValues
  5372  00053E  24F3               	addwf	243,w,c
  5373  000540  6EF6               	movwf	tblptrl,c
  5374  000542  0E3C               	movlw	high _sinusValues
  5375  000544  20F4               	addwfc	244,w,c
  5376  000546  6EF7               	movwf	tblptrh,c
  5377  000548                     	if	0	;There are less than 3 active tblptr bytes
  5378  000548                     	endif
  5379  000548  0009               	tblrd		*+
  5380  00054A  CFF5 F032          	movff	tablat,_sinusValue2	;volatile
  5381  00054E  000A               	tblrd		*-
  5382  000550  CFF5 F033          	movff	tablat,_sinusValue2+1	;volatile
  5383                           
  5384                           ;newmain.c: 527:         sinusValue3 = sinusValues[sinusIndex3];
  5385  000554  5036               	movf	_sinusIndex3^0,w,c	;volatile
  5386  000556  0D02               	mullw	2
  5387  000558  0EC5               	movlw	low _sinusValues
  5388  00055A  24F3               	addwf	243,w,c
  5389  00055C  6EF6               	movwf	tblptrl,c
  5390  00055E  0E3C               	movlw	high _sinusValues
  5391  000560  20F4               	addwfc	244,w,c
  5392  000562  6EF7               	movwf	tblptrh,c
  5393  000564                     	if	0	;There are less than 3 active tblptr bytes
  5394  000564                     	endif
  5395  000564  0009               	tblrd		*+
  5396  000566  CFF5 F030          	movff	tablat,_sinusValue3	;volatile
  5397  00056A  000A               	tblrd		*-
  5398  00056C  CFF5 F031          	movff	tablat,_sinusValue3+1	;volatile
  5399  000570                     i1l2255:
  5400                           
  5401                           ;newmain.c: 530:     sinusValue1 = sinusValue1 < lowerLimit ? lowerLimit : sinusValue1;
  5402  000570  5040               	movf	(_sinusValue1+1)^0,w,c	;volatile
  5403  000572  E109               	bnz	i1u157_20
  5404  000574  0E20               	movlw	32
  5405  000576  5C3F               	subwf	_sinusValue1^0,w,c	;volatile
  5406  000578  A0D8               	btfss	status,0,c
  5407  00057A  EFC1  F002         	goto	i1u157_21
  5408  00057E  EFC3  F002         	goto	i1u157_20
  5409  000582                     i1u157_21:
  5410  000582  EFC5  F002         	goto	i1l239
  5411  000586                     i1u157_20:
  5412  000586  EFC9  F002         	goto	i1l2259
  5413  00058A                     i1l239:
  5414  00058A  0E00               	movlw	0
  5415  00058C  6E40               	movwf	(_sinusValue1+1)^0,c	;volatile
  5416  00058E  0E20               	movlw	32
  5417  000590  6E3F               	movwf	_sinusValue1^0,c	;volatile
  5418  000592                     i1l2259:
  5419                           
  5420                           ;newmain.c: 531:     sinusValue2 = sinusValue2 < lowerLimit ? lowerLimit : sinusValue2;
  5421  000592  5033               	movf	(_sinusValue2+1)^0,w,c	;volatile
  5422  000594  E109               	bnz	i1u158_20
  5423  000596  0E20               	movlw	32
  5424  000598  5C32               	subwf	_sinusValue2^0,w,c	;volatile
  5425  00059A  A0D8               	btfss	status,0,c
  5426  00059C  EFD2  F002         	goto	i1u158_21
  5427  0005A0  EFD4  F002         	goto	i1u158_20
  5428  0005A4                     i1u158_21:
  5429  0005A4  EFD6  F002         	goto	i1l243
  5430  0005A8                     i1u158_20:
  5431  0005A8  EFDA  F002         	goto	i1l2263
  5432  0005AC                     i1l243:
  5433  0005AC  0E00               	movlw	0
  5434  0005AE  6E33               	movwf	(_sinusValue2+1)^0,c	;volatile
  5435  0005B0  0E20               	movlw	32
  5436  0005B2  6E32               	movwf	_sinusValue2^0,c	;volatile
  5437  0005B4                     i1l2263:
  5438                           
  5439                           ;newmain.c: 532:     sinusValue3 = sinusValue3 < lowerLimit ? lowerLimit : sinusValue3;
  5440  0005B4  5031               	movf	(_sinusValue3+1)^0,w,c	;volatile
  5441  0005B6  E109               	bnz	i1u159_20
  5442  0005B8  0E20               	movlw	32
  5443  0005BA  5C30               	subwf	_sinusValue3^0,w,c	;volatile
  5444  0005BC  A0D8               	btfss	status,0,c
  5445  0005BE  EFE3  F002         	goto	i1u159_21
  5446  0005C2  EFE5  F002         	goto	i1u159_20
  5447  0005C6                     i1u159_21:
  5448  0005C6  EFE7  F002         	goto	i1l247
  5449  0005CA                     i1u159_20:
  5450  0005CA  EFEB  F002         	goto	i1l2267
  5451  0005CE                     i1l247:
  5452  0005CE  0E00               	movlw	0
  5453  0005D0  6E31               	movwf	(_sinusValue3+1)^0,c	;volatile
  5454  0005D2  0E20               	movlw	32
  5455  0005D4  6E30               	movwf	_sinusValue3^0,c	;volatile
  5456  0005D6                     i1l2267:
  5457                           
  5458                           ;newmain.c: 533:     sinusValue1 = sinusValue1 > upperLimit ? upperLimit : sinusValue1;
  5459  0005D6  0EDF               	movlw	223
  5460  0005D8  5C3F               	subwf	_sinusValue1^0,w,c	;volatile
  5461  0005DA  0E1F               	movlw	31
  5462  0005DC  5840               	subwfb	(_sinusValue1+1)^0,w,c	;volatile
  5463  0005DE  B0D8               	btfsc	status,0,c
  5464  0005E0  EFF4  F002         	goto	i1u160_21
  5465  0005E4  EFF6  F002         	goto	i1u160_20
  5466  0005E8                     i1u160_21:
  5467  0005E8  EFF8  F002         	goto	i1l251
  5468  0005EC                     i1u160_20:
  5469  0005EC  EFFC  F002         	goto	i1l2271
  5470  0005F0                     i1l251:
  5471  0005F0  0E1F               	movlw	31
  5472  0005F2  6E40               	movwf	(_sinusValue1+1)^0,c	;volatile
  5473  0005F4  0EDE               	movlw	222
  5474  0005F6  6E3F               	movwf	_sinusValue1^0,c	;volatile
  5475  0005F8                     i1l2271:
  5476                           
  5477                           ;newmain.c: 534:     sinusValue2 = sinusValue2 > upperLimit ? upperLimit : sinusValue2;
  5478  0005F8  0EDF               	movlw	223
  5479  0005FA  5C32               	subwf	_sinusValue2^0,w,c	;volatile
  5480  0005FC  0E1F               	movlw	31
  5481  0005FE  5833               	subwfb	(_sinusValue2+1)^0,w,c	;volatile
  5482  000600  B0D8               	btfsc	status,0,c
  5483  000602  EF05  F003         	goto	i1u161_21
  5484  000606  EF07  F003         	goto	i1u161_20
  5485  00060A                     i1u161_21:
  5486  00060A  EF09  F003         	goto	i1l255
  5487  00060E                     i1u161_20:
  5488  00060E  EF0D  F003         	goto	i1l2275
  5489  000612                     i1l255:
  5490  000612  0E1F               	movlw	31
  5491  000614  6E33               	movwf	(_sinusValue2+1)^0,c	;volatile
  5492  000616  0EDE               	movlw	222
  5493  000618  6E32               	movwf	_sinusValue2^0,c	;volatile
  5494  00061A                     i1l2275:
  5495                           
  5496                           ;newmain.c: 535:     sinusValue3 = sinusValue3 > upperLimit ? upperLimit : sinusValue3;
  5497  00061A  0EDF               	movlw	223
  5498  00061C  5C30               	subwf	_sinusValue3^0,w,c	;volatile
  5499  00061E  0E1F               	movlw	31
  5500  000620  5831               	subwfb	(_sinusValue3+1)^0,w,c	;volatile
  5501  000622  B0D8               	btfsc	status,0,c
  5502  000624  EF16  F003         	goto	i1u162_21
  5503  000628  EF18  F003         	goto	i1u162_20
  5504  00062C                     i1u162_21:
  5505  00062C  EF1A  F003         	goto	i1l259
  5506  000630                     i1u162_20:
  5507  000630  EF1E  F003         	goto	i1l262
  5508  000634                     i1l259:
  5509  000634  0E1F               	movlw	31
  5510  000636  6E31               	movwf	(_sinusValue3+1)^0,c	;volatile
  5511  000638  0EDE               	movlw	222
  5512  00063A  6E30               	movwf	_sinusValue3^0,c	;volatile
  5513  00063C                     i1l262:
  5514  00063C  0012               	return		;funcret
  5515  00063E                     __end_of_updateSinusIndexes:
  5516                           	opt callstack 0
  5517                           
  5518 ;; *************** function i1___lwdiv *****************
  5519 ;; Defined at:
  5520 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  dividend        2    0[COMRAM] unsigned int 
  5523 ;;  divisor         2    2[COMRAM] unsigned int 
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  5526 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  2    0[COMRAM] unsigned int 
  5529 ;; Registers used:
  5530 ;;		wreg, status,2, status,0
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5536 ;;      Params:         4       0       0       0
  5537 ;;      Locals:         3       0       0       0
  5538 ;;      Temps:          0       0       0       0
  5539 ;;      Totals:         7       0       0       0
  5540 ;;Total ram usage:        7 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_updateSinusIndexes
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           	psect	text34
  5550  000FB2                     __ptext34:
  5551                           	opt callstack 0
  5552  000FB2                     i1___lwdiv:
  5553                           	opt callstack 19
  5554  000FB2  0E00               	movlw	0
  5555  000FB4  6E06               	movwf	(i1___lwdiv@quotient+1)^0,c
  5556  000FB6  0E00               	movlw	0
  5557  000FB8  6E05               	movwf	i1___lwdiv@quotient^0,c
  5558  000FBA  5003               	movf	i1___lwdiv@divisor^0,w,c
  5559  000FBC  1004               	iorwf	(i1___lwdiv@divisor+1)^0,w,c
  5560  000FBE  B4D8               	btfsc	status,2,c
  5561  000FC0  EFE4  F007         	goto	i1u139_21
  5562  000FC4  EFE6  F007         	goto	i1u139_20
  5563  000FC8                     i1u139_21:
  5564  000FC8  EF0E  F008         	goto	i1l868
  5565  000FCC                     i1u139_20:
  5566  000FCC  0E01               	movlw	1
  5567  000FCE  6E07               	movwf	i1___lwdiv@counter^0,c
  5568  000FD0  EFEE  F007         	goto	i1l2131
  5569  000FD4                     i1l2129:
  5570  000FD4  90D8               	bcf	status,0,c
  5571  000FD6  3603               	rlcf	i1___lwdiv@divisor^0,f,c
  5572  000FD8  3604               	rlcf	(i1___lwdiv@divisor+1)^0,f,c
  5573  000FDA  2A07               	incf	i1___lwdiv@counter^0,f,c
  5574  000FDC                     i1l2131:
  5575  000FDC  AE04               	btfss	(i1___lwdiv@divisor+1)^0,7,c
  5576  000FDE  EFF3  F007         	goto	i1u140_21
  5577  000FE2  EFF5  F007         	goto	i1u140_20
  5578  000FE6                     i1u140_21:
  5579  000FE6  EFEA  F007         	goto	i1l2129
  5580  000FEA                     i1u140_20:
  5581  000FEA                     i1l2133:
  5582  000FEA  90D8               	bcf	status,0,c
  5583  000FEC  3605               	rlcf	i1___lwdiv@quotient^0,f,c
  5584  000FEE  3606               	rlcf	(i1___lwdiv@quotient+1)^0,f,c
  5585  000FF0  5003               	movf	i1___lwdiv@divisor^0,w,c
  5586  000FF2  5C01               	subwf	i1___lwdiv@dividend^0,w,c
  5587  000FF4  5004               	movf	(i1___lwdiv@divisor+1)^0,w,c
  5588  000FF6  5802               	subwfb	(i1___lwdiv@dividend+1)^0,w,c
  5589  000FF8  A0D8               	btfss	status,0,c
  5590  000FFA  EF01  F008         	goto	i1u141_21
  5591  000FFE  EF03  F008         	goto	i1u141_20
  5592  001002                     i1u141_21:
  5593  001002  EF08  F008         	goto	i1l2141
  5594  001006                     i1u141_20:
  5595  001006  5003               	movf	i1___lwdiv@divisor^0,w,c
  5596  001008  5E01               	subwf	i1___lwdiv@dividend^0,f,c
  5597  00100A  5004               	movf	(i1___lwdiv@divisor+1)^0,w,c
  5598  00100C  5A02               	subwfb	(i1___lwdiv@dividend+1)^0,f,c
  5599  00100E  8005               	bsf	i1___lwdiv@quotient^0,0,c
  5600  001010                     i1l2141:
  5601  001010  90D8               	bcf	status,0,c
  5602  001012  3204               	rrcf	(i1___lwdiv@divisor+1)^0,f,c
  5603  001014  3203               	rrcf	i1___lwdiv@divisor^0,f,c
  5604  001016  2E07               	decfsz	i1___lwdiv@counter^0,f,c
  5605  001018  EFF5  F007         	goto	i1l2133
  5606  00101C                     i1l868:
  5607  00101C  C005  F001         	movff	i1___lwdiv@quotient,?i1___lwdiv
  5608  001020  C006  F002         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
  5609  001024  0012               	return		;funcret
  5610  001026                     __end_ofi1___lwdiv:
  5611                           	opt callstack 0
  5612                           
  5613                           	psect	rparam
  5614  0000                     
  5615                           	psect	temp
  5616  000046                     btemp:
  5617                           	opt callstack 0
  5618  000046                     	ds	1
  5619  0000                     int$flags	set	btemp
  5620  0000                     wtemp8	set	btemp+1
  5621  0000                     ttemp5	set	btemp+1
  5622  0000                     ttemp6	set	btemp+4
  5623  0000                     ttemp7	set	btemp+8
  5624                           tosu	equ	0xFFF
  5625                           tosh	equ	0xFFE
  5626                           tosl	equ	0xFFD
  5627                           stkptr	equ	0xFFC
  5628                           pclatu	equ	0xFFB
  5629                           pclath	equ	0xFFA
  5630                           pcl	equ	0xFF9
  5631                           tblptru	equ	0xFF8
  5632                           tblptrh	equ	0xFF7
  5633                           tblptrl	equ	0xFF6
  5634                           tablat	equ	0xFF5
  5635                           prodh	equ	0xFF4
  5636                           prodl	equ	0xFF3
  5637                           indf0	equ	0xFEF
  5638                           postinc0	equ	0xFEE
  5639                           postdec0	equ	0xFED
  5640                           preinc0	equ	0xFEC
  5641                           plusw0	equ	0xFEB
  5642                           fsr0h	equ	0xFEA
  5643                           fsr0l	equ	0xFE9
  5644                           wreg	equ	0xFE8
  5645                           indf1	equ	0xFE7
  5646                           postinc1	equ	0xFE6
  5647                           postdec1	equ	0xFE5
  5648                           preinc1	equ	0xFE4
  5649                           plusw1	equ	0xFE3
  5650                           fsr1h	equ	0xFE2
  5651                           fsr1l	equ	0xFE1
  5652                           bsr	equ	0xFE0
  5653                           indf2	equ	0xFDF
  5654                           postinc2	equ	0xFDE
  5655                           postdec2	equ	0xFDD
  5656                           preinc2	equ	0xFDC
  5657                           plusw2	equ	0xFDB
  5658                           fsr2h	equ	0xFDA
  5659                           fsr2l	equ	0xFD9
  5660                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    822
    Data        21
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      69
    BANK0           160    141     158
    BANK1           256      0      32
    BANK2           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK0[16]), display@str3(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK0[16]), display@str3(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S2000_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK0[16]), display@str3(BANK0[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK0[16]), display@str3(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 16
		 -> display@str1(BANK0[16]), display@str3(BANK0[16]), 


Critical Paths under _main in COMRAM

    _readADC->___lwdiv
    _dtoa->___aomod
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCD_Initialize->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _tcInt in COMRAM

    _tcInt->_updateSinusIndexes
    _updateSinusIndexes->i1___lwdiv

Critical Paths under _main in BANK0

    _main->_display
    _display->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->_pad

Critical Paths under _tcInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tcInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tcInt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13122
                     _LCD_Initialize
                       _configureADC
                    _configureInputs
                _configureInterrupts
                       _configurePWM
                    _configureTimer0
                    _configureTimer1
                    _configureTimer2
                    _configureTimer5
                            _display
                            _readADC
                           _startPWM
             _updateTMR0PreloadValue
 ---------------------------------------------------------------------------------
 (1) _updateTMR0PreloadValue                               2     2      0       0
                                             25 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _startPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              1     1      0     766
                                             32 COMRAM     1     1      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _display                                             55    55      0   11829
                                             86 BANK0     55    55      0
                         _LCDPutChar
                          _LCDPutCmd
                          _LCDPutStr
                            ___lwdiv
                            ___lwmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    8432
                                             70 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7766
                                             62 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7293
                                             46 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5518
                                             10 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             41 COMRAM     1     1      0
                                              0 BANK0     10     4      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             34 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                             25 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                              0 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                             25 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             25 COMRAM    16     0     16
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                             25 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     766
                                             25 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            3     1      2     769
                                             30 COMRAM     3     1      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (3) _LCDPutChar                                           2     2      0     527
                                             28 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _configureTimer5                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer2                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer1                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureTimer0                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurePWM                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureInterrupts                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureInputs                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureADC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       2     2      0     527
                                             30 COMRAM     2     2      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            2     2      0     527
                                             28 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (4) _LCDWriteNibble                                       3     2      1     460
                                             25 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _tcInt                                              10    10      0     720
                                             15 COMRAM    10    10      0
                 _updateSinusIndexes
 ---------------------------------------------------------------------------------
 (11) _updateSinusIndexes                                  8     8      0     651
                                              7 COMRAM     8     8      0
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (12) i1___lwdiv                                           7     3      4     318
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Initialize
     _LCDPutCmd
       _LCDWriteNibble
   _configureADC
   _configureInputs
   _configureInterrupts
   _configurePWM
   _configureTimer0
   _configureTimer1
   _configureTimer2
   _configureTimer5
   _display
     _LCDPutChar
       _LCDWriteNibble
     _LCDPutCmd
       _LCDWriteNibble
     _LCDPutStr
       _LCDPutChar
         _LCDWriteNibble
     ___lwdiv
     ___lwmod
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _readADC
     ___lwdiv
   _startPWM
   _updateTMR0PreloadValue

 _tcInt (ROOT)
   _updateSinusIndexes
     i1___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8D      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      45       1       73.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     103       3        0.0%
DATA                 0      0     103      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jul 15 19:22:31 2020

                       ?_configureADC 0001                         ?_configurePWM 0001  
                ??_updateSinusIndexes 0008                        _LCD_Initialize 11B0  
                         ?_LCDPutChar 0001                                    _d1 0035  
                                  bsr 000FE0                          __CFG_CP0$OFF 000000  
                        __CFG_CP1$OFF 000000                          __CFG_CP2$OFF 000000  
                        __CFG_CP3$OFF 000000                                   l220 09A6  
                                 l161 12DE                                   l233 124E  
                                 l170 14DC                                   l332 0DEA  
                                 l340 01C8                                   l164 14E0  
                                 l228 0F3C                                   l173 146A  
                                 l182 1494                                   l334 0E26  
                                 l342 01D0                                   l280 0EB8  
                                 l176 1480                                   l504 0C94  
                                 l360 040A                                   l185 14D0  
                                 l329 0DA6                                   l179 14A8  
                                 l283 1442                                   l188 14C6  
                                 l292 13DC                                   l277 1200  
                                 l373 1154                                   l286 13A2  
                                 l374 115C                                   l367 07F2  
                                 l491 0B30                                   l875 0FB0  
                                 l868 0FA8                                   l885 10FA  
                                 l878 10F2                          __CFG_CPB$OFF 000000  
                        __CFG_CPD$OFF 000000                                   _abs 1324  
                                 _pad 0D60                                   wreg 000FE8  
            ??_updateTMR0PreloadValue 001A                          __CFG_LVP$OFF 000000  
                                ?_abs 0060                                  l1052 135C  
                                l2101 0F9A                                  l2103 0F9C  
                                l2111 10B2                                  l1055 1364  
                                l2041 1428                                  l2105 0FA2  
                                l2121 10EC                                  l2113 10BA  
                                l1082 11AE                                  l2043 1432  
                                l2115 10C8                                  l2107 1098  
                                l1067 0D5E                                  l1075 1322  
                                l1091 1412                                  l2061 138A  
                                l1501 14D8                                  l2045 1438  
                                l2117 10DE                                  l2109 10AA  
                                l1085 14E2                                  l2221 0EFC  
                                l2213 0EBA                                  l2063 1398  
                                l2055 1368                                  l2151 11E8  
                                l1511 1454                                  l1503 1444  
                                l2039 1416                                  l2119 10E6  
                                l2231 0F38                                  l2223 0F02  
                                l2215 0ECA                                  l2057 137A  
                                l2153 11EE                                  l2145 11B0  
                                l1521 145E                                  l1513 1456  
                                l1505 144C                                  l2081 13BE  
                                l2401 12FE                                  l2241 124C  
                                l2233 1202                                  l2225 0F18  
                                l2217 0EDA                                  l2059 1384  
                                l2155 11F4                                  l2147 11C8  
                                l1531 1468                                  l1523 1460  
                                l1515 1458                                  l1507 1450  
                                l1451 129A                                  l2083 13C0  
                                l2091 0F60                                  l2403 1302  
                                l2411 1406                                  l2235 1210  
                                l2227 0F1A                                  l2219 0EDE  
                                l2157 11FA                                  l2149 11E2  
                                l1525 1462                                  l1517 145A  
                                l1509 1452                                  l1541 14C8  
                                l1461 12AE                                  l1453 12A6  
                                l1533 146C                                  l2077 13A4  
                                l2093 0F68                                  l2085 0F3E  
                                l2405 13DE                                  l2421 0D92  
                                l2501 01EA                                  l2237 1222  
                                l2229 0F36                                  l1527 1464  
                                l1519 145C                                  l1471 12B8  
                                l1463 12B0                                  l1455 12A8  
                                l1535 1496                                  l1543 14BA  
                                l2079 13AC                                  l2095 0F76  
                                l2087 0F46                                  l2407 13EA  
                                l2431 0DF8                                  l2423 0D9E  
                                l2415 0D60                                  l2511 0216  
                                l2503 01F8                                  l2239 1248  
                                l1529 1466                                  l1481 12C2  
                                l1473 12BA                                  l1465 12B2  
                                l1457 12AA                                  l1537 14A0  
                                l1545 14C2                                  l2097 0F7C  
                                l2089 0F58                                  l2441 09A8  
                                l2409 13EE                                  l2433 0E0C  
                                l2425 0DB2                                  l2417 0D6E  
                                l2521 0326                                  l2513 029A  
                                l2505 01FE                                  l2601 1178  
                                l1491 12D0                                  l1483 12C4  
                                l1475 12BC                                  l1467 12B4  
                                l1459 12AC                                  l1539 1482  
                                l2099 0F92                                  l2451 09EE  
                                l2443 09AE                                  l2427 0DC6  
                                l2419 0D82                                  l2531 0398  
                                l2523 0344                                  l2515 02A0  
                                l2507 0206                                  l2603 1180  
                                l2611 0806                                  l1493 12D6  
                                l1485 12C6                                  l1477 12BE  
                                l1469 12B6                                  l2461 0A44  
                                l2453 0A0E                                  l2445 09BC  
                                l1901 0B96                                  l2437 1324  
                                l2429 0DCC                                  l2541 03D2  
                                l2533 03A6                                  l2525 035E  
                                l2517 02A6                                  l2509 0210  
                                l2605 119C                                  l2621 086C  
                                l2613 0818                                  l1495 12D8  
                                l1487 12C8                                  l1479 12C0  
                                l2471 0AC6                                  l2463 0A58  
                                l2455 0A12                                  l2447 09DC  
                                l1911 0C0C                                  l1903 0BB4  
                                l2439 1340                                  l2391 0CE2  
                                l2383 0C96                                  l2535 03AC  
                                l2543 03E2                                  l2527 0378  
                                l2519 030A                                  l2551 0670  
                                l2631 08CA                                  l2623 0888  
                                l2615 0836                                  l1497 12DA  
                                l1489 12CE                                  l2481 0B10  
                                l2473 0AC8                                  l2465 0A66  
                                l2457 0A1E                                  l2449 09E0  
                                l1921 0C74                                  l1913 0C2C  
                                l1905 0BBC                                  l2393 0D18  
                                l2385 0CA8                                  l2537 03BE  
                                l2529 0386                                  l2561 0716  
                                l2553 0682                                  l2641 0920  
                                l2633 08D2                                  l2625 0894  
                                l2617 084E                                  l2609 07F4  
                                l2475 0ADA                                  l2467 0A78  
                                l2459 0A3C                                  l1915 0C3E  
                                l1907 0BD0                                  l2387 0CBA  
                                l2539 03CA                                  l2491 0192  
                                l2571 0794                                  l2555 0686  
                                l2547 063E                                  l2651 097E  
                                l2643 0932                                  l2635 08DC  
                                l2627 089A                                  l2619 0866  
                                l1499 14DE                                  l2469 0AA6  
                                l2477 0AE0                                  l1909 0BDE  
                                l1917 0C44                                  l2389 0CC4  
                                l2397 12E0                                  l2493 01A0  
                                l2485 0128                                  l2565 074E  
                                l2557 06AA                                  l2549 0662  
                                l2581 07BC                                  l2661 09A2  
                                l2637 0900                                  l2629 08C4  
                                l2653 098C                                  l2479 0AF0  
                                l1919 0C54                                  l2399 12EC  
                                l2495 01A2                                  l2487 0148  
                                l2583 07E0                                  l2567 0772  
                                l2575 07A2                                  l2559 06CE  
                                l2591 1104                                  l2655 0990  
                                l2647 0950                                  l2639 091C  
                                l2671 1260                                  l2663 1250  
                                l2497 01BC                                  l2489 0172  
                                l2577 07B0                                  l2569 0780  
                                l2593 1112                                  l2657 0998  
                                l2649 0976                                  l2681 127A  
                                l2673 126C                                  l2665 1254  
                                l1891 0B36                                  l2499 01D8  
                                l2595 1138                                  l2659 09A0  
                                l2691 1284                                  l2683 127C  
                                l2675 1270                                  l2667 1258  
                                l1893 0B44                                  l2589 10FC  
                                l2597 115E                                  l2693 1288  
                                l2685 127E                                  l2677 1274  
                                l2669 125C                                  ?_pad 0060  
                                l1991 0EAC                                  l1895 0B64  
                                l2599 1170                                  l2695 128C  
                                l2687 1280                                  l2679 1278  
                                l1993 0EAE                                  l1897 0B68  
                                l1889 0B32                                  l2697 1290  
                                l2689 1282                                  l1995 0EB6  
                                l1987 0E2A                                  l1899 0B76  
                                l1989 0EA2                                  STR_1 3FFB  
                                STR_2 3FFB                                  u1100 0C54  
                                u1101 0C50                                  u2000 035E  
                                u2001 035A                                  u1050 0B44  
                                u2010 0378                                  u1051 0B40  
                                u2011 0374                                  u1060 0B76  
                                u2020 0386                                  u2100 1154  
                                u1061 0B72                                  u2021 0382  
                                u2101 1150                                  u1070 0BB4  
                                u2030 0398                                  u2110 0806  
                                u1071 0BB0                                  u2031 0394  
                                u2111 0802                                  u1320 13DC  
                                u1080 0BDE                                  u2040 03A6  
                                u2120 0818                                  u1321 13D8  
                                u1081 0BDA                                  u2041 03A2  
                                u2121 0814                                  u1330 0F58  
                                u1090 0C0C                                  u2050 03BE  
                                u2130 0836                                  u1331 0F54  
                                u1091 0C08                                  u2051 03BA  
                                u2131 0832                                  u1340 0F76  
                                u2060 0662                                  u2140 084E  
                                u1500 0ECA                                  u1341 0F72  
                                u2061 065E                                  u2141 084A  
                                u1501 0EC6                                  u1350 0F92  
                                u2070 06AA                                  u2150 0866  
                                u1510 0EDA                                  _LATB 000F8A  
                                u2207 11D2                                  u1351 0F8E  
                                u2071 06A6                                  u2151 0862  
                                u1511 0ED6                                  u1360 10AA  
                                u2080 06CE                                  u2160 0932  
                                u1520 0EFC                                  u1265 0EAA  
                                u2217 136E                                  u1361 10A6  
                                u2081 06CA                                  u2161 092E  
                                u1521 0EF8                                  u1266 0EAC  
                                u1370 10C8                                  u2090 0772  
                                u2170 094C                                  u1530 0F18  
                                u2227 1390                                  u1371 10C4  
                                u2091 076E                                  u2171 0948  
                                u1531 0F14                                  u1380 10DE  
                                u2180 098C                                  u1540 1210  
                                u2237 0EB0                                  u1381 10DA  
                                u2181 0988                                  u1541 120C  
                                u1550 1222                                  u1551 121E  
                                u1800 0D92                                  u1801 0D8E  
                                u1730 0CA8                                  u1810 0DEA  
                                u1731 0CA4                                  u1811 0DE6  
                                u1900 0AF0                                  u1740 0CBA  
                                u1820 0DF8                                  u2197 141C  
                                u1901 0AEC                                  u1741 0CB6  
                                u1821 0DF4                                  u1830 1340  
                                u1750 0CE2                                  u1910 015A  
                                u1831 133C                                  u1751 0CDE  
                                u1911 0154                                  u1840 09BC  
                                u1760 0D18                                  u1920 015C  
                                u1841 09B8                                  u1761 0D14  
                                u1850 09EE                                  u1770 1322  
                                u1930 0172                                  u1851 09EA  
                                u1771 131E                                  u1931 016E  
                                u1780 1406                                  u1940 01A0  
                                u1861 0A18                                  u1781 1402  
                                u1941 019C                                  u1870 0A3C  
                                u1790 0D6E                                  u1950 01BC  
                                u1871 0A38                                  u1791 0D6A  
                                u1951 01B8                                  u1880 0A66  
                                u1960 01EA                                  u1881 0A62  
                                u1961 01E6                                  u1890 0AA6  
                                u1970 01F8                                  u1891 0AA2  
                                u1971 01F4                                  u1980 0326  
                                u1981 0322                                  u1990 0344  
                                u1991 0340                                  _TMR0 000FD6  
                                _TMR1 000FCE                                  _TMR2 000FCC  
                                _TMR5 000F87                      ?_configureInputs 0001  
                    ?_configureTimer0 0001                      ?_configureTimer1 0001  
                    ?_configureTimer2 0001                      ?_configureTimer5 0001  
                         display@str1 00C8                           display@str2 00B8  
                         display@str3 00D8                                  abs@a 0060  
                                _dbuf 0100                                  _main 1250  
                                _dtoa 0128                                  _prec 003B  
                                _nout 00F1                                  pad@i 0066  
                                pad@p 0064                                  fsr1h 000FE2  
                                fsr2h 000FDA                                  indf2 000FDF  
                                fsr1l 000FE1                                  pad@w 0068  
                                fsr2l 000FD9                                  btemp 0046  
                  __size_of_LCDPutCmd 003E                                  prodh 000FF4  
                                prodl 000FF3                                  start 0124  
                  __size_of_LCDPutStr 003A                         __CFG_IESO$OFF 000000  
              __end_of_LCD_Initialize 1202                        ??_configureADC 001A  
                      ??_configurePWM 001A                          ___param_bank 000000  
                   _timer0ReloadValue 002C                                 ??_abs 0062  
                               ??_pad 002A                           LCDPutCmd@ch 001E  
                     __end_of___aodiv 0B32                                 ?_main 0001  
                               ?_dtoa 006A                       __end_of___aomod 0C96  
                               _PDC0H 000F78                                 _PDC1H 000F76  
                               _DTCON 000F6D                                 _PDC0L 000F79  
                               _PDC2H 000F74                                 _PDC1L 000F77  
                               _PDC2L 000F75                       __end_of___lwdiv 0FB2  
                               i1l207 00FC                                 i1l251 05F0  
                               i1l243 05AC                                 i1l262 063C  
                               i1l255 0612                                 i1l247 05CE  
                               i1l239 058A                       __end_of___lwmod 10FC  
                               i1l259 0634                                 i1l875 1024  
                               i1l868 101C                          vfpfcnvrt@fmt 0090  
                               _PORTB 000F81                                 _TRISB 000F93  
                       __CFG_WRT0$OFF 000000                         __CFG_WRT1$OFF 000000  
                       __CFG_WRT2$OFF 000000                         __CFG_WRT3$OFF 000000  
                      __CFG_EBTR0$OFF 000000                        __CFG_FCMEN$OFF 000000  
                      __CFG_EBTR1$OFF 000000                        __CFG_EBTR2$OFF 000000  
                      __CFG_EBTR3$OFF 000000                         __CFG_WRTB$OFF 000000  
                     __end_of_display 09A8                         __CFG_WRTC$OFF 000000  
                       __CFG_WRTD$OFF 000000                       __end_of_readADC 1250  
                      __CFG_EBTRB$OFF 000000                                 _flags 003D  
                               _tcInt 0018                                 _fputc 0C96  
                               _fputs 12E0                                 pad@fp 0060  
                               _width 00F3                                 _putch 14E2  
                               dtoa@d 006C                                 dtoa@i 008C  
                               dtoa@n 0084                                 dtoa@p 007E  
                               dtoa@s 0082                                 dtoa@w 0080  
                      __CFG_BOREN$OFF 000000                                 tablat 000FF5  
                 __size_of_LCDPutChar 0030                                 ttemp5 0047  
                               ttemp6 004A                                 ttemp7 004E  
                               status 000FD8                                 wtemp8 0047  
                     __end_of_sprintf 11B0                    __size_ofi1___lwdiv 0074  
                      __CFG_MCLRE$OFF 000000                       ?_LCD_Initialize 0001  
                     __initialization 1026                        __CFG_HPOL$HIGH 000000  
                        __end_of_main 129A                          __end_of_dtoa 040C  
         __end_of_configureInterrupts 14DE                        __CFG_OSC$HSPLL 000000  
                      __CFG_LPOL$HIGH 000000                                ??_main 002C  
                              ??_dtoa 0074                         __activetblptr 000002  
                   __end_of_LCDPutCmd 13A4                          LCDPutChar@ch 001E  
                   __end_of_LCDPutStr 13DE       __size_of_updateTMR0PreloadValue 0084  
                              _ADCON1 000FC1                                ?_tcInt 0001  
                              ?_fputc 001A                                ?_fputs 0023  
                              _ADRESH 000FC4                                ?_putch 0001  
                              i1l2131 0FDC                                i1l2123 0FB2  
                          _PrevADRESH 0034                                i1l2141 1010  
                              i1l2133 0FEA                                i1l2125 0FBA  
                              i1l2143 1016                                i1l2135 0FF0  
                              i1l2127 0FCC                                i1l2137 1006  
                              i1l2129 0FD4                                i1l2321 0050  
                              i1l2139 100E                                i1l2251 043A  
                              i1l2243 040C                                i1l2331 006C  
                              i1l2323 0054                                i1l2253 051C  
                              i1l2245 042A                                i1l2341 007E  
                              i1l2333 0070                                i1l2325 0058  
                              i1l2317 003E                                i1l2271 05F8  
                              i1l2263 05B4                                i1l2255 0570  
                              i1l2247 042A                                i1l2351 00A8  
                              i1l2343 0082                                i1l2335 0074  
                              i1l2327 0060                                i1l2319 004C  
                              i1l2249 042A                                i1l2361 00DC  
                              i1l2353 00B6                                i1l2337 0076  
                              i1l2329 0064                                i1l2345 008A  
                              i1l2275 061A                                i1l2267 05D6  
                              i1l2259 0592                                i1l2363 00F2  
                              i1l2355 00C0                                i1l2347 0098  
                              i1l2339 007A                                i1l2365 00F6  
                              i1l2357 00C4                                i1l2349 009A  
                              i1l2367 00F8                                i1l2359 00D2  
                      __CFG_WDTEN$OFF 000000                        __CFG_WINEN$OFF 000000  
                              _PTPERH 000F7A                          LCDPutStr@str 001F  
                              _PTPERL 000F7B                        _LCDWriteNibble 0E28  
                      __CFG_PWMPIN$ON 000000                        __CFG_SSPMX$RC7 000000  
                        vfprintf@cfmt 00A4                             ??___aodiv 002A  
                           ??___aomod 002A                                _digits 3FF1  
                           ??___lwdiv 001E                             ??___lwmod 001E  
                              clear_0 106C                                clear_1 1078  
                              clear_2 1084                                pad@buf 0062  
                              dtoa@fp 006A                                _strlen 13DE  
                           ??_display 00B6                             ??_readADC 0021  
                              fputc@c 001A                     __end_ofi1___lwdiv 1026  
                              fputs@c 0027                                fputs@i 0028  
                        __pdataCOMRAM 002C                                fputs@s 0023  
                        __mediumconst 3CC4                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                __end_of_configureADC 146C                      __end_of_startPWM 14E2  
                              putch@c 0001                      __end_of_vfprintf 115E  
                __end_of_configurePWM 12E0                     _timer5ReloadValue 002E  
                           ??_sprintf 002C                __end_of_LCDWriteNibble 0EBA  
                          __accesstop 0060               __end_of__initialization 108A  
                     __CFG_FLTAMX$RC1 000000                            _adcPercent 00FC  
                       ___rparam_used 000001                       __CFG_T1OSCMX$ON 000000  
              _updateTMR0PreloadValue 0EBA                        __pcstackCOMRAM 0001  
                        __pidataBANK0 14D2          display@timer0ReloadValueCopy 00E9  
                       __end_of_tcInt 0124                         __end_of_fputc 0D60  
                        ??_LCDPutChar 001D                         __end_of_fputs 1324  
                       __end_of_putch 14E4             _shouldUpdateTimer0Preload 0042  
                 _timer5OverflowCount 0044                               ??_tcInt 0010  
                             ??_fputc 001E                               ??_fputs 0027  
                             ??_putch 001A                            __pbssBANK0 00ED  
                          __pbssBANK1 0100                       ?_LCDWriteNibble 001A  
                  __end_of_LCDPutChar 1444           __size_of_updateSinusIndexes 0232  
                     __CFG_WDPS$32768 000000                               ?_strlen 001A  
                     __CFG_PWM4MX$RB5 000000                    __size_of_vfpfcnvrt 01B6  
                             _OVDCOND 000F6B                               _OVDCONS 000F6A  
                           _ADCHSbits 000F99                      ??_LCD_Initialize 001F  
                     __CFG_PWRTEN$OFF 000000                               __Hparam 0000  
                             __Lparam 0000              __size_of_configureInputs 000A  
            __size_of_configureTimer0 0016              __size_of_configureTimer1 0014  
            __size_of_configureTimer2 000E              __size_of_configureTimer5 0014  
                             ___aodiv 09A8                               ___aomod 0B32  
                           ?_startPWM 0001                               ___lwdiv 0F3E  
                             ___lwmod 1098                             ?_vfprintf 009E  
                      _prevAdcPercent 00FA                       __CFG_STVREN$OFF 000000  
                             __pcinit 1026                               __ramtop 0300  
                             __ptext0 1250                               __ptext1 0EBA  
                             __ptext2 14DE                               __ptext3 1202  
                             __ptext4 07F4                               __ptext5 115E  
                             __ptext6 10FC                               __ptext7 063E  
                             __ptext8 0128                               __ptext9 0D60  
                             _display 07F4                             _T0CONbits 000FD5  
               __size_of_configureADC 0028                               _readADC 1202  
                     __size_of_strlen 0036                             _T1CONbits 000FCD  
               __size_of_configurePWM 0046                               _counter 0041  
                   i1___lwdiv@divisor 0003                             _T2CONbits 000FCA  
                        __size_of_abs 0042                          __size_of_pad 00C8  
                   i1___lwdiv@counter 0007                             _DTCONbits 000F6D  
                           _T5CONbits 000FB7                             _LCDPutCmd 1366  
                             _sprintf 115E                             _LCDPutStr 13A4  
                end_of_initialization 108A                               fputc@fp 001C  
                       __Lmediumconst 3CC4                               fputs@fp 0025  
                   __end_of_vfpfcnvrt 07F4                               postdec1 000FE5  
                             postdec2 000FDD                          _configureADC 1444  
                             postinc0 000FEE                               postinc1 000FE6  
                             postinc2 000FDE                          _configurePWM 129A  
                          ??_startPWM 001A                            ??_vfprintf 002C  
                             strlen@a 001C                               strlen@s 001A  
                           _PORTAbits 000F80                             _PORTCbits 000F82  
                           _PORTDbits 000F83                             _TRISAbits 000F92  
                 _timer0PreloadValues 3EC5                             _TRISCbits 000F94  
                           _TRISDbits 000F95          __size_of_configureInterrupts 0006  
                          ?_LCDPutCmd 0001                             i1___lwdiv 0FB2  
                          ?_LCDPutStr 001F               ?_updateTMR0PreloadValue 0001  
                    __CFG_EXCLKMX$RC3 000000                           vfpfcnvrt@ap 0092  
                         vfpfcnvrt@fp 008E                            LCDPutStr@i 0021  
                         vfpfcnvrt@ll 0096                         __pidataCOMRAM 14AA  
                      __end_of_digits 3FFB                     ??_configureInputs 001A  
                   ??_configureTimer0 001A                     ??_configureTimer1 001A  
                   ??_configureTimer2 001A                     ??_configureTimer5 001A  
                      __end_of_strlen 1414                   start_initialization 1026  
                    ??_LCDWriteNibble 001B                           __end_of_abs 1366  
                         __end_of_pad 0E28                            ?i1___lwdiv 0001  
      __end_of_updateTMR0PreloadValue 0F3E                           vfprintf@fmt 00A0  
                         __pdataBANK0 00F8                              ??_strlen 001C  
                 _currentPreloadIndex 00F6                           __pbssCOMRAM 003B  
                       __pcstackBANK0 0060                      ___aodiv@dividend 001A  
                         ??_LCDPutCmd 001D                           ??_LCDPutStr 0021  
          __end_of_updateSinusIndexes 063E                      ___lwdiv@dividend 001A  
                           _dtoa$1539 007C                             _maxADCVal 0039  
                       __pmediumconst 3CC4                              ?___aodiv 001A  
                            ?___aomod 001A                      ___aodiv@quotient 0062  
                            ?___lwdiv 001A                              ?___lwmod 001A  
                    LCDWriteNibble@ch 001C                      LCDWriteNibble@rs 001A  
                         __pintcodelo 0018                     __size_of_startPWM 0004  
                   __size_of_vfprintf 0062                              ?_display 0001  
                            ?_readADC 0001                      ___lwdiv@quotient 001E  
                         ??i1___lwdiv 0005                 _shouldUpdateDutyCycle 0043  
                            ?_sprintf 00A6                        __size_of_tcInt 010C  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
                           _dutyCycle 00ED                        __size_of_putch 0002  
                 __end_of_scaleFactor 3FF1                              _PIE1bits 000F9D  
                            _PIE3bits 000FA3                              i1u140_20 0FEA  
                            i1u140_21 0FE6                              i1u141_20 1006  
                            i1u141_21 1002                              i1u160_20 05EC  
                            i1u160_21 05E8                              i1u161_20 060E  
                            i1u161_21 060A                              i1u162_20 0630  
                            i1u162_21 062C                              i1u139_20 0FCC  
                            i1u163_20 004C                              i1u139_21 0FC8  
                            i1u163_21 0048                              i1u156_20 043A  
                            i1u164_20 0098                              i1u156_21 0436  
                            i1u164_21 0094                              i1u157_20 0586  
                            i1u165_20 00B6                              i1u157_21 0582  
                            i1u165_21 00B2                              i1u158_20 05A8  
                            i1u166_20 00D2                              i1u158_21 05A4  
                            i1u166_21 00CE                              i1u159_20 05CA  
                            i1u159_21 05C6                              i1u167_25 00DA  
                            i1u167_26 00DC                              i1u168_20 00EE  
                            i1u168_21 00E8                              i1u169_20 00F0  
                            _PIR1bits 000F9E                              _PIR3bits 000FA4  
                 _configureInterrupts 14D8                             _skipValue 0038  
                           _vfpfcnvrt 063E                            _ADCON0bits 000FC2  
                          _ADCON2bits 000FC0                            _ADCON3bits 000F9A  
                ?_configureInterrupts 0001                 _prevTimer0ReloadValue 00F8  
                         _INTCON2bits 000FF1                             copy_data0 103A  
                           copy_data1 105A                             tcInt@duty 0019  
                            __Hrparam 0000                       _configureInputs 14C8  
                     _configureTimer0 146C                       _configureTimer1 1496  
                     _configureTimer2 14BA                       _configureTimer5 1482  
                     display@noDigits 00E8                            vfprintf@ap 00A2  
                            __Lrparam 0000                            vfprintf@fp 009E  
             __size_of_LCD_Initialize 0052                      __size_of___aodiv 018A  
                    __size_of___aomod 0164                            ?_vfpfcnvrt 008E  
                    __size_of___lwdiv 0074                      __size_of___lwmod 0064  
                          _ANSEL0bits 000FB8                       ___aodiv@divisor 0022  
                     ___aodiv@counter 0060                      __size_of_display 01B4  
                          sprintf@fmt 00A8                      __size_of_readADC 004E  
               ??_configureInterrupts 001A                       ___lwdiv@divisor 001C  
                     ___lwdiv@counter 0020                              __ptext10 13DE  
                            __ptext11 12E0                              __ptext20 1414  
                            __ptext12 0C96                              __ptext21 1482  
                            __ptext13 14E2                              __ptext30 1366  
                            __ptext22 14BA                              __ptext14 1324  
                            __ptext31 0E28                              __ptext23 1496  
                            __ptext15 0B32                              __ptext24 146C  
                            __ptext16 09A8                              __ptext33 040C  
                            __ptext25 129A                              __ptext17 1098  
                            __ptext34 0FB2                              __ptext26 14D8  
                            __ptext18 0F3E                           _scaleFactor 3F8D  
                            __ptext27 14C8                              __ptext19 13A4  
                            __ptext28 1444                              __ptext29 11B0  
                    __size_of_sprintf 0052                    i1___lwdiv@dividend 0001  
                       __size_of_main 004A                         __size_of_dtoa 02E4  
                 __end_of_sinusValues 3EC5                              int$flags 0046  
                            _startPWM 14DE                              _vfprintf 10FC  
                          _LCDPutChar 1414                              display@i 00EB  
                    ___aomod@dividend 001A                    i1___lwdiv@quotient 0005  
                         _refreshTime 00F7                            _INTCONbits 000FF2  
                       _shouldDisplay 00F5  updateSinusIndexes@currentScalefactor 000A  
                            intlevel1 0000                             sprintf@ap 00AE  
             __end_of_configureInputs 14D2           __end_of_timer0PreloadValues 3F8D  
             __end_of_configureTimer0 1482               __end_of_configureTimer1 14AA  
             __end_of_configureTimer2 14C8               __end_of_configureTimer5 1496  
                    ___lwmod@dividend 001A                           _PWMCON0bits 000F6F  
                         _PWMCON1bits 000F6E                       ___aomod@divisor 0022  
                         ??_vfpfcnvrt 0094                       ___aomod@counter 002A  
                          _PTCON0bits 000F7F                            _PTCON1bits 000F7E  
                            sprintf@f 00B0                              sprintf@s 00A6  
                  _updateSinusIndexes 040C                       ___lwmod@divisor 001C  
                     ___lwmod@counter 001E                   ?_updateSinusIndexes 0001  
                        ___aodiv@sign 0061                           _sinusIndex1 0045  
                         _sinusIndex2 0037                           _sinusIndex3 0036  
                         _sinusValue1 003F                           _sinusValue2 0032  
                         _sinusValue3 0030                           _sinusValues 3CC5  
             __size_of_LCDWriteNibble 0092                          ___aomod@sign 002B  
